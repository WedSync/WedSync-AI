export interface WhatsAppConfiguration {
  id: string;
  user_id: string;
  organization_id: string;
  business_account_id: string;
  phone_number_id: string;
  phone_number: string;
  display_name: string;
  access_token_encrypted: string;
  webhook_verify_token: string;
  webhook_url?: string;
  status_callback_url?: string;
  is_active: boolean;
  is_verified: boolean;
  cost_per_message: number;
  daily_limit?: number;
  created_at: string;
  updated_at: string;
}

export interface WhatsAppTemplate {
  id: string;
  user_id: string;
  organization_id: string;
  template_name: string;
  display_name: string;
  category: 'MARKETING' | 'UTILITY' | 'AUTHENTICATION';
  language_code: string;
  header_type?: 'TEXT' | 'IMAGE' | 'VIDEO' | 'DOCUMENT';
  header_text?: string;
  header_variables?: string[];
  body_text: string;
  body_variables?: string[];
  footer_text?: string;
  buttons?: Array<{
    type: 'QUICK_REPLY' | 'PHONE_NUMBER' | 'URL';
    text: string;
    payload?: string;
  }>;
  is_approved_template: boolean;
  approval_status: 'APPROVED' | 'PENDING' | 'REJECTED';
  rejection_reason?: string;
  usage_count: number;
  last_used_at?: string;
  created_at: string;
  updated_at: string;
}

export interface WhatsAppMessage {
  id: string;
  user_id: string;
  organization_id: string;
  template_id?: string;
  message_id: string;
  from_phone: string;
  to_phone: string;
  message_type: 'text' | 'template' | 'image' | 'video' | 'document' | 'audio';
  text_body?: string;
  template_name?: string;
  language?: string;
  media_id?: string;
  media_url?: string;
  media_caption?: string;
  media_type?: string;
  status: 'sent' | 'delivered' | 'read' | 'failed' | 'received';
  error_code?: string;
  error_message?: string;
  is_inbound: boolean;
  within_session_window: boolean;
  cost_charged?: number;
  sent_at?: string;
  delivered_at?: string;
  read_at?: string;
  timestamp: string;
  created_at: string;
  updated_at: string;
}

export interface WhatsAppSendConfig {
  to: string;
  templateId?: string;
  template?: WhatsAppTemplate;
  variables?: Record<string, any>;
  media?: WhatsAppMedia;
  scheduled_for?: string;
  webhook_url?: string;
  bypass_session_check?: boolean;
}

export interface WhatsAppMedia {
  type: 'image' | 'video' | 'document' | 'audio';
  url?: string;
  id?: string;
  caption?: string;
  filename?: string;
  mimetype?: string;
  size?: number;
}

export interface WhatsAppMetrics {
  message_type: 'template' | 'session' | 'media';
  template_status?: string;
  estimated_cost: number;
  media_included: boolean;
  requires_approval: boolean;
  within_session_window: boolean;
}

export interface WhatsAppValidationResult {
  isValid: boolean;
  errors: string[];
  warnings: string[];
  compliance_issues: string[];
  template_status?: string;
  requires_approval: boolean;
}

export interface WhatsAppComplianceCheck {
  is_compliant: boolean;
  issues: string[];
  requires_opt_in: boolean;
  requires_template_approval: boolean;
  within_messaging_window: boolean;
}

export interface WhatsAppSession {
  id: string;
  phone_number: string;
  display_name?: string;
  last_inbound_at: string;
  last_outbound_at?: string;
  session_expires_at: string;
  message_count: number;
  is_active: boolean;
  created_at: string;
  updated_at: string;
}

export interface WhatsAppWebhookEvent {
  entry: Array<{
    id: string;
    changes: Array<{
      value: {
        messaging_product: 'whatsapp';
        metadata: {
          display_phone_number: string;
          phone_number_id: string;
        };
        contacts?: Array<{
          profile: {
            name: string;
          };
          wa_id: string;
        }>;
        messages?: Array<{
          from: string;
          id: string;
          timestamp: string;
          type: string;
          text?: {
            body: string;
          };
          image?: {
            id: string;
            mime_type: string;
            caption?: string;
          };
          video?: {
            id: string;
            mime_type: string;
            caption?: string;
          };
          document?: {
            id: string;
            mime_type: string;
            filename: string;
            caption?: string;
          };
          audio?: {
            id: string;
            mime_type: string;
          };
          context?: {
            from: string;
            id: string;
          };
        }>;
        statuses?: Array<{
          id: string;
          status: 'sent' | 'delivered' | 'read' | 'failed';
          timestamp: string;
          recipient_id: string;
          errors?: Array<{
            code: number;
            title: string;
            message: string;
          }>;
        }>;
      };
      field: string;
    }>;
  }>;
}

export interface WhatsAppAnalytics {
  period: {
    start: Date;
    end: Date;
  };
  metrics: {
    messages_sent: number;
    messages_delivered: number;
    messages_read: number;
    delivery_rate: number;
    read_rate: number;
    template_messages: number;
    media_messages: number;
    total_cost: number;
    average_cost_per_message: number;
  };
}

export interface WhatsAppTemplateCategory {
  value: 'MARKETING' | 'UTILITY' | 'AUTHENTICATION';
  label: string;
  description: string;
  requires_opt_in: boolean;
}

export const WHATSAPP_TEMPLATE_CATEGORIES: WhatsAppTemplateCategory[] = [
  {
    value: 'MARKETING',
    label: 'Marketing',
    description: 'Promotional content, product announcements, and sales',
    requires_opt_in: true
  },
  {
    value: 'UTILITY',
    label: 'Utility',
    description: 'Account updates, order updates, and alerts',
    requires_opt_in: false
  },
  {
    value: 'AUTHENTICATION',
    label: 'Authentication',
    description: 'One-time passwords and verification codes',
    requires_opt_in: false
  }
];

export const WHATSAPP_LANGUAGE_CODES = [
  { code: 'en', label: 'English' },
  { code: 'es', label: 'Spanish' },
  { code: 'fr', label: 'French' },
  { code: 'de', label: 'German' },
  { code: 'it', label: 'Italian' },
  { code: 'pt_BR', label: 'Portuguese (Brazil)' },
  { code: 'zh_CN', label: 'Chinese (Simplified)' },
  { code: 'ja', label: 'Japanese' },
  { code: 'ko', label: 'Korean' },
  { code: 'ar', label: 'Arabic' },
  { code: 'hi', label: 'Hindi' },
  { code: 'ru', label: 'Russian' }
];

export const WHATSAPP_MEDIA_LIMITS = {
  image: { maxSize: 5 * 1024 * 1024, formats: ['jpeg', 'png'] },
  video: { maxSize: 16 * 1024 * 1024, formats: ['mp4', '3gpp'] },
  document: { maxSize: 100 * 1024 * 1024, formats: ['pdf', 'doc', 'docx', 'xls', 'xlsx', 'ppt', 'pptx'] },
  audio: { maxSize: 16 * 1024 * 1024, formats: ['aac', 'mp4', 'mpeg', 'amr', 'ogg'] }
};