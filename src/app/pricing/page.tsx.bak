'use client';

import { useState, useEffect } from 'react';
import { Check, X, AlertCircle } from 'lucide-react';
import { createClientComponentClient } from '@supabase/auth-helpers-nextjs';
import { useRouter } from 'next/navigation';

import { SUBSCRIPTION_TIERS, type SubscriptionTier, formatPrice, getStripePriceId } from '@/lib/stripe-config';

// Convert our tier structure to array for rendering
const pricingTiers = [
  SUBSCRIPTION_TIERS.FREE,
  SUBSCRIPTION_TIERS.PRO,
  SUBSCRIPTION_TIERS.BUSINESS
];

export default function PricingPage() {
  const [billingCycle, setBillingCycle] = useState<'monthly' | 'yearly'>('monthly');
  const [loadingTier, setLoadingTier] = useState<SubscriptionTier | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const supabase = createClientComponentClient();
  const router = useRouter();

  useEffect(() => {
    checkAuth();
  }, []);

  const checkAuth = async () => {
    const { data: { session } } = await supabase.auth.getSession();
    setIsAuthenticated(!!session);
  };

  const handleSubscribe = async (tier: SubscriptionTier) => {
    setLoadingTier(tier);
    setError(null);
    
    try {
      // Free tier doesn't need checkout
      if (tier === 'FREE') {
        const { data: { session } } = await supabase.auth.getSession();
        if (!session) {
          router.push('/login?returnUrl=/dashboard');
        } else {
          router.push('/dashboard');
        }
        return;
      }

      // Check if user is authenticated
      const { data: { session } } = await supabase.auth.getSession();
      
      if (!session) {
        // Redirect to login with return URL
        router.push(`/login?returnUrl=/pricing&tier=${tier}`);
        return;
      }

      const priceId = getStripePriceId(tier, billingCycle);
      if (!priceId) {
        throw new Error('Invalid price configuration');
      }

      // Make authenticated request to create checkout session
      const response = await fetch('/api/stripe/create-checkout-session', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${session.access_token}`
        },
        body: JSON.stringify({
          tier: tier.toLowerCase(),
          billingCycle,
          priceId
        }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || 'Failed to create checkout session');
      }

      if (data.url) {
        // Redirect to Stripe Checkout
        window.location.href = data.url;
      } else {
        throw new Error('No checkout URL received');
      }
    } catch (err) {
      console.error('Error creating checkout session:', err);
      setError(err instanceof Error ? err.message : 'Something went wrong. Please try again.');
    } finally {
      setLoadingTier(null);
    }
  };

  const getDisplayPrice = (tier: typeof pricingTiers[0]) => {
    if (billingCycle === 'yearly') {
      return tier.annualPrice;
    }
    return tier.monthlyPrice;
  };

  const getMonthlyEquivalent = (tier: typeof pricingTiers[0]) => {
    if (billingCycle === 'yearly' && tier.annualPrice > 0) {
      return Math.round(tier.annualPrice / 12);
    }
    return tier.monthlyPrice;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 via-white to-pink-50">
      <div className="container mx-auto px-4 py-16">
        <div className="text-center mb-12">
          <h1 className="text-5xl font-bold text-gray-900 mb-4">
            Choose Your WedSync Plan
          </h1>
          <p className="text-xl text-gray-600 mb-8">
            Join thousands of wedding vendors growing their business with WedSync
          </p>
          
          {error && (
            <div className="max-w-md mx-auto mb-6 p-4 bg-red-50 border border-red-200 rounded-lg flex items-start gap-3">
              <AlertCircle className="w-5 h-5 text-red-600 mt-0.5 flex-shrink-0" />
              <p className="text-red-700 text-sm">{error}</p>
            </div>
          )}
          
          <div className="inline-flex items-center bg-white rounded-full p-1 shadow-lg">
            <button
              onClick={() => setBillingCycle('monthly')}
              className={`px-6 py-2 rounded-full font-medium transition-all ${
                billingCycle === 'monthly'
                  ? 'bg-purple-600 text-white'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              Monthly
            </button>
            <button
              onClick={() => setBillingCycle('yearly')}
              className={`px-6 py-2 rounded-full font-medium transition-all ${
                billingCycle === 'yearly'
                  ? 'bg-purple-600 text-white'
                  : 'text-gray-600 hover:text-gray-900'
              }`}
            >
              Yearly
              <span className="ml-2 text-xs bg-green-100 text-green-700 px-2 py-1 rounded-full">
                Save 20%
              </span>
            </button>
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
          {pricingTiers.map((tier) => (
            <div
              key={tier.name}
              className={`relative bg-white rounded-2xl shadow-xl p-8 ${
                tier.popular === true
                  ? 'ring-2 ring-purple-600 transform scale-105'
                  : ''
              }`}
            >
              {tier.popular === true && (
                <div className="absolute -top-4 left-1/2 transform -translate-x-1/2">
                  <span className="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-4 py-1 rounded-full text-sm font-semibold">
                    Most Popular
                  </span>
                </div>
              )}

              <div className="mb-6">
                <h3 className="text-2xl font-bold text-gray-900 mb-2">
                  {tier.name}
                </h3>
                <p className="text-gray-600 text-sm mb-4">
                  {tier.description}
                </p>
                <div className="flex items-baseline">
                  <span className="text-5xl font-bold text-gray-900">
                    ${getDisplayPrice(tier)}
                  </span>
                  {tier.id !== 'FREE' && (
                    <span className="ml-2 text-gray-600">
                      /{billingCycle === 'yearly' ? 'year' : 'month'}
                    </span>
                  )}
                </div>
                {billingCycle === 'yearly' && tier.id !== 'FREE' && (
                  <p className="text-sm text-green-600 mt-1">
                    ${getMonthlyEquivalent(tier)}/month billed annually
                  </p>
                )}
              </div>

              <button
                onClick={() => handleSubscribe(tier.id)}
                disabled={loadingTier !== null}
                className={`w-full py-3 rounded-lg font-semibold transition-all mb-6 ${
                  tier.popular === true
                    ? 'bg-gradient-to-r from-purple-600 to-pink-600 text-white hover:from-purple-700 hover:to-pink-700'
                    : 'bg-gray-100 text-gray-900 hover:bg-gray-200'
                } ${
                  loadingTier === tier.id
                    ? 'opacity-50 cursor-not-allowed'
                    : ''
                } ${
                  loadingTier !== null && loadingTier !== tier.id
                    ? 'opacity-30 cursor-not-allowed'
                    : ''
                }`}
              >
                {loadingTier === tier.id
                  ? 'Processing...'
                  : tier.id === 'FREE'
                  ? 'Get Started Free'
                  : isAuthenticated
                  ? 'Start 14-Day Trial'
                  : 'Sign Up for Free Trial'}
              </button>

              <div className="space-y-3">
                {tier.highlights.map((feature, index) => (
                  <div key={index} className="flex items-start">
                    <Check className="w-5 h-5 text-green-500 mr-2 flex-shrink-0 mt-0.5" />
                    <span className="text-gray-700 text-sm">{feature}</span>
                  </div>
                ))}
                
                {/* Show what's NOT included for clarity */}
                {tier.id === 'FREE' && (
                  <>
                    <div className="flex items-start">
                      <X className="w-5 h-5 text-gray-400 mr-2 flex-shrink-0 mt-0.5" />
                      <span className="text-gray-500 text-sm">No PDF import</span>
                    </div>
                    <div className="flex items-start">
                      <X className="w-5 h-5 text-gray-400 mr-2 flex-shrink-0 mt-0.5" />
                      <span className="text-gray-500 text-sm">No SMS automation</span>
                    </div>
                  </>
                )}
                
                {tier.id === 'PRO' && (
                  <>
                    <div className="flex items-start">
                      <X className="w-5 h-5 text-gray-400 mr-2 flex-shrink-0 mt-0.5" />
                      <span className="text-gray-500 text-sm">No API access</span>
                    </div>
                    <div className="flex items-start">
                      <X className="w-5 h-5 text-gray-400 mr-2 flex-shrink-0 mt-0.5" />
                      <span className="text-gray-500 text-sm">No journey automation</span>
                    </div>
                  </>
                )}
              </div>
            </div>
          ))}
        </div>

        <div className="mt-16 text-center">
          <h2 className="text-3xl font-bold text-gray-900 mb-4">
            All Plans Include
          </h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto mt-8">
            {[
              {
                title: '14-Day Free Trial',
                description: 'No credit card required. Cancel anytime.'
              },
              {
                title: 'Data Security',
                description: 'Bank-level encryption and GDPR compliant.'
              },
              {
                title: 'Free Migration',
                description: 'We\'ll help you move from your current system.'
              }
            ].map((item, index) => (
              <div key={index} className="bg-white p-6 rounded-xl shadow-lg">
                <h3 className="font-semibold text-lg text-gray-900 mb-2">
                  {item.title}
                </h3>
                <p className="text-gray-600">{item.description}</p>
              </div>
            ))}
          </div>
        </div>

        <div className="mt-12 text-center">
          <h3 className="text-2xl font-bold text-gray-900 mb-4">
            Frequently Asked Questions
          </h3>
          <div className="max-w-3xl mx-auto text-left space-y-4">
            <details className="bg-white p-6 rounded-lg shadow">
              <summary className="font-semibold cursor-pointer">
                Do I need a credit card for the trial?
              </summary>
              <p className="mt-3 text-gray-600">
                Yes, we require a credit card to start your trial, but you won't be charged until the trial period ends. You can cancel anytime during the trial.
              </p>
            </details>
            <details className="bg-white p-6 rounded-lg shadow">
              <summary className="font-semibold cursor-pointer">
                Can I change plans later?
              </summary>
              <p className="mt-3 text-gray-600">
                Absolutely! You can upgrade or downgrade your plan at any time from your account settings. Changes take effect at the next billing cycle.
              </p>
            </details>
            <details className="bg-white p-6 rounded-lg shadow">
              <summary className="font-semibold cursor-pointer">
                What payment methods do you accept?
              </summary>
              <p className="mt-3 text-gray-600">
                We accept all major credit and debit cards including Visa, Mastercard, American Express, and Discover. All payments are processed securely through Stripe.
              </p>
            </details>
          </div>
        </div>

        <div className="mt-12 text-center text-gray-600">
          <p className="mb-2">Questions? Contact our sales team</p>
          <a
            href="mailto:sales@wedsync.com"
            className="text-purple-600 hover:text-purple-700 font-semibold"
          >
            sales@wedsync.com
          </a>
        </div>
      </div>
    </div>
  );
}