'use client';

import React, { Suspense } from 'react';
import { useParams } from 'next/navigation';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Skeleton } from '@/components/ui/skeleton';
import ResponseAnalyticsDashboard from '@/components/analytics/ResponseAnalyticsDashboard';
import { ChartBar, TrendingUp, Users, Clock } from 'lucide-react';

const FormAnalyticsPage: React.FC = () => {
  const params = useParams();
  const formId = params?.formId as string;

  return (
    <div className="container mx-auto px-6 py-8">
      {/* Header */}
      <div className="mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-2">
          Response Analytics
        </h1>
        <p className="text-lg text-gray-600">
          Comprehensive insights into your form responses and performance
        </p>
      </div>

      {/* Analytics Dashboard */}
      <Suspense fallback={<AnalyticsLoadingSkeleton />}>
        <ResponseAnalyticsDashboard 
          clientId={formId}
          defaultDateRange={{
            start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString(),
            end: new Date().toISOString()
          }}
        />
      </Suspense>
    </div>
  );
};

const AnalyticsLoadingSkeleton: React.FC = () => {
  return (
    <div className="space-y-6">
      {/* Controls Skeleton */}
      <div className="flex gap-4 justify-between">
        <div className="flex gap-2">
          <Skeleton className="h-10 w-32" />
          <Skeleton className="h-10 w-24" />
        </div>
        <div className="flex gap-2">
          <Skeleton className="h-10 w-32" />
          <Skeleton className="h-10 w-32" />
        </div>
      </div>

      {/* Summary Cards Skeleton */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        {[...Array(4)].map((_, i) => (
          <Card key={i}>
            <CardHeader className="flex flex-row items-center justify-between space-y-0 pb-2">
              <Skeleton className="h-4 w-24" />
              <Skeleton className="h-4 w-4" />
            </CardHeader>
            <CardContent>
              <Skeleton className="h-8 w-16" />
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Charts Skeleton */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {[...Array(3)].map((_, i) => (
          <Card key={i} className={i === 2 ? "lg:col-span-2" : ""}>
            <CardHeader>
              <Skeleton className="h-6 w-32" />
            </CardHeader>
            <CardContent>
              <Skeleton className="h-[300px] w-full" />
            </CardContent>
          </Card>
        ))}
      </div>
    </div>
  );
};

export default FormAnalyticsPage;