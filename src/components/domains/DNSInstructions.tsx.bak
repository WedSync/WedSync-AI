'use client';

import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Badge } from '@/components/ui/badge';
import { Alert, AlertDescription } from '@/components/ui/alert';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { 
  Copy, 
  CheckCircle, 
  Clock, 
  XCircle, 
  AlertTriangle, 
  Globe,
  ExternalLink,
  FileText,
  Zap
} from 'lucide-react';
import { DomainConfig, DNSRecord } from '@/types/domains';

interface DNSInstructionsProps {
  config: DomainConfig;
  className?: string;
}

export function DNSInstructions({ config, className = '' }: DNSInstructionsProps) {
  const [copiedRecord, setCopiedRecord] = useState<string | null>(null);

  const copyToClipboard = async (text: string, recordId: string) => {
    try {
      await navigator.clipboard.writeText(text);
      setCopiedRecord(recordId);
      setTimeout(() => setCopiedRecord(null), 2000);
    } catch (err) {
      console.error('Failed to copy text:', err);
    }
  };

  const getRecordStatusIcon = (status: string) => {
    switch (status) {
      case 'configured':
        return <CheckCircle className="h-4 w-4 text-success-600" />;
      case 'pending':
        return <Clock className="h-4 w-4 text-warning-600" />;
      case 'error':
        return <XCircle className="h-4 w-4 text-error-600" />;
      default:
        return <Clock className="h-4 w-4 text-gray-500" />;
    }
  };

  const getRecordStatusBadge = (status: string) => {
    switch (status) {
      case 'configured':
        return <Badge className="bg-success-50 text-success-700 border-success-200">Configured</Badge>;
      case 'pending':
        return <Badge className="bg-warning-50 text-warning-700 border-warning-200">Pending</Badge>;
      case 'error':
        return <Badge className="bg-error-50 text-error-700 border-error-200">Error</Badge>;
      default:
        return <Badge className="bg-gray-50 text-gray-600 border-gray-200">Not Set</Badge>;
    }
  };

  if (!config.current_domain) {
    return (
      <div className={`text-center py-12 ${className}`}>
        <Globe className="h-16 w-16 text-gray-400 mx-auto mb-4" />
        <h3 className="text-lg font-medium text-gray-900 mb-2">No Custom Domain Configured</h3>
        <p className="text-gray-600 mb-4">
          Configure a custom domain first to see DNS setup instructions.
        </p>
        <Button className="bg-primary-600 hover:bg-primary-700">
          Configure Domain
        </Button>
      </div>
    );
  }

  return (
    <div className={`space-y-6 ${className}`}>
      {/* Header */}
      <div>
        <h3 className="text-lg font-semibold text-gray-900 mb-2">DNS Configuration</h3>
        <p className="text-sm text-gray-600">
          Add these DNS records to your domain registrar or DNS provider to complete the setup
        </p>
      </div>

      {/* Progress Overview */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <div className="flex items-center space-x-2 mb-2">
            {getRecordStatusIcon(config.status.dns_status)}
            <span className="text-sm font-medium text-gray-900">DNS Status</span>
          </div>
          {getRecordStatusBadge(config.status.dns_status)}
          <p className="text-xs text-gray-500 mt-2">
            {config.status.dns_status === 'configured' 
              ? 'All DNS records are properly configured'
              : config.status.dns_status === 'pending'
              ? 'Waiting for DNS propagation'
              : 'DNS configuration needs attention'
            }
          </p>
        </div>

        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <div className="flex items-center space-x-2 mb-2">
            <Zap className="h-4 w-4 text-gray-500" />
            <span className="text-sm font-medium text-gray-900">Propagation</span>
          </div>
          <Badge className={`
            ${config.status.propagation_progress && config.status.propagation_progress > 80
              ? 'bg-success-50 text-success-700 border-success-200'
              : 'bg-warning-50 text-warning-700 border-warning-200'
            }
          `}>
            {config.status.propagation_progress ? `${config.status.propagation_progress}%` : 'Starting...'}
          </Badge>
          <p className="text-xs text-gray-500 mt-2">
            DNS changes can take 5-60 minutes to fully propagate
          </p>
        </div>

        <div className="bg-white border border-gray-200 rounded-lg p-4">
          <div className="flex items-center space-x-2 mb-2">
            <Globe className="h-4 w-4 text-gray-500" />
            <span className="text-sm font-medium text-gray-900">Domain</span>
          </div>
          <div className="font-mono text-sm text-gray-900 break-all">
            {config.current_domain}
          </div>
          <p className="text-xs text-gray-500 mt-2">
            Your custom domain configuration
          </p>
        </div>
      </div>

      {/* DNS Records */}
      <div className="space-y-4">
        <h4 className="text-base font-medium text-gray-900">Required DNS Records</h4>
        
        <Tabs defaultValue="all" className="w-full">
          <TabsList className="grid w-full grid-cols-4 bg-gray-100">
            <TabsTrigger value="all">All Records</TabsTrigger>
            <TabsTrigger value="txt">TXT Records</TabsTrigger>
            <TabsTrigger value="cname">CNAME Records</TabsTrigger>
            <TabsTrigger value="help">Help</TabsTrigger>
          </TabsList>

          <TabsContent value="all" className="space-y-4 mt-4">
            {config.dns_records.map((record, index) => (
              <div 
                key={index}
                className="bg-white border border-gray-200 rounded-lg p-4"
              >
                <div className="flex items-center justify-between mb-3">
                  <div className="flex items-center space-x-3">
                    <Badge variant="outline" className="font-mono">
                      {record.type}
                    </Badge>
                    {getRecordStatusBadge(record.status)}
                    {record.required && (
                      <Badge className="bg-blue-50 text-blue-700 border-blue-200">
                        Required
                      </Badge>
                    )}
                  </div>
                  {getRecordStatusIcon(record.status)}
                </div>

                <div className="grid grid-cols-1 md:grid-cols-3 gap-4 mb-3">
                  <div>
                    <label className="text-xs font-medium text-gray-700 uppercase tracking-wide">
                      Record Type
                    </label>
                    <div className="font-mono text-sm text-gray-900 mt-1">
                      {record.type}
                    </div>
                  </div>

                  <div>
                    <label className="text-xs font-medium text-gray-700 uppercase tracking-wide">
                      Name/Host
                    </label>
                    <div className="flex items-center space-x-2 mt-1">
                      <span className="font-mono text-sm text-gray-900 break-all">
                        {record.name}
                      </span>
                      <Button
                        variant="ghost"
                        size="sm"
                        onClick={() => copyToClipboard(record.name, `name-${index}`)}
                        className="h-6 w-6 p-0"
                      >
                        {copiedRecord === `name-${index}` ? (
                          <CheckCircle className="h-3 w-3 text-success-600" />
                        ) : (
                          <Copy className="h-3 w-3" />
                        )}
                      </Button>
                    </div>
                  </div>

                  <div>
                    <label className="text-xs font-medium text-gray-700 uppercase tracking-wide">
                      Value/Target
                    </label>
                    <div className="flex items-center space-x-2 mt-1">
                      <span className="font-mono text-sm text-gray-900 break-all">
                        {record.value}
                      </span>
                      <Button
                        variant="ghost"
                        size="sm"
                        onClick={() => copyToClipboard(record.value, `value-${index}`)}
                        className="h-6 w-6 p-0"
                      >
                        {copiedRecord === `value-${index}` ? (
                          <CheckCircle className="h-3 w-3 text-success-600" />
                        ) : (
                          <Copy className="h-3 w-3" />
                        )}
                      </Button>
                    </div>
                  </div>
                </div>

                <p className="text-sm text-gray-600 bg-gray-50 p-3 rounded-md">
                  <strong>Purpose:</strong> {record.description}
                </p>
              </div>
            ))}
          </TabsContent>

          <TabsContent value="txt" className="space-y-4 mt-4">
            {config.dns_records
              .filter(record => record.type === 'TXT')
              .map((record, index) => (
                <div key={index} className="bg-blue-25 border border-blue-200 rounded-lg p-4">
                  <div className="flex items-center space-x-2 mb-3">
                    <FileText className="h-4 w-4 text-blue-600" />
                    <span className="text-sm font-medium text-blue-900">TXT Record for Verification</span>
                    {getRecordStatusBadge(record.status)}
                  </div>
                  
                  <div className="space-y-3">
                    <div>
                      <label className="text-xs font-medium text-blue-700 uppercase tracking-wide">
                        Host/Name
                      </label>
                      <div className="flex items-center space-x-2 mt-1">
                        <code className="bg-white px-2 py-1 rounded text-sm border">
                          {record.name}
                        </code>
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() => copyToClipboard(record.name, `txt-name-${index}`)}
                          className="h-6 w-6 p-0"
                        >
                          {copiedRecord === `txt-name-${index}` ? (
                            <CheckCircle className="h-3 w-3 text-success-600" />
                          ) : (
                            <Copy className="h-3 w-3" />
                          )}
                        </Button>
                      </div>
                    </div>

                    <div>
                      <label className="text-xs font-medium text-blue-700 uppercase tracking-wide">
                        Value
                      </label>
                      <div className="flex items-center space-x-2 mt-1">
                        <code className="bg-white px-2 py-1 rounded text-sm border break-all">
                          {record.value}
                        </code>
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() => copyToClipboard(record.value, `txt-value-${index}`)}
                          className="h-6 w-6 p-0"
                        >
                          {copiedRecord === `txt-value-${index}` ? (
                            <CheckCircle className="h-3 w-3 text-success-600" />
                          ) : (
                            <Copy className="h-3 w-3" />
                          )}
                        </Button>
                      </div>
                    </div>
                  </div>
                  
                  <p className="text-sm text-blue-700 mt-3">
                    {record.description}
                  </p>
                </div>
              ))}
          </TabsContent>

          <TabsContent value="cname" className="space-y-4 mt-4">
            {config.dns_records
              .filter(record => record.type === 'CNAME')
              .map((record, index) => (
                <div key={index} className="bg-green-25 border border-green-200 rounded-lg p-4">
                  <div className="flex items-center space-x-2 mb-3">
                    <Globe className="h-4 w-4 text-green-600" />
                    <span className="text-sm font-medium text-green-900">CNAME Record for Routing</span>
                    {getRecordStatusBadge(record.status)}
                  </div>
                  
                  <div className="space-y-3">
                    <div>
                      <label className="text-xs font-medium text-green-700 uppercase tracking-wide">
                        Host/Name
                      </label>
                      <div className="flex items-center space-x-2 mt-1">
                        <code className="bg-white px-2 py-1 rounded text-sm border">
                          {record.name}
                        </code>
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() => copyToClipboard(record.name, `cname-name-${index}`)}
                          className="h-6 w-6 p-0"
                        >
                          {copiedRecord === `cname-name-${index}` ? (
                            <CheckCircle className="h-3 w-3 text-success-600" />
                          ) : (
                            <Copy className="h-3 w-3" />
                          )}
                        </Button>
                      </div>
                    </div>

                    <div>
                      <label className="text-xs font-medium text-green-700 uppercase tracking-wide">
                        Target/Value
                      </label>
                      <div className="flex items-center space-x-2 mt-1">
                        <code className="bg-white px-2 py-1 rounded text-sm border">
                          {record.value}
                        </code>
                        <Button
                          variant="ghost"
                          size="sm"
                          onClick={() => copyToClipboard(record.value, `cname-value-${index}`)}
                          className="h-6 w-6 p-0"
                        >
                          {copiedRecord === `cname-value-${index}` ? (
                            <CheckCircle className="h-3 w-3 text-success-600" />
                          ) : (
                            <Copy className="h-3 w-3" />
                          )}
                        </Button>
                      </div>
                    </div>
                  </div>
                  
                  <p className="text-sm text-green-700 mt-3">
                    {record.description}
                  </p>
                </div>
              ))}
          </TabsContent>

          <TabsContent value="help" className="space-y-6 mt-4">
            <div className="space-y-6">
              <Alert className="border-blue-200 bg-blue-25">
                <AlertTriangle className="h-4 w-4 text-blue-600" />
                <AlertDescription>
                  <div className="text-blue-700">
                    <h4 className="font-medium mb-2">Step-by-Step Setup Process</h4>
                    <ol className="list-decimal list-inside space-y-2 text-sm">
                      <li>Log in to your domain registrar or DNS provider (GoDaddy, Cloudflare, etc.)</li>
                      <li>Navigate to the DNS settings for your domain</li>
                      <li>Add the TXT record first for domain verification</li>
                      <li>Add the CNAME record to point your domain to our servers</li>
                      <li>Save the changes and wait for DNS propagation (5-60 minutes)</li>
                      <li>Return to the Overview tab and click "Verify Domain"</li>
                    </ol>
                  </div>
                </AlertDescription>
              </Alert>

              <div className="bg-gray-50 rounded-lg p-4">
                <h4 className="text-sm font-medium text-gray-900 mb-3">Popular DNS Provider Guides</h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {[
                    { name: 'GoDaddy', url: 'https://www.godaddy.com/help/manage-dns-records' },
                    { name: 'Cloudflare', url: 'https://support.cloudflare.com/hc/en-us/articles/360019093151' },
                    { name: 'Namecheap', url: 'https://www.namecheap.com/support/knowledgebase/article.aspx/319/2237/how-can-i-set-up-an-a-address-record-for-my-domain' },
                    { name: 'Google Domains', url: 'https://support.google.com/domains/answer/3290350' }
                  ].map((provider) => (
                    <Button
                      key={provider.name}
                      variant="outline"
                      size="sm"
                      asChild
                      className="justify-start border-gray-300"
                    >
                      <a
                        href={provider.url}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="flex items-center space-x-2"
                      >
                        <span>{provider.name} Guide</span>
                        <ExternalLink className="h-3 w-3" />
                      </a>
                    </Button>
                  ))}
                </div>
              </div>

              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <div className="flex items-center space-x-2 mb-2">
                  <Clock className="h-4 w-4 text-yellow-600" />
                  <span className="text-sm font-medium text-yellow-900">Troubleshooting Tips</span>
                </div>
                <ul className="text-sm text-yellow-700 space-y-1">
                  <li>• DNS changes can take up to 48 hours to fully propagate worldwide</li>
                  <li>• Use online DNS checker tools to verify your records</li>
                  <li>• Remove any existing A records that conflict with the CNAME</li>
                  <li>• Some providers require "@" or blank value for root domain</li>
                  <li>• Contact your DNS provider if you're having trouble adding records</li>
                </ul>
              </div>
            </div>
          </TabsContent>
        </Tabs>
      </div>

      {/* Next Steps */}
      <Alert className="border-primary-200 bg-primary-25">
        <Zap className="h-4 w-4 text-primary-600" />
        <AlertDescription>
          <div className="text-primary-700">
            <h4 className="font-medium mb-2">What happens next?</h4>
            <p className="text-sm">
              Once you've added these DNS records, our system will automatically detect the changes 
              and provision your SSL certificate. This process usually takes 5-15 minutes after 
              DNS propagation is complete.
            </p>
          </div>
        </AlertDescription>
      </Alert>
    </div>
  );
}