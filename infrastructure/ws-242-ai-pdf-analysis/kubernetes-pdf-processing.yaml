# kubernetes-pdf-processing.yaml
apiVersion: v1
kind: Namespace
metadata:
  name: wedsync-pdf-analysis
  labels:
    app.kubernetes.io/name: pdf-analysis
    app.kubernetes.io/part-of: wedsync-platform
---
# PDF Processing Job Queue
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pdf-analysis-workers
  namespace: wedsync-pdf-analysis
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: pdf-analysis-worker
  template:
    metadata:
      labels:
        app: pdf-analysis-worker
    spec:
      automountServiceAccountToken: false  # Disable service account token mounting
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001  # High UID to avoid host conflict
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault  # Set seccomp profile
      volumes:
      - name: redis-credentials
        secret:
          secretName: redis-connection
      - name: openai-credentials
        secret:
          secretName: openai-credentials
      - name: supabase-credentials
        secret:
          secretName: supabase-credentials
      - name: tmp-volume
        emptyDir: {}
      containers:
      - name: pdf-worker
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL  # Drop all capabilities including NET_RAW
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 10001
          seccompProfile:
            type: RuntimeDefault
        image: wedsync/pdf-analysis-worker@sha256:abc123def456789012345678901234567890123456789012345678901234567890  # Use specific digest
        imagePullPolicy: Always
        volumeMounts:
        - name: redis-credentials
          mountPath: /etc/secrets/redis
          readOnly: true
        - name: openai-credentials
          mountPath: /etc/secrets/openai
          readOnly: true
        - name: supabase-credentials
          mountPath: /etc/secrets/supabase
          readOnly: true
        - name: tmp-volume
          mountPath: /tmp
        env:
        - name: REDIS_URL_FILE
          value: "/etc/secrets/redis/url"
        - name: OPENAI_API_KEY_FILE
          value: "/etc/secrets/openai/api-key"
        - name: SUPABASE_SERVICE_KEY_FILE
          value: "/etc/secrets/supabase/service-key"
        resources:
          requests:
            memory: "2Gi"
            cpu: "1"
          limits:
            memory: "8Gi" 
            cpu: "4"
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 30
---
# Wedding Season HPA
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pdf-analysis-hpa
  namespace: wedsync-pdf-analysis
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pdf-analysis-workers
  minReplicas: 5
  maxReplicas: 50
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: External
    external:
      metric:
        name: redis_queue_length
      target:
        type: Value
        value: "10"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 180
---
# Redis Queue for Job Management
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-pdf-queue
  namespace: wedsync-pdf-analysis
spec:
  serviceName: redis-pdf-queue
  replicas: 3
  selector:
    matchLabels:
      app: redis-pdf-queue
  template:
    metadata:
      labels:
        app: redis-pdf-queue
    spec:
      automountServiceAccountToken: false  # Disable service account token mounting
      securityContext:
        runAsNonRoot: true
        runAsUser: 10002  # High UID to avoid host conflict
        runAsGroup: 10002
        fsGroup: 10002
        seccompProfile:
          type: RuntimeDefault  # Set seccomp profile
      containers:
      - name: redis
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL  # Drop all capabilities including NET_RAW
          readOnlyRootFilesystem: false  # Redis needs to write to data directory
          runAsNonRoot: true
          runAsUser: 10002
          seccompProfile:
            type: RuntimeDefault
        image: redis@sha256:92d3f023d7c344985e8b20e4e0b3e4ead5e8e60f8c2b8ac6d8b5e5b9e5e8b5e8  # Use specific digest
        imagePullPolicy: Always
        ports:
        - containerPort: 6379
        command:
        - redis-server
        - --appendonly yes
        - --cluster-enabled yes
        - --cluster-config-file nodes.conf
        - --cluster-node-timeout 5000
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "2"
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 30
        volumeMounts:
        - name: redis-storage
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: redis-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 50Gi
---
# PDF Analysis Service
apiVersion: v1
kind: Service
metadata:
  name: pdf-analysis-service
  namespace: wedsync-pdf-analysis
spec:
  selector:
    app: pdf-analysis-worker
  ports:
  - name: http
    port: 80
    targetPort: 3000
  type: ClusterIP
---
# Redis Service
apiVersion: v1
kind: Service
metadata:
  name: redis-pdf-queue
  namespace: wedsync-pdf-analysis
spec:
  selector:
    app: redis-pdf-queue
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
  type: ClusterIP
  clusterIP: None