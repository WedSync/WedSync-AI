{
  "pages": [
    {
      "path": "src/app/(admin)/alerts/page.tsx",
      "route": "/alerts",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "AlertData",
        "AlertStats",
        "Heart",
        "AlertTriangle",
        "Zap",
        "Activity",
        "Button",
        "Card",
        "CardContent",
        "CheckCircle2",
        "Clock",
        "Search",
        "CardHeader",
        "CardTitle",
        "Badge"
      ]
    },
    {
      "path": "src/app/(admin)/executive/page.tsx",
      "route": "/executive",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/dashboard/ExecutiveDashboard",
        "@/components/dashboard/DashboardSkeleton"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Suspense",
        "DashboardSkeleton",
        "ExecutiveDashboard"
      ]
    },
    {
      "path": "src/app/(admin)/quick-actions/page.tsx",
      "route": "/quick-actions",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/admin/QuickActionsPanel",
        "@/components/admin/SystemStatusCards",
        "@/components/admin/SystemToggleControls",
        "@/components/admin/EmergencyControlsSection",
        "@/components/admin/AdminAuditLog",
        "@/components/dashboard/DashboardSkeleton"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Suspense",
        "DashboardSkeleton",
        "SystemStatusCards",
        "QuickActionsPanel",
        "SystemToggleControls",
        "EmergencyControlsSection",
        "AdminAuditLog"
      ]
    },
    {
      "path": "src/app/(admin)/system-health/page.tsx",
      "route": "/system-health",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/monitoring/HealthDashboard"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "EnvironmentHealth",
        "HealthTrend",
        "AlertConfig",
        "HealthDashboard",
        "Suspense",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "AreaChart",
        "Area",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/app/(dashboard)/ab-testing/page.tsx",
      "route": "/ab-testing",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ab-testing/TestCreationWizard",
        "@/components/analytics/ab-tests/ABTestDashboard"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "ABTest",
        "TestCreationWizard",
        "TestTube",
        "Button",
        "RefreshCw",
        "Plus",
        "Card",
        "ABTestDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin/audit-logs/page.tsx",
      "route": "/admin/audit-logs",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/admin/auth",
        "@/components/admin/AuditLogViewer",
        "@/components/admin/SecurityDashboard",
        "@/components/admin/AuditLogFilters",
        "@/components/admin/SuspiciousActivityAlert"
      ],
      "exports": [
        "default",
        "metadata",
        "dynamic",
        "revalidate"
      ],
      "components": [
        "Suspense",
        "SecurityDashboard",
        "AuditLogFilters",
        "SuspiciousActivityAlert",
        "AuditLogViewer"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin/customer-health/page.tsx",
      "route": "/admin/customer-health",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/dashboard/CustomerHealthDashboard",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/button-untitled"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "SupplierHealthMetrics",
        "Date",
        "DashboardSummary",
        "Card",
        "CardContent",
        "Shield",
        "Link",
        "Button",
        "Activity",
        "Badge",
        "CheckCircle2",
        "RefreshCw",
        "Users",
        "TrendingUp",
        "AlertCircle",
        "CardHeader",
        "CustomerHealthDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin/customer-success/page.tsx",
      "route": "/admin/customer-success",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/admin/customer-success/CustomerSuccessDashboard",
        "@/components/ui/skeleton",
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Suspense",
        "CustomerSuccessLoadingSkeleton",
        "CustomerSuccessDashboard",
        "Skeleton",
        "Card",
        "CardHeader",
        "CardContent"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin/errors/page.tsx",
      "route": "/admin/errors",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/dialog"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "ErrorEvent",
        "ErrorStats",
        "Zap",
        "AlertTriangle",
        "Button",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "TrendingUp",
        "Users",
        "Calendar",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge",
        "Clock",
        "Eye",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "X"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin/executive/page.tsx",
      "route": "/admin/executive",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/admin/ExecutiveDashboard",
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Suspense",
        "RefreshCw",
        "ExecutiveDashboard",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin/forms/[formId]/analytics/page.tsx",
      "route": "/admin/forms/[formId]/analytics",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/skeleton",
        "@/components/analytics/ResponseAnalyticsDashboard"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Suspense",
        "AnalyticsLoadingSkeleton",
        "ResponseAnalyticsDashboard",
        "Skeleton",
        "Card",
        "CardHeader",
        "CardContent"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin/monitoring/page.tsx",
      "route": "/admin/monitoring",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/admin/auth",
        "@/components/admin/monitoring/AdminMonitoringDashboard"
      ],
      "exports": [
        "default",
        "metadata",
        "dynamic",
        "revalidate"
      ],
      "components": [
        "Suspense",
        "AdminMonitoringDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/admin-dashboard/page.tsx",
      "route": "/admin-dashboard",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/analytics/MRRDashboard"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "ExclamationTriangleIcon",
        "Icon",
        "CheckCircleIcon",
        "ClockIcon",
        "MRRDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/ai-features/page.tsx",
      "route": "/ai-features",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ai-features/AIFeatureManager"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Suspense",
        "AIFeatureManager"
      ]
    },
    {
      "path": "src/app/(dashboard)/ai-optimization/page.tsx",
      "route": "/ai-optimization",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ai-optimization/CostOptimizationDashboard"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "CostOptimizationDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/analytics/page.tsx",
      "route": "/analytics",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/analytics/JourneyOverviewCards",
        "@/components/analytics/ConversionFunnelChart",
        "@/components/analytics/RevenueAttributionChart",
        "@/components/analytics/ActiveJourneysTable",
        "@/components/analytics/PerformanceMetricsChart",
        "@/components/analytics/TimeframeSelector",
        "@/components/analytics/Skeletons"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "TimeframeSelector",
        "Suspense",
        "OverviewCardsSkeleton",
        "JourneyOverviewCards",
        "ChartSkeleton",
        "PerformanceMetricsChart",
        "ConversionFunnelChart",
        "RevenueAttributionChart",
        "TableSkeleton",
        "ActiveJourneysTable"
      ]
    },
    {
      "path": "src/app/(dashboard)/analytics/seo/page.tsx",
      "route": "/analytics/seo",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/analytics/seo/SEOAnalyticsDashboard"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "SEOAnalyticsDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/analytics/wedding/[id]/page.tsx",
      "route": "/analytics/wedding/[id]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/analytics/wedding/WeddingMetricsDashboard",
        "@/lib/supabase/server",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "WeddingMetricsDashboard",
        "Suspense",
        "WeddingAnalyticsLoading",
        "WeddingVerification"
      ]
    },
    {
      "path": "src/app/(dashboard)/analytics/wedding/[id]/reports/page.tsx",
      "route": "/analytics/wedding/[id]/reports",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/analytics/wedding/ReportBuilder",
        "@/lib/supabase/server"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "RefreshCw",
        "ReportBuilder",
        "Suspense",
        "ReportBuilderLoading",
        "WeddingReportBuilder"
      ]
    },
    {
      "path": "src/app/(dashboard)/api-keys/page.tsx",
      "route": "/api-keys",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/api-keys/APIKeyManager"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Key",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardContent",
        "Activity",
        "Globe",
        "Settings",
        "Zap",
        "CardDescription",
        "ExternalLink",
        "FileText",
        "APIKeyManager"
      ]
    },
    {
      "path": "src/app/(dashboard)/billing/page.tsx",
      "route": "/billing",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/hooks/useUser",
        "@/components/billing/SubscriptionManager",
        "@/components/billing/UsageDisplay",
        "@/components/billing/PaymentHistory",
        "@/components/billing/PricingPlans"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "BillingData",
        "SubscriptionManager",
        "UsageDisplay",
        "PricingPlans",
        "PaymentHistory"
      ]
    },
    {
      "path": "src/app/(dashboard)/budget/budget-client.tsx",
      "route": "/budget",
      "fileName": "budget-client.tsx",
      "type": "component",
      "imports": [],
      "exports": [
        "BudgetClient"
      ],
      "components": []
    },
    {
      "path": "src/app/(dashboard)/budget/page.tsx",
      "route": "/budget",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "./budget-client"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Suspense",
        "BudgetClient"
      ]
    },
    {
      "path": "src/app/(dashboard)/chat/page.tsx",
      "route": "/chat",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/chat/VendorChatInterface",
        "@/lib/supabase/server"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "VendorChatInterface"
      ]
    },
    {
      "path": "src/app/(dashboard)/client-analytics/page.tsx",
      "route": "/client-analytics",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "../../../components/analytics/ClientPortalAnalytics",
        "../../../components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "BarChart3",
        "Suspense",
        "Loader2",
        "ErrorBoundary",
        "AnalyticsError",
        "ClientPortalAnalytics"
      ]
    },
    {
      "path": "src/app/(dashboard)/clients/[id]/edit/page.tsx",
      "route": "/clients/[id]/edit",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/types/database"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Client",
        "Link",
        "Button",
        "ArrowLeftIcon",
        "UserIcon",
        "Label",
        "Input",
        "CalendarIcon",
        "TagIcon",
        "CurrencyPoundIcon",
        "CheckIcon"
      ]
    },
    {
      "path": "src/app/(dashboard)/clients/[id]/guests/page.tsx",
      "route": "/clients/[id]/guests",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/guests/GuestListManager",
        "@/components/guests/GuestAnalyticsDashboard",
        "@/components/guests/GuestListLoadingSkeleton",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Suspense",
        "GuestAnalyticsDashboard",
        "GuestListLoadingSkeleton",
        "GuestListManager"
      ]
    },
    {
      "path": "src/app/(dashboard)/clients/[id]/page.tsx",
      "route": "/clients/[id]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/ui/tabs",
        "@/components/clients/profile/ProfileHeader",
        "@/components/clients/profile/ActivityFeed",
        "@/components/clients/profile/DocumentManager",
        "@/components/clients/profile/NotesSection",
        "@/components/ui/description-list",
        "@/types/next15-params",
        "@/components/ui/badge",
        "@/components/ui/card-untitled",
        "@/lib/security/rbac-system"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "ProfileHeader",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "DescriptionList",
        "DescriptionTerm",
        "DescriptionDetails",
        "UsersIcon",
        "CurrencyPoundIcon",
        "Badge",
        "ActivityFeed",
        "DocumentManager",
        "NotesSection",
        "ChartBarIcon"
      ]
    },
    {
      "path": "src/app/(dashboard)/clients/import/page.tsx",
      "route": "/clients/import",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/clients/import/ImportWizard"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "ImportWizard"
      ]
    },
    {
      "path": "src/app/(dashboard)/clients/new/page.tsx",
      "route": "/clients/new",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Button",
        "ArrowLeftIcon",
        "UserIcon",
        "Label",
        "Input",
        "CalendarIcon",
        "TagIcon",
        "CurrencyPoundIcon"
      ]
    },
    {
      "path": "src/app/(dashboard)/clients/page-new.tsx",
      "route": "/clients",
      "fileName": "page-new.tsx",
      "type": "component",
      "imports": [
        "@/lib/supabase/client",
        "@/components/clients/ClientListViews",
        "@/components/clients/ClientNotifications",
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "AlertCircle",
        "Button",
        "ClientData",
        "Error",
        "ViewType",
        "ClientPageError",
        "Bell",
        "ClientPageLoading",
        "ClientListViews",
        "ClientNotifications",
        "Suspense",
        "ClientPageContentWrapper",
        "ClientPageContent"
      ]
    },
    {
      "path": "src/app/(dashboard)/clients/page.tsx",
      "route": "/clients",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/table",
        "@/components/ui/dropdown",
        "@/components/ui/input-group",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Button",
        "ArrowUpTrayIcon",
        "PlusIcon",
        "InputGroup",
        "MagnifyingGlassIcon",
        "Input",
        "FunnelIcon",
        "Table",
        "TableHead",
        "TableRow",
        "TableHeader",
        "TableBody",
        "TableCell",
        "UserIcon",
        "EnvelopeIcon",
        "PhoneIcon",
        "Badge",
        "StatusIcon",
        "LinkIcon",
        "Dropdown",
        "DropdownButton",
        "EllipsisHorizontalIcon",
        "DropdownMenu",
        "DropdownItem",
        "ChevronRightIcon",
        "PencilIcon",
        "DocumentTextIcon",
        "TrashIcon"
      ]
    },
    {
      "path": "src/app/(dashboard)/communications/page.tsx",
      "route": "/communications",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/messaging/MessagingLayout",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "MessagingLayout"
      ]
    },
    {
      "path": "src/app/(dashboard)/customer-success/page.tsx",
      "route": "/customer-success",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Card",
        "Users",
        "TrendingUp",
        "Target",
        "AlertTriangle",
        "Activity",
        "CheckCircle"
      ]
    },
    {
      "path": "src/app/(dashboard)/dashboard-templates/[id]/edit/page.tsx",
      "route": "/dashboard-templates/[id]/edit",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/dashboard-templates/DashboardTemplateBuilder",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "DashboardTemplateBuilder"
      ]
    },
    {
      "path": "src/app/(dashboard)/dashboard-templates/[id]/preview/page.tsx",
      "route": "/dashboard-templates/[id]/preview",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/dashboard-templates/ClientDashboardRenderer",
        "@/lib/services/dashboardTemplateService",
        "@/components/ui/button-untitled"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "Edit3",
        "Share2",
        "ClientDashboardRenderer"
      ]
    },
    {
      "path": "src/app/(dashboard)/dashboard-templates/new/page.tsx",
      "route": "/dashboard-templates/new",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/dashboard-templates/DashboardTemplateBuilder",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "DashboardTemplateBuilder"
      ]
    },
    {
      "path": "src/app/(dashboard)/dashboard-templates/page.tsx",
      "route": "/dashboard-templates",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/ui/tabs",
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "LayoutDashboard",
        "Badge",
        "Link",
        "Button",
        "Eye",
        "Edit3",
        "Copy",
        "BarChart3",
        "Plus",
        "Users",
        "Sparkles",
        "AlertCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "TemplateCard"
      ]
    },
    {
      "path": "src/app/(dashboard)/faq/page.tsx",
      "route": "/faq",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/faq/FAQManager",
        "@/components/faq/FAQEditor",
        "@/components/faq/FAQAnalytics",
        "@/lib/services/faqService"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "FaqItem",
        "FaqCategory",
        "FaqDashboardOverview",
        "Plus",
        "BookOpen",
        "BarChart3",
        "Search",
        "Icon",
        "Suspense",
        "FAQManager",
        "FAQAnalytics",
        "FAQEditor"
      ]
    },
    {
      "path": "src/app/(dashboard)/florist/intelligence/page.tsx",
      "route": "/florist/intelligence",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/florist/FloristIntelligence"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "FloristIntelligence"
      ]
    },
    {
      "path": "src/app/(dashboard)/integrations/[integrationId]/field-mapping/page.tsx",
      "route": "/integrations/[integrationId]/field-mapping",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/integrations/FieldMappingInterface",
        "@/components/ui/dashboard-shell",
        "@/components/ui/dashboard-header",
        "@/components/ui/button",
        "@/lib/auth",
        "@/lib/api/crm-integrations"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Metadata",
        "DashboardShell",
        "DashboardHeader",
        "Link",
        "Button",
        "ArrowLeft",
        "Suspense",
        "FieldMappingSkeleton",
        "FieldMappingInterface"
      ]
    },
    {
      "path": "src/app/(dashboard)/integrations/[integrationId]/page.tsx",
      "route": "/integrations/[integrationId]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/integrations/SyncStatusMonitor",
        "@/components/ui/dashboard-shell",
        "@/components/ui/dashboard-header",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/auth",
        "@/lib/api/crm-integrations"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Metadata",
        "DashboardShell",
        "DashboardHeader",
        "IntegrationActions",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Suspense",
        "OverviewSkeleton",
        "IntegrationOverview",
        "SyncMonitorSkeleton",
        "SyncStatusMonitor",
        "Settings",
        "Button",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/app/(dashboard)/integrations/page.tsx",
      "route": "/integrations",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/integrations/CRMIntegrationDashboard",
        "@/components/ui/dashboard-shell",
        "@/components/ui/dashboard-header",
        "@/lib/auth"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "DashboardShell",
        "DashboardHeader",
        "Suspense",
        "IntegrationsDashboardSkeleton",
        "CRMIntegrationDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/integrations/webhooks/page.tsx",
      "route": "/integrations/webhooks",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/webhooks/WebhookDashboard",
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Card",
        "CardContent",
        "Webhook",
        "RefreshCw",
        "Suspense",
        "WebhookDashboardSkeleton",
        "WebhookDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/journey-monitor/page.tsx",
      "route": "/journey-monitor",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/journey-engine/JourneyExecutionMonitor"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "JourneyExecutionMonitor"
      ]
    },
    {
      "path": "src/app/(dashboard)/journeys/[id]/canvas/page.tsx",
      "route": "/journeys/[id]/canvas",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server",
        "@/components/journey/JourneyCanvas",
        "@/components/ui/loading-spinner",
        "@/components/ui/card",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "ArrowLeft",
        "Button",
        "BarChart3",
        "Settings",
        "Pause",
        "Play",
        "LoadingSpinner",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "JourneyCanvasHeader",
        "Suspense",
        "CanvasLoadingFallback",
        "JourneyCanvas"
      ]
    },
    {
      "path": "src/app/(dashboard)/journeys/[id]/edit/page.tsx",
      "route": "/journeys/[id]/edit",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/journey-builder",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "JourneyData",
        "Date",
        "AlertCircle",
        "Button",
        "ArrowLeft",
        "Badge",
        "Play",
        "Settings",
        "Download",
        "Trash2",
        "MoreHorizontal",
        "JourneyCanvas"
      ]
    },
    {
      "path": "src/app/(dashboard)/journeys/[id]/page.tsx",
      "route": "/journeys/[id]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/journey-builder",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "Play",
        "Settings",
        "JourneyCanvas"
      ]
    },
    {
      "path": "src/app/(dashboard)/journeys/builder/page.tsx",
      "route": "/journeys/builder",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/journey-builder",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Date",
        "JourneyMetadata",
        "Button",
        "ArrowLeft",
        "Badge",
        "Play",
        "Settings",
        "Download",
        "Upload",
        "MoreHorizontal",
        "JourneyCanvas"
      ]
    },
    {
      "path": "src/app/(dashboard)/journeys/new/page.tsx",
      "route": "/journeys/new",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/journey-builder",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/dialog"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "JourneyCanvas",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Textarea",
        "DialogFooter",
        "Save"
      ]
    },
    {
      "path": "src/app/(dashboard)/journeys/page.tsx",
      "route": "/journeys",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "JourneyCanvas",
        "Link",
        "Button",
        "Plus",
        "Card",
        "CardContent",
        "Calendar",
        "Users",
        "TrendingUp",
        "Play",
        "Search",
        "Filter",
        "CardHeader",
        "CardTitle",
        "Copy",
        "Trash2",
        "Badge",
        "Edit"
      ]
    },
    {
      "path": "src/app/(dashboard)/journeys/templates/page.tsx",
      "route": "/journeys/templates",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/lib/journey/templates/library",
        "@/lib/journey/templates/types",
        "@/components/journey-builder/TemplatePreviewModal",
        "@/components/journey-builder/OverflowTemplateCard"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "VendorCategory",
        "Camera",
        "Building",
        "Utensils",
        "Music",
        "Flower",
        "Calendar",
        "Palette",
        "Car",
        "Cake",
        "Users",
        "TemplateTier",
        "TrendingUp",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "CardDescription",
        "Clock",
        "Sparkles",
        "CardFooter",
        "Button",
        "ChevronRight",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "OverflowTemplateCard",
        "TemplatePreviewModal"
      ]
    },
    {
      "path": "src/app/(dashboard)/leads/page.tsx",
      "route": "/leads",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/table",
        "@/components/ui/dropdown",
        "@/components/ui/input-group",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "MinusIcon",
        "StarIcon",
        "Button",
        "ChartBarIcon",
        "Link",
        "PlusIcon",
        "InputGroup",
        "MagnifyingGlassIcon",
        "Input",
        "FunnelIcon",
        "Table",
        "TableHead",
        "TableRow",
        "TableHeader",
        "TableBody",
        "TableCell",
        "UserIcon",
        "EnvelopeIcon",
        "PhoneIcon",
        "Badge",
        "CalendarIcon",
        "Dropdown",
        "DropdownButton",
        "EllipsisHorizontalIcon",
        "DropdownMenu",
        "DropdownItem"
      ]
    },
    {
      "path": "src/app/(dashboard)/marketplace/creator/analytics/page.tsx",
      "route": "/marketplace/creator/analytics",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/marketplace/creator/analytics/CreatorAnalyticsDashboard"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "CreatorAnalyticsDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/marketplace/revenue/page.tsx",
      "route": "/marketplace/revenue",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/separator",
        "@/components/ui/tabs",
        "@/components/marketplace/MarketplaceRevenueMetrics",
        "@/components/marketplace/CommissionManagementPanel",
        "@/components/marketplace/CreatorEarningsTable",
        "@/components/marketplace/RevenueChartsPanel",
        "@/components/marketplace/FinancialReportsSection"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "MarketplaceRevenueData",
        "Card",
        "CardHeader",
        "CardContent",
        "Button",
        "RefreshCw",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Download",
        "CardTitle",
        "DollarSign",
        "TrendingUp",
        "Users",
        "PieChart",
        "BarChart3",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "MarketplaceRevenueMetrics",
        "RevenueChartsPanel",
        "CommissionManagementPanel",
        "CreatorEarningsTable",
        "FinancialReportsSection"
      ]
    },
    {
      "path": "src/app/(dashboard)/performance/page.tsx",
      "route": "/performance",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/performance/WebSocketMetrics",
        "@/components/performance/ChannelPerformance",
        "@/components/performance/CacheMetrics",
        "@/components/performance/AutoScalingDashboard",
        "@/components/performance/WeddingSeasonAnalytics",
        "@/components/performance/AlertsOverview",
        "@/components/performance/PerformanceExport"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "PerformanceExport",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "Zap",
        "Server",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Suspense",
        "WebSocketMetrics",
        "WeddingSeasonAnalytics",
        "ChannelPerformance",
        "AlertsOverview",
        "CacheMetrics",
        "AutoScalingDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/performance/realtime/page.tsx",
      "route": "/performance/realtime",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "RealtimePerformanceMetrics",
        "CachePerformanceMetrics",
        "ConnectionHealthReport",
        "ScalingResult",
        "WeddingSeasonMetrics",
        "PerformanceAlert",
        "WeddingDayMode",
        "Card",
        "CardHeader",
        "CardTitle",
        "Icon",
        "CardContent",
        "Heart",
        "CardDescription",
        "Progress",
        "Badge",
        "Database",
        "TrendingUp",
        "Calendar",
        "AlertTriangle",
        "Shield",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "Button",
        "Activity",
        "MetricCard",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ConnectionHealthChart",
        "AlertsPanel",
        "ScalingStatusCard",
        "WeddingDayModeCard",
        "CachePerformanceChart"
      ]
    },
    {
      "path": "src/app/(dashboard)/privacy/settings/page.tsx",
      "route": "/privacy/settings",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/privacy/PrivacyDashboard"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "PrivacyDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/referrals/mobile/page.tsx",
      "route": "/referrals/mobile",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/mobile/referrals/MobileReferralShare",
        "@/components/mobile/referrals/CrossPlatformShare",
        "@/components/mobile/referrals/MobileOptimizations",
        "@/lib/pwa/offline-referrals",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Heart",
        "Badge",
        "Smartphone",
        "Card",
        "Suspense",
        "MobileReferralShare",
        "CrossPlatformShare",
        "MobileOptimizations",
        "Trophy",
        "Share",
        "QrCode"
      ]
    },
    {
      "path": "src/app/(dashboard)/referrals/page.tsx",
      "route": "/referrals",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/lib/utils",
        "@/types/supplier-referrals",
        "@/components/referrals/ReferralCenter",
        "@/components/referrals/ReferralStats",
        "@/components/referrals/LeaderboardView",
        "@/components/referrals/QRCodeGenerator",
        "@/lib/toast-helper"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "SupplierReferralStats",
        "LeaderboardFilters",
        "Users",
        "Card",
        "Target",
        "Award",
        "Sparkles",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Icon",
        "Button",
        "RefreshCcw",
        "TabsContent",
        "ReferralCenter",
        "LeaderboardView",
        "QRCodeGenerator",
        "ReferralStats",
        "Trophy"
      ]
    },
    {
      "path": "src/app/(dashboard)/reminders/page.tsx",
      "route": "/reminders",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/services/reminder-service",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "ReminderSchedule",
        "ReminderTemplate",
        "Mail",
        "Phone",
        "Bell",
        "Plus",
        "Search",
        "Calendar",
        "MessageSquare",
        "Filter"
      ]
    },
    {
      "path": "src/app/(dashboard)/tasks/page.tsx",
      "route": "/tasks",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/types/workflow",
        "@/components/tasks/TaskCreator",
        "@/components/tasks/TaskTemplateLibrary",
        "@/components/tasks/TaskTimingValidator"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "TaskPageState",
        "CheckCircle",
        "AlertTriangle",
        "Clock",
        "BookTemplate",
        "Plus",
        "Search",
        "List",
        "Calendar",
        "User",
        "TaskCreator",
        "TaskTemplateLibrary"
      ]
    },
    {
      "path": "src/app/(dashboard)/team/page.tsx",
      "route": "/team",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/team/TeamManager",
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Card",
        "Suspense",
        "TeamPageSkeleton",
        "TeamManagerWrapper",
        "TeamManager"
      ]
    },
    {
      "path": "src/app/(dashboard)/templates/page.tsx",
      "route": "/templates",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/templates/TemplateGallery",
        "@/components/templates/TemplateModal",
        "@/lib/toast-helper"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Template",
        "Button",
        "Plus",
        "Card",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "TemplateGallery",
        "Heart",
        "TrendingUp",
        "TemplateModal"
      ]
    },
    {
      "path": "src/app/(dashboard)/test-communications/page.tsx",
      "route": "/test-communications",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/lib/supabase/realtime",
        "@/lib/activity/service",
        "@/lib/email/service",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/messaging/ActivityFeed"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Button",
        "Input",
        "ActivityFeed"
      ]
    },
    {
      "path": "src/app/(dashboard)/trial-intelligence/page.tsx",
      "route": "/trial-intelligence",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/trial/TrialBusinessIntelligenceDashboard",
        "@/lib/trial/TrialUsageIntegration"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "TrialBusinessIntelligenceDashboard"
      ]
    },
    {
      "path": "src/app/(dashboard)/vendor-portal/page.tsx",
      "route": "/vendor-portal",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/hooks/useUser",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/vendors/VendorDashboard",
        "@/components/vendors/AssignedWeddings",
        "@/components/vendors/PerformanceScoring",
        "@/components/vendors/VendorCommunications"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "VendorProfile",
        "WeddingAssignment",
        "UserGroupIcon",
        "Button",
        "VendorDashboard",
        "AssignedWeddings",
        "PerformanceScoring",
        "VendorCommunications",
        "Badge",
        "CheckBadgeIcon",
        "StarIcon",
        "BellIcon",
        "ClockIcon",
        "Card",
        "CalendarDaysIcon",
        "ChatBubbleBottomCenterTextIcon",
        "Tabs",
        "Icon"
      ]
    },
    {
      "path": "src/app/(dashboard)/vendors/[id]/edit/page.tsx",
      "route": "/vendors/[id]/edit",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/types/database",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Vendor",
        "VendorCategory",
        "Button",
        "ArrowLeftIcon",
        "BuildingStorefrontIcon",
        "Label",
        "Input",
        "CurrencyPoundIcon",
        "UserIcon",
        "GlobeAltIcon",
        "SparklesIcon",
        "TagIcon",
        "CheckIcon"
      ]
    },
    {
      "path": "src/app/(dashboard)/vendors/[id]/page.tsx",
      "route": "/vendors/[id]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/description-list",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Badge",
        "Button",
        "ArrowLeftIcon",
        "BuildingStorefrontIcon",
        "CheckBadgeIcon",
        "MapPinIcon",
        "CurrencyPoundIcon",
        "StarIcon",
        "UserGroupIcon",
        "PencilIcon",
        "TrashIcon",
        "CalendarIcon",
        "SparklesIcon",
        "DescriptionList",
        "DescriptionTerm",
        "DescriptionDetails",
        "PhotoIcon",
        "DocumentTextIcon",
        "Link",
        "ChartBarIcon"
      ]
    },
    {
      "path": "src/app/(dashboard)/vendors/page.tsx",
      "route": "/vendors",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Button",
        "PlusIcon",
        "InputGroup",
        "MagnifyingGlassIcon",
        "Input",
        "MapPinIcon",
        "FunnelIcon",
        "BuildingStorefrontIcon",
        "CategoryIcon",
        "Badge",
        "CheckBadgeIcon",
        "StarIcon"
      ]
    },
    {
      "path": "src/app/(dashboard)/weather/page.tsx",
      "route": "/weather",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/weather/WeatherDashboard",
        "@/components/weather/WeatherCard",
        "@/components/weather/WeatherTimeline",
        "@/components/weather/MobileWeatherWidget",
        "@/hooks/useWeatherData",
        "@/components/untitled-ui"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "AlertTriangle",
        "RefreshCw",
        "MapPin",
        "Calendar",
        "WeatherDashboard",
        "Smartphone",
        "MobileWeatherWidget",
        "Monitor",
        "WeatherCard",
        "WeatherTimeline",
        "Cloud"
      ]
    },
    {
      "path": "src/app/(dashboard)/wedding-website/page.tsx",
      "route": "/wedding-website",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Button",
        "Eye",
        "EyeOff",
        "Publish",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "Label",
        "Lock",
        "Switch",
        "Input",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Heart",
        "Users",
        "Gift",
        "MapPin",
        "Settings",
        "TabsContent",
        "Textarea",
        "Plus",
        "Edit",
        "Trash2",
        "Code",
        "Save",
        "Languages",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Search"
      ]
    },
    {
      "path": "src/app/(dashboard)/wedme/final-payments/page.tsx",
      "route": "/wedme/final-payments",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/utils",
        "@/lib/integrations/budget-guest-sync",
        "@/lib/integrations/budget-rsvp-calc",
        "@/lib/integrations/budget-task-costs",
        "@/lib/integrations/budget-website-costs"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "BudgetSummary",
        "CategoryBreakdown",
        "VendorPayment",
        "WebSocket",
        "RefreshCw",
        "Download",
        "DollarSign",
        "Shield",
        "CreditCard",
        "Clock",
        "TrendingUp",
        "Activity",
        "Zap"
      ]
    },
    {
      "path": "src/app/(dashboard)/wedme/marketplace/page.tsx",
      "route": "/wedme/marketplace",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "MarketplaceTemplate",
        "Search",
        "Input",
        "Button",
        "ArrowRight",
        "Card",
        "Badge",
        "Crown",
        "Play",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Star",
        "ShoppingBag",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TrendingUp",
        "TabsContent",
        "Award",
        "ChevronRight",
        "Clock",
        "Zap"
      ]
    },
    {
      "path": "src/app/(dashboard)/wedme/photo-groups/page.tsx",
      "route": "/wedme/photo-groups",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/wedme/PhotoGroupsManager",
        "@/components/wedme/WedMeHeader",
        "@/components/ui/loading-spinner"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "WedMeHeader",
        "Suspense",
        "LoadingSpinner",
        "PhotoGroupsManager"
      ]
    },
    {
      "path": "src/app/(dashboard)/wedme/seating/page.tsx",
      "route": "/wedme/seating",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/mobile/seating/MobileSeatingViewer",
        "@/components/mobile/seating/MobileSeatingDashboard",
        "@/components/ui/LoadingSkeleton",
        "@/hooks/useAuth",
        "@/components/mobile/seating/CoupleAuthGuard",
        "@/components/wedme/WedMeHeader",
        "@/components/wedme/WedMeNavigation"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "CoupleAuthGuard",
        "WedMeHeader",
        "WedMeNavigation",
        "Suspense",
        "LoadingSkeleton",
        "MobileSeatingDashboard",
        "MobileSeatingViewer"
      ]
    },
    {
      "path": "src/app/(dashboard)/wedme/templates/builder/page.tsx",
      "route": "/wedme/templates/builder",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "DraggableComponent",
        "IconComponent",
        "Separator",
        "Type",
        "FileText",
        "ImageIcon",
        "Layers",
        "Badge",
        "Button",
        "Smartphone",
        "Plus",
        "SortableContext",
        "CanvasComponent",
        "Input",
        "Label",
        "Copy",
        "Trash2",
        "TemplateComponent",
        "Settings",
        "ScrollArea",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "TemplateData",
        "Monitor",
        "Eye",
        "Save",
        "DndContext",
        "ComponentPalette",
        "CanvasArea",
        "PropertyPanel",
        "DragOverlay",
        "activeComponent"
      ]
    },
    {
      "path": "src/app/(onboarding)/wedding-basics/page.tsx",
      "route": "/wedding-basics",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/onboarding/WeddingBasicsForm",
        "@/lib/stores/weddingBasicsStore",
        "@/lib/validations/wedding-basics",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "WeddingBasicsRequest",
        "Loader2",
        "Button",
        "ArrowLeft",
        "Progress",
        "CheckCircle2",
        "Icon",
        "Alert",
        "AlertDescription",
        "AlertCircle",
        "Card",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardDescription",
        "CardContent",
        "MapPin",
        "Users",
        "Palette",
        "Badge",
        "WeddingBasicsForm"
      ]
    },
    {
      "path": "src/app/(wedme)/analytics/budget/page.tsx",
      "route": "/analytics/budget",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/wedme/analytics/budget-optimization",
        "@/lib/wedme/analytics/couple-insights-engine"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Suspense",
        "BudgetAnalyticsSkeleton",
        "BudgetAnalyticsContent",
        "BudgetOverviewCard",
        "BudgetHealthIndicator",
        "CategorySpendingBreakdown",
        "SpendingTimelineChart",
        "SeasonalPricingInsights",
        "OptimizationRecommendations",
        "BudgetForecastPanel",
        "SmartSavingsOpportunities",
        "Icon",
        "ExclamationTriangleIcon",
        "CheckCircleIcon",
        "CalendarIcon",
        "LightBulbIcon"
      ]
    },
    {
      "path": "src/app/(wedme)/analytics/dashboard/page.tsx",
      "route": "/analytics/dashboard",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/wedme/analytics/couple-insights-engine",
        "@/lib/wedme/analytics/budget-optimization",
        "@/lib/wedme/analytics/vendor-performance-couples",
        "@/lib/wedme/analytics/timeline-intelligence",
        "@/lib/wedme/analytics/social-wedding-analytics",
        "@/lib/wedme/analytics/mobile-analytics-experience",
        "@/components/wedme/analytics/PersonalizedInsightsPanels",
        "@/components/wedme/analytics/BudgetOptimizationWidget",
        "@/components/wedme/analytics/VendorPerformanceInsights",
        "@/components/wedme/analytics/TimelineProgressTracker",
        "@/components/wedme/analytics/WeddingMomentumMeter"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Suspense",
        "DashboardSkeleton",
        "AnalyticsDashboardContent",
        "Link",
        "MetricCard",
        "PersonalizedInsightsPanels",
        "QuickActionsPanel",
        "BudgetOptimizationWidget",
        "VendorPerformanceInsights",
        "TimelineProgressTracker",
        "SocialEngagementPanel",
        "WeddingMomentumMeter",
        "MobileExperienceInsights",
        "ArrowUpIcon",
        "ArrowDownIcon"
      ]
    },
    {
      "path": "src/app/(wedme)/analytics/vendor/page.tsx",
      "route": "/analytics/vendor",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/wedme/analytics/vendor-performance-couples",
        "@/lib/wedme/analytics/couple-insights-engine"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "Suspense",
        "VendorInsightsSkeleton",
        "VendorInsightsContent",
        "VendorOverviewCard",
        "VendorPerformanceOverview",
        "VendorCompatibilityAnalysis",
        "VendorPerformanceMetrics",
        "VendorRiskAssessment",
        "VendorSatisfactionPredictions",
        "DetailedVendorAnalysis",
        "SmartVendorRecommendations",
        "Icon",
        "ExclamationTriangleIcon",
        "CheckCircleIcon",
        "HeartIcon",
        "ClockIcon",
        "StarIcon",
        "ChatBubbleBottomCenterTextIcon",
        "PhotoIcon",
        "TrendingUpIcon",
        "TrendingDownIcon"
      ]
    },
    {
      "path": "src/app/actions/__tests__/email-templates.test.ts",
      "route": "/actions/__tests__",
      "fileName": "email-templates.test.ts",
      "type": "unknown",
      "imports": [
        "../email-templates",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/actions/email-templates.ts",
      "route": "/actions",
      "fileName": "email-templates.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/email-content-sanitizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/actions/sms-templates.ts",
      "route": "/actions",
      "fileName": "sms-templates.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/sms-service"
      ],
      "exports": [
        "smsTemplateActions"
      ],
      "components": [
        "SMSTemplate",
        "SMSValidationResult",
        "SMSConfiguration"
      ]
    },
    {
      "path": "src/app/admin/api-management/page.tsx",
      "route": "/admin/api-management",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "../../../components/admin/api-management/APIManagementDashboard"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "APIManagementDashboard"
      ]
    },
    {
      "path": "src/app/admin/backups/page.tsx",
      "route": "/admin/backups",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/admin/backup/WS191BackupDashboard"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "WS191BackupDashboard"
      ]
    },
    {
      "path": "src/app/admin/dashboard/page.tsx",
      "route": "/admin/dashboard",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/demo/DemoBanner",
        "@/lib/demo/config",
        "@/lib/demo/auth"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "AdminStats",
        "ServerIcon",
        "ExclamationTriangleIcon",
        "Card",
        "CardContent",
        "Button",
        "DemoBanner",
        "CogIcon",
        "UsersIcon",
        "BuildingOfficeIcon",
        "CurrencyDollarIcon",
        "ChartBarIcon",
        "CardHeader",
        "CardTitle",
        "Badge",
        "ClockIcon"
      ]
    },
    {
      "path": "src/app/admin/layout.tsx",
      "route": "/admin",
      "fileName": "layout.tsx",
      "type": "layout",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": []
    },
    {
      "path": "src/app/admin/page.tsx",
      "route": "/admin",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Icon",
        "Link"
      ]
    },
    {
      "path": "src/app/api/__tests__/places-details.test.ts",
      "route": "/api/__tests__",
      "fileName": "places-details.test.ts",
      "type": "unknown",
      "imports": [
        "../places/details/[placeId]/route"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/__tests__/places-nearby.test.ts",
      "route": "/api/__tests__",
      "fileName": "places-nearby.test.ts",
      "type": "unknown",
      "imports": [
        "../places/nearby/route"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/__tests__/places-search.test.ts",
      "route": "/api/__tests__",
      "fileName": "places-search.test.ts",
      "type": "unknown",
      "imports": [
        "../places/search/route"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/__tests__/wedding-places.test.ts",
      "route": "/api/__tests__",
      "fileName": "wedding-places.test.ts",
      "type": "unknown",
      "imports": [
        "../places/wedding-places/route"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ab-testing/tests/[id]/actions/route.ts",
      "route": "/api/ab-testing/tests/[id]/actions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ab-testing/tests/route.ts",
      "route": "/api/ab-testing/tests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/activation/alerts/route.ts",
      "route": "/api/activation/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/activation/analytics/route.ts",
      "route": "/api/activation/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/activation/events/route.ts",
      "route": "/api/activation/events",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/activation/status/[userId]/route.ts",
      "route": "/api/activation/status/[userId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/activation-metrics/route.ts",
      "route": "/api/admin/activation-metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase",
        "@/lib/analytics/activation-tracker"
      ],
      "exports": [],
      "components": [
        "CohortActivationData"
      ]
    },
    {
      "path": "src/app/api/admin/alerts/monitoring/route.ts",
      "route": "/api/admin/alerts/monitoring",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/ws-228-alert-system-monitor",
        "@/lib/alerts/alert-performance-tracker"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/api-analytics/realtime/route.ts",
      "route": "/api/admin/api-analytics/realtime",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/rate-limiting",
        "@/lib/middleware/rate-limiting"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/api-analytics/route.ts",
      "route": "/api/admin/api-analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/rate-limiting",
        "@/lib/middleware/rate-limiting"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/api-usage/export/route.ts",
      "route": "/api/admin/api-usage/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/admin/api-usage/metrics/route.ts",
      "route": "/api/admin/api-usage/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/admin/audit-log/route.ts",
      "route": "/api/admin/audit-log",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/admin/auditLogger",
        "@/lib/admin/auth"
      ],
      "exports": [
        "summary"
      ],
      "components": []
    },
    {
      "path": "src/app/api/admin/backup/route.ts",
      "route": "/api/admin/backup",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/backup/backup-scheduler",
        "@/lib/middleware/backup-security",
        "@/lib/security/backup-validator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/backup/trigger/route.ts",
      "route": "/api/admin/backup/trigger",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/backup/backup-scheduler",
        "@/lib/middleware/backup-security",
        "@/lib/security/backup-validator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/database/health/route.ts",
      "route": "/api/admin/database/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/database-health-monitor",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/database/maintenance/history/route.ts",
      "route": "/api/admin/database/maintenance/history",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": [
        "MaintenanceAction",
        "ScheduledMaintenance",
        "MaintenanceRecommendation",
        "Record"
      ]
    },
    {
      "path": "src/app/api/admin/database/optimize/route.ts",
      "route": "/api/admin/database/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": [
        "OptimizationResult"
      ]
    },
    {
      "path": "src/app/api/admin/deployment/rollback/route.ts",
      "route": "/api/admin/deployment/rollback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/DeploymentManager",
        "@/lib/auth/server",
        "@/lib/supabase/server",
        "@/types/deployment"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "RollbackResponse"
      ]
    },
    {
      "path": "src/app/api/admin/environment/features/route.ts",
      "route": "/api/admin/environment/features",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/environment/feature-flag-manager",
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/metrics"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/environment/health/route.ts",
      "route": "/api/admin/environment/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/environment/deployment-validator",
        "@/lib/environment/compliance-checker",
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/metrics"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/environment/secrets/route.ts",
      "route": "/api/admin/environment/secrets",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/admin/environment/validate/route.ts",
      "route": "/api/admin/environment/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/environment/config-validator",
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/metrics"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/health/__tests__/route.test.ts",
      "route": "/api/admin/health/__tests__",
      "fileName": "route.test.ts",
      "type": "unknown",
      "imports": [
        "../route"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/health/route.ts",
      "route": "/api/admin/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/health-monitor",
        "@/lib/middleware/rate-limiting"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/metrics/route.ts",
      "route": "/api/admin/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/executiveMetrics"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/admin/ml/predictions/route.ts",
      "route": "/api/admin/ml/predictions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ml/churn-prediction-model",
        "@/lib/ml/revenue-forecaster",
        "@/lib/ml/viral-growth-predictor",
        "@/lib/ml/ltv-predictor",
        "@/lib/ml/anomaly-detector"
      ],
      "exports": [],
      "components": [
        "ChurnPredictions",
        "RevenueForecast",
        "ViralPredictions",
        "LTVPredictions",
        "AnomalyAlert"
      ]
    },
    {
      "path": "src/app/api/admin/notifications/preferences/route.ts",
      "route": "/api/admin/notifications/preferences",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/admin-notification-service",
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/notifications/send/route.ts",
      "route": "/api/admin/notifications/send",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/admin-notification-service",
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/performance/route.ts",
      "route": "/api/admin/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/metrics",
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/db-performance",
        "@/lib/monitoring/system-metrics",
        "@/middleware/performance"
      ],
      "exports": [
        "GET"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/admin/photography/performance/stats/route.ts",
      "route": "/api/admin/photography/performance/stats",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/monitoring/photography-performance-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/quick-actions/route.ts",
      "route": "/api/admin/quick-actions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/admin/emergencyControls",
        "@/lib/admin/auditLogger",
        "@/lib/admin/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/rate-limits/analytics/route.ts",
      "route": "/api/admin/rate-limits/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/metrics"
      ],
      "exports": [],
      "components": [
        "RateLimitAnalytics",
        "RateLimitTier"
      ]
    },
    {
      "path": "src/app/api/admin/rate-limits/route.ts",
      "route": "/api/admin/rate-limits",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limiter",
        "@/lib/rate-limiter/headers",
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/metrics"
      ],
      "exports": [],
      "components": [
        "AdminRateLimitAction"
      ]
    },
    {
      "path": "src/app/api/admin/security/metrics/route.ts",
      "route": "/api/admin/security/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/system-features/route.ts",
      "route": "/api/admin/system-features",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/admin/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/system-features/toggle/route.ts",
      "route": "/api/admin/system-features/toggle",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/admin/auth",
        "@/lib/admin/auditLogger",
        "@/lib/admin/emergencyControls"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/versions/status/route.ts",
      "route": "/api/admin/versions/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/api-versions"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/viral-metrics/__tests__/integration.test.ts",
      "route": "/api/admin/viral-metrics/__tests__",
      "fileName": "integration.test.ts",
      "type": "unknown",
      "imports": [
        "../route",
        "../bottlenecks/route",
        "../simulate/route",
        "@/lib/database/supabase-admin"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/viral-metrics/bottlenecks/route.ts",
      "route": "/api/admin/viral-metrics/bottlenecks",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/advanced-viral-calculator",
        "@/lib/analytics/viral-optimization-engine",
        "@/lib/database/supabase-admin"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/admin/viral-metrics/route.ts",
      "route": "/api/admin/viral-metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/database/supabase-admin",
        "@/lib/analytics/advanced-viral-calculator",
        "@/lib/analytics/wedding-viral-analyzer",
        "@/lib/analytics/viral-optimization-engine"
      ],
      "exports": [],
      "components": [
        "ViralTrendData",
        "CohortViralData"
      ]
    },
    {
      "path": "src/app/api/admin/viral-metrics/simulate/route.ts",
      "route": "/api/admin/viral-metrics/simulate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/database/supabase-admin",
        "@/lib/analytics/viral-optimization-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/admin/webhooks/process/route.ts",
      "route": "/api/admin/webhooks/process",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/admin-notification-service",
        "@/lib/logging/Logger"
      ],
      "exports": [
        "AdminWebhookProcessorService"
      ],
      "components": []
    },
    {
      "path": "src/app/api/ai/cache/clear/route.ts",
      "route": "/api/ai/cache/clear",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/cache/config/route.ts",
      "route": "/api/ai/cache/config",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "CacheConfig"
      ]
    },
    {
      "path": "src/app/api/ai/cache/performance/route.ts",
      "route": "/api/ai/cache/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "CachePerformance"
      ]
    },
    {
      "path": "src/app/api/ai/cache/seasonal/route.ts",
      "route": "/api/ai/cache/seasonal",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "SeasonalData"
      ]
    },
    {
      "path": "src/app/api/ai/cache/stats/route.ts",
      "route": "/api/ai/cache/stats",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/cache/warm/route.ts",
      "route": "/api/ai/cache/warm",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/email-templates/generate/route.ts",
      "route": "/api/ai/email-templates/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/validation/middleware",
        "@/lib/ai/email-template-generator",
        "@/lib/supabase/server"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ai/email-templates/library/route.ts",
      "route": "/api/ai/email-templates/library",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/email-templates/personalize/route.ts",
      "route": "/api/ai/email-templates/personalize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/validation/middleware",
        "@/lib/supabase/server"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ai/feature-requests/analyze/route.ts",
      "route": "/api/ai/feature-requests/analyze",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/feature-management/wedding-semantic-analyzer",
        "@/lib/ai/feature-management/intelligent-rice-scorer",
        "@/lib/ai/feature-management/content-analysis-pipeline",
        "@/lib/ai/feature-management/monitoring/performance-monitor",
        "@/lib/logging/Logger",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/feature-requests/route.ts",
      "route": "/api/ai/feature-requests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/generate-email-templates/route.ts",
      "route": "/api/ai/generate-email-templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/middleware/audit",
        "@/types/ai-email"
      ],
      "exports": [],
      "components": [
        "AIEmailVariant"
      ]
    },
    {
      "path": "src/app/api/ai/insights/predictions/route.ts",
      "route": "/api/ai/insights/predictions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/feature-management/predictive-analytics-engine",
        "@/lib/ai/feature-management/monitoring/performance-monitor",
        "@/lib/logging/Logger",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/journey/optimize/route.ts",
      "route": "/api/ai/journey/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/journey-suggestions-engine",
        "@/lib/validation/journey-ai-schemas",
        "@/lib/validation/middleware",
        "@/lib/rate-limit"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/ai/journey/patterns/route.ts",
      "route": "/api/ai/journey/patterns",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/journey-ai-schemas",
        "@/lib/validation/middleware",
        "@/lib/rate-limit"
      ],
      "exports": [
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/ai/journey/suggest/route.ts",
      "route": "/api/ai/journey/suggest",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/journey-suggestions-engine",
        "@/lib/validation/journey-ai-schemas",
        "@/lib/validation/middleware",
        "@/lib/rate-limit"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/ai/knowledge/categories/route.ts",
      "route": "/api/ai/knowledge/categories",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/knowledge-base-engine",
        "@/lib/ai/content-classifier",
        "@/lib/logger",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/knowledge/route.ts",
      "route": "/api/ai/knowledge",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/knowledge-base-engine",
        "@/lib/logger",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/knowledge/stats/route.ts",
      "route": "/api/ai/knowledge/stats",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/knowledge-base-engine",
        "@/lib/logger",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/optimize/route.ts",
      "route": "/api/ai/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/wedding-optimization-engine"
      ],
      "exports": [],
      "components": [
        "RateLimitResult",
        "WeddingContext"
      ]
    },
    {
      "path": "src/app/api/ai/personalize/batch/route.ts",
      "route": "/api/ai/personalize/batch",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/personalization-engine",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/personalize/route.ts",
      "route": "/api/ai/personalize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/personalization-engine",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/personalize/variables/route.ts",
      "route": "/api/ai/personalize/variables",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/personalization-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/personalize-email/route.ts",
      "route": "/api/ai/personalize-email",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit",
        "@/lib/middleware/audit",
        "@/types/ai-email"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai/photography/error-handler/route.ts",
      "route": "/api/ai/photography/error-handler",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../../lib/ai/photography/error-handler"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ai/recommendations/route.ts",
      "route": "/api/ai/recommendations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/wedding-optimization-engine"
      ],
      "exports": [],
      "components": [
        "RateLimitResult",
        "WeddingContext"
      ]
    },
    {
      "path": "src/app/api/ai-cache/invalidate/route.ts",
      "route": "/api/ai-cache/invalidate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai-cache/WeddingAICacheService",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-cache/metrics/route.ts",
      "route": "/api/ai-cache/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/caching/ai-cache-orchestrator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-cache/optimize/route.ts",
      "route": "/api/ai-cache/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/caching/ai-cache-orchestrator",
        "@/lib/ai/caching/types"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-cache/predict/route.ts",
      "route": "/api/ai-cache/predict",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/caching/ai-cache-orchestrator",
        "@/lib/ai/caching/types"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-cache/preload/route.ts",
      "route": "/api/ai-cache/preload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai-cache/WeddingAICacheService",
        "@/lib/ai-cache/LocationBasedCachePartitioner",
        "@/lib/ai-cache/VendorCacheOptimizer",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-cache/query/route.ts",
      "route": "/api/ai-cache/query",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai-cache/WeddingAICacheService",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-cache/seasonal-scaling/route.ts",
      "route": "/api/ai-cache/seasonal-scaling",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai-cache/SeasonalScalingAutomator",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": [
        "ScalingAction"
      ]
    },
    {
      "path": "src/app/api/ai-cache/security/route.ts",
      "route": "/api/ai-cache/security",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai-cache/CacheSecurityManager",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-cache/statistics/route.ts",
      "route": "/api/ai-cache/statistics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai-cache/WeddingAICacheService",
        "@/lib/ai-cache/LocationBasedCachePartitioner",
        "@/lib/ai-cache/VendorCacheOptimizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-email-templates/route.ts",
      "route": "/api/ai-email-templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/ai-email-generator",
        "@/lib/services/email-personalization-engine",
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ai-features/billing/route.ts",
      "route": "/api/ai-features/billing",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/dual-system/CostTrackingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-features/chat/route.ts",
      "route": "/api/ai-features/chat",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/chatbot"
      ],
      "exports": [
        "dynamic"
      ],
      "components": [
        "ChatbotMessage"
      ]
    },
    {
      "path": "src/app/api/ai-features/config/route.ts",
      "route": "/api/ai-features/config",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/dual-system/ClientAIService",
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-features/execute/route.ts",
      "route": "/api/ai-features/execute",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/dual-system/AIFeatureRouter",
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-features/limits/route.ts",
      "route": "/api/ai-features/limits",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/dual-system/CostTrackingService",
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-features/migrate/route.ts",
      "route": "/api/ai-features/migrate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/dual-system/CostTrackingService",
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-features/test-key/route.ts",
      "route": "/api/ai-features/test-key",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/dual-system/ClientAIService",
        "@/lib/logging/Logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-features/usage/route.ts",
      "route": "/api/ai-features/usage",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/dual-system/CostTrackingService",
        "@/lib/logging/Logger"
      ],
      "exports": [
        "range"
      ],
      "components": []
    },
    {
      "path": "src/app/api/ai-optimization/batch-schedule/route.ts",
      "route": "/api/ai-optimization/batch-schedule",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/optimization/CostOptimizationEngine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-optimization/budget/status/route.ts",
      "route": "/api/ai-optimization/budget/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/optimization/BudgetTrackingEngine",
        "@/lib/rate-limiter",
        "@/lib/security/ai-cost-optimization-security"
      ],
      "exports": [
        "GET"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ai-optimization/cache-analytics/route.ts",
      "route": "/api/ai-optimization/cache-analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/optimization/SmartCacheOptimizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-optimization/config/route.ts",
      "route": "/api/ai-optimization/config",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-optimization/dashboard/route.ts",
      "route": "/api/ai-optimization/dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "NextResponse",
        "AIOptimizationAPIResponse"
      ]
    },
    {
      "path": "src/app/api/ai-optimization/emergency-disable/route.ts",
      "route": "/api/ai-optimization/emergency-disable",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/optimization/BudgetTrackingEngine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-optimization/optimize/route.ts",
      "route": "/api/ai-optimization/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/optimization/CostOptimizationEngine",
        "@/lib/ai/optimization/BudgetTrackingEngine",
        "@/lib/cache/ai-optimization/SmartCacheOptimizer",
        "@/lib/rate-limiter",
        "@/lib/security/ai-cost-optimization-security"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ai-optimization/projections/route.ts",
      "route": "/api/ai-optimization/projections",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/optimization/BudgetTrackingEngine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-optimization/savings/route.ts",
      "route": "/api/ai-optimization/savings",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/optimization/SmartCacheOptimizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-pdf-analysis/analyze/route.ts",
      "route": "/api/ai-pdf-analysis/analyze",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/pdf-analysis/ai-pdf-analysis-service",
        "@/lib/ai/pdf-analysis/types"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ai-pdf-analysis/corrections/route.ts",
      "route": "/api/ai-pdf-analysis/corrections",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/pdf-analysis/ai-pdf-analysis-service",
        "@/lib/ai/pdf-analysis/types"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/alerts/performance/route.ts",
      "route": "/api/alerts/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/alerts/route.ts",
      "route": "/api/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/alerts",
        "@/lib/alerts/channels/MultiChannelOrchestrator",
        "@/lib/monitoring/alerts"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/alerts/ws/route.ts",
      "route": "/api/alerts/ws",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/alerts",
        "@/lib/monitoring/logger",
        "@/lib/websocket/alert-broadcast"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/alerts/route.ts",
      "route": "/api/analytics/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/cac/channels/route.ts",
      "route": "/api/analytics/cac/channels",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/cac-calculator"
      ],
      "exports": [],
      "components": [
        "AcquisitionChannel",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/analytics/client-dashboard/route.ts",
      "route": "/api/analytics/client-dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/cohorts/route.ts",
      "route": "/api/analytics/cohorts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/cohort-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/custom-metrics/route.ts",
      "route": "/api/analytics/custom-metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/dashboard/behavior/route.ts",
      "route": "/api/analytics/dashboard/behavior",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/dashboard/features/route.ts",
      "route": "/api/analytics/dashboard/features",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/dashboard/metrics/route.ts",
      "route": "/api/analytics/dashboard/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/dashboard/route.ts",
      "route": "/api/analytics/dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/engagement/alerts/route.ts",
      "route": "/api/analytics/engagement/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/analytics/engagement-scoring"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/engagement/dashboard/route.ts",
      "route": "/api/analytics/engagement/dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/analytics/engagement-scoring"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/engagement/track/route.ts",
      "route": "/api/analytics/engagement/track",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/analytics/engagement-scoring",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/executive/route.ts",
      "route": "/api/analytics/executive",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/analytics/executiveMetrics"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/analytics/export/route.ts",
      "route": "/api/analytics/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/journeys/[id]/route.ts",
      "route": "/api/analytics/journeys/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/ltv/batch/route.ts",
      "route": "/api/analytics/ltv/batch",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/ltv-prediction-engine"
      ],
      "exports": [],
      "components": [
        "BatchLTVPredictionResult",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/analytics/ltv/predict/route.ts",
      "route": "/api/analytics/ltv/predict",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/ltv-prediction-engine"
      ],
      "exports": [],
      "components": [
        "SegmentBenchmark",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/analytics/metrics/route.ts",
      "route": "/api/analytics/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/analytics-engine",
        "@/lib/analytics/wedding-business-intelligence",
        "@/lib/analytics/database-optimization",
        "@/lib/supabase"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/mrr/route.ts",
      "route": "/api/analytics/mrr",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/analytics/performance/route.ts",
      "route": "/api/analytics/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/performance/session/route.ts",
      "route": "/api/analytics/performance/session",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/progress/route.ts",
      "route": "/api/analytics/progress",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": [
        "ProgressMetrics"
      ]
    },
    {
      "path": "src/app/api/analytics/realtime/route.ts",
      "route": "/api/analytics/realtime",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/realtime-websocket-service",
        "@/lib/analytics/data-processing-pipeline",
        "@/lib/supabase"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/responses/route.ts",
      "route": "/api/analytics/responses",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/redis"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/reviews/campaigns/[campaignId]/route.ts",
      "route": "/api/analytics/reviews/campaigns/[campaignId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/caching/analytics-cache",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/reviews/export/route.ts",
      "route": "/api/analytics/reviews/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/reviews/overview/[supplierId]/route.ts",
      "route": "/api/analytics/reviews/overview/[supplierId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/database/analytics-queries",
        "@/lib/caching/analytics-cache",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/rum/route.ts",
      "route": "/api/analytics/rum",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/seo/route.ts",
      "route": "/api/analytics/seo",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/google-search-console"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/seo/sync/route.ts",
      "route": "/api/analytics/seo/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/google-search-console"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/test/route.ts",
      "route": "/api/analytics/test",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/track/route.ts",
      "route": "/api/analytics/track",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/database/supabase-admin"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/vitals/route.ts",
      "route": "/api/analytics/vitals",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/metrics",
        "@/lib/monitoring/structured-logger",
        "@/middleware/performance"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/analytics/web-vitals/route.ts",
      "route": "/api/analytics/web-vitals",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/wedding/[id]/export/route.ts",
      "route": "/api/analytics/wedding/[id]/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/analytics/wedding-metrics"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/wedding/[id]/route.ts",
      "route": "/api/analytics/wedding/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/wedding-metrics",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/analytics/wedding-insights/route.ts",
      "route": "/api/analytics/wedding-insights",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/wedding-business-intelligence",
        "@/lib/analytics/predictive-analytics",
        "@/lib/analytics/database-optimization",
        "@/lib/supabase"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/api-keys/[id]/rotate/route.ts",
      "route": "/api/api-keys/[id]/rotate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/apiKeyService",
        "@/lib/auth/apiKeyAuth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/api-keys/[id]/route.ts",
      "route": "/api/api-keys/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/apiKeyService",
        "@/lib/auth/apiKeyAuth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/api-keys/route.ts",
      "route": "/api/api-keys",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/apiKeyService",
        "@/lib/auth/apiKeyAuth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/api-keys/scopes/route.ts",
      "route": "/api/api-keys/scopes",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/apiKeyService",
        "@/lib/auth/apiKeyAuth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/app-store/analytics/route.ts",
      "route": "/api/app-store/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/app/api/auth/[...nextauth]/route",
        "@/lib/supabase/server"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/app-store/generate/route.ts",
      "route": "/api/app-store/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/app/api/auth/[...nextauth]/route",
        "@/lib/app-store/asset-generator",
        "@/lib/supabase/server"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/app-store/submit/route.ts",
      "route": "/api/app-store/submit",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/app/api/auth/[...nextauth]/route",
        "@/lib/app-store/store-apis",
        "@/lib/supabase/server"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/app-store/webhooks/route.ts",
      "route": "/api/app-store/webhooks",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/app-store/submission-orchestrator",
        "@/lib/integrations/NotificationService"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/audit/analytics/route.ts",
      "route": "/api/audit/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/audit/compliance/reports/route.ts",
      "route": "/api/audit/compliance/reports",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/audit/audit-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/audit/events/route.ts",
      "route": "/api/audit/events",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/audit/performance-audit-logger",
        "@/lib/audit/integration-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/audit/investigation/patterns/route.ts",
      "route": "/api/audit/investigation/patterns",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/audit/audit-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/audit/investigation/trace/route.ts",
      "route": "/api/audit/investigation/trace",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/audit/audit-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/audit/logs/route.ts",
      "route": "/api/audit/logs",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/audit/audit-service",
        "@/lib/audit/audit-logger",
        "@/lib/audit/log-analyzer",
        "@/lib/supabase/server",
        "@/lib/utils/logger"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/audit/monitoring/metrics/route.ts",
      "route": "/api/audit/monitoring/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/audit/audit-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/audit/reports/route.ts",
      "route": "/api/audit/reports",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/audit/storage/route.ts",
      "route": "/api/audit/storage",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/audit/storage/query-service",
        "@/lib/audit/storage/retention-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auth/[...nextauth]/route.ts",
      "route": "/api/auth/[...nextauth]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auth/forgot-password/route.ts",
      "route": "/api/auth/forgot-password",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/services/email-connector",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/auth/logout/route.ts",
      "route": "/api/auth/logout",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/enterprise-oauth-system",
        "@/lib/comprehensive-security-middleware"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/auth/mfa/challenge/route.ts",
      "route": "/api/auth/mfa/challenge",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/mfa"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auth/mfa/enroll/route.ts",
      "route": "/api/auth/mfa/enroll",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/mfa"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auth/mfa/unenroll/route.ts",
      "route": "/api/auth/mfa/unenroll",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/mfa"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auth/mfa/verify/route.ts",
      "route": "/api/auth/mfa/verify",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/mfa"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auth/refresh/route.ts",
      "route": "/api/auth/refresh",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/enterprise-oauth-system",
        "@/lib/comprehensive-security-middleware"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/auth/reset-password/route.ts",
      "route": "/api/auth/reset-password",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/services/email-connector",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/auth/session/route.ts",
      "route": "/api/auth/session",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/session-security",
        "@/lib/enhanced-auth-middleware"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auth/signup/route.ts",
      "route": "/api/auth/signup",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/coupleAuthService",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auto-population/mappings/auto-detect/route.ts",
      "route": "/api/auto-population/mappings/auto-detect",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/lib/services/auto-population-service",
        "@/lib/rate-limit",
        "@/lib/validations/auto-population-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auto-population/mappings/route.ts",
      "route": "/api/auto-population/mappings",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/lib/rate-limit",
        "@/lib/validations/auto-population-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auto-population/populate/route.ts",
      "route": "/api/auto-population/populate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/lib/services/auto-population-service",
        "@/lib/rate-limit",
        "@/lib/validations/auto-population-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/auto-population/session/[sessionId]/route.ts",
      "route": "/api/auto-population/session/[sessionId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/lib/services/auto-population-service",
        "@/lib/rate-limit",
        "@/lib/validations/auto-population-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/backup/automated/route.ts",
      "route": "/api/backup/automated",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/backup/AutomatedBackupOrchestrator",
        "@/lib/services/backup/WeddingDateBackupPriority"
      ],
      "exports": [
        "runtime"
      ],
      "components": []
    },
    {
      "path": "src/app/api/backup/configurations/[id]/route.ts",
      "route": "/api/backup/configurations/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "T",
        "BackupConfiguration",
        "NextResponse",
        "ApiResponse"
      ]
    },
    {
      "path": "src/app/api/backup/configurations/route.ts",
      "route": "/api/backup/configurations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "T",
        "NextResponse",
        "ApiResponse",
        "BackupConfiguration"
      ]
    },
    {
      "path": "src/app/api/backup/emergency-restore/route.ts",
      "route": "/api/backup/emergency-restore",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/backup/backup-engine",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "T",
        "NextResponse",
        "RestoreResult"
      ]
    },
    {
      "path": "src/app/api/backup/execute/route.ts",
      "route": "/api/backup/execute",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/backup/BackupOrchestrationService"
      ],
      "exports": [],
      "components": [
        "Record",
        "T"
      ]
    },
    {
      "path": "src/app/api/backup/manual/route.ts",
      "route": "/api/backup/manual",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/backup/DisasterRecoveryEngine",
        "@/lib/services/backup/BackupEncryptionService",
        "@/lib/services/backup/DataPrioritizationService"
      ],
      "exports": [
        "runtime"
      ],
      "components": []
    },
    {
      "path": "src/app/api/backup/status/route.ts",
      "route": "/api/backup/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/backup/validation/route.ts",
      "route": "/api/backup/validation",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/backup/BackupValidationService",
        "@/lib/services/backup/BackupEncryptionService"
      ],
      "exports": [
        "runtime",
        "maxDuration"
      ],
      "components": []
    },
    {
      "path": "src/app/api/backups/create/route.ts",
      "route": "/api/backups/create",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas",
        "@/lib/backup/backup-orchestrator"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/backups/recovery-points/route.ts",
      "route": "/api/backups/recovery-points",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/backups/status/route.ts",
      "route": "/api/backups/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas"
      ],
      "exports": [
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/batch/route.ts",
      "route": "/api/batch",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/billing/monitoring/route.ts",
      "route": "/api/billing/monitoring",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/billing/revenue-performance-monitor"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/billing/payment-recovery/route.ts",
      "route": "/api/billing/payment-recovery",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/billing/payment-error-handler"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/billing/subscription/downgrade/route.ts",
      "route": "/api/billing/subscription/downgrade",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/subscriptionService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/billing/subscription/route.ts",
      "route": "/api/billing/subscription",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/subscriptionService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/billing/subscription/upgrade/route.ts",
      "route": "/api/billing/subscription/upgrade",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/subscriptionService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/billing/tiers/route.ts",
      "route": "/api/billing/tiers",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/billing/usage/ai/route.ts",
      "route": "/api/billing/usage/ai",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/subscriptionService",
        "@/lib/billing/featureGating"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/billing/usage/route.ts",
      "route": "/api/billing/usage",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/subscriptionService",
        "@/lib/billing/featureGating"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/booking/[id]/preparation/route.ts",
      "route": "/api/booking/[id]/preparation",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/meeting-preparation/workflow-service",
        "@/lib/supabase/server",
        "@/lib/security/booking-security"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/booking/confirm/route.ts",
      "route": "/api/booking/confirm",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/notifications/booking-confirmations",
        "@/lib/supabase/server",
        "@/lib/security/booking-security"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/booking/reminders/route.ts",
      "route": "/api/booking/reminders",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/notifications/booking-confirmations",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/booking/tasks/remind/route.ts",
      "route": "/api/booking/tasks/remind",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/meeting-preparation/workflow-service",
        "@/lib/security/booking-security"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/branding/route.ts",
      "route": "/api/branding",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/branding"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/branding/upload/route.ts",
      "route": "/api/branding/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/branding"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/broadcast/acknowledge/route.ts",
      "route": "/api/broadcast/acknowledge",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/broadcast/broadcast-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/broadcast/inbox/route.ts",
      "route": "/api/broadcast/inbox",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/broadcast/broadcast-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/broadcast/preferences/route.ts",
      "route": "/api/broadcast/preferences",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/broadcast/send/route.ts",
      "route": "/api/broadcast/send",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/broadcast/broadcast-manager",
        "@/lib/auth/wedding-access",
        "@/lib/rate-limiting/broadcast-limits"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budget/categories/route.ts",
      "route": "/api/budget/categories",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budget/categories/wedding/route.ts",
      "route": "/api/budget/categories/wedding",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budget/market-pricing/route.ts",
      "route": "/api/budget/market-pricing",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit",
        "@/lib/services/market-data-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budget/optimize/route.ts",
      "route": "/api/budget/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit",
        "@/lib/services/budget-calculation-service",
        "@/lib/services/ai-budget-optimizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budget/transactions/route.ts",
      "route": "/api/budget/transactions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budgets/[weddingId]/analytics/route.ts",
      "route": "/api/budgets/[weddingId]/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budgets/[weddingId]/export/route.ts",
      "route": "/api/budgets/[weddingId]/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budgets/[weddingId]/forecast/route.ts",
      "route": "/api/budgets/[weddingId]/forecast",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/budgets/[weddingId]/route.ts",
      "route": "/api/budgets/[weddingId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/validation/middleware",
        "@/lib/validations/budget-schemas"
      ],
      "exports": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "components": []
    },
    {
      "path": "src/app/api/calendar/oauth/[provider]/authorize/route.ts",
      "route": "/api/calendar/oauth/[provider]/authorize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/calendar/oauth-service"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/calendar/outlook/auth/route.ts",
      "route": "/api/calendar/outlook/auth",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/microsoft-graph-client"
      ],
      "exports": [
        "POST",
        "DELETE"
      ],
      "components": []
    },
    {
      "path": "src/app/api/calendar/outlook/sync/route.ts",
      "route": "/api/calendar/outlook/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas",
        "@/lib/integrations/microsoft-graph-client",
        "@/lib/services/outlook-sync-service"
      ],
      "exports": [
        "POST",
        "PUT"
      ],
      "components": []
    },
    {
      "path": "src/app/api/calendar/outlook/webhook/route.ts",
      "route": "/api/calendar/outlook/webhook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/microsoft-graph-client"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/calendar/sync/route.ts",
      "route": "/api/calendar/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/calendar/timeline-sync-service"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/calendar/webhooks/[provider]/route.ts",
      "route": "/api/calendar/webhooks/[provider]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/calendar/timeline-sync-service"
      ],
      "exports": [],
      "components": [
        "WebhookValidationResult",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/catering/dietary/analysis/route.ts",
      "route": "/api/catering/dietary/analysis",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/OpenAIDietaryService",
        "@/lib/security/withSecureValidation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/catering/dietary/menu/route.ts",
      "route": "/api/catering/dietary/menu",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/OpenAIDietaryService",
        "@/lib/security/withSecureValidation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/catering/dietary/requirements/[id]/route.ts",
      "route": "/api/catering/dietary/requirements/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation"
      ],
      "exports": [
        "GET",
        "PATCH",
        "DELETE"
      ],
      "components": []
    },
    {
      "path": "src/app/api/catering/dietary/requirements/route.ts",
      "route": "/api/catering/dietary/requirements",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/catering/dietary/route.ts",
      "route": "/api/catering/dietary",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/catering/dietary/summary/[wedding_id]/route.ts",
      "route": "/api/catering/dietary/summary/[wedding_id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/catering/guests/sync/route.ts",
      "route": "/api/catering/guests/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/GuestManagementIntegration",
        "@/lib/integrations/DietaryNotificationService",
        "@/lib/security/withSecureValidation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/catering/menu/generate/route.ts",
      "route": "/api/catering/menu/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/catering/menu/validate/route.ts",
      "route": "/api/catering/menu/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation",
        "@/lib/services/DietaryAnalysisService"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/chat/messages/route.ts",
      "route": "/api/chat/messages",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/chat"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/chat/rooms/route.ts",
      "route": "/api/chat/rooms",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/chat"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/chatbot/conversations/[id]/messages/route.ts",
      "route": "/api/chatbot/conversations/[id]/messages",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/chatbot-auth",
        "@/lib/database/chatbot-database-service",
        "@/lib/validation/chatbot-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/chatbot/conversations/[id]/route.ts",
      "route": "/api/chatbot/conversations/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/chatbot-auth",
        "@/lib/database/chatbot-database-service",
        "@/lib/validation/chatbot-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/chatbot/conversations/route.ts",
      "route": "/api/chatbot/conversations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/chatbot-auth",
        "@/lib/database/chatbot-database-service",
        "@/lib/validation/chatbot-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/chatbot/escalate/route.ts",
      "route": "/api/chatbot/escalate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/chatbot"
      ],
      "exports": [
        "dynamic"
      ],
      "components": [
        "HumanAgent"
      ]
    },
    {
      "path": "src/app/api/chatbot/realtime/route.ts",
      "route": "/api/chatbot/realtime",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/chatbot-auth",
        "@/lib/services/chatbot-realtime-service",
        "@/lib/validation/chatbot-schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/chatbot/route.ts",
      "route": "/api/chatbot",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/chatbot",
        "@/lib/billing/usage-tracking-service"
      ],
      "exports": [
        "dynamic"
      ],
      "components": [
        "Intent",
        "KnowledgeResult"
      ]
    },
    {
      "path": "src/app/api/churn/predict/route.ts",
      "route": "/api/churn/predict",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ml/churn-prediction-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ci-cd/performance/status/[buildId]/route.ts",
      "route": "/api/ci-cd/performance/status/[buildId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../../../lib/ci-cd/performance-gate"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ci-cd/performance/validate/route.ts",
      "route": "/api/ci-cd/performance/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../../lib/ci-cd/performance-gate",
        "../../../../../lib/ci-cd/github-actions-integration",
        "../../../../../lib/ci-cd/vercel-deployment-hook"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/clients/[id]/activities/route.ts",
      "route": "/api/clients/[id]/activities",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/next15-params",
        "@/lib/security/input-validation",
        "@/lib/security/rbac-system",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/clients/[id]/documents/route.ts",
      "route": "/api/clients/[id]/documents",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/next15-params",
        "@/lib/security/input-validation",
        "@/lib/security/rbac-system",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/clients/[id]/milestones/route.ts",
      "route": "/api/clients/[id]/milestones",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/section-visibility-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/clients/[id]/notes/route.ts",
      "route": "/api/clients/[id]/notes",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/next15-params",
        "@/lib/security/input-validation",
        "@/lib/security/rbac-system",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/clients/[id]/route.ts",
      "route": "/api/clients/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/next15-params",
        "@/lib/security/input-validation",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/clients/[id]/tags/route.ts",
      "route": "/api/clients/[id]/tags",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/clients/analytics/historical/route.ts",
      "route": "/api/clients/analytics/historical",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/analytics/client-analytics-engine"
      ],
      "exports": [],
      "components": [
        "ClientSegmentation"
      ]
    },
    {
      "path": "src/app/api/clients/analytics/performance/route.ts",
      "route": "/api/clients/analytics/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [
        "performanceMonitor",
        "recordAnalyticsPerformance"
      ],
      "components": [
        "QueryPerformanceMetric"
      ]
    },
    {
      "path": "src/app/api/clients/analytics/route.ts",
      "route": "/api/clients/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/clients/bulk/route.ts",
      "route": "/api/clients/bulk",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/notifications/engine"
      ],
      "exports": [],
      "components": [
        "BulkOperationResult"
      ]
    },
    {
      "path": "src/app/api/clients/import/route.ts",
      "route": "/api/clients/import",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": [
        "ImportClientData"
      ]
    },
    {
      "path": "src/app/api/clients/route.ts",
      "route": "/api/clients",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validations/client",
        "@/lib/rate-limit",
        "@/lib/security/input-validation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/cloud/providers/[id]/regions/route.ts",
      "route": "/api/cloud/providers/[id]/regions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/cloud-orchestration-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/cloud/providers/[id]/route.ts",
      "route": "/api/cloud/providers/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/cloud-orchestration-service",
        "@/lib/validations/cloud-infrastructure"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/cloud/providers/[id]/services/route.ts",
      "route": "/api/cloud/providers/[id]/services",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/cloud-orchestration-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/cloud/providers/[id]/sync/route.ts",
      "route": "/api/cloud/providers/[id]/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/cloud-orchestration-service",
        "@/lib/validations/cloud-infrastructure"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/cloud/providers/[id]/test-connection/route.ts",
      "route": "/api/cloud/providers/[id]/test-connection",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/cloud-orchestration-service",
        "@/lib/validations/cloud-infrastructure"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/cloud/providers/route.ts",
      "route": "/api/cloud/providers",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/cloud-orchestration-service",
        "@/lib/validations/cloud-infrastructure"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/conflicts/route.ts",
      "route": "/api/collaboration/conflicts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/collaboration/conflict-resolver",
        "@/lib/collaboration/data-sync",
        "@/lib/collaboration/types/collaboration"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/documents/route.ts",
      "route": "/api/collaboration/documents",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit",
        "@/lib/services/yjs-document-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/events/[weddingId]/route.ts",
      "route": "/api/collaboration/events/[weddingId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/collaboration/event-streaming",
        "@/lib/collaboration/websocket-manager",
        "@/lib/collaboration/types/collaboration"
      ],
      "exports": [],
      "components": [
        "EventMetadata"
      ]
    },
    {
      "path": "src/app/api/collaboration/join/[weddingId]/route.ts",
      "route": "/api/collaboration/join/[weddingId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/collaboration/websocket-manager",
        "@/lib/collaboration/presence-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/presence/[weddingId]/route.ts",
      "route": "/api/collaboration/presence/[weddingId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/collaboration/presence-manager",
        "@/lib/collaboration/types/collaboration"
      ],
      "exports": [],
      "components": [
        "PresenceState"
      ]
    },
    {
      "path": "src/app/api/collaboration/save/route.ts",
      "route": "/api/collaboration/save",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/sessions/route.ts",
      "route": "/api/collaboration/sessions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/sync/[weddingId]/route.ts",
      "route": "/api/collaboration/sync/[weddingId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/collaboration/data-sync",
        "@/lib/collaboration/conflict-resolver",
        "@/lib/collaboration/types/collaboration"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/sync/route.ts",
      "route": "/api/collaboration/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/collaboration/websocket/route.ts",
      "route": "/api/collaboration/websocket",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/websocket/collaboration-websocket-handler"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/ab-testing/route.ts",
      "route": "/api/communications/ab-testing",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/activity-feed/route.ts",
      "route": "/api/communications/activity-feed",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/database"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/analytics/route.ts",
      "route": "/api/communications/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/compliance/route.ts",
      "route": "/api/communications/compliance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/conversations/route.ts",
      "route": "/api/communications/conversations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/database"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/messages/[id]/read/route.ts",
      "route": "/api/communications/messages/[id]/read",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/messages/route.ts",
      "route": "/api/communications/messages",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/database",
        "@/lib/security/input-validation",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/notifications/email/route.ts",
      "route": "/api/communications/notifications/email",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/database"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/notifications/webhooks/resend/route.ts",
      "route": "/api/communications/notifications/webhooks/resend",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/email/service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/preferences/route.ts",
      "route": "/api/communications/preferences",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/communications/CommunicationPreferenceManager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/schedule/route.ts",
      "route": "/api/communications/schedule",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/security/input-validation",
        "@/lib/communications/personalization-engine",
        "@/lib/communications/bulk-queue"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/send/route.ts",
      "route": "/api/communications/send",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/security/input-validation",
        "@/lib/email/service",
        "@/lib/sms/twilio",
        "@/lib/communications/personalization-engine",
        "@/lib/communications/bulk-queue"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/status/[id]/route.ts",
      "route": "/api/communications/status/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/security/input-validation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/templates/bulk/route.ts",
      "route": "/api/communications/templates/bulk",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [
        "exportData"
      ],
      "components": []
    },
    {
      "path": "src/app/api/communications/templates/route.ts",
      "route": "/api/communications/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/security/input-validation",
        "@/lib/communications/personalization-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/communications/test/route.ts",
      "route": "/api/communications/test",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/security/input-validation",
        "@/lib/communications/personalization-engine",
        "@/lib/email/service",
        "@/lib/sms/twilio"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/content/media/route.ts",
      "route": "/api/content/media",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/content/route.ts",
      "route": "/api/content",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/content/search/route.ts",
      "route": "/api/content/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/content/templates/route.ts",
      "route": "/api/content/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/content/versions/route.ts",
      "route": "/api/content/versions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/contracts/[id]/deliverables/route.ts",
      "route": "/api/contracts/[id]/deliverables",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/contracts/[id]/milestones/route.ts",
      "route": "/api/contracts/[id]/milestones",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/contracts/[id]/revisions/route.ts",
      "route": "/api/contracts/[id]/revisions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/contracts/route.ts",
      "route": "/api/contracts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/contracts/upload/route.ts",
      "route": "/api/contracts/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/core-fields/extract/route.ts",
      "route": "/api/core-fields/extract",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/types/core-fields"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/core-fields/populate/route.ts",
      "route": "/api/core-fields/populate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/lib/core-fields-manager",
        "@/lib/rate-limit",
        "@/lib/validations/core-fields"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/core-fields/route.ts",
      "route": "/api/core-fields",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/comprehensive-security-middleware"
      ],
      "exports": [
        "GET",
        "POST",
        "PUT",
        "DELETE"
      ],
      "components": [
        "NextResponse",
        "CoreFieldData"
      ]
    },
    {
      "path": "src/app/api/couples/notifications/generate-shareable/route.ts",
      "route": "/api/couples/notifications/generate-shareable",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/couples/notifications/route.ts",
      "route": "/api/couples/notifications",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/services/couples/CoupleNotificationService",
        "@/lib/supabase"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/couples/notifications/stream/route.ts",
      "route": "/api/couples/notifications/stream",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/services/couples/CoupleNotificationService",
        "@/lib/supabase"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/creators/onboarding/[applicationId]/complete-step/route.ts",
      "route": "/api/creators/onboarding/[applicationId]/complete-step",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/api-middleware",
        "@/lib/services/stripeConnectService",
        "@/lib/services/kycVerificationService",
        "@/lib/services/secureDocumentService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/creators/onboarding/route.ts",
      "route": "/api/creators/onboarding",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/api-middleware",
        "@/lib/crypto-utils",
        "@/lib/services/stripeConnectService",
        "@/lib/services/kycVerificationService",
        "@/lib/services/secureDocumentService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/creators/stripe-setup/[applicationId]/route.ts",
      "route": "/api/creators/stripe-setup/[applicationId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/api-middleware",
        "@/lib/services/stripeConnectService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/crm/integrations/[id]/sync/route.ts",
      "route": "/api/crm/integrations/[id]/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/services/CRMSyncJobProcessor"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/crm/integrations/route.ts",
      "route": "/api/crm/integrations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/services/CRMIntegrationService"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/crm/providers/route.ts",
      "route": "/api/crm/providers",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/types/crm"
      ],
      "exports": [
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/cron/health-check/route.ts",
      "route": "/api/cron/health-check",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [
        "runtime",
        "maxDuration"
      ],
      "components": [
        "HealthCheck",
        "HealthReport"
      ]
    },
    {
      "path": "src/app/api/cron/rsvp-reminders/route.ts",
      "route": "/api/cron/rsvp-reminders",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/rsvp-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/csrf-token/route.ts",
      "route": "/api/csrf-token",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/csrf-token"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/health-interventions/route.ts",
      "route": "/api/customer-success/health-interventions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/health-intervention-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/health-score/route.ts",
      "route": "/api/customer-success/health-score",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/validation/middleware",
        "@/lib/services/customer-health-service",
        "@/lib/services/health-scoring-engine",
        "@/lib/ratelimit"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/health-score-optimized/route.ts",
      "route": "/api/customer-success/health-score-optimized",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/validation/middleware",
        "@/lib/supabase/server",
        "@/lib/ratelimit",
        "@/lib/monitoring/api-metrics"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/intervention-workflows/route.ts",
      "route": "/api/customer-success/intervention-workflows",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/supabase/server",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/milestones/route.ts",
      "route": "/api/customer-success/milestones",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/validation/middleware",
        "@/lib/services/milestone-service",
        "@/lib/services/progress-monitor",
        "@/lib/services/reward-manager",
        "@/lib/ratelimit"
      ],
      "exports": [
        "GET",
        "POST",
        "PATCH"
      ],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/onboarding/analytics/route.ts",
      "route": "/api/customer-success/onboarding/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/onboarding/automation-rules/route.ts",
      "route": "/api/customer-success/onboarding/automation-rules",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/onboarding/stages/route.ts",
      "route": "/api/customer-success/onboarding/stages",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/onboarding/tasks/route.ts",
      "route": "/api/customer-success/onboarding/tasks",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/onboarding/workflow/route.ts",
      "route": "/api/customer-success/onboarding/workflow",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/services/customer-success-service",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/customer-success/risk-assessment/route.ts",
      "route": "/api/customer-success/risk-assessment",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/validation/middleware",
        "@/lib/services/risk-assessment",
        "@/lib/ratelimit"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/dashboard/config/route.ts",
      "route": "/api/dashboard/config",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/widgetService",
        "@/lib/security/input-validation",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/dashboard/customer-success/route.ts",
      "route": "/api/dashboard/customer-success",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/cache/dashboard-cache"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/dashboard/route.ts",
      "route": "/api/dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/dashboardService",
        "@/lib/security/input-validation",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/dashboard/widgets/[type]/route.ts",
      "route": "/api/dashboard/widgets/[type]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/widgetService",
        "@/types/next15-params",
        "@/lib/security/input-validation",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/debug/encryption-verify/route.ts",
      "route": "/api/debug/encryption-verify",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/dietary/alerts/[couple_id]/route.ts",
      "route": "/api/dietary/alerts/[couple_id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validations/dietary",
        "@/lib/monitoring/logger",
        "@/lib/auth/middleware",
        "@/types/dietary"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/dietary/export/[couple_id]/route.ts",
      "route": "/api/dietary/export/[couple_id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/dietaryService",
        "@/lib/validations/dietary",
        "@/lib/monitoring/logger",
        "@/lib/auth/middleware"
      ],
      "exports": [
        "exportData"
      ],
      "components": []
    },
    {
      "path": "src/app/api/dietary/matrix/[couple_id]/route.ts",
      "route": "/api/dietary/matrix/[couple_id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/dietaryService",
        "@/lib/validations/dietary",
        "@/lib/monitoring/logger",
        "@/lib/auth/middleware",
        "@/types/dietary"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/directory/suppliers/[id]/media/route.ts",
      "route": "/api/directory/suppliers/[id]/media",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/directory/suppliers/[id]/public/route.ts",
      "route": "/api/directory/suppliers/[id]/public",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/directory/suppliers/[id]/update/route.ts",
      "route": "/api/directory/suppliers/[id]/update",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/directory/suppliers/[id]/verify/route.ts",
      "route": "/api/directory/suppliers/[id]/verify",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/directory/suppliers/create/route.ts",
      "route": "/api/directory/suppliers/create",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/document-processing/mapping/analyze/route.ts",
      "route": "/api/document-processing/mapping/analyze",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/smart-mapping-service",
        "@/lib/services/field-extraction-service",
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/document-processing/mapping/apply/route.ts",
      "route": "/api/document-processing/mapping/apply",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/smart-mapping-service",
        "@/lib/services/field-extraction-service",
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/document-processing/mapping/correct/route.ts",
      "route": "/api/document-processing/mapping/correct",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/smart-mapping-service",
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/document-processing/mapping/save-template/route.ts",
      "route": "/api/document-processing/mapping/save-template",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/smart-mapping-service",
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/document-processing/mapping/templates/route.ts",
      "route": "/api/document-processing/mapping/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/smart-mapping-service",
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/document-processing/workflow/route.ts",
      "route": "/api/document-processing/workflow",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/pdf-mapping-integration-service",
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/documents/[id]/download/route.ts",
      "route": "/api/documents/[id]/download",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/documents/[id]/route.ts",
      "route": "/api/documents/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/documentStorageService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/documents/[id]/share/route.ts",
      "route": "/api/documents/[id]/share",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/documentStorageService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/documents/compliance/route.ts",
      "route": "/api/documents/compliance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/documentStorageService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/documents/route.ts",
      "route": "/api/documents",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/documentStorageService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/domains/route.ts",
      "route": "/api/domains",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/domains",
        "@/lib/domains/validation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/batch-encrypt/route.ts",
      "route": "/api/encryption/batch-encrypt",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption-middleware"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/crypto-shred/route.ts",
      "route": "/api/encryption/crypto-shred",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/decrypt-field/route.ts",
      "route": "/api/encryption/decrypt-field",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/encrypt-field/route.ts",
      "route": "/api/encryption/encrypt-field",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/performance-metrics/route.ts",
      "route": "/api/encryption/performance-metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption-middleware"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/progressive-decrypt/route.ts",
      "route": "/api/encryption/progressive-decrypt",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption-middleware",
        "@/lib/security/encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/rotate-keys/route.ts",
      "route": "/api/encryption/rotate-keys",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/search/route.ts",
      "route": "/api/encryption/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption-middleware"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/encryption/user-keys/route.ts",
      "route": "/api/encryption/user-keys",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/advanced-encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/deployment/rollback/route.ts",
      "route": "/api/environment/deployment/rollback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/deployment/DeploymentIntegrationService",
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/deployment/status/route.ts",
      "route": "/api/environment/deployment/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/deployment/sync/route.ts",
      "route": "/api/environment/deployment/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/deployment/DeploymentIntegrationService",
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/deployment/validate/route.ts",
      "route": "/api/environment/deployment/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/deployment/DeploymentIntegrationService",
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/health/[environment]/route.ts",
      "route": "/api/environment/health/[environment]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/monitoring/MonitoringService",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/health/route.ts",
      "route": "/api/environment/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/monitoring/MonitoringService",
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/monitoring/alerts/route.ts",
      "route": "/api/environment/monitoring/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/monitoring/AlertManager",
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/monitoring/metrics/route.ts",
      "route": "/api/environment/monitoring/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/monitoring/MonitoringService",
        "@/lib/services/monitoring/AnalyticsDashboardService",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/wedding-safety/emergency-override/route.ts",
      "route": "/api/environment/wedding-safety/emergency-override",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/wedding-safety/WeddingDaySafetyService",
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/wedding-safety/emergency-rollback/route.ts",
      "route": "/api/environment/wedding-safety/emergency-rollback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/wedding-safety/WeddingDaySafetyService",
        "@/lib/supabase/server",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/environment/wedding-safety/status/route.ts",
      "route": "/api/environment/wedding-safety/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/wedding-safety/WeddingDaySafetyService",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/errors/feedback/route.ts",
      "route": "/api/errors/feedback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/error-tracking"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/executive/metrics/route.ts",
      "route": "/api/executive/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/analytics/executiveMetrics",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/expenses/route.ts",
      "route": "/api/expenses",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/faq/[id]/route.ts",
      "route": "/api/faq/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [
        "dynamic"
      ],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/faq/enhance/route.ts",
      "route": "/api/faq/enhance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/faq-processor",
        "@/lib/audit/audit-logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/faq/route.ts",
      "route": "/api/faq",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [
        "dynamic"
      ],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/feature-requests/[id]/vote/route.ts",
      "route": "/api/feature-requests/[id]/vote",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feature-requests/check-duplicates/route.ts",
      "route": "/api/feature-requests/check-duplicates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feature-requests/external-systems/create-issue/route.ts",
      "route": "/api/feature-requests/external-systems/create-issue",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/external-systems/ProductManagementIntegration",
        "@/lib/feature-requests/services/UserContextEnrichmentService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feature-requests/external-systems/sync/route.ts",
      "route": "/api/feature-requests/external-systems/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/external-systems/ProductManagementIntegration"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feature-requests/external-systems/webhooks/github/route.ts",
      "route": "/api/feature-requests/external-systems/webhooks/github",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/external-systems/ProductManagementIntegration"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feature-requests/external-systems/webhooks/jira/route.ts",
      "route": "/api/feature-requests/external-systems/webhooks/jira",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/external-systems/ProductManagementIntegration"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feature-requests/external-systems/webhooks/linear/route.ts",
      "route": "/api/feature-requests/external-systems/webhooks/linear",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/external-systems/ProductManagementIntegration"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feature-requests/route.ts",
      "route": "/api/feature-requests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feedback/[id]/responses/route.ts",
      "route": "/api/feedback/[id]/responses",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feedback/[id]/route.ts",
      "route": "/api/feedback/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feedback/analytics/route.ts",
      "route": "/api/feedback/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/feedback/analytics-engine"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/feedback/automation/process/route.ts",
      "route": "/api/feedback/automation/process",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/feedback/follow-up-automation"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/feedback/automation/route.ts",
      "route": "/api/feedback/automation",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/feedback/follow-up-automation"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/feedback/categories/route.ts",
      "route": "/api/feedback/categories",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feedback/route.ts",
      "route": "/api/feedback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/feedback/session/[sessionId]/complete/route.ts",
      "route": "/api/feedback/session/[sessionId]/complete",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/feedback/follow-up-automation"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/feedback/session/[sessionId]/respond/route.ts",
      "route": "/api/feedback/session/[sessionId]/respond",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/feedback/feedback-collector"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/feedback/session/start/route.ts",
      "route": "/api/feedback/session/start",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/feedback/feedback-collector"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/feedback/triggers/route.ts",
      "route": "/api/feedback/triggers",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/feedback/feedback-collector"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/field-extraction/export/route.ts",
      "route": "/api/field-extraction/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/field-extraction-service",
        "@/types/field-extraction"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/field-extraction/extract/route.ts",
      "route": "/api/field-extraction/extract",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/field-extraction-service",
        "@/types/field-extraction"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/field-extraction/templates/[id]/route.ts",
      "route": "/api/field-extraction/templates/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/field-extraction-service",
        "@/types/field-extraction"
      ],
      "exports": [],
      "components": [
        "ExtractionTemplate"
      ]
    },
    {
      "path": "src/app/api/field-extraction/templates/route.ts",
      "route": "/api/field-extraction/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/field-extraction-service",
        "@/types/field-extraction"
      ],
      "exports": [],
      "components": [
        "ExtractionTemplate"
      ]
    },
    {
      "path": "src/app/api/field-integration/route.ts",
      "route": "/api/field-integration",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/field-integration-service",
        "@/lib/integrations/field-integration-adapters"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/fields/analytics/route.ts",
      "route": "/api/fields/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/field-engine/FieldEngine",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/fields/route.ts",
      "route": "/api/fields",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/field-engine/FieldEngine",
        "@/types/forms",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/fields/templates/[templateId]/route.ts",
      "route": "/api/fields/templates/[templateId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/field-engine/FieldEngine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/fields/templates/route.ts",
      "route": "/api/fields/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/field-engine/FieldEngine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/fields/transform/route.ts",
      "route": "/api/fields/transform",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/field-engine/FieldEngine",
        "@/types/forms"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/fields/validate/route.ts",
      "route": "/api/fields/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/field-engine/FieldEngine",
        "@/types/forms"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/floral/estimate/route.ts",
      "route": "/api/floral/estimate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/floral/feedback/route.ts",
      "route": "/api/floral/feedback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server",
        "@/lib/ml/floral-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/floral/recommendations/route.ts",
      "route": "/api/floral/recommendations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server",
        "@/lib/ml/floral-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/floral/route.ts",
      "route": "/api/floral",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/floral/seasonal/route.ts",
      "route": "/api/floral/seasonal",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/floral/vendors/route.ts",
      "route": "/api/floral/vendors",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/florist/colors/analyze/route.ts",
      "route": "/api/florist/colors/analyze",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/color-theory-service",
        "@/lib/middleware/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/florist/external/circuit-status/route.ts",
      "route": "/api/florist/external/circuit-status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/circuit-breaker",
        "@/lib/integrations/openai-florist-client",
        "@/lib/cache/redis"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/florist/external/test-circuit-breaker/route.ts",
      "route": "/api/florist/external/test-circuit-breaker",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/circuit-breaker",
        "@/lib/integrations/openai-florist-client"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/florist/palette/generate/route.ts",
      "route": "/api/florist/palette/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/openai-florist-client",
        "@/lib/middleware/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/florist/search/route.ts",
      "route": "/api/florist/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation",
        "@/lib/florist/florist-intelligence-service"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/florist/sustainability/analyze/route.ts",
      "route": "/api/florist/sustainability/analyze",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/withSecureValidation",
        "@/lib/florist/florist-intelligence-service"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/forms/[id]/logic/route.ts",
      "route": "/api/forms/[id]/logic",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/types/next15-params"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/[id]/route.ts",
      "route": "/api/forms/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validations/forms",
        "@/lib/rate-limit",
        "@/types/next15-params"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/[id]/submit/route.ts",
      "route": "/api/forms/[id]/submit",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validations/forms",
        "@/lib/crypto-utils",
        "@/lib/rate-limit",
        "@/lib/email/service",
        "@/types/next15-params"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/[id]/sync-core-fields/route.ts",
      "route": "/api/forms/[id]/sync-core-fields",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/[id]/validate/route.ts",
      "route": "/api/forms/[id]/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/types/next15-params"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/create/route.ts",
      "route": "/api/forms/create",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/create-from-pdf/route.ts",
      "route": "/api/forms/create-from-pdf",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/crypto-utils"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/route.ts",
      "route": "/api/forms",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validations/forms",
        "@/lib/crypto-utils",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/forms/submit/route.ts",
      "route": "/api/forms/submit",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validations/forms",
        "@/lib/crypto-utils",
        "@/lib/comprehensive-security-middleware",
        "@/lib/database-optimizer"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/forms/verify-password/route.ts",
      "route": "/api/forms/verify-password",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gateway/analytics/route.ts",
      "route": "/api/gateway/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/api-gateway/TrafficAnalyticsCollector"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gateway/health/route.ts",
      "route": "/api/gateway/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/api-gateway/APIRoutingEngine",
        "@/lib/services/api-gateway/LoadBalancingService",
        "@/lib/services/api-gateway/RateLimitingEngine",
        "@/lib/services/api-gateway/WeddingAPIProtection"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gateway/routing/route.ts",
      "route": "/api/gateway/routing",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/api-gateway/APIRoutingEngine",
        "@/lib/services/api-gateway/LoadBalancingService",
        "@/lib/services/api-gateway/RateLimitingEngine",
        "@/lib/services/api-gateway/APISecurityEnforcer",
        "@/lib/services/api-gateway/TrafficAnalyticsCollector",
        "@/lib/services/api-gateway/WeddingAPIProtection",
        "@/lib/services/api-gateway/VendorAPIThrottling",
        "@/lib/services/api-gateway/SeasonalLoadBalancer",
        "@/types/api-gateway"
      ],
      "exports": [],
      "components": [
        "GatewayRequest",
        "VendorContext",
        "GatewayResponse"
      ]
    },
    {
      "path": "src/app/api/gdpr/breach/assess-notification/[id]/route.ts",
      "route": "/api/gdpr/breach/assess-notification/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gdpr/breach/report/route.ts",
      "route": "/api/gdpr/breach/report",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/gdpr-compliance-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gdpr/consent/current-user/route.ts",
      "route": "/api/gdpr/consent/current-user",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gdpr/consent/record/route.ts",
      "route": "/api/gdpr/consent/record",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/gdpr-compliance-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gdpr/consent/route.ts",
      "route": "/api/gdpr/consent",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/types/gdpr",
        "@/lib/gdpr/consent-manager"
      ],
      "exports": [],
      "components": [
        "T"
      ]
    },
    {
      "path": "src/app/api/gdpr/consent/withdraw/route.ts",
      "route": "/api/gdpr/consent/withdraw",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/gdpr-compliance-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gdpr/data-export/route.ts",
      "route": "/api/gdpr/data-export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/options"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gdpr/data-request/route.ts",
      "route": "/api/gdpr/data-request",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/options",
        "@/types/gdpr",
        "@/lib/gdpr/data-processor"
      ],
      "exports": [],
      "components": [
        "T"
      ]
    },
    {
      "path": "src/app/api/gdpr/export/data-subject/[id]/route.ts",
      "route": "/api/gdpr/export/data-subject/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/gdpr-compliance-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/gdpr/subject-request/submit/route.ts",
      "route": "/api/gdpr/subject-request/submit",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/gdpr-compliance-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/geocode/route.ts",
      "route": "/api/geocode",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/[id]/dietary/route.ts",
      "route": "/api/guests/[id]/dietary",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/dietaryService",
        "@/lib/validations/dietary",
        "@/lib/monitoring/logger",
        "@/lib/auth/middleware",
        "@/types/dietary"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/[id]/route.ts",
      "route": "/api/guests/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/bulk/route.ts",
      "route": "/api/guests/bulk",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [
        "exportData"
      ],
      "components": []
    },
    {
      "path": "src/app/api/guests/bulk-import/route.ts",
      "route": "/api/guests/bulk-import",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/guestService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/dietary/route.ts",
      "route": "/api/guests/dietary",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/export/route.ts",
      "route": "/api/guests/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/guestService"
      ],
      "exports": [
        "exportSchema",
        "exportData"
      ],
      "components": [
        "Buffer"
      ]
    },
    {
      "path": "src/app/api/guests/import/route.ts",
      "route": "/api/guests/import",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/import-enhanced/route.ts",
      "route": "/api/guests/import-enhanced",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/import-enhanced/ws151/route.ts",
      "route": "/api/guests/import-enhanced/ws151",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/upload/guest-import",
        "@/lib/services/guest-import-processor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/photo-groups/route.ts",
      "route": "/api/guests/photo-groups",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/quick-add/route.ts",
      "route": "/api/guests/quick-add",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/guestService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/guests/route.ts",
      "route": "/api/guests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/health/alerts/route.ts",
      "route": "/api/health/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "HealthAlert"
      ]
    },
    {
      "path": "src/app/api/health/check/route.ts",
      "route": "/api/health/check",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [
        "runtime",
        "maxDuration"
      ],
      "components": []
    },
    {
      "path": "src/app/api/health/complete/route.ts",
      "route": "/api/health/complete",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/monitoring/healthChecks"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/health/database/route.ts",
      "route": "/api/health/database",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "DatabaseHealthCheck"
      ]
    },
    {
      "path": "src/app/api/health/deployment/route.ts",
      "route": "/api/health/deployment",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/DeploymentManager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/health/integrations/route.ts",
      "route": "/api/health/integrations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/OpenAIDietaryService",
        "@/lib/integrations/DietaryNotificationService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/health/route.ts",
      "route": "/api/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/DeploymentManager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/health/trends/route.ts",
      "route": "/api/health/trends",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/health-monitoring/route.ts",
      "route": "/api/health-monitoring",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/api-analytics-service",
        "@/lib/middleware/api-usage-tracker"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "ComponentHealth"
      ]
    },
    {
      "path": "src/app/api/helpers/schedules/[id]/reorder/route.ts",
      "route": "/api/helpers/schedules/[id]/reorder",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/helpers/schedules/route.ts",
      "route": "/api/helpers/schedules",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/helpers/schedules/wedding/export/ics/route.ts",
      "route": "/api/helpers/schedules/wedding/export/ics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/helpers/wedding-schedules/[weddingId]/export/ics/route.ts",
      "route": "/api/helpers/wedding-schedules/[weddingId]/export/ics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/households/route.ts",
      "route": "/api/households",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/i18n/content/route.ts",
      "route": "/api/i18n/content",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/client"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/i18n/locales/route.ts",
      "route": "/api/i18n/locales",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "T",
        "ApiResponse"
      ]
    },
    {
      "path": "src/app/api/i18n/translations/route.ts",
      "route": "/api/i18n/translations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "T",
        "ApiResponse"
      ]
    },
    {
      "path": "src/app/api/import/process/route.ts",
      "route": "/api/import/process",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/import/parser"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/import/upload/route.ts",
      "route": "/api/import/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter",
        "@/lib/import/columnMapper",
        "@/lib/import/parser",
        "@/lib/import/validator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integration/health/route.ts",
      "route": "/api/integration/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/integration-health-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/ai/webhook/route.ts",
      "route": "/api/integrations/ai/webhook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/ai/vendor-ai-bridge",
        "@/lib/integrations/ai/crm-ai-sync",
        "@/lib/integrations/ai/payment-ai-integration",
        "@/lib/integrations/ai/calendar-ai-sync",
        "@/lib/integrations/ai/notification-ai-engine",
        "@/lib/integrations/ai/real-time-ai-sync"
      ],
      "exports": [],
      "components": [
        "WebhookResult"
      ]
    },
    {
      "path": "src/app/api/integrations/analytics/data-sync/route.ts",
      "route": "/api/integrations/analytics/data-sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/analytics/bi-platform-connector",
        "@/lib/integrations/analytics/data-warehouse-manager",
        "@/lib/integrations/analytics/third-party-analytics",
        "@/lib/integrations/analytics/wedding-industry-data",
        "@/lib/integrations/analytics/financial-analytics-hub",
        "@/lib/integrations/analytics/marketing-analytics-platform"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/analytics/industry-insights/route.ts",
      "route": "/api/integrations/analytics/industry-insights",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/analytics/wedding-industry-data",
        "@/lib/analytics/report-builders"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/analytics/quality-check/route.ts",
      "route": "/api/integrations/analytics/quality-check",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/analytics/data-quality-governance"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/calendar/route.ts",
      "route": "/api/integrations/calendar",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/marketplace/calendar-sync-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/channel-config/route.ts",
      "route": "/api/integrations/channel-config",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/crm/route.ts",
      "route": "/api/integrations/crm",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/marketplace/vendor-crm-sync-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/health/route.ts",
      "route": "/api/integrations/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/websocket/integration-orchestrator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/ltv/marketing/route.ts",
      "route": "/api/integrations/ltv/marketing",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/ltv-data-pipeline",
        "@/lib/analytics/marketing-spend-integration",
        "@/lib/analytics/marketing-attribution-pipeline"
      ],
      "exports": [],
      "components": [
        "MarketingAttributionResponse"
      ]
    },
    {
      "path": "src/app/api/integrations/ltv/payments/route.ts",
      "route": "/api/integrations/ltv/payments",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/ltv-data-pipeline",
        "@/lib/integrations/payment-system-integrator"
      ],
      "exports": [],
      "components": [
        "PaymentEvent"
      ]
    },
    {
      "path": "src/app/api/integrations/payment/route.ts",
      "route": "/api/integrations/payment",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/marketplace/payment-gateway-orchestra"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/portfolio/route.ts",
      "route": "/api/integrations/portfolio",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/marketplace/portfolio-integration-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/retention/orchestrate/route.ts",
      "route": "/api/integrations/retention/orchestrate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/retention-campaign-orchestrator"
      ],
      "exports": [],
      "components": [
        "MultiChannelCampaignPlan",
        "ScheduledCampaignAction",
        "CampaignOutcomePrediction"
      ]
    },
    {
      "path": "src/app/api/integrations/route.ts",
      "route": "/api/integrations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/vendor-integration-manager",
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/integrations/social/route.ts",
      "route": "/api/integrations/social",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/marketplace/social-media-connector"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/sync/[weddingId]/route.ts",
      "route": "/api/integrations/sync/[weddingId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/real-time-sync-orchestrator",
        "@/lib/integrations/vendor-integration-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/sync/route.ts",
      "route": "/api/integrations/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/integrations/vendor-integration-manager",
        "@/lib/integrations/real-time-sync-orchestrator"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/integrations/vendor/connect/route.ts",
      "route": "/api/integrations/vendor/connect",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/vendor-integration-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/verification/trigger/route.ts",
      "route": "/api/integrations/verification/trigger",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/verification/verification-orchestrator",
        "@/lib/logging/Logger",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "VerificationType"
      ]
    },
    {
      "path": "src/app/api/integrations/verification/webhook/route.ts",
      "route": "/api/integrations/verification/webhook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/verification/verification-orchestrator",
        "@/lib/logging/Logger",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/webhooks/[provider]/route.ts",
      "route": "/api/integrations/webhooks/[provider]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/integrations/vendor-integration-manager",
        "@/lib/integrations/real-time-sync-orchestrator"
      ],
      "exports": [],
      "components": [
        "Database",
        "WebhookProcessResult"
      ]
    },
    {
      "path": "src/app/api/integrations/webhooks/tave/route.ts",
      "route": "/api/integrations/webhooks/tave",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/adapters/photography/tave-adapter",
        "@/lib/integrations/real-time-sync-orchestrator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/integrations/wedding-services/route.ts",
      "route": "/api/integrations/wedding-services",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/marketplace/wedding-service-api-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/invite/[code]/route.ts",
      "route": "/api/invite/[code]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/invitationService",
        "@/types/next15-params",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/invoices/route.ts",
      "route": "/api/invoices",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/payments/invoice-generator",
        "@/lib/stripe/customers"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/journey-engine/executions/route.ts",
      "route": "/api/journey-engine/executions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journey-engine/instances/[id]/[action]/route.ts",
      "route": "/api/journey-engine/instances/[id]/[action]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/journey-engine/state-machine"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journey-engine/instances/route.ts",
      "route": "/api/journey-engine/instances",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journey-engine/metrics/route.ts",
      "route": "/api/journey-engine/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journey-engine/performance/route.ts",
      "route": "/api/journey-engine/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journey-engine/queue/route.ts",
      "route": "/api/journey-engine/queue",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/journey-engine/queue-processor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/journey-engine/service-health/route.ts",
      "route": "/api/journey-engine/service-health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/email-connector",
        "@/lib/services/sms-connector",
        "@/lib/services/delivery-tracker",
        "@/lib/services/journey-service-bridge"
      ],
      "exports": [],
      "components": [
        "T"
      ]
    },
    {
      "path": "src/app/api/journey-engine/status/route.ts",
      "route": "/api/journey-engine/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/journey-engine/startup"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/journeys/[id]/activate/route.ts",
      "route": "/api/journeys/[id]/activate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/journey-engine/state-machine"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journeys/[id]/canvas/route.ts",
      "route": "/api/journeys/[id]/canvas",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/journeys/[id]/execute/route.ts",
      "route": "/api/journeys/[id]/execute",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/journey/executor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/journeys/[id]/instances/route.ts",
      "route": "/api/journeys/[id]/instances",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/journey-engine/executor"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journeys/[id]/route.ts",
      "route": "/api/journeys/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/auth"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/journeys/[id]/test/route.ts",
      "route": "/api/journeys/[id]/test",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/journeys/[id]/validate/route.ts",
      "route": "/api/journeys/[id]/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server",
        "../canvas/route"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/journeys/route.ts",
      "route": "/api/journeys",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database",
        "@/lib/auth"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/knowledge-base/analytics/route.ts",
      "route": "/api/knowledge-base/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/knowledge-base",
        "@/lib/supabase/server"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/knowledge-base/articles/[slug]/route.ts",
      "route": "/api/knowledge-base/articles/[slug]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/knowledge-base",
        "@/lib/validation/middleware"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/knowledge-base/categories/route.ts",
      "route": "/api/knowledge-base/categories",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/knowledge-base",
        "@/lib/supabase/server"
      ],
      "exports": [
        "GET"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/knowledge-base/feedback/route.ts",
      "route": "/api/knowledge-base/feedback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/knowledge-base",
        "@/lib/supabase/server"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/knowledge-base/popular/route.ts",
      "route": "/api/knowledge-base/popular",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/knowledge-base",
        "@/lib/supabase/server"
      ],
      "exports": [
        "GET"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/knowledge-base/search/route.ts",
      "route": "/api/knowledge-base/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/knowledge-base",
        "@/lib/supabase/server",
        "@/lib/validation/knowledge-base"
      ],
      "exports": [
        "GET"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/knowledge-base/suggested/route.ts",
      "route": "/api/knowledge-base/suggested",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/knowledge-base",
        "@/lib/supabase/server"
      ],
      "exports": [
        "GET"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/leads/[id]/status/route.ts",
      "route": "/api/leads/[id]/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/leads/progression/route.ts",
      "route": "/api/leads/progression",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/leads/route.ts",
      "route": "/api/leads",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/leads/scoring/route.ts",
      "route": "/api/leads/scoring",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/locations/popular/route.ts",
      "route": "/api/locations/popular",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/geographic-search-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/locations/suggestions/route.ts",
      "route": "/api/locations/suggestions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/geographic-search-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketing/ai-optimization/route.ts",
      "route": "/api/marketing/ai-optimization",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/services/ai-content-generator",
        "@/lib/validation/middleware",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/marketing/attribution/route.ts",
      "route": "/api/marketing/attribution",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/auth/auth-config",
        "@/lib/services/attribution-tracking-service",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST",
        "PUT"
      ],
      "components": []
    },
    {
      "path": "src/app/api/marketing/attribution-modeling/route.ts",
      "route": "/api/marketing/attribution-modeling",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/services/attribution-modeling-service",
        "@/lib/validation/middleware",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/marketing/behavioral-segmentation/route.ts",
      "route": "/api/marketing/behavioral-segmentation",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/services/behavioral-segmentation-service",
        "@/lib/validation/middleware",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/marketing/campaigns/[id]/route.ts",
      "route": "/api/marketing/campaigns/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketing/campaigns/[id]/steps/route.ts",
      "route": "/api/marketing/campaigns/[id]/steps",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketing/campaigns/route.ts",
      "route": "/api/marketing/campaigns",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketing/campaigns/trigger/route.ts",
      "route": "/api/marketing/campaigns/trigger",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas",
        "@/lib/auth/auth-config",
        "@/lib/services/marketing-automation-service",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST",
        "PUT"
      ],
      "components": []
    },
    {
      "path": "src/app/api/marketing/segments/route.ts",
      "route": "/api/marketing/segments",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketing/viral-invitations/route.ts",
      "route": "/api/marketing/viral-invitations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas",
        "@/lib/auth/auth-config",
        "@/lib/services/marketing-automation-service",
        "@/lib/services/attribution-tracking-service",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/analytics/popular/route.ts",
      "route": "/api/marketplace/analytics/popular",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/commission/calculate/route.ts",
      "route": "/api/marketplace/commission/calculate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/commissionCalculationService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/commission/creator/[id]/route.ts",
      "route": "/api/marketplace/commission/creator/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/commissionCalculationService",
        "@/lib/services/payoutProcessingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/commission/process-payouts/route.ts",
      "route": "/api/marketplace/commission/process-payouts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/payoutProcessingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/creator/analytics/ab-tests/route.ts",
      "route": "/api/marketplace/creator/analytics/ab-tests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/creator/analytics/dashboard/route.ts",
      "route": "/api/marketplace/creator/analytics/dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/creator/analytics/events/route.ts",
      "route": "/api/marketplace/creator/analytics/events",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/creator/analytics/export/route.ts",
      "route": "/api/marketplace/creator/analytics/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/creator/analytics/insights/route.ts",
      "route": "/api/marketplace/creator/analytics/insights",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/financial/analytics/route.ts",
      "route": "/api/marketplace/financial/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/financialDataProcessingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/financial/creator/[id]/earnings/route.ts",
      "route": "/api/marketplace/financial/creator/[id]/earnings",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/financialDataProcessingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/financial/record-sale/route.ts",
      "route": "/api/marketplace/financial/record-sale",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/financialDataProcessingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/purchase/[id]/install/route.ts",
      "route": "/api/marketplace/purchase/[id]/install",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/marketplace-purchase-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/purchase/[id]/receipt/route.ts",
      "route": "/api/marketplace/purchase/[id]/receipt",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/marketplace-purchase-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/purchase/complete/route.ts",
      "route": "/api/marketplace/purchase/complete",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/email/service",
        "@/lib/crypto-utils",
        "@/lib/security-audit-logger",
        "@/lib/services/financialDataProcessingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/purchase/confirm/route.ts",
      "route": "/api/marketplace/purchase/confirm",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/marketplace-purchase-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/purchase/initiate/route.ts",
      "route": "/api/marketplace/purchase/initiate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/api-middleware",
        "@/lib/crypto-utils",
        "@/lib/security-audit-logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/purchase/refund/route.ts",
      "route": "/api/marketplace/purchase/refund",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/api-middleware",
        "@/lib/crypto-utils",
        "@/lib/security-audit-logger",
        "@/lib/email/service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/purchase/route.ts",
      "route": "/api/marketplace/purchase",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/marketplace-purchase-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/search/facets/route.ts",
      "route": "/api/marketplace/search/facets",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/search/route.ts",
      "route": "/api/marketplace/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/search/save/route.ts",
      "route": "/api/marketplace/search/save",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/marketplace/search/suggestions/route.ts",
      "route": "/api/marketplace/search/suggestions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "SuggestionItem"
      ]
    },
    {
      "path": "src/app/api/marketplace/templates/route.ts",
      "route": "/api/marketplace/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/metrics/business/churn/route.ts",
      "route": "/api/metrics/business/churn",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/metrics/churn-analyzer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/metrics/business/mrr/route.ts",
      "route": "/api/metrics/business/mrr",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/metrics/mrr-calculator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/metrics/business/viral-coefficient/route.ts",
      "route": "/api/metrics/business/viral-coefficient",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/metrics/viral-coefficient-tracker"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ml/conflicts/route.ts",
      "route": "/api/ml/conflicts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ml/ml-api",
        "@/lib/ml/types"
      ],
      "exports": [
        "runtime"
      ],
      "components": [
        "NextResponse",
        "MLInferenceResponse"
      ]
    },
    {
      "path": "src/app/api/ml/health/route.ts",
      "route": "/api/ml/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ml/ml-api"
      ],
      "exports": [
        "runtime"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/ml/route.ts",
      "route": "/api/ml",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ml/timeline/route.ts",
      "route": "/api/ml/timeline",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ml/ml-api",
        "@/lib/ml/types"
      ],
      "exports": [
        "runtime"
      ],
      "components": [
        "NextResponse",
        "MLTimelineResponse"
      ]
    },
    {
      "path": "src/app/api/ml/vendors/route.ts",
      "route": "/api/ml/vendors",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ml/ml-api",
        "@/lib/ml/types"
      ],
      "exports": [
        "runtime"
      ],
      "components": [
        "NextResponse",
        "MLVendorAnalysisResponse"
      ]
    },
    {
      "path": "src/app/api/monitoring/analytics/route.ts",
      "route": "/api/monitoring/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/dashboard/health/route.ts",
      "route": "/api/monitoring/dashboard/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/dashboard/refresh/route.ts",
      "route": "/api/monitoring/dashboard/refresh",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/dashboard/route.ts",
      "route": "/api/monitoring/dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/health-check/route.ts",
      "route": "/api/monitoring/health-check",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/FeatureRequestSystemMonitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/performance/route.ts",
      "route": "/api/monitoring/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/config",
        "@/lib/database/supabase-admin",
        "@/lib/monitoring/structured-logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/performance-metrics/route.ts",
      "route": "/api/monitoring/performance-metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/FeatureRequestSystemMonitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/route.ts",
      "route": "/api/monitoring",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "Response"
      ]
    },
    {
      "path": "src/app/api/monitoring/seating-integrations/route.ts",
      "route": "/api/monitoring/seating-integrations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/seating-failure-recovery-service",
        "@/lib/services/seating-data-consistency-service",
        "@/lib/integrations/team-c-conflict-integration"
      ],
      "exports": [],
      "components": [
        "ProductionMonitoringReport",
        "IntegrationHealth",
        "PerformanceMetrics",
        "MonitoringAlert"
      ]
    },
    {
      "path": "src/app/api/monitoring/security/scan/route.ts",
      "route": "/api/monitoring/security/scan",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/security-scanner",
        "@/lib/monitoring/data-sanitizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/sentry/events/route.ts",
      "route": "/api/monitoring/sentry/events",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/monitoring/data-sanitizer",
        "@/lib/monitoring/sentry-enhanced"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/monitoring/status/route.ts",
      "route": "/api/monitoring/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/music/analyze-appropriateness/route.ts",
      "route": "/api/music/analyze-appropriateness",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/api/route-template",
        "../../../../lib/api/auth-middleware",
        "../../../../lib/api/rate-limit-middleware",
        "../../../../lib/api/error-handler",
        "../../../../lib/validation/schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "AppropriatenessAnalysis",
        "ApiResponse"
      ]
    },
    {
      "path": "src/app/api/music/guest-requests/route.ts",
      "route": "/api/music/guest-requests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase",
        "@/lib/services/music-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/music/playlist/generate/route.ts",
      "route": "/api/music/playlist/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../../lib/api/route-template",
        "../../../../../lib/api/auth-middleware",
        "../../../../../lib/api/rate-limit-middleware",
        "../../../../../lib/api/error-handler",
        "../../../../../lib/validation/schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "GeneratedPlaylist",
        "PlaylistSection",
        "ApiResponse"
      ]
    },
    {
      "path": "src/app/api/music/playlists/route.ts",
      "route": "/api/music/playlists",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase",
        "@/lib/services/music-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/music/recommendations/route.ts",
      "route": "/api/music/recommendations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase",
        "@/lib/services/music-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/music/resolve-request/route.ts",
      "route": "/api/music/resolve-request",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/api/route-template",
        "../../../../lib/api/auth-middleware",
        "../../../../lib/api/rate-limit-middleware",
        "../../../../lib/api/error-handler",
        "../../../../lib/validation/schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "SongResolution",
        "ApiResponse"
      ]
    },
    {
      "path": "src/app/api/music/route.ts",
      "route": "/api/music",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase",
        "@/lib/services/music-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/music/search/route.ts",
      "route": "/api/music/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/music-integration-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/notes/[id]/route.ts",
      "route": "/api/notes/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/next15-params",
        "@/lib/security/input-validation",
        "@/lib/security/rbac-system",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/notifications/send/route.ts",
      "route": "/api/notifications/send",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/ocr/route.ts",
      "route": "/api/ocr",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/offline/cache/priority/route.ts",
      "route": "/api/offline/cache/priority",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/offline/queue/analytics/route.ts",
      "route": "/api/offline/queue/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/offline/status/[userId]/route.ts",
      "route": "/api/offline/status/[userId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/offline/sync/resolve/route.ts",
      "route": "/api/offline/sync/resolve",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware"
      ],
      "exports": [
        "PUT",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/offline/sync/route.ts",
      "route": "/api/offline/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/offline/sync/status/[deviceId]/route.ts",
      "route": "/api/offline/sync/status/[deviceId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/onboarding/wedding-basics/route.ts",
      "route": "/api/onboarding/wedding-basics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "WeddingBasicsResponse"
      ]
    },
    {
      "path": "src/app/api/payment/webhook/route.ts",
      "route": "/api/payment/webhook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/audit-logger",
        "@/lib/crypto-utils"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "WebhookValidationResult"
      ]
    },
    {
      "path": "src/app/api/payments/schedule/route.ts",
      "route": "/api/payments/schedule",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/payments/schedules/[id]/route.ts",
      "route": "/api/payments/schedules/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/payment-security"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/payments/schedules/route.ts",
      "route": "/api/payments/schedules",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/payment-security"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/payments/status/route.ts",
      "route": "/api/payments/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf/process/route.ts",
      "route": "/api/pdf/process",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/lib/ocr/processing-pipeline",
        "@/lib/ocr/optimized-processor",
        "@/lib/audit-logger",
        "@/lib/secure-file-storage"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf/process-and-create/route.ts",
      "route": "/api/pdf/process-and-create",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/crypto-utils",
        "@/lib/ocr/optimized-processor",
        "@/lib/comprehensive-security-middleware",
        "@/lib/database-optimizer"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/pdf/upload/route.ts",
      "route": "/api/pdf/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit",
        "@/lib/auth-middleware",
        "@/lib/ocr/pdf-validator",
        "@/lib/ocr/enhanced-pdf-validator",
        "@/lib/audit-logger",
        "@/lib/secure-file-storage",
        "@/lib/feature-gates"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf/upload-secure/route.ts",
      "route": "/api/pdf/upload-secure",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/file-upload-security",
        "@/lib/security/production-rate-limiter",
        "@/lib/auth/session-security",
        "@/lib/csrf-token-edge",
        "@/lib/security/security-headers",
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/metrics"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf/validate/route.ts",
      "route": "/api/pdf/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth-middleware",
        "@/lib/ocr/processing-pipeline"
      ],
      "exports": [],
      "components": [
        "QualityAssessment"
      ]
    },
    {
      "path": "src/app/api/pdf-analysis/[id]/progress/route.ts",
      "route": "/api/pdf-analysis/[id]/progress",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf-analysis/[id]/route.ts",
      "route": "/api/pdf-analysis/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf-analysis/analytics/route.ts",
      "route": "/api/pdf-analysis/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/repositories/pdfAnalysisRepository"
      ],
      "exports": [],
      "components": [
        "Buffer"
      ]
    },
    {
      "path": "src/app/api/pdf-analysis/jobs/[id]/fields/route.ts",
      "route": "/api/pdf-analysis/jobs/[id]/fields",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/repositories/pdfAnalysisRepository"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf-analysis/jobs/[id]/route.ts",
      "route": "/api/pdf-analysis/jobs/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/repositories/pdfAnalysisRepository",
        "@/lib/services/pdfAnalysisService",
        "@/lib/services/websocketProgressService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf-analysis/jobs/route.ts",
      "route": "/api/pdf-analysis/jobs",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/repositories/pdfAnalysisRepository"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf-analysis/patterns/route.ts",
      "route": "/api/pdf-analysis/patterns",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/repositories/pdfAnalysisRepository"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pdf-analysis/upload/route.ts",
      "route": "/api/pdf-analysis/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/performance/health/route.ts",
      "route": "/api/performance/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/cache/performance-cache-manager",
        "@/lib/database/connection-pool",
        "@/lib/cache/redis-client",
        "@/lib/performance/metrics-tracker"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/performance/metrics/route.ts",
      "route": "/api/performance/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/performance/metrics-tracker",
        "@/lib/cache/performance-cache-manager",
        "@/lib/database/connection-pool",
        "@/lib/database/query-optimizer",
        "@/lib/streaming/response-streaming"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": [
        "Response"
      ]
    },
    {
      "path": "src/app/api/performance/realtime/benchmark/route.ts",
      "route": "/api/performance/realtime/benchmark",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/performance/realtime-connection-optimizer",
        "@/lib/performance/realtime-cache-manager",
        "@/lib/infrastructure/realtime-scaling-manager"
      ],
      "exports": [],
      "components": [
        "BenchmarkResult"
      ]
    },
    {
      "path": "src/app/api/performance/realtime/metrics/route.ts",
      "route": "/api/performance/realtime/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/performance/realtime-connection-optimizer",
        "@/lib/performance/realtime-cache-manager",
        "@/lib/infrastructure/realtime-scaling-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/performance/realtime/route.ts",
      "route": "/api/performance/realtime",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [
        "broadcastPerformanceData"
      ],
      "components": []
    },
    {
      "path": "src/app/api/performance/tests/execute/route.ts",
      "route": "/api/performance/tests/execute",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/testing/performance-monitor",
        "@/lib/testing/k6-test-orchestrator"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "PerformanceTestResults"
      ]
    },
    {
      "path": "src/app/api/performance/tests/route.ts",
      "route": "/api/performance/tests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/testing/performance-monitor",
        "@/lib/testing/performance-baseline-manager"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/photo-groups/analytics/[coupleId]/route.ts",
      "route": "/api/photo-groups/analytics/[coupleId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "MetricResult"
      ]
    },
    {
      "path": "src/app/api/photo-groups/batch/route.ts",
      "route": "/api/photo-groups/batch",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photo-groups/calendar/sync/route.ts",
      "route": "/api/photo-groups/calendar/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photo-groups/conflicts/detect/route.ts",
      "route": "/api/photo-groups/conflicts/detect",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photo-groups/error-handler.ts",
      "route": "/api/photo-groups",
      "fileName": "error-handler.ts",
      "type": "unknown",
      "imports": [],
      "exports": [
        "ApiError",
        "errorHandler"
      ],
      "components": [
        "NextResponse",
        "ErrorResponse",
        "T"
      ]
    },
    {
      "path": "src/app/api/photo-groups/health/route.ts",
      "route": "/api/photo-groups/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "../error-handler"
      ],
      "exports": [],
      "components": [
        "CheckStatus"
      ]
    },
    {
      "path": "src/app/api/photo-groups/metrics/route.ts",
      "route": "/api/photo-groups/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "../error-handler"
      ],
      "exports": [
        "recordApiRequest",
        "recordApiError",
        "recordRealtimeMessage",
        "recordStorageUpload"
      ],
      "components": [
        "MetricsData"
      ]
    },
    {
      "path": "src/app/api/photo-groups/realtime/[id]/route.ts",
      "route": "/api/photo-groups/realtime/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photo-groups/schedule/optimize/route.ts",
      "route": "/api/photo-groups/schedule/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/analyze/route.ts",
      "route": "/api/photography/analyze",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/billing/featureGating",
        "@/lib/integrations/photography-ai-coordinator",
        "@/lib/ratelimit"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "IntegratedPhotoAnalysis"
      ]
    },
    {
      "path": "src/app/api/photography/galleries/[id]/photos/route.ts",
      "route": "/api/photography/galleries/[id]/photos",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/galleries/featured/route.ts",
      "route": "/api/photography/galleries/featured",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/galleries/route.ts",
      "route": "/api/photography/galleries",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/mood-board/generate/route.ts",
      "route": "/api/photography/mood-board/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ml/mood-board-builder"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/mood-boards/route.ts",
      "route": "/api/photography/mood-boards",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server",
        "@/lib/ml/mood-board-builder"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/photographer-matching/route.ts",
      "route": "/api/photography/photographer-matching",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ml/photographer-matching-algorithm"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/photographers/[id]/galleries/route.ts",
      "route": "/api/photography/photographers/[id]/galleries",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/photographers/route.ts",
      "route": "/api/photography/photographers",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/shot-list/generate/route.ts",
      "route": "/api/photography/shot-list/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ml/shot-list-generator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/shot-lists/route.ts",
      "route": "/api/photography/shot-lists",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server",
        "@/lib/ml/shot-list-generator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/style-matches/route.ts",
      "route": "/api/photography/style-matches",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photography/styles/route.ts",
      "route": "/api/photography/styles",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/auth/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photos/ai/albums/generate/route.ts",
      "route": "/api/photos/ai/albums/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ml/photo-ai-service",
        "@/lib/services/photoService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photos/ai/analyze/route.ts",
      "route": "/api/photos/ai/analyze",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ml/photo-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photos/ai/enhance/route.ts",
      "route": "/api/photos/ai/enhance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ml/photo-ai-service",
        "@/lib/ml/photo-enhancement-engine",
        "@/lib/services/photoService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photos/ai/tags/route.ts",
      "route": "/api/photos/ai/tags",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/ml/photo-ai-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/photos/tag/route.ts",
      "route": "/api/photos/tag",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "Array"
      ]
    },
    {
      "path": "src/app/api/photos/upload/route.ts",
      "route": "/api/photos/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/places/details/[placeId]/route.ts",
      "route": "/api/places/details/[placeId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/google-places-client",
        "@/lib/services/places-search-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/places/details/route.ts",
      "route": "/api/places/details",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/places/nearby/route.ts",
      "route": "/api/places/nearby",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/google-places-client",
        "@/lib/services/places-search-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/places/search/route.ts",
      "route": "/api/places/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/places/wedding-places/route.ts",
      "route": "/api/places/wedding-places",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/portfolio/[supplierId]/route.ts",
      "route": "/api/portfolio/[supplierId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas"
      ],
      "exports": [
        "GET",
        "PATCH",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/portfolio/analytics/route.ts",
      "route": "/api/portfolio/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/portfolioService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/portfolio/media/route.ts",
      "route": "/api/portfolio/media",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/portfolioService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/portfolio/route.ts",
      "route": "/api/portfolio",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/portfolioService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/portfolio/upload/route.ts",
      "route": "/api/portfolio/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas",
        "@/lib/security/rate-limiter",
        "@/lib/portfolio/processing-queue"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/predictive-analytics/route.ts",
      "route": "/api/predictive-analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ml/prediction/predictive-modeling-system",
        "@/lib/ml/prediction/booking-predictor",
        "@/lib/ml/prediction/revenue-forecaster",
        "@/lib/ml/prediction/pricing-optimizer",
        "@/lib/ml/prediction/resource-planner",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/presence/__tests__/api-endpoints.test.ts",
      "route": "/api/presence/__tests__",
      "fileName": "api-endpoints.test.ts",
      "type": "unknown",
      "imports": [
        "../track/route",
        "../users/route",
        "../settings/route",
        "../analytics/route"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/presence/analytics/route.ts",
      "route": "/api/presence/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/presence/activity-tracker",
        "@/lib/presence/permission-service",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/presence/settings/route.ts",
      "route": "/api/presence/settings",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/presence/presence-manager",
        "@/lib/presence/permission-service",
        "@/lib/presence/activity-tracker",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/presence/track/route.ts",
      "route": "/api/presence/track",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/presence/presence-manager",
        "@/lib/presence/activity-tracker",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/presence/users/route.ts",
      "route": "/api/presence/users",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/presence/presence-manager",
        "@/lib/presence/permission-service",
        "@/lib/presence/activity-tracker",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/privacy/client-info/route.ts",
      "route": "/api/privacy/client-info",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/privacy/consent/route.ts",
      "route": "/api/privacy/consent",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/compliance/audit/tamper-proof-logging"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/privacy/export/[id]/route.ts",
      "route": "/api/privacy/export/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/privacy/requests/route.ts",
      "route": "/api/privacy/requests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/compliance/gdpr/data-subject-rights",
        "@/lib/compliance/audit/tamper-proof-logging",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/progress/charts/route.ts",
      "route": "/api/progress/charts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/progress/route.ts",
      "route": "/api/progress",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/push-notifications/route.ts",
      "route": "/api/push-notifications",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/push-notification-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/push-notifications/subscribe/route.ts",
      "route": "/api/push-notifications/subscribe",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/push-notifications/unsubscribe/route.ts",
      "route": "/api/push-notifications/unsubscribe",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/push-notifications/vapid-key/route.ts",
      "route": "/api/push-notifications/vapid-key",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pwa/install-complete/route.ts",
      "route": "/api/pwa/install-complete",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pwa/install-prompt/route.ts",
      "route": "/api/pwa/install-prompt",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/pwa/usage-metrics/route.ts",
      "route": "/api/pwa/usage-metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/quality-dashboard/route.ts",
      "route": "/api/quality-dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../monitoring/production-quality-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/realtime/status/route.ts",
      "route": "/api/realtime/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/realtime/RealtimeSubscriptionManager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/realtime/subscribe/route.ts",
      "route": "/api/realtime/subscribe",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/realtime/RealtimeSubscriptionManager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/realtime/unsubscribe/route.ts",
      "route": "/api/realtime/unsubscribe",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/realtime/RealtimeSubscriptionManager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/receipts/scan/route.ts",
      "route": "/api/receipts/scan",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/receipts/upload/route.ts",
      "route": "/api/receipts/upload",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/recovery/restore/route.ts",
      "route": "/api/recovery/restore",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/backup/DisasterRecoveryEngine",
        "@/lib/services/backup/BackupValidationService",
        "@/lib/services/backup/EmergencyRecoveryService"
      ],
      "exports": [
        "runtime",
        "maxDuration"
      ],
      "components": []
    },
    {
      "path": "src/app/api/referrals/[code]/route.ts",
      "route": "/api/referrals/[code]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/referrals/referral-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/referrals/analytics/[programId]/route.ts",
      "route": "/api/referrals/analytics/[programId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/referrals/analytics/route.ts",
      "route": "/api/referrals/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/services/ReferralTrackingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/referrals/convert/route.ts",
      "route": "/api/referrals/convert",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/services/ReferralTrackingService",
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/referrals/create/route.ts",
      "route": "/api/referrals/create",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter/sliding-window",
        "@/lib/security/xss-protection",
        "@/types/referrals",
        "@/lib/validations/referrals"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "CreateReferralResponse"
      ]
    },
    {
      "path": "src/app/api/referrals/create-link/route.ts",
      "route": "/api/referrals/create-link",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/options",
        "@/lib/validation/middleware",
        "@/lib/validation/referral-schemas",
        "@/services/referral-tracking"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic",
        "revalidate"
      ],
      "components": []
    },
    {
      "path": "src/app/api/referrals/generate/route.ts",
      "route": "/api/referrals/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/services/ReferralTrackingService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/referrals/leaderboard/route.ts",
      "route": "/api/referrals/leaderboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/referral-schemas",
        "@/services/referral-tracking"
      ],
      "exports": [
        "GET",
        "runtime",
        "dynamic",
        "revalidate"
      ],
      "components": []
    },
    {
      "path": "src/app/api/referrals/route.ts",
      "route": "/api/referrals",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/referrals/referral-engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/referrals/stats/route.ts",
      "route": "/api/referrals/stats",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/options",
        "@/lib/validation/middleware",
        "@/lib/validation/referral-schemas",
        "@/services/referral-tracking"
      ],
      "exports": [
        "GET",
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/referrals/track-conversion/route.ts",
      "route": "/api/referrals/track-conversion",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/referral-schemas",
        "@/services/referral-tracking"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic",
        "revalidate"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reports/generate/route.ts",
      "route": "/api/reports/generate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/reports/ReportingEngineFactory",
        "../../../../types/reporting-backend"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/reports/schedule/route.ts",
      "route": "/api/reports/schedule",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/reports/ReportingEngineFactory",
        "../../../../types/reporting-backend"
      ],
      "exports": [],
      "components": [
        "Date"
      ]
    },
    {
      "path": "src/app/api/reviews/analytics/[campaignId]/route.ts",
      "route": "/api/reviews/analytics/[campaignId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/security",
        "@/lib/reviews/review-engine"
      ],
      "exports": [
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reviews/campaigns/[id]/route.ts",
      "route": "/api/reviews/campaigns/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/security",
        "@/lib/middleware/audit",
        "@/lib/supabase/server",
        "@/lib/validations/review-schemas"
      ],
      "exports": [
        "GET",
        "PUT",
        "DELETE"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reviews/campaigns/create/action.ts",
      "route": "/api/reviews/campaigns/create",
      "fileName": "action.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validations/review-schemas",
        "@/lib/supabase/server",
        "@/lib/auth/server-utils"
      ],
      "exports": [
        "createReviewCampaign",
        "updateReviewCampaign"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reviews/campaigns/route.ts",
      "route": "/api/reviews/campaigns",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/security",
        "@/lib/middleware/audit",
        "@/lib/supabase/server",
        "@/lib/validations/review-schemas"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reviews/collect/route.ts",
      "route": "/api/reviews/collect",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/security",
        "@/lib/reviews/review-engine",
        "@/lib/validations/review-schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reviews/request/[token]/route.ts",
      "route": "/api/reviews/request/[token]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/security",
        "@/lib/reviews/review-engine",
        "@/lib/supabase/server"
      ],
      "exports": [
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reviews/request/send/route.ts",
      "route": "/api/reviews/request/send",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/security",
        "@/lib/middleware/audit",
        "@/lib/reviews/review-engine",
        "@/lib/validations/review-schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/reviews/status/route.ts",
      "route": "/api/reviews/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/reviews/webhooks/email/route.ts",
      "route": "/api/reviews/webhooks/email",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/webhooks/webhook-manager",
        "@/lib/security/webhook-validation",
        "@/lib/reviews/email-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/reviews/webhooks/facebook/route.ts",
      "route": "/api/reviews/webhooks/facebook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/webhooks/webhook-manager",
        "@/lib/security/webhook-validation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/reviews/webhooks/google/route.ts",
      "route": "/api/reviews/webhooks/google",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/webhooks/webhook-manager",
        "@/lib/security/webhook-validation",
        "@/lib/security/webhook-validation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/reviews/webhooks/platforms/route.ts",
      "route": "/api/reviews/webhooks/platforms",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/middleware/security",
        "@/lib/middleware/audit",
        "@/lib/reviews/platform-integrations",
        "@/lib/validations/review-schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/analytics/route.ts",
      "route": "/api/rsvp/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/analytics/high-performance-rsvp-analytics"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/custom-questions/route.ts",
      "route": "/api/rsvp/custom-questions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/events/[id]/route.ts",
      "route": "/api/rsvp/events/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/events/route.ts",
      "route": "/api/rsvp/events",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/export/route.ts",
      "route": "/api/rsvp/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/households/route.ts",
      "route": "/api/rsvp/households",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/invitations/route.ts",
      "route": "/api/rsvp/invitations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/plus-ones/route.ts",
      "route": "/api/rsvp/plus-ones",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/public/[code]/route.ts",
      "route": "/api/rsvp/public/[code]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/reminders/route.ts",
      "route": "/api/rsvp/reminders",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/responses/route.ts",
      "route": "/api/rsvp/responses",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/vendor-report/route.ts",
      "route": "/api/rsvp/vendor-report",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/rsvp/waitlist/route.ts",
      "route": "/api/rsvp/waitlist",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/waitlistService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/scalability/actions/scale/route.ts",
      "route": "/api/scalability/actions/scale",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/scalability/backend/intelligent-auto-scaling-engine",
        "@/lib/scalability/backend/real-time-performance-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/scalability/metrics/realtime/route.ts",
      "route": "/api/scalability/metrics/realtime",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/scalability/backend/intelligent-auto-scaling-engine",
        "@/lib/scalability/backend/real-time-performance-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/search/advanced/route.ts",
      "route": "/api/search/advanced",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/search/AdvancedSearchService",
        "@/lib/services/search/SearchAnalytics",
        "@/lib/services/search/RelevanceScoring"
      ],
      "exports": [
        "dynamic",
        "runtime"
      ],
      "components": []
    },
    {
      "path": "src/app/api/search/analytics/route.ts",
      "route": "/api/search/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/search/SearchAnalytics"
      ],
      "exports": [
        "dynamic"
      ],
      "components": [
        "SearchMetric"
      ]
    },
    {
      "path": "src/app/api/search/facets/route.ts",
      "route": "/api/search/facets",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/search/FacetedSearchEngine"
      ],
      "exports": [
        "dynamic"
      ],
      "components": [
        "NextResponse",
        "Facet"
      ]
    },
    {
      "path": "src/app/api/search/indexing/route.ts",
      "route": "/api/search/indexing",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/search/SearchIndexingService"
      ],
      "exports": [
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/search/route.ts",
      "route": "/api/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/search/suggestions/route.ts",
      "route": "/api/search/suggestions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [
        "dynamic"
      ],
      "components": [
        "SuggestionItem"
      ]
    },
    {
      "path": "src/app/api/seating/arrangements/[id]/route.ts",
      "route": "/api/seating/arrangements/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/seating/mobile/optimize/route.ts",
      "route": "/api/seating/mobile/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware",
        "@/lib/cache/seating-redis-cache",
        "@/lib/monitoring/performance-monitor"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic",
        "maxDuration"
      ],
      "components": []
    },
    {
      "path": "src/app/api/seating/optimize/route.ts",
      "route": "/api/seating/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/algorithms/seating-optimization",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/seating/optimize-v2/route.ts",
      "route": "/api/seating/optimize-v2",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware",
        "@/lib/monitoring/performance-monitor",
        "@/lib/algorithms/ml-seating-optimizer",
        "@/lib/algorithms/genetic-seating-optimizer",
        "@/lib/algorithms/high-performance-seating-optimizer",
        "@/lib/cache/seating-redis-cache",
        "@/lib/algorithms/batch-seating-processor"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic",
        "maxDuration"
      ],
      "components": []
    },
    {
      "path": "src/app/api/seating/validate/route.ts",
      "route": "/api/seating/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/algorithms/seating-optimization",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/sections/[id]/visibility/route.ts",
      "route": "/api/sections/[id]/visibility",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/section-visibility-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/sections/config/route.ts",
      "route": "/api/sections/config",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/config-engine",
        "@/types/section-config"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/sections/permissions/route.ts",
      "route": "/api/sections/permissions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/config-engine",
        "@/types/section-config"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/security/alerts/route.ts",
      "route": "/api/security/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/utils/supabase/server",
        "@/lib/security/incident-response-system",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/security/audit/events/route.ts",
      "route": "/api/security/audit/events",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/AuditSecurityManager",
        "@/lib/security/SecurityMonitoringService",
        "@/lib/security/SecurityLayerInterface"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/security/automated-monitoring/route.ts",
      "route": "/api/security/automated-monitoring",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/automated-incident-detection.service",
        "@/lib/services/notification-workflow-engine.service"
      ],
      "exports": [],
      "components": [
        "Database",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/security/celebrity/monitor/route.ts",
      "route": "/api/security/celebrity/monitor",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/AuditSecurityManager",
        "@/lib/security/SecurityMonitoringService",
        "@/lib/security/AlertingService",
        "@/lib/security/SecurityLayerInterface"
      ],
      "exports": [],
      "components": [
        "CelebrityThreatProfile"
      ]
    },
    {
      "path": "src/app/api/security/compliance/report/route.ts",
      "route": "/api/security/compliance/report",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/AuditSecurityManager",
        "@/lib/security/SecurityMonitoringService",
        "@/lib/security/SecurityLayerInterface"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/security/incidents/route.ts",
      "route": "/api/security/incidents",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/utils/supabase/server",
        "@/lib/security/incident-response-system",
        "@/lib/security/evidence-preservation",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/security/metrics/route.ts",
      "route": "/api/security/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/advanced-threat-detection"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/security/multi-jurisdiction-compliance/route.ts",
      "route": "/api/security/multi-jurisdiction-compliance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/multi-jurisdiction-compliance.service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/security/pci-compliance/route.ts",
      "route": "/api/security/pci-compliance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/pci-dss-compliance",
        "@/lib/comprehensive-security-middleware"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/security/status/real-time/route.ts",
      "route": "/api/security/status/real-time",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/AuditSecurityManager",
        "@/lib/security/SecurityMonitoringService",
        "@/lib/security/SecurityMetrics",
        "@/lib/security/SecurityLayerInterface"
      ],
      "exports": [],
      "components": [
        "SecuritySeverity"
      ]
    },
    {
      "path": "src/app/api/security/vendor/validate/route.ts",
      "route": "/api/security/vendor/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/security/AuditSecurityManager",
        "@/lib/security/SecurityMonitoringService",
        "@/lib/security/SecurityLayerInterface"
      ],
      "exports": [],
      "components": [
        "VendorSecurityProfile",
        "VendorValidationResult"
      ]
    },
    {
      "path": "src/app/api/share/[token]/route.ts",
      "route": "/api/share/[token]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/utils/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/sms/config/route.ts",
      "route": "/api/sms/config",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/sms-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/sms/inbound/route.ts",
      "route": "/api/sms/inbound",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/sms/twilio"
      ],
      "exports": [],
      "components": [
        "Response"
      ]
    },
    {
      "path": "src/app/api/sms/manage/route.ts",
      "route": "/api/sms/manage",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/sms/twilio"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/sms/route.ts",
      "route": "/api/sms",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/sms-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/sms/webhook/route.ts",
      "route": "/api/sms/webhook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/sms/twilio"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/stripe/create-checkout-session/route.ts",
      "route": "/api/stripe/create-checkout-session",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/api-middleware",
        "@/lib/crypto-utils",
        "@/lib/security-audit-logger",
        "@/lib/stripe-config"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/stripe/webhook/route.ts",
      "route": "/api/stripe/webhook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/email/service",
        "@/lib/crypto-utils",
        "@/lib/security-audit-logger",
        "@/lib/stripe-config"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/supplier/dashboard-stats/route.ts",
      "route": "/api/supplier/dashboard-stats",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/supplier/domain/route.ts",
      "route": "/api/supplier/domain",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/supplier/domain/ssl-status/route.ts",
      "route": "/api/supplier/domain/ssl-status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "SSLCheckResult"
      ]
    },
    {
      "path": "src/app/api/supplier/domain/validate/route.ts",
      "route": "/api/supplier/domain/validate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/supplier/notifications/route.ts",
      "route": "/api/supplier/notifications",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/supplier/profile/route.ts",
      "route": "/api/supplier/profile",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/supplier/schedule/route.ts",
      "route": "/api/supplier/schedule",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/[id]/route.ts",
      "route": "/api/suppliers/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/[id]/schedule/confirm/route.ts",
      "route": "/api/suppliers/[id]/schedule/confirm",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/[id]/schedule/route.ts",
      "route": "/api/suppliers/[id]/schedule",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/[id]/service-area/route.ts",
      "route": "/api/suppliers/[id]/service-area",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/service-radius-calculator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/[id]/service-check/route.ts",
      "route": "/api/suppliers/[id]/service-check",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/service-radius-calculator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/portal/route.ts",
      "route": "/api/suppliers/portal",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/supplier-auth-service",
        "@/lib/portal/supplier-portal-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/route.ts",
      "route": "/api/suppliers",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedule/[id]/calendar.ics/route.ts",
      "route": "/api/suppliers/schedule/[id]/calendar.ics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/calendar/supplier-calendar-invite-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedule/approval/route.ts",
      "route": "/api/suppliers/schedule/approval",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/workflow/schedule-approval-workflow-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedule/calendar-invites/route.ts",
      "route": "/api/suppliers/schedule/calendar-invites",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/calendar/supplier-calendar-invite-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedule/feedback/route.ts",
      "route": "/api/suppliers/schedule/feedback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/feedback/supplier-schedule-feedback-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedule/google-calendar/route.ts",
      "route": "/api/suppliers/schedule/google-calendar",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/calendar/supplier-google-calendar-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedule/notifications/route.ts",
      "route": "/api/suppliers/schedule/notifications",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/email/supplier-schedule-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedule/sms/route.ts",
      "route": "/api/suppliers/schedule/sms",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/messaging/supplier-schedule-sms-service",
        "@/lib/email/supplier-schedule-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/schedules/[id]/confirm/route.ts",
      "route": "/api/suppliers/schedules/[id]/confirm",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/search/area/route.ts",
      "route": "/api/suppliers/search/area",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/geographic-search-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/suppliers/search/location/route.ts",
      "route": "/api/suppliers/search/location",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/geographic-search-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/ai/categorize/route.ts",
      "route": "/api/support/ai/categorize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/escalation/route.ts",
      "route": "/api/support/escalation",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/metrics/agents/route.ts",
      "route": "/api/support/metrics/agents",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/metrics/system/route.ts",
      "route": "/api/support/metrics/system",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/metrics/trends/route.ts",
      "route": "/api/support/metrics/trends",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/tickets/[id]/assign/route.ts",
      "route": "/api/support/tickets/[id]/assign",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/tickets/[id]/comments/route.ts",
      "route": "/api/support/tickets/[id]/comments",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/tickets/[id]/messages/route.ts",
      "route": "/api/support/tickets/[id]/messages",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/tickets/[id]/route.ts",
      "route": "/api/support/tickets/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/support/tickets/route.ts",
      "route": "/api/support/tickets",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/support/ticket-manager",
        "@/lib/support/ticket-router",
        "@/lib/support/sla-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/sync/business-metrics/route.ts",
      "route": "/api/sync/business-metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "NextResponse",
        "SyncResponse"
      ]
    },
    {
      "path": "src/app/api/sync/device-register/route.ts",
      "route": "/api/sync/device-register",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "NextResponse",
        "DeviceResponse"
      ]
    },
    {
      "path": "src/app/api/sync/realtime/route.ts",
      "route": "/api/sync/realtime",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "Response",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/sync/status/route.ts",
      "route": "/api/sync/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": [
        "NextResponse",
        "SyncStatusResponse",
        "SyncStatus"
      ]
    },
    {
      "path": "src/app/api/system/health/route.ts",
      "route": "/api/system/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/system-stability/process-manager",
        "@/lib/system-stability/error-handler",
        "@/lib/system-stability/error-handler"
      ],
      "exports": [
        "GET",
        "runtime",
        "dynamic"
      ],
      "components": [
        "NextResponse",
        "HealthCheck",
        "HealthCheckResult"
      ]
    },
    {
      "path": "src/app/api/tags/[id]/route.ts",
      "route": "/api/tags/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/security/input-validation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tags/route.ts",
      "route": "/api/tags",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/rate-limit",
        "@/lib/security/input-validation"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/[id]/progress/route.ts",
      "route": "/api/tasks/[id]/progress",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "TaskBottleneckAnalysis"
      ]
    },
    {
      "path": "src/app/api/tasks/[id]/status/route.ts",
      "route": "/api/tasks/[id]/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/schemas"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/tasks/analytics/route.ts",
      "route": "/api/tasks/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/task-analytics-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/automation/route.ts",
      "route": "/api/tasks/automation",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/task-automation-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/bulk/route.ts",
      "route": "/api/tasks/bulk",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [
        "transformedData"
      ],
      "components": []
    },
    {
      "path": "src/app/api/tasks/calendar/route.ts",
      "route": "/api/tasks/calendar",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/calendar-integration-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/categories/bulk/route.ts",
      "route": "/api/tasks/categories/bulk",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/categoryOptimization",
        "@/lib/analytics/category-performance/categoryAnalytics"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/categories/suggest/route.ts",
      "route": "/api/tasks/categories/suggest",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/ai/task-categorization/categorySuggestionEngine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/dependencies/route.ts",
      "route": "/api/tasks/dependencies",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/task-dependency-service",
        "@/types/workflow"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/reminders/route.ts",
      "route": "/api/tasks/reminders",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/task-reminder-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tasks/route.ts",
      "route": "/api/tasks",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/task-creation-service",
        "@/lib/services/task-template-service",
        "@/middleware/task-security"
      ],
      "exports": [
        "runtime"
      ],
      "components": []
    },
    {
      "path": "src/app/api/tasks/templates/route.ts",
      "route": "/api/tasks/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/task-template-service",
        "@/middleware/task-security",
        "@/types/workflow"
      ],
      "exports": [
        "runtime"
      ],
      "components": []
    },
    {
      "path": "src/app/api/team/members/route.ts",
      "route": "/api/team/members",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/rbac",
        "@/lib/services/teamService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/team/route.ts",
      "route": "/api/team",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth/rbac",
        "@/lib/services/teamService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/templates/[id]/process/route.ts",
      "route": "/api/templates/[id]/process",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/support/template-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/templates/[id]/route.ts",
      "route": "/api/templates/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/email-connector",
        "@/lib/services/sms-connector",
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/templates/[id]/test/route.ts",
      "route": "/api/templates/[id]/test",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/email-connector",
        "@/lib/services/sms-connector"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/templates/categories/route.ts",
      "route": "/api/templates/categories",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/templates/dashboard/route.ts",
      "route": "/api/templates/dashboard",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/templates/route.ts",
      "route": "/api/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/email-connector",
        "@/lib/services/sms-connector",
        "@/types/database"
      ],
      "exports": [],
      "components": [
        "Database"
      ]
    },
    {
      "path": "src/app/api/templates/suggestions/route.ts",
      "route": "/api/templates/suggestions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/support/template-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/test/api-monitoring/route.ts",
      "route": "/api/test/api-monitoring",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/api-usage-alerts"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/test/decryption/route.ts",
      "route": "/api/test/decryption",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/test/encryption/route.ts",
      "route": "/api/test/encryption",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/security/encryption"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/test-services/route.ts",
      "route": "/api/test-services",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/email-service",
        "@/lib/services/sms-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tickets/[id]/messages/route.ts",
      "route": "/api/tickets/[id]/messages",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/support/sla-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tickets/[id]/route.ts",
      "route": "/api/tickets/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/support/sla-monitor",
        "@/lib/support/ticket-router"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tickets/route.ts",
      "route": "/api/tickets",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase",
        "@/lib/support/ticket-manager",
        "@/lib/support/ticket-router",
        "@/lib/support/sla-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/timeline/[id]/auto-schedule/route.ts",
      "route": "/api/timeline/[id]/auto-schedule",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/autoSchedulingService"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "AutoScheduleResponse"
      ]
    },
    {
      "path": "src/app/api/timeline/[id]/conflicts/route.ts",
      "route": "/api/timeline/[id]/conflicts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": [
        "ConflictContext",
        "ConflictAnalysis"
      ]
    },
    {
      "path": "src/app/api/timeline/[id]/events/__tests__/timeline-events.test.ts",
      "route": "/api/timeline/[id]/events/__tests__",
      "fileName": "timeline-events.test.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "NextRequest",
        "EventType"
      ]
    },
    {
      "path": "src/app/api/timeline/[id]/export/route.ts",
      "route": "/api/timeline/[id]/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/timelineExportService",
        "@/lib/services/timelineExportService"
      ],
      "exports": [
        "exportResult"
      ],
      "components": [
        "SecureExportResult"
      ]
    },
    {
      "path": "src/app/api/timeline/[id]/route.ts",
      "route": "/api/timeline/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/timeline/[id]/schedule-suggestions/route.ts",
      "route": "/api/timeline/[id]/schedule-suggestions",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/autoSchedulingService",
        "@/lib/services/timeline-conflict-service"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "SuggestionsResponse",
        "SchedulingSuggestion",
        "EventType"
      ]
    },
    {
      "path": "src/app/api/timeline/[id]/supplier-schedules/route.ts",
      "route": "/api/timeline/[id]/supplier-schedules",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware"
      ],
      "exports": [
        "POST",
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/timeline/__tests__/timeline-crud.test.ts",
      "route": "/api/timeline/__tests__",
      "fileName": "timeline-crud.test.ts",
      "type": "unknown",
      "imports": [
        "../route",
        "../[id]/route",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "NextRequest"
      ]
    },
    {
      "path": "src/app/api/timeline/route.ts",
      "route": "/api/timeline",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/middleware",
        "@/lib/validations/wedding-forms"
      ],
      "exports": [
        "GET",
        "POST",
        "runtime",
        "dynamic"
      ],
      "components": []
    },
    {
      "path": "src/app/api/touch/analytics/route.ts",
      "route": "/api/touch/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/touch/performance/benchmark/route.ts",
      "route": "/api/touch/performance/benchmark",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/touch/performance/route.ts",
      "route": "/api/touch/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/touch/preferences/recommendations/route.ts",
      "route": "/api/touch/preferences/recommendations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/touch/preferences/route.ts",
      "route": "/api/touch/preferences",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/travel/calculate/route.ts",
      "route": "/api/travel/calculate",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/maps/route-calculator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/travel/optimize/route.ts",
      "route": "/api/travel/optimize",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/maps/route-calculator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/travel/time/route.ts",
      "route": "/api/travel/time",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/maps/route-calculator"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/trial/convert/route.ts",
      "route": "/api/trial/convert",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/trial/TrialService",
        "@/lib/services/subscriptionService",
        "@/lib/stripe/config",
        "@/lib/middleware/rateLimiter",
        "@/lib/middleware/jwtValidation"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/trial/milestones/route.ts",
      "route": "/api/trial/milestones",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/trial/TrialService",
        "@/lib/services/subscriptionService",
        "@/types/trial",
        "@/lib/stripe/config",
        "@/lib/middleware/rateLimiter",
        "@/lib/middleware/jwtValidation"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/trial/start/route.ts",
      "route": "/api/trial/start",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/trial/TrialService",
        "../../../../lib/services/subscriptionService",
        "../../../../types/trial",
        "../../../../lib/stripe/config",
        "../../../../lib/middleware/rateLimiter",
        "../../../../lib/middleware/jwtValidation"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/trial/status/route.ts",
      "route": "/api/trial/status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/trial/TrialService",
        "@/lib/services/subscriptionService",
        "@/lib/stripe/config",
        "@/lib/middleware/rateLimiter",
        "@/lib/middleware/jwtValidation"
      ],
      "exports": [
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/trial/usage/route.ts",
      "route": "/api/trial/usage",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/trial/TrialService",
        "@/lib/services/subscriptionService",
        "@/types/trial",
        "@/lib/stripe/config",
        "@/lib/middleware/rateLimiter",
        "@/lib/middleware/jwtValidation"
      ],
      "exports": [
        "POST",
        "GET"
      ],
      "components": []
    },
    {
      "path": "src/app/api/tutorials/progress/route.ts",
      "route": "/api/tutorials/progress",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/tutorials/start/route.ts",
      "route": "/api/tutorials/start",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/usage-analytics/route.ts",
      "route": "/api/usage-analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/api-analytics-service",
        "@/lib/middleware/api-usage-tracker"
      ],
      "exports": [
        "GET_WithTracking",
        "POST_WithTracking"
      ],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/vendor-categories/[id]/route.ts",
      "route": "/api/vendor-categories/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendor-categories/route.ts",
      "route": "/api/vendor-categories",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendor-portal/communications/route.ts",
      "route": "/api/vendor-portal/communications",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/notifications/engine"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendor-portal/performance/route.ts",
      "route": "/api/vendor-portal/performance",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendor-portal/weddings/route.ts",
      "route": "/api/vendor-portal/weddings",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendors/connections/discover/route.ts",
      "route": "/api/vendors/connections/discover",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendors/connections/request/route.ts",
      "route": "/api/vendors/connections/request",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendors/connections/requests/route.ts",
      "route": "/api/vendors/connections/requests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/vendors/connections/respond/route.ts",
      "route": "/api/vendors/connections/respond",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/venues/search/route.ts",
      "route": "/api/venues/search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/google-places-service",
        "@/types/venue"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/versions/migration-plan/route.ts",
      "route": "/api/versions/migration-plan",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/api-versions"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/ab-testing/route.ts",
      "route": "/api/viral/ab-testing",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/services/viral-ab-testing-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/ab-testing/select/route.ts",
      "route": "/api/viral/ab-testing/select",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/services/viral-ab-testing-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/ab-tests/[testId]/results/route.ts",
      "route": "/api/viral/ab-tests/[testId]/results",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/conversion-optimizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/ab-tests/route.ts",
      "route": "/api/viral/ab-tests",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/conversion-optimizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/alerts/route.ts",
      "route": "/api/viral/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/viral-reporting-service",
        "@/lib/services/viral-coefficient-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/analytics/route.ts",
      "route": "/api/viral/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/services/viral-analytics-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/attribution/[userId]/route.ts",
      "route": "/api/viral/attribution/[userId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/validation/schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/attribution/route.ts",
      "route": "/api/viral/attribution",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/validation/schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/invitations/route.ts",
      "route": "/api/viral/invitations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/invitation-manager"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/invitations/track/route.ts",
      "route": "/api/viral/invitations/track",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/invitation-tracker"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/invite/route.ts",
      "route": "/api/viral/invite",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/validation/schemas"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/metrics/route.ts",
      "route": "/api/viral/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/optimization/route.ts",
      "route": "/api/viral/optimization",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/conversion-optimizer"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/reports/route.ts",
      "route": "/api/viral/reports",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/viral-reporting-service",
        "@/lib/services/viral-coefficient-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/rewards/route.ts",
      "route": "/api/viral/rewards",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/services/referral-reward-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/viral/super-connectors/route.ts",
      "route": "/api/viral/super-connectors",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/auth",
        "@/lib/ratelimit",
        "@/lib/services/super-connector-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/weather/alerts/route.ts",
      "route": "/api/weather/alerts",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/types/weather"
      ],
      "exports": [],
      "components": [
        "WeatherNotification"
      ]
    },
    {
      "path": "src/app/api/weather/route.ts",
      "route": "/api/weather",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/weather/openweather-service",
        "@/types/weather"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/analytics/route.ts",
      "route": "/api/webhooks/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "../../../../lib/api/rate-limit-middleware",
        "../../../../types/integrations"
      ],
      "exports": [],
      "components": [
        "ProcessedWebhookResult"
      ]
    },
    {
      "path": "src/app/api/webhooks/broadcast/__tests__/email-webhook.test.ts",
      "route": "/api/webhooks/broadcast/__tests__",
      "fileName": "email-webhook.test.ts",
      "type": "unknown",
      "imports": [
        "../email/route",
        "@/__tests__/utils/secure-test-env"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/broadcast/email/route.ts",
      "route": "/api/webhooks/broadcast/email",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/calendar/google/route.ts",
      "route": "/api/webhooks/calendar/google",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/database/IntegrationDataManager",
        "@/lib/integrations/ConflictDetectionService",
        "@/lib/integrations/NotificationService",
        "@/types/integrations"
      ],
      "exports": [],
      "components": [
        "GoogleCalendarEventData"
      ]
    },
    {
      "path": "src/app/api/webhooks/calendar/outlook/route.ts",
      "route": "/api/webhooks/calendar/outlook",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/database/IntegrationDataManager",
        "@/lib/integrations/ConflictDetectionService",
        "@/lib/integrations/NotificationService",
        "@/types/integrations"
      ],
      "exports": [],
      "components": [
        "OutlookCalendarEvent"
      ]
    },
    {
      "path": "src/app/api/webhooks/calendar-presence/route.ts",
      "route": "/api/webhooks/calendar-presence",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/auth/oauth-validator",
        "@/lib/security/encryption",
        "@/lib/integrations/presence/calendar-sync",
        "@/lib/integrations/audit-logger",
        "@/lib/security/rate-limiting"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/channel-events/route.ts",
      "route": "/api/webhooks/channel-events",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/websocket/webhook-receiver",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/deliver/route.ts",
      "route": "/api/webhooks/deliver",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/webhooks/webhook-manager",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/webhooks/email-tracking/route.ts",
      "route": "/api/webhooks/email-tracking",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/health-intervention-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/endpoints/route.ts",
      "route": "/api/webhooks/endpoints",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/webhooks/webhook-security",
        "@/lib/rate-limit"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/faq/extraction-complete/route.ts",
      "route": "/api/webhooks/faq/extraction-complete",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/faq-webhook-processor",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/faq/health/route.ts",
      "route": "/api/webhooks/faq/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/integrations/integration-health-monitor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/faq/processing-status/route.ts",
      "route": "/api/webhooks/faq/processing-status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/faq-webhook-processor",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/faq/sync-status/route.ts",
      "route": "/api/webhooks/faq/sync-status",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/faq-webhook-processor",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/ltv/payments/route.ts",
      "route": "/api/webhooks/ltv/payments",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/ltv-data-pipeline",
        "@/lib/integrations/payment-system-integrator"
      ],
      "exports": [],
      "components": [
        "WebhookProcessingResult"
      ]
    },
    {
      "path": "src/app/api/webhooks/places/route.ts",
      "route": "/api/webhooks/places",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/places-wedding-sync",
        "@/lib/services/venue-coordination-service",
        "@/lib/integrations/location-services-hub"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/resend/route.ts",
      "route": "/api/webhooks/resend",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/journey-service-bridge"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/retention/route.ts",
      "route": "/api/webhooks/retention",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/email/EmailProviderService",
        "@/lib/integrations/communication/CommunicationService"
      ],
      "exports": [],
      "components": [
        "WebhookValidation"
      ]
    },
    {
      "path": "src/app/api/webhooks/route.ts",
      "route": "/api/webhooks",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/api/response-schemas",
        "@/lib/integrations/webhook-processor"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/slack-presence/route.ts",
      "route": "/api/webhooks/slack-presence",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/integrations/presence/communication-bridge",
        "@/lib/integrations/audit-logger",
        "@/lib/security/rate-limiting"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/sms/route.ts",
      "route": "/api/webhooks/sms",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/sms-connector"
      ],
      "exports": [],
      "components": [
        "Response",
        "Message"
      ]
    },
    {
      "path": "src/app/api/webhooks/task-updates/route.ts",
      "route": "/api/webhooks/task-updates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/notifications/task-notifications",
        "@/lib/realtime/task-status-realtime",
        "@/lib/security/webhook-validation",
        "@/lib/config/environment"
      ],
      "exports": [],
      "components": [
        "NextResponse",
        "WebhookResponse"
      ]
    },
    {
      "path": "src/app/api/webhooks/test-delivery/route.ts",
      "route": "/api/webhooks/test-delivery",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/webhooks/twilio/route.ts",
      "route": "/api/webhooks/twilio",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/journey-service-bridge",
        "@/lib/services/sms-connector"
      ],
      "exports": [],
      "components": [
        "Response",
        "Message"
      ]
    },
    {
      "path": "src/app/api/webhooks/vercel/route.ts",
      "route": "/api/webhooks/vercel",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/integrations/VercelWebhookHandler",
        "@/lib/supabase/client"
      ],
      "exports": [],
      "components": [
        "T",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/webhooks/whatsapp/route.ts",
      "route": "/api/webhooks/whatsapp",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/whatsapp/service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/website/domains/route.ts",
      "route": "/api/website/domains",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/website/domains/verify/route.ts",
      "route": "/api/website/domains/verify",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "DomainVerificationResult"
      ]
    },
    {
      "path": "src/app/api/websocket/channels/broadcast/route.ts",
      "route": "/api/websocket/channels/broadcast",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/supabase/server",
        "@/lib/websocket/channel-manager",
        "@/lib/websocket/message-queue",
        "@/lib/rate-limit",
        "@/lib/monitoring/logger"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/websocket/channels/create/route.ts",
      "route": "/api/websocket/channels/create",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/supabase/server",
        "@/lib/websocket/channel-manager",
        "@/lib/rate-limit",
        "@/lib/monitoring/logger"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/websocket/channels/subscribe/route.ts",
      "route": "/api/websocket/channels/subscribe",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/supabase/server",
        "@/lib/websocket/channel-manager",
        "@/lib/rate-limit",
        "@/lib/monitoring/logger"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/websocket/channels/unsubscribe/route.ts",
      "route": "/api/websocket/channels/unsubscribe",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/supabase/server",
        "@/lib/websocket/channel-manager",
        "@/lib/rate-limit",
        "@/lib/monitoring/logger"
      ],
      "exports": [
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/websocket/health/route.ts",
      "route": "/api/websocket/health",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/supabase/server",
        "@/lib/websocket/presence-manager",
        "@/lib/rate-limit",
        "@/lib/monitoring/logger"
      ],
      "exports": [
        "GET",
        "POST"
      ],
      "components": []
    },
    {
      "path": "src/app/api/wedding-website/analytics/route.ts",
      "route": "/api/wedding-website/analytics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "AnalyticsConfig",
        "AnalyticsMetrics"
      ]
    },
    {
      "path": "src/app/api/wedding-website/cdn/route.ts",
      "route": "/api/wedding-website/cdn",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "CDNConfig",
        "CDNStats"
      ]
    },
    {
      "path": "src/app/api/wedding-website/domain/route.ts",
      "route": "/api/wedding-website/domain",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "DomainStatus"
      ]
    },
    {
      "path": "src/app/api/wedding-website/guests/sync/route.ts",
      "route": "/api/wedding-website/guests/sync",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedding-website/photos/route.ts",
      "route": "/api/wedding-website/photos",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedding-website/route.ts",
      "route": "/api/wedding-website",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedding-website/rsvp/live/route.ts",
      "route": "/api/wedding-website/rsvp/live",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedding-website/ssl/route.ts",
      "route": "/api/wedding-website/ssl",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "SSLCertificate"
      ]
    },
    {
      "path": "src/app/api/wedding-website/translations/route.ts",
      "route": "/api/wedding-website/translations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedding-website/vendors/route.ts",
      "route": "/api/wedding-website/vendors",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedding-website/verify-password/route.ts",
      "route": "/api/wedding-website/verify-password",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedme/budget/export/[exportId]/route.ts",
      "route": "/api/wedme/budget/export/[exportId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/schemas"
      ],
      "exports": [],
      "components": [
        "Response",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/wedme/budget/export/route.ts",
      "route": "/api/wedme/budget/export",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/validation/middleware",
        "@/lib/validation/budget-export-schemas",
        "@/lib/supabase/server"
      ],
      "exports": [
        "POST"
      ],
      "components": [
        "exportId",
        "BudgetData",
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/wedme/budget/export-status/[exportId]/route.ts",
      "route": "/api/wedme/budget/export-status/[exportId]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/validation/schemas"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/wedme/journeys/route.ts",
      "route": "/api/wedme/journeys",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/monitoring/structured-logger"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/wedme/knowledge/voice-search/route.ts",
      "route": "/api/wedme/knowledge/voice-search",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/rate-limiter"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/whatsapp/messages/route.ts",
      "route": "/api/whatsapp/messages",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/whatsapp/service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/whatsapp/privacy/route.ts",
      "route": "/api/whatsapp/privacy",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/whatsapp/privacy-controls"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/whatsapp/route.ts",
      "route": "/api/whatsapp",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/whatsapp-service",
        "@/lib/supabase/server"
      ],
      "exports": [],
      "components": [
        "NextResponse"
      ]
    },
    {
      "path": "src/app/api/whatsapp/templates/route.ts",
      "route": "/api/whatsapp/templates",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/whatsapp/service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/whatsapp/webhooks/route.ts",
      "route": "/api/whatsapp/webhooks",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/whatsapp-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/workflow/delegations/route.ts",
      "route": "/api/workflow/delegations",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/workflow/tasks/[id]/route.ts",
      "route": "/api/workflow/tasks/[id]",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/workflow/tasks/[id]/status-history/route.ts",
      "route": "/api/workflow/tasks/[id]/status-history",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/workflow/tasks/route.ts",
      "route": "/api/workflow/tasks",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/api/workflow/workload/[weddingId]/metrics/route.ts",
      "route": "/api/workflow/workload/[weddingId]/metrics",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/services/workload-tracking-service"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/auth/callback/route.ts",
      "route": "/auth/callback",
      "fileName": "route.ts",
      "type": "unknown",
      "imports": [
        "@/lib/supabase/server",
        "@/lib/services/coupleAuthService"
      ],
      "exports": [],
      "components": []
    },
    {
      "path": "src/app/auth/forgot-password/page.tsx",
      "route": "/auth/forgot-password",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/alert",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Link",
        "ArrowLeft",
        "CardDescription",
        "CardContent",
        "Mail",
        "Button",
        "Label",
        "Input",
        "Alert",
        "CheckCircle",
        "AlertCircle",
        "AlertDescription"
      ]
    },
    {
      "path": "src/app/auth/login/page.tsx",
      "route": "/auth/login",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "HeartIcon",
        "Card",
        "CardContent",
        "Label",
        "Input",
        "Button",
        "Link"
      ]
    },
    {
      "path": "src/app/auth/reset-password/page.tsx",
      "route": "/auth/reset-password",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/alert",
        "@/components/ui/card",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardContent",
        "AlertCircle",
        "Link",
        "Button",
        "CardHeader",
        "CardTitle",
        "ArrowLeft",
        "CardDescription",
        "CheckCircle",
        "Lock",
        "Label",
        "Input",
        "EyeOff",
        "Eye",
        "Progress",
        "Alert",
        "AlertDescription",
        "Suspense",
        "ResetPasswordForm"
      ]
    },
    {
      "path": "src/app/client/dashboard/page.tsx",
      "route": "/client/dashboard",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/demo/DemoBanner",
        "@/lib/demo/config",
        "@/lib/demo/auth"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "WeddingData",
        "VendorConnection",
        "Card",
        "CardContent",
        "Button",
        "DemoBanner",
        "HeartIcon",
        "CalendarIcon",
        "UsersIcon",
        "CurrencyDollarIcon",
        "CheckCircleIcon",
        "CardHeader",
        "CardTitle",
        "CameraIcon",
        "Badge",
        "MapPinIcon",
        "ClockIcon"
      ]
    },
    {
      "path": "src/app/dashboard/analytics/page.tsx",
      "route": "/dashboard/analytics",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "../../../components/analytics/VendorAnalyticsDashboard"
      ],
      "exports": [
        "default",
        "handleExportData"
      ],
      "components": [
        "VendorAnalyticsDashboard"
      ]
    },
    {
      "path": "src/app/dashboard/channels/page.tsx",
      "route": "/dashboard/channels",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/supabase/server",
        "@/components/websocket/ChannelManager"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "ChannelManager"
      ]
    },
    {
      "path": "src/app/dashboard/layout.tsx",
      "route": "/dashboard",
      "fileName": "layout.tsx",
      "type": "layout",
      "imports": [
        "@/lib/supabase/server",
        "@/components/pwa/InstallPrompt",
        "@/components/pwa/ServiceWorkerRegistration",
        "@/components/chatbot/ChatWidget",
        "@/components/ui/sidebar",
        "@/components/ui/avatar",
        "@/components/ui/dropdown"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "HeartIcon",
        "SidebarSection",
        "SidebarItem",
        "HomeIcon",
        "SidebarLabel",
        "UsersIcon",
        "BuildingStorefrontIcon",
        "DocumentTextIcon",
        "FolderIcon",
        "MapIcon",
        "CpuChipIcon",
        "MusicalNoteIcon",
        "ChatBubbleLeftRightIcon",
        "LinkIcon",
        "ChartBarIcon",
        "ShieldCheckIcon",
        "ClipboardDocumentListIcon",
        "ShieldExclamationIcon",
        "Cog8ToothIcon",
        "Dropdown",
        "DropdownButton",
        "Avatar",
        "DropdownMenu",
        "DropdownItem",
        "UserCircleIcon",
        "DropdownLabel",
        "DropdownDivider",
        "ArrowRightStartOnRectangleIcon",
        "InstallPrompt",
        "ServiceWorkerRegistration",
        "ResponsiveChatWidget"
      ]
    },
    {
      "path": "src/app/dashboard/music/page.tsx",
      "route": "/dashboard/music",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/music/MusicDatabase"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "MusicPageStats",
        "MusicTrack",
        "Music",
        "Badge",
        "Sparkles",
        "Button",
        "Settings",
        "Card",
        "CardContent",
        "Heart",
        "Users",
        "Zap",
        "CardHeader",
        "CardTitle",
        "Search",
        "CardDescription",
        "BarChart3",
        "MusicDatabase"
      ]
    },
    {
      "path": "src/app/dashboard/page.tsx",
      "route": "/dashboard",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "ArrowUp",
        "ArrowDown",
        "Icon",
        "StatCard",
        "Button",
        "BarChart3",
        "Activity",
        "ActivityItem",
        "Link",
        "Users",
        "FileText"
      ]
    },
    {
      "path": "src/app/dashboard/pdf-analysis/components/AIAnalysisProgress.tsx",
      "route": "/dashboard/pdf-analysis/components",
      "fileName": "AIAnalysisProgress.tsx",
      "type": "component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/badge",
        "./ProgressComponents"
      ],
      "exports": [
        "AIAnalysisProgress"
      ],
      "components": [
        "AnalysisResult",
        "WebSocket",
        "Card",
        "CardHeader",
        "CardTitle",
        "Sparkles",
        "Badge",
        "ProgressRing",
        "CardContent",
        "ProgressBar",
        "StageIcon",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "StepIndicator",
        "AnalysisMetrics",
        "Button",
        "Download"
      ]
    },
    {
      "path": "src/app/dashboard/pdf-analysis/components/AnalysisResultsDashboard.tsx",
      "route": "/dashboard/pdf-analysis/components",
      "fileName": "AnalysisResultsDashboard.tsx",
      "type": "component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/lib/utils"
      ],
      "exports": [
        "AnalysisResultsDashboard"
      ],
      "components": [
        "AnalysisResult",
        "AnalysisMetrics",
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "Button",
        "Download",
        "CardContent",
        "Brain",
        "TrendingUp",
        "CheckCircle",
        "Star",
        "Sparkles",
        "FileText",
        "Heart",
        "Calendar",
        "Search",
        "Input",
        "CategoryIcon",
        "Badge",
        "Clock",
        "Eye"
      ]
    },
    {
      "path": "src/app/dashboard/pdf-analysis/components/GeneratedFormPreview.tsx",
      "route": "/dashboard/pdf-analysis/components",
      "fileName": "GeneratedFormPreview.tsx",
      "type": "component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "GeneratedFormPreview"
      ],
      "components": [
        "ExtractedField",
        "FormStyle",
        "DeviceViewport",
        "Card",
        "CardHeader",
        "CardTitle",
        "Eye",
        "Badge",
        "Button",
        "RefreshCw",
        "Palette",
        "Download",
        "CardContent",
        "AnimatePresence",
        "Heart",
        "Sparkles"
      ]
    },
    {
      "path": "src/app/dashboard/pdf-analysis/components/PDFAnalysisUploader.tsx",
      "route": "/dashboard/pdf-analysis/components",
      "fileName": "PDFAnalysisUploader.tsx",
      "type": "component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "PDFAnalysisUploader"
      ],
      "components": [
        "PDFFile",
        "HTMLInputElement",
        "Card",
        "CardContent",
        "Upload",
        "Button",
        "FileText",
        "CheckCircle",
        "AlertCircle",
        "X",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/app/dashboard/pdf-analysis/components/ProgressComponents.tsx",
      "route": "/dashboard/pdf-analysis/components",
      "fileName": "ProgressComponents.tsx",
      "type": "component",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "ProgressRing",
        "ProgressBar",
        "StepIndicator",
        "AnalysisMetrics"
      ],
      "components": [
        "CheckCircle",
        "Loader2",
        "AlertCircle",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "ProgressRing"
      ]
    },
    {
      "path": "src/app/dashboard/progress/page.tsx",
      "route": "/dashboard/progress",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/charts/ProgressCharts"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Suspense",
        "ProgressSkeleton",
        "ProgressCharts"
      ]
    },
    {
      "path": "src/app/demo/page.tsx",
      "route": "/demo",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/lib/demo/config",
        "@/lib/demo/auth"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "PersonaCard"
      ]
    },
    {
      "path": "src/app/demoroot/page.tsx",
      "route": "/demoroot",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": []
    },
    {
      "path": "src/app/error.tsx",
      "route": "/",
      "fileName": "error.tsx",
      "type": "error",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/lib/monitoring/error-tracking"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "CardContent",
        "Button",
        "RefreshCw",
        "MessageCircle",
        "Home"
      ]
    },
    {
      "path": "src/app/forgot-password/page.tsx",
      "route": "/forgot-password",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/auth/ForgotPasswordForm"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "ForgotPasswordForm"
      ]
    },
    {
      "path": "src/app/forms/[slug]/page.tsx",
      "route": "/forms/[slug]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/forms/ClientFormSubmission",
        "@/components/ui/card",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardHeader",
        "Clock",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Users",
        "Shield",
        "CheckCircle",
        "ClientFormSubmission"
      ]
    },
    {
      "path": "src/app/forms/[slug]/password/page.tsx",
      "route": "/forms/[slug]/password",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/forms/PasswordProtectedFormAccess"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "PasswordProtectedFormAccess"
      ]
    },
    {
      "path": "src/app/forms/[slug]/receipt/page.tsx",
      "route": "/forms/[slug]/receipt",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardHeader",
        "CheckCircle",
        "CardTitle",
        "CardDescription",
        "Calendar",
        "CardContent",
        "Badge",
        "Users",
        "Mail",
        "Phone",
        "MapPin",
        "Clock",
        "Button",
        "Download"
      ]
    },
    {
      "path": "src/app/forms/builder/page.tsx",
      "route": "/forms/builder",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/LoadingSkeleton",
        "@/types/next15-params"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Suspense",
        "FormBuilderSkeleton",
        "FormBuilder"
      ]
    },
    {
      "path": "src/app/forms/import/page.tsx",
      "route": "/forms/import",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "File",
        "UploadProgress",
        "DetectedField",
        "Sparkles",
        "FileUp",
        "Button",
        "Upload",
        "Loader2",
        "FileText",
        "Settings",
        "CheckCircle",
        "Eye",
        "Save",
        "X"
      ]
    },
    {
      "path": "src/app/forms/test-core-fields/page.tsx",
      "route": "/forms/test-core-fields",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/forms/EnhancedFormBuilder"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "SparklesIcon",
        "ClockIcon",
        "DocumentTextIcon",
        "InformationCircleIcon",
        "EnhancedFormBuilder"
      ]
    },
    {
      "path": "src/app/global-error.tsx",
      "route": "/",
      "fileName": "global-error.tsx",
      "type": "component",
      "imports": [
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Button"
      ]
    },
    {
      "path": "src/app/invite/[code]/page.tsx",
      "route": "/invite/[code]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/wedme/InvitationLanding",
        "@/components/ui/LoadingSkeleton"
      ],
      "exports": [
        "default",
        "runtime",
        "dynamic",
        "revalidate"
      ],
      "components": [
        "Metadata",
        "LoadingSkeleton",
        "Suspense",
        "InvitationPageSkeleton",
        "InvitationLanding"
      ]
    },
    {
      "path": "src/app/journey-demo/page.tsx",
      "route": "/journey-demo",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/journey-builder"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "JourneyCanvas"
      ]
    },
    {
      "path": "src/app/layout-original.tsx",
      "route": "/",
      "fileName": "layout-original.tsx",
      "type": "component",
      "imports": [
        "./providers",
        "@/types/next15-params",
        "@/components/error-boundary",
        "@/components/privacy/CookieConsentBanner",
        "@/components/monitoring/MonitoringProvider"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "CriticalErrorBoundary",
        "Providers",
        "MonitoringProvider",
        "CookieConsentBanner",
        "SpeedInsights",
        "Analytics"
      ]
    },
    {
      "path": "src/app/layout.tsx",
      "route": "/",
      "fileName": "layout.tsx",
      "type": "layout",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": []
    },
    {
      "path": "src/app/login/page.tsx",
      "route": "/login",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "HeartIcon",
        "Card",
        "CardContent",
        "Label",
        "Input",
        "Button",
        "Link"
      ]
    },
    {
      "path": "src/app/manifest.ts",
      "route": "/",
      "fileName": "manifest.ts",
      "type": "unknown",
      "imports": [
        "../../config/mobile/pwa-environments"
      ],
      "exports": [
        "default"
      ],
      "components": []
    },
    {
      "path": "src/app/not-found.tsx",
      "route": "/",
      "fileName": "not-found.tsx",
      "type": "not-found",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/lib/monitoring/error-tracking"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardHeader",
        "Search",
        "CardTitle",
        "CardContent",
        "Input",
        "Button",
        "ArrowLeft",
        "Link",
        "Home",
        "Icon"
      ]
    },
    {
      "path": "src/app/offline/page.tsx",
      "route": "/offline",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": [
        "Date",
        "CheckCircle",
        "WifiOff",
        "AlertCircle",
        "RefreshCw"
      ]
    },
    {
      "path": "src/app/onboarding/page.tsx",
      "route": "/onboarding",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "CheckCircleIcon",
        "HeartIcon",
        "Progress",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "Suspense",
        "OnboardingContent"
      ]
    },
    {
      "path": "src/app/onboarding-demo/page.tsx",
      "route": "/onboarding-demo",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/OnboardingDemo"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "OnboardingDemo"
      ]
    },
    {
      "path": "src/app/page-test-backup.tsx",
      "route": "/",
      "fileName": "page-test-backup.tsx",
      "type": "component",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": []
    },
    {
      "path": "src/app/page.tsx",
      "route": "/",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "SparklesIcon",
        "Link",
        "Button",
        "ArrowRightIcon",
        "UsersIcon",
        "CalendarIcon",
        "CameraIcon",
        "ChartBarIcon"
      ]
    },
    {
      "path": "src/app/payments/calendar/__tests__/page.test.tsx",
      "route": "/payments/calendar/__tests__",
      "fileName": "page.test.tsx",
      "type": "component",
      "imports": [
        "../page"
      ],
      "exports": [],
      "components": [
        "PaymentCalendarPage"
      ]
    },
    {
      "path": "src/app/payments/calendar/page.tsx",
      "route": "/payments/calendar",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/payments/PaymentCalendar",
        "@/components/payments/UpcomingPaymentsList",
        "@/components/payments/MarkAsPaidModal",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "PaymentCalendarData",
        "Card",
        "Calendar",
        "Button",
        "Badge",
        "PaymentCalendar",
        "UpcomingPaymentsList",
        "WeddingContextBar",
        "MarkAsPaidModal"
      ]
    },
    {
      "path": "src/app/pdf/[id]/mapping/page.tsx",
      "route": "/pdf/[id]/mapping",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/pdf/FieldMappingInterface",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "PDFImport",
        "Badge",
        "FileText",
        "Button",
        "ArrowLeft",
        "RefreshCw",
        "Download",
        "FieldMappingInterface"
      ]
    },
    {
      "path": "src/app/pdf/import/page.tsx",
      "route": "/pdf/import",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/pdf/PDFUploader",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "PDFImport",
        "Wand2",
        "Clock",
        "Target",
        "Shield",
        "FileText",
        "Sparkles",
        "CheckCircle",
        "TrendingUp",
        "Badge",
        "PDFUploader"
      ]
    },
    {
      "path": "src/app/privacy/data-request/page.tsx",
      "route": "/privacy/data-request",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Shield",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Label",
        "Icon",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Alert",
        "AlertDescription",
        "Button"
      ]
    },
    {
      "path": "src/app/privacy/page.tsx",
      "route": "/privacy",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "Shield",
        "Link",
        "FileText",
        "Globe",
        "Users",
        "Lock",
        "AlertCircle",
        "Calendar",
        "Mail"
      ]
    },
    {
      "path": "src/app/providers.tsx",
      "route": "/",
      "fileName": "providers.tsx",
      "type": "component",
      "imports": [
        "@/components/ui/toaster"
      ],
      "exports": [
        "Providers"
      ],
      "components": [
        "QueryClientProvider",
        "Toaster"
      ]
    },
    {
      "path": "src/app/reset-password/page.tsx",
      "route": "/reset-password",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/auth/ResetPasswordForm"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "ResetPasswordForm",
        "Suspense",
        "ResetPasswordContent"
      ]
    },
    {
      "path": "src/app/rsvp/[code]/page.tsx",
      "route": "/rsvp/[code]",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "EventDetails",
        "GuestDetail",
        "Card",
        "CardContent",
        "AlertCircle",
        "CheckCircle",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Calendar",
        "MapPin",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Checkbox",
        "Music",
        "RadioGroup",
        "RadioGroupItem",
        "Textarea",
        "Button"
      ]
    },
    {
      "path": "src/app/security-demo/page.tsx",
      "route": "/security-demo",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/forms/FormPreview",
        "@/components/forms/FormBuilder",
        "@/hooks/useCSRF",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "ShieldCheckIcon",
        "ShieldExclamationIcon",
        "Badge",
        "LockClosedIcon",
        "Card",
        "Button",
        "DocumentTextIcon",
        "FormPreview",
        "CodeBracketIcon",
        "EyeIcon"
      ]
    },
    {
      "path": "src/app/settings/branding/page.tsx",
      "route": "/settings/branding",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/branding/LogoUploader",
        "@/components/branding/CSSEditor",
        "@/hooks/useBrandTheme",
        "@/lib/supabase/client",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "BrandingPageLoading",
        "Button",
        "ArrowLeftIcon",
        "SwatchIcon",
        "ExclamationTriangleIcon",
        "CloudArrowUpIcon",
        "Card",
        "CheckCircleIcon",
        "LogoUploader",
        "Badge",
        "CSSEditor",
        "Suspense",
        "BrandingSettingsContent"
      ]
    },
    {
      "path": "src/app/settings/calendar-integration/apple/page.tsx",
      "route": "/settings/calendar-integration/apple",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/calendar/AppleCalendarSync"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Link",
        "ArrowLeftIcon",
        "DevicePhoneMobileIcon",
        "ComputerDesktopIcon",
        "WatchIcon",
        "ShieldCheckIcon",
        "InformationCircleIcon",
        "AppleCalendarSync"
      ]
    },
    {
      "path": "src/app/settings/calendar-integration/page.tsx",
      "route": "/settings/calendar-integration",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": [
        "CheckCircleIcon",
        "ClockIcon",
        "ExclamationTriangleIcon",
        "Link",
        "CalendarIcon",
        "PlusIcon"
      ]
    },
    {
      "path": "src/app/settings/page.tsx",
      "route": "/settings",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": [
        "Cog8ToothIcon",
        "Link",
        "SwatchIcon",
        "CalendarIcon",
        "BellIcon",
        "ShieldCheckIcon",
        "CreditCardIcon",
        "Icon",
        "GlobeAltIcon"
      ]
    },
    {
      "path": "src/app/signup/page.tsx",
      "route": "/signup",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/alert",
        "@/components/auth/CoupleSignupForm"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "HeartIcon",
        "Alert",
        "AlertDescription",
        "CoupleSignupForm",
        "Link",
        "Suspense",
        "SignupContent"
      ]
    },
    {
      "path": "src/app/supplier-portal/layout.tsx",
      "route": "/supplier-portal",
      "fileName": "layout.tsx",
      "type": "layout",
      "imports": [
        "@/hooks/useAuth",
        "@/components/supplier/mobile/SupplierNavigation",
        "@/components/supplier/mobile/SupplierHeader",
        "@/components/ui/toaster",
        "@/lib/utils",
        "@/hooks/useSupplierPortal",
        "@/components/chatbot/ChatWidget"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "SupplierHeader",
        "SupplierMobileNavigation",
        "Toaster",
        "ResponsiveChatWidget"
      ]
    },
    {
      "path": "src/app/supplier-portal/page.tsx",
      "route": "/supplier-portal",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardContent",
        "CalendarIcon",
        "UsersIcon",
        "CardHeader",
        "CardTitle",
        "Button",
        "CameraIcon",
        "ClockIcon"
      ]
    },
    {
      "path": "src/app/supplier-portal/qr-scanner/page.tsx",
      "route": "/supplier-portal/qr-scanner",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "HTMLVideoElement",
        "HTMLCanvasElement",
        "HTMLInputElement",
        "MediaStream",
        "Card",
        "AlertCircle",
        "Button",
        "Upload",
        "CheckCircle",
        "X",
        "QrCode",
        "Camera",
        "Flashlight",
        "RotateCcw",
        "ImageIcon"
      ]
    },
    {
      "path": "src/app/supplier-portal/schedule/confirm/page.tsx",
      "route": "/supplier-portal/schedule/confirm",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "@/lib/utils",
        "@/hooks/useSupplierSchedule",
        "@/types/supplier"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Record",
        "Card",
        "CheckCircle",
        "Button",
        "Switch",
        "Badge",
        "Calendar",
        "Clock",
        "MapPin",
        "Textarea",
        "Navigation",
        "Phone",
        "AlertCircle"
      ]
    },
    {
      "path": "src/app/supplier-portal/schedule/conflicts/new/page.tsx",
      "route": "/supplier-portal/schedule/conflicts/new",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/radio-group",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/lib/utils",
        "@/hooks/useSupplierSchedule"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "File",
        "Card",
        "Button",
        "ArrowLeft",
        "AlertTriangle",
        "Clock",
        "MapPin",
        "Badge",
        "RadioGroup",
        "RadioGroupItem",
        "Label",
        "Textarea",
        "Switch",
        "X",
        "Camera",
        "Send"
      ]
    },
    {
      "path": "src/app/supplier-portal/schedule/page.tsx",
      "route": "/supplier-portal/schedule",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/touch/TouchOptimizedCalendar",
        "@/components/supplier/mobile/ScheduleFilters",
        "@/components/supplier/schedule/MobileScheduleView",
        "@/hooks/useSupplierSchedule",
        "@/components/touch/PullToRefresh",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "PullToRefresh",
        "Card",
        "Icon",
        "Button",
        "Settings",
        "ScheduleFilters",
        "TouchOptimizedCalendar",
        "MobileScheduleView"
      ]
    },
    {
      "path": "src/app/tasks/create/page.tsx",
      "route": "/tasks/create",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/tasks/mobile/TouchTaskCreationForm",
        "@/components/tasks/mobile/TaskTemplateGallery",
        "@/components/security/TouchInputValidator",
        "@/components/security/CameraSecurityValidator"
      ],
      "exports": [
        "default",
        "metadata"
      ],
      "components": [
        "TouchInputSecurityValidator",
        "TouchTaskCreationForm",
        "TaskTemplateGallery"
      ]
    },
    {
      "path": "src/app/test/page.tsx",
      "route": "/test",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": []
    },
    {
      "path": "src/app/test/personalization/page.tsx",
      "route": "/test/personalization",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/mobile/personalization/MobilePersonalizationEditor"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "MobilePersonalizationEditor"
      ]
    },
    {
      "path": "src/app/test-referral-widget/page.tsx",
      "route": "/test-referral-widget",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/viral/ReferralWidget",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "ReferralWidget"
      ]
    },
    {
      "path": "src/app/test-simple/page.tsx",
      "route": "/test-simple",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": []
    },
    {
      "path": "src/app/test-sms/page.tsx",
      "route": "/test-sms",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/sms/SMSConfigurationWizard",
        "@/components/sms/SMSPerformanceDashboard"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "SMSConfigurationWizard",
        "SMSPerformanceDashboard"
      ]
    },
    {
      "path": "src/app/travel-calculator/page.tsx",
      "route": "/travel-calculator",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/travel/TravelTimeCalculator"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "TravelTimeCalculator"
      ]
    },
    {
      "path": "src/app/ui-showcase/page.tsx",
      "route": "/ui-showcase",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled"
      ],
      "exports": [
        "default"
      ],
      "components": [
        "Record",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Button",
        "WeddingButton",
        "ElegantButton",
        "VendorButton",
        "WeddingInput",
        "Input",
        "ElegantInput",
        "CardFooter",
        "WeddingCard",
        "VendorCard"
      ]
    },
    {
      "path": "src/app/working/page.tsx",
      "route": "/working",
      "fileName": "page.tsx",
      "type": "page",
      "imports": [],
      "exports": [
        "default"
      ],
      "components": []
    }
  ],
  "components": [
    {
      "path": "src/components/LazyComponents.tsx",
      "name": "LazyComponents",
      "imports": [],
      "exports": [
        "FormBuilder",
        "OptimizedFormBuilder",
        "FormPreview",
        "PDFViewer",
        "PDFImport",
        "AdminDashboard",
        "AnalyticsCharts",
        "StripeCheckout",
        "PricingTable",
        "EmailTemplateEditor",
        "ClientDetailsModal",
        "FormEditorModal",
        "createLazyComponent",
        "preloadCriticalComponents",
        "preloadRouteComponents"
      ],
      "usedComponents": [
        "Loader2",
        "T"
      ]
    },
    {
      "path": "src/components/OnboardingDemo.tsx",
      "name": "OnboardingDemo",
      "imports": [
        "@/components/onboarding",
        "@/components/ui/button"
      ],
      "exports": [
        "OnboardingDemo"
      ],
      "usedComponents": [
        "OnboardingTour",
        "KeyboardShortcuts",
        "ProgressTracker",
        "Button",
        "PlayIcon"
      ]
    },
    {
      "path": "src/components/ab-testing/TestCreationWizard.tsx",
      "name": "TestCreationWizard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TestVariant",
        "Label",
        "Input",
        "Textarea",
        "Card",
        "Badge",
        "Button",
        "Plus",
        "Trash2",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Slider",
        "TestTube",
        "ArrowLeft",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/ab-testing/WeddingTestTemplates.tsx",
      "name": "WeddingTestTemplates",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingTestTemplate",
        "Card",
        "IconComponent",
        "Badge",
        "TrendingUp",
        "Star",
        "Button",
        "Search",
        "Input",
        "Filter",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem"
      ]
    },
    {
      "path": "src/components/accessibility/A11yEnhanced.tsx",
      "name": "A11yEnhanced",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "useA11y",
        "A11yProvider",
        "AccessibleButton",
        "AccessibleField",
        "A11ySettings"
      ],
      "usedComponents": [
        "A11ySettings",
        "A11yContextType",
        "A11yContext",
        "SkipLinks",
        "HTMLInputElement"
      ]
    },
    {
      "path": "src/components/activity/ActivityAnalytics.tsx",
      "name": "ActivityAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/types/communications"
      ],
      "exports": [
        "ActivityAnalytics"
      ],
      "usedComponents": [
        "Card",
        "Icon",
        "TrendingUp",
        "TrendingDown",
        "RefreshCw",
        "Button",
        "Download",
        "MetricCard",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/activity/ActivityFeed.tsx",
      "name": "ActivityFeed",
      "imports": [
        "@/lib/supabase/client",
        "@/hooks/useRealtime",
        "@/lib/activity/service",
        "./ActivityItem",
        "./ActivityFilter",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/scroll-area",
        "@/components/ui/skeleton",
        "@/types/communications"
      ],
      "exports": [
        "ActivityFeed"
      ],
      "usedComponents": [
        "ActivityFeedType",
        "FilterState",
        "ActivityItem",
        "Card",
        "Skeleton",
        "Badge",
        "Button",
        "Eye",
        "RefreshCw",
        "Filter",
        "Search",
        "Input",
        "ActivityFilter",
        "List",
        "ScrollArea"
      ]
    },
    {
      "path": "src/components/activity/ActivityFilter.tsx",
      "name": "ActivityFilter",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/separator",
        "@/types/communications"
      ],
      "exports": [
        "ActivityFilter"
      ],
      "usedComponents": [
        "Card",
        "Filter",
        "Label",
        "Button",
        "RotateCcw",
        "Separator",
        "Input",
        "Badge",
        "X"
      ]
    },
    {
      "path": "src/components/activity/ActivityItem.tsx",
      "name": "ActivityItem",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/types/communications",
        "@/lib/utils"
      ],
      "exports": [
        "ActivityItem"
      ],
      "usedComponents": [
        "Card",
        "IconComponent",
        "Badge",
        "Clock",
        "Button",
        "Eye",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/admin/APIAnalyticsDashboard.tsx",
      "name": "APIAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "APIMetrics",
        "APIUsageAnalytics",
        "APIAlert",
        "APIKey",
        "RefreshCw",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "CardContent",
        "Alert",
        "AlertTitle",
        "Badge",
        "AlertDescription",
        "Activity",
        "Clock",
        "Shield",
        "Key",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "PieChart",
        "Pie",
        "Cell",
        "Legend"
      ]
    },
    {
      "path": "src/components/admin/APIKeyManager.tsx",
      "name": "APIKeyManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/calendar",
        "@/components/ui/popover",
        "@/components/ui/dialog",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "APIKey",
        "Organization",
        "Set",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Popover",
        "PopoverTrigger",
        "CalendarIcon",
        "PopoverContent",
        "Calendar",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardDescription",
        "Trash2",
        "CardContent",
        "EyeOff",
        "Eye",
        "CheckCircle",
        "Copy",
        "Key"
      ]
    },
    {
      "path": "src/components/admin/APIUsageAnalyticsDashboard.tsx",
      "name": "APIUsageAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/calendar",
        "@/components/ui/popover"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "APIMetrics",
        "Organization",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Download",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "TrendingUp",
        "Users",
        "Clock",
        "TrendingDown",
        "AlertTriangle",
        "Shield",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Bar",
        "Label",
        "Input",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/APIVersionDashboard.tsx",
      "name": "APIVersionDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/types/api-versions"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "APIVersionData",
        "Button",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "Clock",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "UsageAnalyticsView",
        "MigrationProgressView",
        "CompatibilityMatrixView",
        "DeprecationNotificationsView",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/admin/AdminAuditLog.tsx",
      "name": "AdminAuditLog",
      "imports": [],
      "exports": [
        "AdminAuditLog"
      ],
      "usedComponents": [
        "AuditEntry",
        "AuditFilters"
      ]
    },
    {
      "path": "src/components/admin/AuditLogFilters.tsx",
      "name": "AuditLogFilters",
      "imports": [
        "@/components/ui/button",
        "@/types/audit"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AuditSearchFilters",
        "Button"
      ]
    },
    {
      "path": "src/components/admin/AuditLogViewer.tsx",
      "name": "AuditLogViewer",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AuditSearchFilters",
        "Button",
        "ChevronDownIcon",
        "ChevronRightIcon",
        "RiskLevelBadge",
        "ExpandedDetails",
        "AuditEvent",
        "Set",
        "Partial",
        "RealtimeChannel",
        "HTMLDivElement",
        "LoadingSkeleton",
        "FilterIcon",
        "AuditLogRow"
      ]
    },
    {
      "path": "src/components/admin/BackupPerformanceCharts.tsx",
      "name": "BackupPerformanceCharts",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PerformanceMetrics",
        "ChartData",
        "MetricsAggregation",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "TrendingUp",
        "TrendingDown",
        "Server",
        "Database",
        "Heart",
        "CardDescription",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "AreaChart",
        "Area",
        "Users",
        "Badge",
        "Camera",
        "Calendar",
        "AlertTriangle",
        "Alert",
        "AlertDescription",
        "Button",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent"
      ]
    },
    {
      "path": "src/components/admin/DatabaseHealthDashboard.tsx",
      "name": "DatabaseHealthDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/skeleton",
        "@/hooks/useDatabaseHealth",
        "./QueryOptimizationPanel"
      ],
      "exports": [
        "default",
        "DatabaseHealthDashboard"
      ],
      "usedComponents": [
        "Date",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertCircle",
        "CardDescription",
        "CardContent",
        "Button",
        "RefreshCw",
        "CheckCircle",
        "AlertTriangle",
        "Activity",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "Zap",
        "Users",
        "Badge",
        "Heart",
        "Pause",
        "Play",
        "Skeleton",
        "Server",
        "Progress",
        "HardDrive",
        "Gauge",
        "TrendingUp",
        "TrendingDown",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "OverviewTab",
        "ConnectionsTab",
        "StorageTab",
        "PerformanceTab",
        "MaintenanceTab",
        "QueryOptimizationPanel",
        "Database",
        "Calendar",
        "Clock"
      ]
    },
    {
      "path": "src/components/admin/DatabaseMetricsDashboard.tsx",
      "name": "DatabaseMetricsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/ui/separator"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DatabaseHealth",
        "PerformanceTrend",
        "RefreshCw",
        "Alert",
        "AlertCircle",
        "AlertTitle",
        "AlertDescription",
        "Button",
        "Badge",
        "Calendar",
        "EyeOff",
        "Eye",
        "Card",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardContent",
        "Database",
        "Progress",
        "Zap",
        "TrendingUp",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ScrollArea",
        "TrendingDown",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "CardDescription",
        "CheckCircle",
        "HeartHandshake",
        "Shield"
      ]
    },
    {
      "path": "src/components/admin/EmergencyActionModal.tsx",
      "name": "EmergencyActionModal",
      "imports": [],
      "exports": [
        "EmergencyActionModal"
      ],
      "usedComponents": [
        "Record"
      ]
    },
    {
      "path": "src/components/admin/EmergencyControlsSection.tsx",
      "name": "EmergencyControlsSection",
      "imports": [],
      "exports": [
        "EmergencyControlsSection"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/EnhancedViralDashboard.tsx",
      "name": "EnhancedViralDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/hooks/useEnhancedViralMetrics",
        "@/lib/analytics/viral-optimization-engine"
      ],
      "exports": [
        "EnhancedViralDashboard"
      ],
      "usedComponents": [
        "ViralIntervention",
        "Loader2",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CheckCircle",
        "Badge",
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardContent",
        "Users",
        "DollarSign",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "BarChart",
        "Bar",
        "Cell"
      ]
    },
    {
      "path": "src/components/admin/ExecutiveDashboard.tsx",
      "name": "ExecutiveDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/skeleton",
        "@/components/ui/alert",
        "@/lib/analytics/executiveMetrics"
      ],
      "exports": [
        "default",
        "ExecutiveDashboard"
      ],
      "usedComponents": [
        "ExecutiveMetrics",
        "TimeframeOption",
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "Skeleton",
        "Card",
        "CardHeader",
        "CardContent",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "DollarSign",
        "CardTitle",
        "Users",
        "Heart",
        "Star",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/NotificationCenter.tsx",
      "name": "NotificationCenter",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/components/ui/popover",
        "@/lib/support/realtime-notifications"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "NotificationItem",
        "AlertTriangle",
        "Clock",
        "TrendingUp",
        "User",
        "CheckCircle",
        "Bell",
        "Popover",
        "PopoverTrigger",
        "Button",
        "Badge",
        "PopoverContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "Volume2",
        "VolumeX",
        "RotateCcw",
        "Trash2",
        "CardContent",
        "ExternalLink",
        "X",
        "Separator",
        "Switch"
      ]
    },
    {
      "path": "src/components/admin/PerformanceChart.tsx",
      "name": "PerformanceChart",
      "imports": [],
      "exports": [
        "PerformanceChart"
      ],
      "usedComponents": [
        "DataPoint",
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "ChartBarIcon",
        "InformationCircleIcon",
        "linearGradient",
        "ClockIcon"
      ]
    },
    {
      "path": "src/components/admin/PerformanceDashboard.tsx",
      "name": "PerformanceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/lib/performance/PerformanceMonitor"
      ],
      "exports": [
        "PerformanceDashboard"
      ],
      "usedComponents": [
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "Card",
        "CardContent",
        "Progress",
        "AlertTriangle",
        "CheckCircle",
        "Badge",
        "Button",
        "PerformanceMetrics",
        "BusinessMetrics",
        "PerformanceAlert",
        "Date",
        "Monitor",
        "Zap",
        "Clock",
        "Smartphone",
        "Wifi",
        "Battery",
        "Eye",
        "RefreshCw",
        "CardHeader",
        "CardTitle",
        "AlertItem",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "MetricCard"
      ]
    },
    {
      "path": "src/components/admin/PermissionGuards.tsx",
      "name": "PermissionGuards",
      "imports": [
        "@/components/ui/alert",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "PermissionProvider",
        "usePermissions",
        "WithPermission",
        "PermissionGuard",
        "EmergencyGuard",
        "WeddingDayGuard",
        "PermissionStatus",
        "usePermissionAwareActions"
      ],
      "usedComponents": [
        "PermissionContext",
        "AdminRole",
        "PermissionProviderProps",
        "AdminPermissions",
        "WithPermissionProps",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "PermissionGuardProps",
        "Shield",
        "Badge",
        "EmergencyGuardProps",
        "Lock",
        "WeddingDayGuardProps",
        "Eye",
        "EyeOff",
        "T"
      ]
    },
    {
      "path": "src/components/admin/PhotographyPerformanceDashboard.tsx",
      "name": "PhotographyPerformanceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/tabs"
      ],
      "exports": [
        "PhotographyPerformanceDashboard"
      ],
      "usedComponents": [
        "PerformanceStats",
        "PerformanceAlert",
        "HistoricalData",
        "RefreshCw",
        "HealthIcon",
        "Button",
        "Alert",
        "AlertTriangle",
        "AlertTitle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "TrendingDown",
        "TrendingUp",
        "XCircle",
        "Database",
        "MemoryStick",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/QueryOptimizationPanel.tsx",
      "name": "QueryOptimizationPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/skeleton",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/collapsible"
      ],
      "exports": [
        "default",
        "QueryOptimizationPanel"
      ],
      "usedComponents": [
        "SlowQuery",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardDescription",
        "Badge",
        "Heart",
        "AlertTriangle",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "QueriesTab",
        "RecommendationsTab",
        "PatternsTab",
        "ImpactAnalysisTab",
        "Button",
        "Search",
        "QueryCard",
        "QueryDetailsPanel",
        "Collapsible",
        "CollapsibleTrigger",
        "ChevronDown",
        "ChevronRight",
        "Zap",
        "CollapsibleContent",
        "Copy",
        "OptimizationSuggestionCard",
        "Lightbulb",
        "Wrench"
      ]
    },
    {
      "path": "src/components/admin/QuickActionsPanel.tsx",
      "name": "QuickActionsPanel",
      "imports": [
        "./EmergencyActionModal"
      ],
      "exports": [
        "QuickActionsPanel"
      ],
      "usedComponents": [
        "QuickAction",
        "EmergencyActionModal"
      ]
    },
    {
      "path": "src/components/admin/SecurityDashboard.tsx",
      "name": "SecurityDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Icon",
        "ExclamationTriangleIcon",
        "SecurityMetrics",
        "SecurityAlert",
        "Date",
        "LoadingSkeleton",
        "SecurityHealthIndicator",
        "ArrowPathIcon",
        "MetricCard",
        "RecentAlert",
        "ShieldCheckIcon",
        "EyeIcon"
      ]
    },
    {
      "path": "src/components/admin/ServiceCard.tsx",
      "name": "ServiceCard",
      "imports": [
        "@/lib/services/health-monitor"
      ],
      "exports": [
        "ServiceCard"
      ],
      "usedComponents": [
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "ClockIcon",
        "Icon",
        "ArrowPathIcon",
        "ChevronUpIcon",
        "ChevronDownIcon",
        "InformationCircleIcon"
      ]
    },
    {
      "path": "src/components/admin/SuspiciousActivityAlert.tsx",
      "name": "SuspiciousActivityAlert",
      "imports": [
        "@/components/ui/button",
        "@/types/audit"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Set",
        "Button"
      ]
    },
    {
      "path": "src/components/admin/SystemHealthDashboard.tsx",
      "name": "SystemHealthDashboard",
      "imports": [
        "@/lib/services/health-monitor"
      ],
      "exports": [
        "SystemHealthDashboard"
      ],
      "usedComponents": [
        "SystemHealth",
        "Date",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "ClockIcon",
        "ArrowPathIcon",
        "BoltIcon",
        "ServiceIcon",
        "InformationCircleIcon",
        "ChevronRightIcon"
      ]
    },
    {
      "path": "src/components/admin/SystemStatusCards.tsx",
      "name": "SystemStatusCards",
      "imports": [],
      "exports": [
        "SystemStatusCards"
      ],
      "usedComponents": [
        "SystemStatusData",
        "Date"
      ]
    },
    {
      "path": "src/components/admin/SystemToggleControls.tsx",
      "name": "SystemToggleControls",
      "imports": [],
      "exports": [
        "SystemToggleControls"
      ],
      "usedComponents": [
        "SystemFeature"
      ]
    },
    {
      "path": "src/components/admin/TicketManagementDashboard.tsx",
      "name": "TicketManagementDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Ticket",
        "DashboardStats",
        "Button",
        "Settings",
        "BarChart3",
        "Card",
        "CardContent",
        "MessageSquare",
        "Clock",
        "Heart",
        "Star",
        "Input",
        "Search",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardHeader",
        "CardTitle",
        "Badge",
        "AlertTriangle",
        "ExternalLink",
        "Bell"
      ]
    },
    {
      "path": "src/components/admin/VendorCategoryManagement.tsx",
      "name": "VendorCategoryManagement",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/switch"
      ],
      "exports": [
        "VendorCategoryManagement"
      ],
      "usedComponents": [
        "VendorCategory",
        "Set",
        "CategoryFormData",
        "ChevronDownIcon",
        "ChevronRightIcon",
        "Badge",
        "Button",
        "PencilIcon",
        "TrashIcon",
        "PlusIcon",
        "Card",
        "MagnifyingGlassIcon",
        "Input",
        "Switch",
        "Label",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/admin/WS155OperationalDashboard.tsx",
      "name": "WS155OperationalDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/separator"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ProviderStatus",
        "SLAViolation",
        "DashboardMetrics",
        "Date",
        "WebSocket",
        "Phone",
        "Mail",
        "MessageSquare",
        "Smartphone",
        "Globe",
        "Wifi",
        "WifiOff",
        "Button",
        "Card",
        "CardContent",
        "TrendingUp",
        "Clock",
        "CheckCircle",
        "Users",
        "Database",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardDescription",
        "Badge",
        "AlertTriangle",
        "TrendingDown",
        "Shield",
        "Alert",
        "AlertDescription",
        "Zap",
        "Separator"
      ]
    },
    {
      "path": "src/components/admin/__tests__/EnhancedViralDashboard.test.tsx",
      "name": "EnhancedViralDashboard.test",
      "imports": [
        "../EnhancedViralDashboard",
        "@/hooks/useEnhancedViralMetrics"
      ],
      "exports": [],
      "usedComponents": [
        "EnhancedViralDashboard"
      ]
    },
    {
      "path": "src/components/admin/__tests__/QuickActionsPanel.test.tsx",
      "name": "QuickActionsPanel.test",
      "imports": [
        "../QuickActionsPanel"
      ],
      "exports": [],
      "usedComponents": [
        "QuickActionsPanel"
      ]
    },
    {
      "path": "src/components/admin/__tests__/useQuickActions.test.ts",
      "name": "useQuickActions.test",
      "imports": [
        "../../../hooks/useQuickActions"
      ],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/analytics/CohortAnalysisDashboard.tsx",
      "name": "CohortAnalysisDashboard",
      "imports": [
        "@/types/cohort-analysis",
        "./CohortAnalysisHeatmap",
        "./CohortMetricsSelector",
        "./CohortInsightsPanel",
        "./CohortDetailModal"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CohortAnalysisDashboardProps",
        "CohortMetric",
        "CohortData",
        "BarChart3",
        "RefreshCw",
        "CohortMetricsSelector",
        "CohortAnalysisHeatmap",
        "CohortInsightsPanel",
        "AlertTriangle",
        "CohortDetailModal"
      ]
    },
    {
      "path": "src/components/admin/analytics/CohortAnalysisHeatmap.tsx",
      "name": "CohortAnalysisHeatmap",
      "imports": [
        "@/types/cohort-analysis"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CohortAnalysisHeatmapProps",
        "CohortHeatmapCell"
      ]
    },
    {
      "path": "src/components/admin/analytics/CohortDetailModal.tsx",
      "name": "CohortDetailModal",
      "imports": [
        "@/types/cohort-analysis"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CohortDetailModalProps",
        "X",
        "Users",
        "Target",
        "DollarSign",
        "TrendingUp",
        "Award",
        "TrendingDown",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/admin/analytics/CohortInsightsPanel.tsx",
      "name": "CohortInsightsPanel",
      "imports": [
        "@/types/cohort-analysis"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CohortInsightsPanelProps",
        "Target",
        "AlertTriangle",
        "CheckCircle",
        "TrendingUp",
        "Lightbulb",
        "TrendingDown",
        "BarChart3",
        "Users",
        "Calendar",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/admin/analytics/CohortMetricsSelector.tsx",
      "name": "CohortMetricsSelector",
      "imports": [
        "@/types/cohort-analysis"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CohortMetricsSelectorProps",
        "TrendingUp",
        "Icon",
        "Calendar",
        "Download"
      ]
    },
    {
      "path": "src/components/admin/analytics/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/api-management/APIManagementDashboard.tsx",
      "name": "APIManagementDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Activity",
        "Key",
        "AlertCircle",
        "Shield"
      ]
    },
    {
      "path": "src/components/admin/app-store/AssetGenerator.tsx",
      "name": "AssetGenerator",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs"
      ],
      "exports": [
        "AssetGenerator"
      ],
      "usedComponents": [
        "GeneratedAsset",
        "Badge",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "Progress"
      ]
    },
    {
      "path": "src/components/admin/app-store/ComplianceChecker.tsx",
      "name": "ComplianceChecker",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "ComplianceChecker"
      ],
      "usedComponents": [
        "ComplianceCheck",
        "Partial",
        "Button",
        "Card",
        "CardContent",
        "Progress",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "CardHeader",
        "CardTitle",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/app-store/PreviewGenerator.tsx",
      "name": "PreviewGenerator",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs"
      ],
      "exports": [
        "PreviewGenerator"
      ],
      "usedComponents": [
        "StoreListingPreview",
        "HTMLDivElement",
        "MicrosoftStorePreview",
        "GooglePlayPreview",
        "AppleAppStorePreview",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Input",
        "Textarea",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/app-store/StoreOptimizer.tsx",
      "name": "StoreOptimizer",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/progress"
      ],
      "exports": [
        "StoreOptimizer"
      ],
      "usedComponents": [
        "StoreListing",
        "Button",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Input",
        "Textarea",
        "Badge",
        "Progress"
      ]
    },
    {
      "path": "src/components/admin/app-store/SubmissionDashboard.tsx",
      "name": "SubmissionDashboard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "SubmissionDashboard"
      ],
      "usedComponents": [
        "StoreSubmission",
        "StoreRequirement",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardContent",
        "Badge",
        "Progress",
        "CardHeader",
        "CardTitle",
        "Button"
      ]
    },
    {
      "path": "src/components/admin/app-store/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/backup/BackupDashboard.tsx",
      "name": "BackupDashboard",
      "imports": [
        "./BackupStatusCard",
        "./BackupHistoryTable",
        "./BackupConfigPanel"
      ],
      "exports": [
        "default",
        "BackupDashboard"
      ],
      "usedComponents": [
        "BackupDashboardState",
        "AlertCircle",
        "RefreshCw",
        "Shield",
        "Settings",
        "BackupStatusCard",
        "Download",
        "BackupHistoryTable",
        "BackupConfigPanel"
      ]
    },
    {
      "path": "src/components/admin/backup/BackupHistoryTable.tsx",
      "name": "BackupHistoryTable",
      "imports": [
        "../../../types/backup"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BackupOperation",
        "CheckCircle2",
        "XCircle",
        "Clock",
        "Database",
        "FileText",
        "Image",
        "HardDrive",
        "User",
        "Play",
        "Search",
        "Filter",
        "ChevronDown",
        "Eye",
        "Download",
        "RotateCcw",
        "Calendar",
        "ChevronLeft",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/admin/backup/BackupStatusCard.tsx",
      "name": "BackupStatusCard",
      "imports": [],
      "exports": [
        "default",
        "BackupStatusCard"
      ],
      "usedComponents": [
        "StatusIndicator",
        "Icon",
        "TrendingUp",
        "Shield",
        "Database",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/admin/backup/ManualBackupForm.tsx",
      "name": "ManualBackupForm",
      "imports": [
        "../../../types/backup"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ManualBackupFormProps",
        "Partial",
        "BackupFormData",
        "Record",
        "Database",
        "FileText",
        "Image",
        "HardDrive",
        "Clock",
        "AlertCircle",
        "Loader2",
        "CheckCircle2",
        "Play"
      ]
    },
    {
      "path": "src/components/admin/backup/OfflineBackupStatus.tsx",
      "name": "OfflineBackupStatus",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./mobile/BackupStatusWidget",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default",
        "OfflineBackupStatus"
      ],
      "usedComponents": [
        "CachedBackupData",
        "Date",
        "Loader2",
        "WifiOff",
        "AlertCircle",
        "CheckCircle",
        "Database",
        "Card",
        "CloudOff",
        "Wifi",
        "Button",
        "RefreshCw",
        "Clock",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/backup/RecoveryPointTimeline.tsx",
      "name": "RecoveryPointTimeline",
      "imports": [
        "../../../types/backup"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RecoveryPointTimelineProps",
        "RecoveryPoint",
        "HTMLDivElement",
        "XCircle",
        "CheckCircle2",
        "User",
        "Play",
        "Clock",
        "Calendar",
        "ChevronLeft",
        "ChevronRight",
        "Download",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/admin/backup/ResponsiveBackupDashboard.tsx",
      "name": "ResponsiveBackupDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "./mobile/BackupStatusWidget"
      ],
      "exports": [
        "default",
        "ResponsiveBackupDashboard"
      ],
      "usedComponents": [
        "BackupOperation",
        "BackupSystemHealth",
        "BackupMetrics",
        "Smartphone",
        "Tablet",
        "Monitor",
        "BackupStatusWidget",
        "Card",
        "Shield",
        "Database",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Activity",
        "BarChart3",
        "Settings",
        "TabsContent",
        "Badge",
        "MobileView",
        "TabletView",
        "DesktopView"
      ]
    },
    {
      "path": "src/components/admin/backup/WS191BackupDashboard.tsx",
      "name": "WS191BackupDashboard",
      "imports": [
        "./RecoveryPointTimeline",
        "./ManualBackupForm",
        "./BackupHistoryTable",
        "../../../types/backup"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BackupDashboardProps",
        "ExtendedBackupStatus",
        "RecoveryPoint",
        "CheckCircle2",
        "AlertCircle",
        "Clock",
        "Database",
        "Shield",
        "RecoveryPointTimeline",
        "HardDrive",
        "BackupHistoryTable",
        "ManualBackupForm"
      ]
    },
    {
      "path": "src/components/admin/backup/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/backup/mobile/BackupStatusWidget.tsx",
      "name": "BackupStatusWidget",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default",
        "BackupStatusWidget"
      ],
      "usedComponents": [
        "Date",
        "CheckCircle",
        "AlertTriangle",
        "XCircle",
        "Card",
        "Wifi",
        "WifiOff",
        "Battery",
        "Badge",
        "Button",
        "RefreshCw",
        "Loader2",
        "Clock",
        "Download"
      ]
    },
    {
      "path": "src/components/admin/backup/mobile/MobileBackupControls.tsx",
      "name": "MobileBackupControls",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert-dialog",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default",
        "MobileBackupControls"
      ],
      "usedComponents": [
        "CheckCircle",
        "AlertTriangle",
        "Card",
        "Smartphone",
        "Badge",
        "Button",
        "Loader2",
        "Download",
        "Play",
        "Pause",
        "StopCircle",
        "Clock",
        "Upload",
        "AlertDialog",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction"
      ]
    },
    {
      "path": "src/components/admin/business/BusinessMetricsDashboard.tsx",
      "name": "BusinessMetricsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/types/business-metrics",
        "./MRRTracker",
        "./ViralCoefficientAnalyzer",
        "./CACAnalysisPanel",
        "./ExecutiveReportingInterface",
        "@/components/business/metrics/BusinessHealthIndicator",
        "@/components/business/metrics/MetricsCard",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "BusinessMetricsDashboard"
      ],
      "usedComponents": [
        "Date",
        "BusinessMetrics",
        "Badge",
        "SeasonIcon",
        "Button",
        "RefreshCw",
        "MetricsCard",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "BarChart3",
        "DollarSign",
        "Users",
        "Target",
        "Heart",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "BusinessHealthIndicator",
        "MRRTracker",
        "ViralCoefficientAnalyzer",
        "CACAnalysisPanel",
        "ExecutiveReportingInterface",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/admin/business/CACAnalysisPanel.tsx",
      "name": "CACAnalysisPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/types/business-metrics",
        "@/components/business/metrics/MetricsCard",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "CACAnalysisPanel"
      ],
      "usedComponents": [
        "Search",
        "Facebook",
        "Instagram",
        "Mail",
        "Phone",
        "Globe",
        "Users",
        "MetricsCard",
        "Button",
        "BarChart3",
        "Target",
        "TrendingUp",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge",
        "Progress",
        "ArrowUpRight",
        "DollarSign",
        "TrendingDown",
        "UserPlus"
      ]
    },
    {
      "path": "src/components/admin/business/ExecutiveReportingInterface.tsx",
      "name": "ExecutiveReportingInterface",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/types/business-metrics",
        "@/components/business/metrics/MetricsCard",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ExecutiveReportingInterface"
      ],
      "usedComponents": [
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Download",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "TrendingUp",
        "TrendingDown",
        "Growth",
        "Target",
        "Award",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CheckCircle",
        "Heart",
        "Badge",
        "AlertTriangle",
        "MetricsCard",
        "BarChart3",
        "Users",
        "FileText",
        "Mail",
        "PieChart"
      ]
    },
    {
      "path": "src/components/admin/business/MRRTracker.tsx",
      "name": "MRRTracker",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/types/business-metrics",
        "@/components/business/charts/MRRMovementChart",
        "@/components/business/charts/SeasonalTrendsChart",
        "@/components/business/metrics/MetricsCard",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MRRTracker"
      ],
      "usedComponents": [
        "TrendingUp",
        "ChevronUp",
        "ChevronDown",
        "TrendingDown",
        "BarChart3",
        "MetricsCard",
        "Button",
        "PieChart",
        "Target",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "MRRMovementChart",
        "Badge",
        "Calendar",
        "SeasonalTrendsChart"
      ]
    },
    {
      "path": "src/components/admin/business/ViralCoefficientAnalyzer.tsx",
      "name": "ViralCoefficientAnalyzer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/types/business-metrics",
        "@/components/business/metrics/ConversionFunnelViz",
        "@/components/business/metrics/MetricsCard",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ViralCoefficientAnalyzer"
      ],
      "usedComponents": [
        "Camera",
        "Building",
        "Flower",
        "Music",
        "ChefHat",
        "Users",
        "MetricsCard",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "CardContent",
        "Badge",
        "Progress",
        "Heart",
        "UserPlus",
        "Share2",
        "ExternalLink",
        "ConversionFunnelViz",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/admin/churn/AtRiskSupplierCard.tsx",
      "name": "AtRiskSupplierCard",
      "imports": [
        "@/types/churn-intelligence",
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RetentionAction",
        "User",
        "Card",
        "Clock",
        "Badge",
        "Activity",
        "TrendingDown",
        "Ticket",
        "DollarSign",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "AlertTriangle",
        "Phone",
        "Mail",
        "Calendar",
        "Eye"
      ]
    },
    {
      "path": "src/components/admin/churn/ChurnAlertPanel.tsx",
      "name": "ChurnAlertPanel",
      "imports": [
        "@/types/churn-intelligence",
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Set",
        "Card",
        "AlertTriangle",
        "Button",
        "Volume2",
        "VolumeX",
        "Badge",
        "Phone",
        "Mail",
        "User",
        "CheckCircle",
        "ExternalLink",
        "X",
        "Clock"
      ]
    },
    {
      "path": "src/components/admin/churn/ChurnRiskDashboard.tsx",
      "name": "ChurnRiskDashboard",
      "imports": [
        "@/types/churn-intelligence",
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/lib/utils",
        "./AtRiskSupplierCard",
        "./ChurnTrendChart",
        "./RetentionCampaignManager",
        "./ChurnAlertPanel"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ChurnAlert",
        "Badge",
        "Button",
        "RefreshCw",
        "Shield",
        "ChurnAlertPanel",
        "Card",
        "TrendingDown",
        "TrendingUp",
        "Users",
        "AlertTriangle",
        "Icon",
        "AtRiskSupplierCard",
        "RetentionCampaignManager",
        "ChurnTrendChart"
      ]
    },
    {
      "path": "src/components/admin/churn/ChurnTrendChart.tsx",
      "name": "ChurnTrendChart",
      "imports": [
        "@/types/churn-intelligence",
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "TrendingUp",
        "TrendingDown",
        "Button",
        "Target",
        "Activity",
        "ResponsiveContainer",
        "ComposedChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "Bar",
        "ReferenceLine",
        "Calendar",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/churn/RetentionCampaignManager.tsx",
      "name": "RetentionCampaignManager",
      "imports": [
        "@/types/churn-intelligence",
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RetentionCampaign",
        "RetentionCampaignTemplate",
        "Mail",
        "DollarSign",
        "Phone",
        "Target",
        "Card",
        "Button",
        "Plus",
        "Badge",
        "Users",
        "TrendingUp",
        "Clock",
        "Pause",
        "Play",
        "Edit",
        "Square",
        "BarChart3",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "Copy"
      ]
    },
    {
      "path": "src/components/admin/churn/__tests__/ChurnRiskDashboard.test.tsx",
      "name": "ChurnRiskDashboard.test",
      "imports": [
        "../ChurnRiskDashboard",
        "@/types/churn-intelligence"
      ],
      "exports": [],
      "usedComponents": [
        "ChurnRiskDashboard"
      ]
    },
    {
      "path": "src/components/admin/churn/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/customer-success/CustomerSuccessDashboard.tsx",
      "name": "CustomerSuccessDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "./HealthScoreOverview",
        "./RiskSegmentation",
        "./InterventionQueue",
        "./MetricsCharts",
        "@/hooks/useCustomerSuccessData",
        "@/types/customer-success-api"
      ],
      "exports": [
        "CustomerSuccessDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "CardContent",
        "Button",
        "RefreshCw",
        "Search",
        "Input",
        "Users",
        "TrendingUp",
        "Clock",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Badge",
        "TabsContent",
        "HealthScoreOverview",
        "RiskSegmentation",
        "InterventionQueue",
        "MetricsCharts"
      ]
    },
    {
      "path": "src/components/admin/customer-success/HealthScoreOverview.tsx",
      "name": "HealthScoreOverview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/skeleton",
        "@/components/ui/progress",
        "@/types/customer-success-api",
        "@/lib/utils"
      ],
      "exports": [
        "HealthScoreOverview"
      ],
      "usedComponents": [
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Minus",
        "TrendingUp",
        "TrendingDown",
        "Card",
        "CardHeader",
        "Skeleton",
        "CardContent",
        "CardTitle",
        "CardDescription",
        "Button",
        "RefreshCw",
        "Badge",
        "Users",
        "Progress"
      ]
    },
    {
      "path": "src/components/admin/customer-success/InterventionModal.tsx",
      "name": "InterventionModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/calendar",
        "@/components/ui/popover",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/lib/utils",
        "@/types/customer-success-api"
      ],
      "exports": [
        "InterventionModal"
      ],
      "usedComponents": [
        "CreateInterventionData",
        "Client",
        "AdminUser",
        "Date",
        "Record",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "User",
        "Badge",
        "Button",
        "X",
        "Search",
        "Input",
        "AlertCircle",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Popover",
        "PopoverTrigger",
        "CalendarIcon",
        "PopoverContent",
        "Calendar",
        "Separator"
      ]
    },
    {
      "path": "src/components/admin/customer-success/InterventionQueue.tsx",
      "name": "InterventionQueue",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/skeleton",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/dialog",
        "@/types/customer-success-api",
        "@/lib/utils",
        "./InterventionModal"
      ],
      "exports": [
        "InterventionQueue"
      ],
      "usedComponents": [
        "InterventionResponse",
        "CheckCircle",
        "Clock",
        "X",
        "Phone",
        "Mail",
        "Calendar",
        "User",
        "Card",
        "CardHeader",
        "Skeleton",
        "CardContent",
        "CardTitle",
        "CardDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Plus",
        "Badge",
        "AlertTriangle",
        "Edit3",
        "MoreHorizontal",
        "InterventionModal"
      ]
    },
    {
      "path": "src/components/admin/customer-success/MetricsCharts.tsx",
      "name": "MetricsCharts",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/skeleton",
        "@/components/ui/badge",
        "@/types/customer-success-api",
        "@/lib/utils"
      ],
      "exports": [
        "MetricsCharts"
      ],
      "usedComponents": [
        "Skeleton",
        "Card",
        "CardHeader",
        "CardContent",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardTitle",
        "LineChart",
        "TrendingUp",
        "CheckCircle",
        "Clock",
        "TrendingDown",
        "AlertTriangle",
        "CardDescription",
        "BarChart3",
        "PieChart",
        "Badge",
        "Users"
      ]
    },
    {
      "path": "src/components/admin/customer-success/RiskSegmentation.tsx",
      "name": "RiskSegmentation",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/skeleton",
        "@/components/ui/select",
        "@/types/customer-success-api",
        "@/lib/utils",
        "@/hooks/useRiskSegmentData"
      ],
      "exports": [
        "RiskSegmentation"
      ],
      "usedComponents": [
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Users",
        "TrendingUp",
        "TrendingDown",
        "Minus",
        "Card",
        "CardContent",
        "Button",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardDescription",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Skeleton",
        "Badge",
        "MessageSquare",
        "Settings"
      ]
    },
    {
      "path": "src/components/admin/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/ltv/CACRatioTracker.tsx",
      "name": "CACRatioTracker",
      "imports": [
        "@/types/ltv-analytics"
      ],
      "exports": [
        "default",
        "CACRatioTracker"
      ],
      "usedComponents": [
        "ChannelPerformanceCardProps",
        "ArrowUpRight",
        "ArrowDownRight",
        "DollarSign",
        "Calendar",
        "ROICalculatorProps",
        "Calculator",
        "ThresholdManagerProps",
        "Settings",
        "CACRatioTrackerProps",
        "Download",
        "RefreshCw",
        "Target",
        "BarChart3",
        "CheckCircle",
        "ChannelPerformanceCard",
        "ROICalculator",
        "ThresholdManager"
      ]
    },
    {
      "path": "src/components/admin/ltv/LTVDashboard.tsx",
      "name": "LTVDashboard",
      "imports": [
        "@/types/ltv-analytics"
      ],
      "exports": [
        "default",
        "LTVDashboard"
      ],
      "usedComponents": [
        "MetricCardProps",
        "ArrowUpRight",
        "ArrowDownRight",
        "FilterPanelProps",
        "Filter",
        "ChevronDown",
        "QuickInsightProps",
        "AlertCircle",
        "LTVDashboardProps",
        "LTVFilters",
        "RefreshCw",
        "FilterPanel",
        "Download",
        "MetricCard",
        "DollarSign",
        "Users",
        "Calendar",
        "TrendingDown",
        "QuickInsight",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/admin/ltv/LTVDistributionChart.tsx",
      "name": "LTVDistributionChart",
      "imports": [
        "@/types/ltv-analytics"
      ],
      "exports": [
        "default",
        "LTVDistributionChart"
      ],
      "usedComponents": [
        "HistogramBarProps",
        "PercentileIndicatorProps",
        "StatisticsCardProps",
        "OutlierAnalysisProps",
        "AlertCircle",
        "TrendingUp",
        "TrendingDown",
        "SegmentOverlayControlsProps",
        "LTVDistributionChartProps",
        "Layers",
        "Download",
        "PercentileIndicator",
        "Users",
        "Target",
        "HistogramBar",
        "StatisticsCard",
        "SegmentOverlayControls",
        "OutlierAnalysisCard"
      ]
    },
    {
      "path": "src/components/admin/ltv/LTVPredictionVisualizer.tsx",
      "name": "LTVPredictionVisualizer",
      "imports": [
        "@/types/ltv-analytics"
      ],
      "exports": [
        "default",
        "LTVPredictionVisualizer"
      ],
      "usedComponents": [
        "ModelCardProps",
        "Brain",
        "BarChart3",
        "Activity",
        "LineChart",
        "Target",
        "CheckCircle",
        "AlertCircle",
        "PredictionChartProps",
        "linearGradient",
        "AccuracyMetricsProps",
        "PredictionFactorsProps",
        "Eye",
        "EyeOff",
        "Download",
        "RefreshCw",
        "ModelCard",
        "PredictionChart",
        "AccuracyMetrics",
        "PredictionFactors"
      ]
    },
    {
      "path": "src/components/admin/ltv/LTVSegmentAnalyzer.tsx",
      "name": "LTVSegmentAnalyzer",
      "imports": [
        "@/types/ltv-analytics"
      ],
      "exports": [
        "default",
        "LTVSegmentAnalyzer"
      ],
      "usedComponents": [
        "SegmentCardProps",
        "CheckSquare",
        "Square",
        "Users",
        "ComparisonTableProps",
        "StatisticalInsightsProps",
        "Target",
        "AlertTriangle",
        "TrendingUp",
        "Zap",
        "LTVSegmentAnalyzerProps",
        "Download",
        "ArrowUpDown",
        "SegmentCard",
        "ComparisonTable",
        "StatisticalInsights"
      ]
    },
    {
      "path": "src/components/admin/ltv/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/middleware/CSRFProtectionMonitor.tsx",
      "name": "CSRFProtectionMonitor",
      "imports": [],
      "exports": [
        "CSRFProtectionMonitor"
      ],
      "usedComponents": [
        "CSRFEvent",
        "CSRFMetrics",
        "FormProtectionStatus",
        "WeddingFormContext",
        "ShieldCheckIcon",
        "XCircleIcon",
        "CheckCircleIcon",
        "DocumentTextIcon",
        "CalendarIcon",
        "UserIcon",
        "CameraIcon",
        "ClockIcon",
        "GlobeAltIcon"
      ]
    },
    {
      "path": "src/components/admin/middleware/MiddlewareDashboard.tsx",
      "name": "MiddlewareDashboard",
      "imports": [],
      "exports": [
        "MiddlewareDashboard"
      ],
      "usedComponents": [
        "MiddlewareMetrics",
        "PerformanceAlert",
        "WeddingContextMetrics",
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "GlobeAltIcon",
        "ClockIcon",
        "ChartBarIcon",
        "CpuChipIcon",
        "ServerIcon"
      ]
    },
    {
      "path": "src/components/admin/middleware/RateLimitingVisualizer.tsx",
      "name": "RateLimitingVisualizer",
      "imports": [],
      "exports": [
        "RateLimitingVisualizer"
      ],
      "usedComponents": [
        "RateLimitMetrics",
        "TierUsageBreakdown",
        "WeddingSeasonMetrics",
        "ExclamationTriangleIcon",
        "StopIcon",
        "ClockIcon",
        "ShieldCheckIcon",
        "UserGroupIcon",
        "CreditCardIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/admin/middleware/SecurityEventMonitor.tsx",
      "name": "SecurityEventMonitor",
      "imports": [],
      "exports": [
        "SecurityEventMonitor"
      ],
      "usedComponents": [
        "SecurityEvent",
        "ThreatLevel",
        "WeddingSecurityContext",
        "AlertFilter",
        "ShieldExclamationIcon",
        "ExclamationTriangleIcon",
        "EyeIcon",
        "BellIcon",
        "CheckCircleIcon",
        "MagnifyingGlassIcon",
        "GlobeAltIcon",
        "ClockIcon",
        "UserIcon",
        "XCircleIcon"
      ]
    },
    {
      "path": "src/components/admin/middleware/SessionManagementPanel.tsx",
      "name": "SessionManagementPanel",
      "imports": [],
      "exports": [
        "SessionManagementPanel"
      ],
      "usedComponents": [
        "ActiveSession",
        "SessionSecurityMetrics",
        "WeddingSessionContext",
        "DevicePhoneMobileIcon",
        "ComputerDesktopIcon",
        "UserIcon",
        "ExclamationTriangleIcon",
        "MapPinIcon",
        "ClockIcon",
        "CameraIcon",
        "GlobeAltIcon",
        "CalendarIcon",
        "CheckCircleIcon",
        "XMarkIcon"
      ]
    },
    {
      "path": "src/components/admin/monitoring/AIPerformanceDashboard.tsx",
      "name": "AIPerformanceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/lib/ai/feature-management/monitoring/performance-monitor",
        "@/lib/ai/feature-management/monitoring/alert-manager"
      ],
      "exports": [
        "default",
        "AIPerformanceDashboard"
      ],
      "usedComponents": [
        "CheckCircle",
        "AlertTriangle",
        "AlertCircle",
        "Activity",
        "ComponentHealth",
        "AlertNotification",
        "Alert",
        "Calendar",
        "AlertDescription",
        "Button",
        "Zap",
        "RefreshCw",
        "Card",
        "CardContent",
        "Badge",
        "Clock",
        "DollarSign",
        "CardHeader",
        "CardTitle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "Progress",
        "AreaChart",
        "Area"
      ]
    },
    {
      "path": "src/components/admin/monitoring/AdminMonitoringDashboard.tsx",
      "name": "AdminMonitoringDashboard",
      "imports": [
        "./SystemHealthOverview",
        "./ErrorMonitoring",
        "./PerformanceMetrics",
        "./SecurityMonitoring",
        "./BusinessMetrics"
      ],
      "exports": [
        "AdminMonitoringDashboard"
      ],
      "usedComponents": [
        "MonitoringTab",
        "NodeJS",
        "ClockIcon",
        "Icon",
        "ActiveComponent",
        "ShieldCheckIcon"
      ]
    },
    {
      "path": "src/components/admin/monitoring/BusinessMetrics.tsx",
      "name": "BusinessMetrics",
      "imports": [],
      "exports": [
        "BusinessMetrics"
      ],
      "usedComponents": [
        "RevenueMetric",
        "UserGrowth",
        "WeddingPipeline",
        "MarketMetric",
        "TrendingUpIcon",
        "TrendingDownIcon",
        "CurrencyPoundIcon",
        "HeartIcon",
        "UsersIcon",
        "ChartBarIcon",
        "BuildingStorefrontIcon",
        "CalendarDaysIcon",
        "PresentationChartLineIcon"
      ]
    },
    {
      "path": "src/components/admin/monitoring/ErrorMonitoring.tsx",
      "name": "ErrorMonitoring",
      "imports": [],
      "exports": [
        "ErrorMonitoring"
      ],
      "usedComponents": [
        "ErrorEvent",
        "ErrorTrend",
        "XCircleIcon",
        "ExclamationTriangleIcon",
        "InformationCircleIcon",
        "ExclamationCircleIcon",
        "FireIcon",
        "ShieldExclamationIcon",
        "ChartBarIcon"
      ]
    },
    {
      "path": "src/components/admin/monitoring/PerformanceMetrics.tsx",
      "name": "PerformanceMetrics",
      "imports": [],
      "exports": [
        "PerformanceMetrics"
      ],
      "usedComponents": [
        "WebVital",
        "PagePerformance",
        "ApiPerformance",
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "ComputerDesktopIcon",
        "DevicePhoneMobileIcon",
        "GlobeAltIcon",
        "BoltIcon",
        "ChartBarIcon"
      ]
    },
    {
      "path": "src/components/admin/monitoring/SecurityMonitoring.tsx",
      "name": "SecurityMonitoring",
      "imports": [],
      "exports": [
        "SecurityMonitoring"
      ],
      "usedComponents": [
        "SecurityThreat",
        "SecurityMetric",
        "ComplianceCheck",
        "ShieldExclamationIcon",
        "ExclamationTriangleIcon",
        "ClockIcon",
        "ShieldCheckIcon",
        "UserGroupIcon",
        "LockClosedIcon"
      ]
    },
    {
      "path": "src/components/admin/monitoring/SystemHealthOverview.tsx",
      "name": "SystemHealthOverview",
      "imports": [],
      "exports": [
        "SystemHealthOverview"
      ],
      "usedComponents": [
        "HealthMetric",
        "SystemAlert",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "ClockIcon",
        "Icon"
      ]
    },
    {
      "path": "src/components/admin/navigation/AdminHeader.tsx",
      "name": "AdminHeader",
      "imports": [
        "../../../contexts/AdminSecurityProvider"
      ],
      "exports": [
        "AdminHeader"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Search",
        "Wifi",
        "WifiOff",
        "AlertTriangle",
        "Activity",
        "Bell",
        "ChevronDown",
        "Shield",
        "User",
        "Settings",
        "LogOut"
      ]
    },
    {
      "path": "src/components/admin/navigation/AdminNavigation.tsx",
      "name": "AdminNavigation",
      "imports": [
        "../../../contexts/AdminSecurityProvider"
      ],
      "exports": [
        "AdminNavigation"
      ],
      "usedComponents": [
        "Zap",
        "ChevronRight",
        "ChevronLeft",
        "AlertTriangle",
        "Link",
        "Icon"
      ]
    },
    {
      "path": "src/components/admin/performance/PerformanceMetricsChart.tsx",
      "name": "PerformanceMetricsChart",
      "imports": [
        "@/types/performance-testing"
      ],
      "exports": [
        "PerformanceMetricsChart"
      ],
      "usedComponents": [
        "AlertTriangle",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "ReferenceLine",
        "Line",
        "AreaChart",
        "Area",
        "TrendingUp",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/admin/performance/PerformanceTestDashboard.tsx",
      "name": "PerformanceTestDashboard",
      "imports": [
        "@/types/performance-testing",
        "./TestExecutionPanel",
        "./PerformanceMetricsChart",
        "./TestResultsTable",
        "./TestProgressIndicator"
      ],
      "exports": [
        "PerformanceTestDashboard"
      ],
      "usedComponents": [
        "MetricType",
        "TestResultFilters",
        "PaginationConfig",
        "Date",
        "RefreshCw",
        "Play",
        "Database",
        "CheckCircle",
        "AlertTriangle",
        "Clock",
        "TrendingUp",
        "TestExecutionPanel",
        "PerformanceMetricsChart",
        "TestProgressIndicator",
        "Activity",
        "TestResultsTable"
      ]
    },
    {
      "path": "src/components/admin/performance/TestExecutionPanel.tsx",
      "name": "TestExecutionPanel",
      "imports": [
        "@/types/performance-testing",
        "./TestProgressIndicator"
      ],
      "exports": [
        "TestExecutionPanel"
      ],
      "usedComponents": [
        "TestExecutionPanelProps",
        "TestConfiguration",
        "TestForm",
        "Record",
        "Clock",
        "Square",
        "TestProgressIndicator",
        "Settings",
        "IconComponent",
        "Play",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/admin/performance/TestProgressIndicator.tsx",
      "name": "TestProgressIndicator",
      "imports": [
        "@/types/performance-testing"
      ],
      "exports": [
        "TestProgressIndicator"
      ],
      "usedComponents": [
        "TestProgressIndicatorProps",
        "Zap",
        "CheckCircle",
        "XCircle",
        "Clock",
        "AlertTriangle",
        "Users"
      ]
    },
    {
      "path": "src/components/admin/performance/TestResultsTable.tsx",
      "name": "TestResultsTable",
      "imports": [
        "@/types/performance-testing"
      ],
      "exports": [
        "TestResultsTable"
      ],
      "usedComponents": [
        "TestResultsTableProps",
        "SortField",
        "SortDirection",
        "ChevronUp",
        "ChevronDown",
        "CheckCircle",
        "XCircle",
        "AlertTriangle",
        "Search",
        "Filter",
        "Download",
        "TypeIcon",
        "ArrowLeft",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/admin/performance/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/admin/rate-limiting/APIUsageAnalytics.tsx",
      "name": "APIUsageAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HeartIcon",
        "CalendarIcon",
        "CameraIcon",
        "MapPinIcon",
        "ShieldIcon",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardContent",
        "BarChart3Icon",
        "AlertTriangleIcon",
        "ClockIcon",
        "ZapIcon",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Progress",
        "Badge",
        "Button",
        "UsersIcon",
        "TrendingUpIcon",
        "ActivityIcon"
      ]
    },
    {
      "path": "src/components/admin/rate-limiting/AbuseDetectionMonitor.tsx",
      "name": "AbuseDetectionMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SuspiciousPattern",
        "EyeIcon",
        "AlertCircleIcon",
        "ShieldAlertIcon",
        "BotIcon",
        "ClockIcon",
        "ZapIcon",
        "XCircleIcon",
        "Button",
        "ActivityIcon",
        "Alert",
        "AlertDescription",
        "Card",
        "CardContent",
        "TrendingUpIcon",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Badge",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/admin/rate-limiting/RateLimitDashboard.tsx",
      "name": "RateLimitDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Date",
        "RateLimitStatus",
        "ShieldIcon",
        "ActivityIcon",
        "AlertTriangleIcon",
        "WifiIcon",
        "Button",
        "RefreshCwIcon",
        "Card",
        "CardContent",
        "UsersIcon",
        "BarChart3Icon",
        "TrendingUpIcon",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Badge",
        "Progress"
      ]
    },
    {
      "path": "src/components/admin/rate-limiting/SubscriptionTierVisualizer.tsx",
      "name": "SubscriptionTierVisualizer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SubscriptionTier",
        "GiftIcon",
        "StarIcon",
        "ShieldIcon",
        "ZapIcon",
        "CrownIcon",
        "Card",
        "CardContent",
        "UsersIcon",
        "ArrowUpIcon",
        "TrendingUpIcon",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Progress",
        "Button",
        "CheckCircleIcon",
        "XCircleIcon",
        "Badge"
      ]
    },
    {
      "path": "src/components/admin/rate-limiting/ViolationAlertCenter.tsx",
      "name": "ViolationAlertCenter",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/dialog",
        "@/components/ui/select",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RateViolation",
        "ViolationType",
        "Date",
        "ClockIcon",
        "ZapIcon",
        "CalendarIcon",
        "AlertTriangleIcon",
        "ShieldIcon",
        "UserIcon",
        "HeartIcon",
        "CameraIcon",
        "Button",
        "RefreshCwIcon",
        "Alert",
        "AlertDescription",
        "Card",
        "CardContent",
        "ArrowUpIcon",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge",
        "Dialog",
        "DialogTrigger",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "CheckCircleIcon",
        "XCircleIcon",
        "MapPinIcon",
        "BellIcon"
      ]
    },
    {
      "path": "src/components/admin/rate-limiting/__tests__/AbuseDetectionMonitor.test.tsx",
      "name": "AbuseDetectionMonitor.test",
      "imports": [
        "../AbuseDetectionMonitor",
        "@/types/rate-limiting"
      ],
      "exports": [],
      "usedComponents": [
        "AbuseDetectionMonitor"
      ]
    },
    {
      "path": "src/components/admin/rate-limiting/__tests__/RateLimitDashboard.test.tsx",
      "name": "RateLimitDashboard.test",
      "imports": [
        "../RateLimitDashboard",
        "@/types/rate-limiting"
      ],
      "exports": [],
      "usedComponents": [
        "RateLimitDashboard"
      ]
    },
    {
      "path": "src/components/admin/rate-limiting/__tests__/SubscriptionTierVisualizer.test.tsx",
      "name": "SubscriptionTierVisualizer.test",
      "imports": [
        "../SubscriptionTierVisualizer",
        "@/types/rate-limiting"
      ],
      "exports": [],
      "usedComponents": [
        "SubscriptionTierVisualizer"
      ]
    },
    {
      "path": "src/components/admin/security/AdminAuthGuard.tsx",
      "name": "AdminAuthGuard",
      "imports": [
        "../../../contexts/AdminSecurityProvider"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AlertTriangle",
        "Shield"
      ]
    },
    {
      "path": "src/components/admin/security/EmergencyResponsePanel.tsx",
      "name": "EmergencyResponsePanel",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Set",
        "Date",
        "RefreshCw",
        "AlertTriangle",
        "Star",
        "Clock",
        "Heart",
        "Users",
        "Settings",
        "Phone",
        "MessageSquare",
        "Activity",
        "CheckCircle",
        "Bell"
      ]
    },
    {
      "path": "src/components/admin/security/GDPRComplianceTracker.tsx",
      "name": "GDPRComplianceTracker",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ComplianceDeadline",
        "Date",
        "Shield",
        "Download",
        "Zap",
        "Phone",
        "RefreshCw",
        "Star",
        "Heart",
        "Calendar",
        "Users",
        "Clock",
        "CheckCircle",
        "FileText",
        "Mail",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/admin/security/IncidentDashboard.tsx",
      "name": "IncidentDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Incident",
        "IncidentMetrics",
        "Date",
        "AlertTriangle",
        "Bell",
        "RefreshCcw",
        "Zap",
        "Phone",
        "Heart",
        "Shield",
        "Clock",
        "Star",
        "Calendar",
        "Users",
        "CheckCircle",
        "Activity"
      ]
    },
    {
      "path": "src/components/admin/security/IncidentTimeline.tsx",
      "name": "IncidentTimeline",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Date",
        "Activity",
        "Heart",
        "FileText",
        "MessageSquare",
        "Clock",
        "Star",
        "Shield",
        "Calendar"
      ]
    },
    {
      "path": "src/components/admin/testing/IntegrationTestDashboard.tsx",
      "name": "IntegrationTestDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "IntegrationTestDashboardProps",
        "RefreshCw",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "Users",
        "Wedding",
        "Heart",
        "Badge",
        "Button",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Progress",
        "ScrollArea",
        "Separator",
        "Square",
        "Play",
        "Camera",
        "MapPin"
      ]
    },
    {
      "path": "src/components/admin/testing/TestIsolationManager.tsx",
      "name": "TestIsolationManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TestIsolationManagerProps",
        "RefreshCw",
        "Shield",
        "Trash2",
        "CheckCircle",
        "AlertTriangle",
        "RotateCcw",
        "Clock",
        "Database",
        "FileText",
        "Zap",
        "HardDrive",
        "Users",
        "GitBranch",
        "Package",
        "Unlock",
        "Lock",
        "Badge",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "Progress",
        "ScrollArea",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/admin/testing/TestResultsAnalyzer.tsx",
      "name": "TestResultsAnalyzer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TestResultsAnalyzerProps",
        "TestResultStatus",
        "TestCategory",
        "SupplierType",
        "CheckCircle",
        "XCircle",
        "AlertTriangle",
        "Clock",
        "Camera",
        "MapPin",
        "Flower",
        "ChefHat",
        "Music",
        "Car",
        "Gift",
        "Zap",
        "Database",
        "Globe",
        "RefreshCw",
        "Heart",
        "FileText",
        "Card",
        "CardContent",
        "BarChart",
        "Button",
        "Download",
        "Share",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge",
        "Target",
        "Bug",
        "CardHeader",
        "CardTitle",
        "Separator",
        "Progress",
        "Search",
        "Input",
        "Filter",
        "ScrollArea",
        "Alert",
        "AlertDescription",
        "TrendingUp",
        "Activity",
        "PieChart"
      ]
    },
    {
      "path": "src/components/admin/testing/WeddingScenarioRunner.tsx",
      "name": "WeddingScenarioRunner",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingTestScenario",
        "WeddingScenarioRunnerProps",
        "Partial",
        "Camera",
        "MapPin",
        "Flower",
        "ChefHat",
        "Music",
        "Car",
        "Gift",
        "RefreshCw",
        "CheckCircle",
        "AlertTriangle",
        "Zap",
        "FileText",
        "Clock",
        "Button",
        "Plus",
        "Upload",
        "Card",
        "CardContent",
        "Heart",
        "Star",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Square",
        "Progress",
        "Calendar",
        "Users",
        "Separator",
        "Play",
        "Settings",
        "Copy",
        "Download",
        "Trash2",
        "Input",
        "Textarea"
      ]
    },
    {
      "path": "src/components/admin/testing/WorkflowTestVisualizer.tsx",
      "name": "WorkflowTestVisualizer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WorkflowTestVisualizerProps",
        "RefreshCw",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "Database",
        "Zap",
        "Camera",
        "MapPin",
        "Flower",
        "ChefHat",
        "Music",
        "Car",
        "Gift",
        "Smartphone",
        "Users",
        "Mail",
        "MessageSquare",
        "Badge",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardContent",
        "Progress",
        "ScrollArea",
        "ArrowDown",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/ai/AIRecommendationEngine.tsx",
      "name": "AIRecommendationEngine",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/skeleton",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "AIRecommendationEngine"
      ],
      "usedComponents": [
        "RecommendationFilter",
        "RecommendationStatsDisplay",
        "RecommendationFilterButton",
        "Sparkles",
        "DollarSign",
        "Users",
        "Clock",
        "Target",
        "RecommendationsLoadingState",
        "EmptyRecommendationsState",
        "AIRecommendationCard",
        "SmartRecommendationRequestCard",
        "Button",
        "Badge",
        "Star",
        "Zap",
        "Card",
        "CardContent",
        "RecommendationIcon",
        "ConfidenceIndicator",
        "ImpactBadge",
        "CheckCircle2",
        "TrendingUp",
        "AlertCircle",
        "ArrowRight",
        "Info",
        "X",
        "Loader2",
        "Check",
        "Skeleton",
        "Brain",
        "Plus"
      ]
    },
    {
      "path": "src/components/ai/AIWeddingOptimizer.tsx",
      "name": "AIWeddingOptimizer",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/lib/utils",
        "@/hooks/ai/useAIOptimization"
      ],
      "exports": [
        "default",
        "AIWeddingOptimizer"
      ],
      "usedComponents": [
        "OptimizationType",
        "AIInsight",
        "OptimizationRequest",
        "Sparkles",
        "OptimizationStatus",
        "Button",
        "Loader2",
        "Wand2",
        "OptimizationCategory",
        "DollarSign",
        "Clock",
        "Users",
        "Target",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "AIOptimizationPlaceholder",
        "AIRecommendationCard",
        "AIInsightsPanel",
        "OptimizationHistoryWidget",
        "AIPerformanceMetricsCard",
        "OptimizationProgressCard",
        "TrendingUp",
        "Brain",
        "RecommendationIcon",
        "ConfidenceIndicator",
        "ImpactBadge",
        "ArrowRight",
        "Info",
        "X",
        "Check"
      ]
    },
    {
      "path": "src/components/ai/BudgetOptimizationPanel.tsx",
      "name": "BudgetOptimizationPanel",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "BudgetOptimizationPanel"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "DollarSign",
        "CardTitle",
        "Badge",
        "RiskIndicator",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "PieChart",
        "BarChart3",
        "Target",
        "TabsContent",
        "BudgetComparisonCard",
        "SavingsBreakdownCard",
        "CategoryOptimizationGrid",
        "BudgetTimelineView",
        "CardContent",
        "BudgetSavingCard",
        "BudgetInsightsCard",
        "Progress",
        "Star",
        "TrendingDown",
        "CategoryIcon",
        "ArrowRight",
        "ConfidenceIndicator",
        "DifficultyIndicator",
        "Button",
        "EyeOff",
        "Eye",
        "XCircle",
        "Calculator",
        "CheckCircle",
        "Zap",
        "Lightbulb"
      ]
    },
    {
      "path": "src/components/ai/ContentSuggestions.tsx",
      "name": "ContentSuggestions",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/scroll-area",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/lib/utils",
        "@/types/knowledge-base"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ContentSuggestion",
        "Zap",
        "Plus",
        "BookOpen",
        "TrendingUp",
        "Lightbulb",
        "Button",
        "RefreshCw",
        "Card",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "SuggestionCard",
        "Sparkles",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Target",
        "ChevronRight",
        "ScrollArea",
        "Separator",
        "Clock",
        "Check",
        "X",
        "Progress"
      ]
    },
    {
      "path": "src/components/ai/EmailPersonalizationPanel.tsx",
      "name": "EmailPersonalizationPanel",
      "imports": [
        "@/types/ai-email",
        "@/stores/useEmailTemplateStore"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EmailPersonalizationPanelProps",
        "Tags",
        "RefreshCw",
        "Eye",
        "Save",
        "User",
        "Users",
        "Calendar",
        "MapPin",
        "CheckCircle2",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/ai/EmailTemplateGenerator.tsx",
      "name": "EmailTemplateGenerator",
      "imports": [
        "@/stores/useEmailTemplateStore",
        "@/types/ai-email"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EmailTemplateGeneratorProps",
        "EmailGenerationConfig",
        "Sparkles",
        "AlertCircle",
        "CheckCircle2",
        "Loader2"
      ]
    },
    {
      "path": "src/components/ai/GeneratedJourneyPreview.tsx",
      "name": "GeneratedJourneyPreview",
      "imports": [
        "./OptimizationSuggestions",
        "@/types/journey-ai"
      ],
      "exports": [
        "GeneratedJourneyPreview"
      ],
      "usedComponents": [
        "Icon",
        "Sparkles",
        "Clock",
        "Zap",
        "ChevronDown",
        "ChevronRight",
        "Edit3",
        "Calendar",
        "Users",
        "TrendingUp",
        "JourneyNodeCard",
        "ArrowRight",
        "OptimizationSuggestions",
        "Info",
        "Palette",
        "Save"
      ]
    },
    {
      "path": "src/components/ai/JourneySuggestionsPanel.tsx",
      "name": "JourneySuggestionsPanel",
      "imports": [
        "./VendorSpecificControls",
        "./GeneratedJourneyPreview",
        "./PerformancePredictionDisplay",
        "@/types/journey-ai"
      ],
      "exports": [
        "JourneySuggestionsPanel"
      ],
      "usedComponents": [
        "GeneratedJourney",
        "JourneySuggestionRequest",
        "Sparkles",
        "X",
        "Icon",
        "VendorSpecificControls",
        "AlertCircle",
        "Loader2",
        "RefreshCw",
        "PerformancePredictionDisplay",
        "GeneratedJourneyPreview",
        "CheckCircle2",
        "Clock"
      ]
    },
    {
      "path": "src/components/ai/KnowledgeBasePanel.tsx",
      "name": "KnowledgeBasePanel",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/separator",
        "@/components/ui/avatar",
        "@/components/ui/scroll-area",
        "@/lib/utils",
        "./SmartSearch",
        "@/types/knowledge-base"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SearchResult",
        "KnowledgeBaseAnalytics",
        "KnowledgeArticle",
        "AutocompleteSuggestion",
        "SearchConfig",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Badge",
        "Sparkles",
        "CardContent",
        "Eye",
        "Heart",
        "Share2",
        "BookOpen",
        "Button",
        "Plus",
        "SmartSearch",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Grid",
        "List",
        "Search",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/ai/KnowledgeEditor.tsx",
      "name": "KnowledgeEditor",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/separator",
        "@/components/ui/switch",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "@/lib/utils",
        "@/types/knowledge-base"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Partial",
        "KnowledgeArticle",
        "Date",
        "HTMLTextAreaElement",
        "NodeJS",
        "Edit",
        "CheckCircle",
        "Button",
        "Eye",
        "X",
        "RefreshCw",
        "Save",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "Label",
        "Input",
        "Textarea",
        "Sparkles",
        "Wand2",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Tags",
        "BarChart3",
        "Progress",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/ai/OptimizationSuggestions.tsx",
      "name": "OptimizationSuggestions",
      "imports": [
        "@/types/journey-ai"
      ],
      "exports": [
        "OptimizationSuggestions"
      ],
      "usedComponents": [
        "CheckCircle2",
        "Icon",
        "TrendingUp",
        "ChevronDown",
        "ChevronRight",
        "Clock",
        "X",
        "Set",
        "Lightbulb",
        "Sparkles",
        "Zap",
        "Target",
        "AlertCircle",
        "Filter",
        "OptimizationCard"
      ]
    },
    {
      "path": "src/components/ai/PerformancePredictionDisplay.tsx",
      "name": "PerformancePredictionDisplay",
      "imports": [
        "@/types/journey-ai"
      ],
      "exports": [
        "PerformancePredictionDisplay"
      ],
      "usedComponents": [
        "Icon",
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "DifferenceIcon",
        "BarChart3",
        "MetricCard",
        "PerformanceChart",
        "InsightCard",
        "Info"
      ]
    },
    {
      "path": "src/components/ai/PersonalizationControls.tsx",
      "name": "PersonalizationControls",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingContext",
        "CouplePreferences",
        "SupplierBrand",
        "PersonalizationSettings",
        "TemplateVariable",
        "PersonalizationControlsProps",
        "Partial",
        "Icon",
        "Settings",
        "Button",
        "RotateCcw",
        "Save",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Heart",
        "Users",
        "Palette",
        "Sliders",
        "Target",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "MapPin",
        "CardContent",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Separator",
        "Textarea",
        "Badge",
        "Slider",
        "Switch",
        "Wand2",
        "Minus",
        "Plus"
      ]
    },
    {
      "path": "src/components/ai/PersonalizationPreview.tsx",
      "name": "PersonalizationPreview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/separator"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PersonalizationPreviewProps",
        "CheckCircle2",
        "AlertTriangle",
        "Zap",
        "Badge",
        "Clock",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Split",
        "Eye",
        "BarChart3",
        "Button",
        "RefreshCw",
        "Card",
        "CardContent",
        "Target",
        "Progress",
        "TrendingUp",
        "Users",
        "Heart",
        "CardHeader",
        "CardTitle",
        "EyeOff",
        "Label",
        "Edit3",
        "Input",
        "Separator"
      ]
    },
    {
      "path": "src/components/ai/SmartSearch.tsx",
      "name": "SmartSearch",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/separator",
        "@/lib/utils",
        "@/types/knowledge-base"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Partial",
        "SearchConfig",
        "HTMLInputElement",
        "HTMLDivElement",
        "Search",
        "Input",
        "Button",
        "MicOff",
        "Mic",
        "X",
        "Filter",
        "Card",
        "CardContent",
        "Badge",
        "Sparkles",
        "Separator",
        "Clock",
        "TrendingUp",
        "T"
      ]
    },
    {
      "path": "src/components/ai/TemplateVariantSelector.tsx",
      "name": "TemplateVariantSelector",
      "imports": [
        "@/types/ai-email",
        "@/stores/useEmailTemplateStore"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TemplateVariantSelectorProps",
        "Zap",
        "BarChart3",
        "CheckCircle2",
        "Star",
        "Edit3",
        "Eye",
        "Copy",
        "Trash2"
      ]
    },
    {
      "path": "src/components/ai/VendorSpecificControls.tsx",
      "name": "VendorSpecificControls",
      "imports": [
        "@/types/journey-ai"
      ],
      "exports": [
        "VendorSpecificControls"
      ],
      "usedComponents": [
        "Icon"
      ]
    },
    {
      "path": "src/components/ai/cache/CacheConfigurationInterface.tsx",
      "name": "CacheConfigurationInterface",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/ui/badge",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CacheTypeConfigurationProps",
        "Badge",
        "Switch",
        "Slider",
        "CacheWarmingConfigurationProps",
        "Button",
        "ManualWarmingControlsProps",
        "Zap",
        "Clock",
        "Settings",
        "Play",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "VendorSpecificSettingsProps",
        "SeasonalOptimizationSettings",
        "VendorSpecificSettings",
        "CacheConfig",
        "NotificationState",
        "RefreshCw",
        "CheckCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Database",
        "CacheTypeConfiguration",
        "CacheWarmingConfiguration",
        "ManualWarmingControls",
        "Trash2",
        "WeddingSpecificOptimization",
        "CacheType"
      ]
    },
    {
      "path": "src/components/ai/cache/CachePerformanceDashboard.tsx",
      "name": "CachePerformanceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimeRangeSelectorProps",
        "Button",
        "CacheTypePerformanceRowProps",
        "SupplierType",
        "Badge",
        "Progress",
        "PopularQueryRowProps",
        "SeasonalInsightsDisplayProps",
        "Zap",
        "CacheStats",
        "CachePerformance",
        "SeasonalData",
        "TimeRange",
        "RefreshCw",
        "TimeRangeSelector",
        "Settings",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "TrendingUp",
        "DollarSign",
        "Clock",
        "Database",
        "Activity",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "CacheTypePerformanceRow",
        "SeasonalInsightsDisplay",
        "PopularQueryRow",
        "AlertTriangle",
        "CacheOptimizationRecommendations"
      ]
    },
    {
      "path": "src/components/ai/cache/MobileCacheInterface.tsx",
      "name": "MobileCacheInterface",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "QuickStatCardProps",
        "Card",
        "CardContent",
        "Badge",
        "TouchButtonProps",
        "Activity",
        "MobileCacheActivityRowProps",
        "CacheStats",
        "CachePerformance",
        "RefreshCw",
        "QuickStatCard",
        "Zap",
        "DollarSign",
        "Clock",
        "Database",
        "TouchButton",
        "MobilePerformanceChart",
        "TrendingUp",
        "Settings",
        "MobileCacheActivityRow"
      ]
    },
    {
      "path": "src/components/ai/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/ai-email-templates/AIEmailTemplateEditor.tsx",
      "name": "AIEmailTemplateEditor",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/slider",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/use-toast",
        "@/lib/services/ai-email-generator",
        "@/lib/services/email-personalization-engine"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AIEmailGenerationRequest",
        "GenerationState",
        "Sparkles",
        "Button",
        "CheckCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Wand2",
        "Settings",
        "Mail",
        "Lightbulb",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Switch",
        "CardFooter",
        "RefreshCw",
        "Users",
        "Progress",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Badge"
      ]
    },
    {
      "path": "src/components/ai-features/AIFeatureManager.tsx",
      "name": "AIFeatureManager",
      "imports": [
        "@/types/ai-features",
        "./PlatformVsClientToggle",
        "./APIKeySetupWizard",
        "./CostTrackingDashboard",
        "./FeatureTierComparison"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AIFeature",
        "FeatureAccess",
        "UsageMetrics",
        "BudgetAlert",
        "WeddingSeasonConfig",
        "AlertCircle",
        "Shield",
        "Zap",
        "Clock",
        "Crown",
        "TrendingUp",
        "Icon",
        "CheckCircle2",
        "DollarSign",
        "PlatformVsClientToggle",
        "Settings",
        "CostTrackingDashboard",
        "FeatureTierComparison",
        "APIKeySetupWizard"
      ]
    },
    {
      "path": "src/components/ai-features/APIKeySetupWizard.tsx",
      "name": "APIKeySetupWizard",
      "imports": [
        "@/types/ai-features"
      ],
      "exports": [
        "APIKeySetupWizard"
      ],
      "usedComponents": [
        "X",
        "React",
        "CheckCircle2",
        "DollarSign",
        "Clock",
        "Shield",
        "ExternalLink",
        "EyeOff",
        "Eye",
        "Copy",
        "Loader2",
        "AlertCircle",
        "ArrowLeft",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/ai-features/CostTrackingDashboard.tsx",
      "name": "CostTrackingDashboard",
      "imports": [
        "@/types/ai-features"
      ],
      "exports": [
        "CostTrackingDashboard"
      ],
      "usedComponents": [
        "AlertTriangle",
        "X",
        "TrendingUp",
        "Filter",
        "Download",
        "Settings",
        "DollarSign",
        "TrendingDown",
        "BarChart3",
        "Calendar",
        "PieChart",
        "Bell"
      ]
    },
    {
      "path": "src/components/ai-features/FeatureTierComparison.tsx",
      "name": "FeatureTierComparison",
      "imports": [
        "@/types/ai-features"
      ],
      "exports": [
        "FeatureTierComparison"
      ],
      "usedComponents": [
        "Users",
        "Star",
        "Zap",
        "Shield",
        "Crown",
        "Check",
        "X",
        "Infinity",
        "DollarSign",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/ai-features/PlatformVsClientToggle.tsx",
      "name": "PlatformVsClientToggle",
      "imports": [
        "@/types/ai-features"
      ],
      "exports": [
        "PlatformVsClientToggle"
      ],
      "usedComponents": [
        "Shield",
        "Zap",
        "AlertTriangle",
        "TrendingUp",
        "DollarSign",
        "CheckCircle2",
        "Info"
      ]
    },
    {
      "path": "src/components/ai-features/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/ai-optimization/BatchProcessingScheduler.tsx",
      "name": "BatchProcessingScheduler",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BatchProcessingJob",
        "Card",
        "CardHeader",
        "CardTitle",
        "Timer",
        "Badge",
        "Button",
        "CardContent",
        "Label",
        "Switch",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Play",
        "CheckCircle",
        "Zap",
        "TabsContent",
        "IconComponent",
        "Progress",
        "SkipForward",
        "Pause",
        "Alert",
        "AlertCircle",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/ai-optimization/BudgetAlertsManager.tsx",
      "name": "BudgetAlertsManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BudgetAlertsManagerProps",
        "BudgetSettings",
        "StopCircle",
        "AlertCircle",
        "AlertTriangle",
        "CheckCircle",
        "T",
        "Badge",
        "Button",
        "Settings",
        "Save",
        "Alert",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "Label",
        "Input",
        "Switch",
        "Bell",
        "Shield",
        "Mail",
        "Smartphone",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Calendar"
      ]
    },
    {
      "path": "src/components/ai-optimization/CostOptimizationDashboard.tsx",
      "name": "CostOptimizationDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CostOptimizationDashboardProps",
        "AIOptimizationDashboardData",
        "Badge",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "Target",
        "Progress",
        "Zap",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Camera",
        "FileText",
        "MessageCircle",
        "Calendar",
        "Clock",
        "CheckCircle",
        "Button"
      ]
    },
    {
      "path": "src/components/ai-optimization/CostSavingsReporter.tsx",
      "name": "CostSavingsReporter",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Download",
        "CardContent",
        "TrendingDown",
        "ArrowUpRight",
        "Camera",
        "Calendar",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Progress",
        "FileText",
        "MessageCircle",
        "TrendingUp",
        "Alert",
        "AlertDescription",
        "Award",
        "Badge"
      ]
    },
    {
      "path": "src/components/ai-optimization/ModelSelectionOptimizer.tsx",
      "name": "ModelSelectionOptimizer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/label",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ModelSelectionOptimizerProps",
        "ModelSelectionConfig",
        "T",
        "Badge",
        "TrendingDown",
        "Button",
        "Settings",
        "Save",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Camera",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Info",
        "Progress",
        "FileText",
        "MessageCircle",
        "Brain",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Slider",
        "Star",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/ai-optimization/SmartCachingVisualizer.tsx",
      "name": "SmartCachingVisualizer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SmartCachingVisualizerProps",
        "CheckCircle",
        "Target",
        "AlertTriangle",
        "Camera",
        "FileText",
        "MessageCircle",
        "Badge",
        "Button",
        "RefreshCw",
        "Settings",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Progress",
        "Alert",
        "AlertDescription",
        "PiggyBank"
      ]
    },
    {
      "path": "src/components/ai-optimization/WeddingSeasonCostProjector.tsx",
      "name": "WeddingSeasonCostProjector",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingSeasonCostProjectorProps",
        "Heart",
        "Camera",
        "Calendar",
        "Badge",
        "Button",
        "Settings",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "TrendingUp",
        "TrendingDown",
        "Label",
        "Input"
      ]
    },
    {
      "path": "src/components/analytics/ActiveJourneysTable.tsx",
      "name": "ActiveJourneysTable",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/hooks/useAnalyticsData",
        "./Skeletons",
        "@/components/ui/table"
      ],
      "exports": [
        "ActiveJourneysTable"
      ],
      "usedComponents": [
        "TableSkeleton",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Users",
        "CardContent",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "AlertCircle",
        "TrendingUp",
        "Progress",
        "Clock",
        "Link",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/analytics/AlertSystem.tsx",
      "name": "AlertSystem",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/input",
        "@/components/untitled-ui/select",
        "@/lib/supabase/client"
      ],
      "exports": [
        "AlertSystem"
      ],
      "usedComponents": [
        "AlertThreshold",
        "AlertHistory",
        "Badge",
        "AlertTriangle",
        "Card",
        "Button",
        "Check",
        "Settings",
        "Clock",
        "Plus",
        "Select",
        "Input",
        "AlertIcon",
        "ChannelIcon",
        "EyeOff",
        "Eye",
        "X",
        "Bell"
      ]
    },
    {
      "path": "src/components/analytics/AnalyticsFilters.tsx",
      "name": "AnalyticsFilters",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AnalyticsFilters",
        "AnalyticsFiltersProps",
        "Filter",
        "RefreshCw",
        "ChevronUp",
        "ChevronDown",
        "Calendar",
        "ArrowUpDown",
        "Users",
        "IconComponent",
        "X",
        "BarChart3"
      ]
    },
    {
      "path": "src/components/analytics/AnalyticsOverview.tsx",
      "name": "AnalyticsOverview",
      "imports": [],
      "exports": [
        "default",
        "AnalyticsOverview"
      ],
      "usedComponents": [
        "Icon",
        "TrendingUp",
        "TrendingDown",
        "MetricCard",
        "Download",
        "AlertCircle",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart3"
      ]
    },
    {
      "path": "src/components/analytics/BenchmarkingInterface.tsx",
      "name": "BenchmarkingInterface",
      "imports": [
        "./VendorScoreCard"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BenchmarkingInterfaceProps",
        "MetricKey",
        "Users",
        "Search",
        "X",
        "IconComponent"
      ]
    },
    {
      "path": "src/components/analytics/BookingFunnelAnalytics.tsx",
      "name": "BookingFunnelAnalytics",
      "imports": [
        "@/types/analytics",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "BookingFunnelAnalytics"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Button",
        "Target",
        "TabsContent",
        "IconComponent",
        "Clock",
        "Progress",
        "TrendingDown",
        "AnimatePresence",
        "AlertTriangle",
        "Badge",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/analytics/ChartsPanel.tsx",
      "name": "ChartsPanel",
      "imports": [],
      "exports": [
        "ChartsPanel"
      ],
      "usedComponents": [
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "BarChart",
        "Bar",
        "LineChart",
        "Line",
        "PieChart",
        "Pie",
        "Cell"
      ]
    },
    {
      "path": "src/components/analytics/ClientAnalyticsDashboard.tsx",
      "name": "ClientAnalyticsDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ClientAnalyticsDashboardProps",
        "AnalyticsDashboardData",
        "AtRiskAlert",
        "AlertCircle",
        "ChevronDown",
        "RefreshCw",
        "AlertTriangle",
        "Users",
        "TrendingUp",
        "XCircle",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "Legend",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Line",
        "BarChart",
        "Bar",
        "Mail",
        "MousePointer",
        "FileText"
      ]
    },
    {
      "path": "src/components/analytics/ClientJourney.tsx",
      "name": "ClientJourney",
      "imports": [],
      "exports": [
        "default",
        "ClientJourney"
      ],
      "usedComponents": [
        "IconComponent",
        "ArrowRight",
        "Users",
        "CheckCircle",
        "Clock",
        "TrendingUp",
        "StageCard",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "AreaChart",
        "Legend",
        "Area",
        "MapPin"
      ]
    },
    {
      "path": "src/components/analytics/ClientPortalAnalytics.tsx",
      "name": "ClientPortalAnalytics",
      "imports": [
        "../../hooks/useClientAnalytics",
        "./EngagementMetrics",
        "./FeatureUsage",
        "./CommunicationAnalytics",
        "./ClientJourney",
        "./AnalyticsOverview"
      ],
      "exports": [
        "default",
        "ClientPortalAnalytics"
      ],
      "usedComponents": [
        "Calendar",
        "ChevronDown",
        "RefreshCw",
        "Icon",
        "AnalyticsOverview",
        "EngagementMetrics",
        "FeatureUsage",
        "CommunicationAnalytics",
        "ClientJourney",
        "BarChart3"
      ]
    },
    {
      "path": "src/components/analytics/ClientSatisfactionDashboard.tsx",
      "name": "ClientSatisfactionDashboard",
      "imports": [
        "@/types/analytics",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "ClientSatisfactionDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardContent",
        "Progress",
        "ThumbsUp",
        "Users",
        "MessageCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Badge",
        "IconComponent",
        "EmojiComponent",
        "TrendingUp",
        "TrendingDown",
        "AnimatePresence",
        "CheckCircle",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/analytics/CommunicationAnalytics.tsx",
      "name": "CommunicationAnalytics",
      "imports": [],
      "exports": [
        "default",
        "CommunicationAnalytics"
      ],
      "usedComponents": [
        "Icon",
        "TrendingUp",
        "TrendingDown",
        "MetricCard",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "BarChart",
        "Bar",
        "EngagementBadge",
        "MessageSquare"
      ]
    },
    {
      "path": "src/components/analytics/ConversionFunnelChart.tsx",
      "name": "ConversionFunnelChart",
      "imports": [
        "@/components/ui/card",
        "@/hooks/useAnalyticsData",
        "./Skeletons"
      ],
      "exports": [
        "ConversionFunnelChart"
      ],
      "usedComponents": [
        "ChartSkeleton",
        "Card",
        "CardHeader",
        "CardTitle",
        "Info",
        "CardContent",
        "ResponsiveContainer",
        "FunnelChart",
        "Tooltip",
        "CustomTooltip",
        "Funnel",
        "CustomLabel",
        "Cell"
      ]
    },
    {
      "path": "src/components/analytics/CustomDashboardBuilder.tsx",
      "name": "CustomDashboardBuilder",
      "imports": [
        "@/types/analytics",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/dialog",
        "@/components/ui/select",
        "@/components/ui/switch"
      ],
      "exports": [
        "CustomDashboardBuilder"
      ],
      "usedComponents": [
        "AnalyticsWidget",
        "PreviewDevice",
        "DashboardGrid",
        "Grid3X3",
        "Input",
        "Button",
        "IconComponent",
        "Eye",
        "Save",
        "RotateCcw",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Plus",
        "Label",
        "Settings",
        "Copy",
        "Trash2",
        "BarChart3",
        "TrendingUp",
        "Target",
        "Heart",
        "Users",
        "Card",
        "CardContent",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Switch"
      ]
    },
    {
      "path": "src/components/analytics/EngagementMetrics.tsx",
      "name": "EngagementMetrics",
      "imports": [],
      "exports": [
        "default",
        "EngagementMetrics"
      ],
      "usedComponents": [
        "Icon",
        "TrendingUp",
        "TrendingDown",
        "MetricCard",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "AreaChart",
        "Area",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/analytics/ExecutiveDashboard.tsx",
      "name": "ExecutiveDashboard",
      "imports": [
        "./MetricsCards",
        "./ChartsPanel",
        "@/hooks/useExecutiveMetrics"
      ],
      "exports": [
        "ExecutiveDashboard"
      ],
      "usedComponents": [
        "DateRange",
        "MetricsCards",
        "ChartsPanel"
      ]
    },
    {
      "path": "src/components/analytics/ExportReports.tsx",
      "name": "ExportReports",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/select",
        "@/components/untitled-ui/badge",
        "@/lib/supabase/client"
      ],
      "exports": [
        "ExportReports"
      ],
      "usedComponents": [
        "ExportOptions",
        "Card",
        "Icon",
        "Select",
        "Button",
        "Clock",
        "Download",
        "selectedReportType",
        "Badge",
        "Image",
        "AlertTriangle",
        "FileText"
      ]
    },
    {
      "path": "src/components/analytics/FeatureUsage.tsx",
      "name": "FeatureUsage",
      "imports": [],
      "exports": [
        "default",
        "FeatureUsage"
      ],
      "usedComponents": [
        "IconComponent",
        "TrendingUp",
        "TrendingDown",
        "FeatureCard",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Bar",
        "Activity"
      ]
    },
    {
      "path": "src/components/analytics/GuestDemographicsAnalysis.tsx",
      "name": "GuestDemographicsAnalysis",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/lib/supabase/client"
      ],
      "exports": [
        "GuestDemographicsAnalysis"
      ],
      "usedComponents": [
        "DemographicData",
        "RSVPStatusData",
        "LocationData",
        "DietaryData",
        "Button",
        "Card",
        "Users",
        "UserCheck",
        "Calendar",
        "MapPin",
        "Home",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "Utensils",
        "Globe",
        "Badge",
        "Legend"
      ]
    },
    {
      "path": "src/components/analytics/JourneyOverviewCards.tsx",
      "name": "JourneyOverviewCards",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/hooks/useAnalyticsData",
        "./Skeletons"
      ],
      "exports": [
        "JourneyOverviewCards"
      ],
      "usedComponents": [
        "OverviewCardsSkeleton",
        "Card",
        "CardHeader",
        "CardTitle",
        "Icon",
        "CardContent",
        "Badge",
        "TrendingUp",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/analytics/MRRDashboard.tsx",
      "name": "MRRDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MRRMetrics",
        "MRRSnapshot",
        "CohortData",
        "DocumentArrowDownIcon",
        "ArrowUpIcon",
        "CurrencyDollarIcon",
        "UsersIcon",
        "ChartBarIcon",
        "ExclamationTriangleIcon",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "BarChart",
        "Bar",
        "LineChart",
        "Line",
        "TrendingDownIcon",
        "TrendingUpIcon",
        "PieChart",
        "Pie",
        "Cell"
      ]
    },
    {
      "path": "src/components/analytics/MarketPositionAnalytics.tsx",
      "name": "MarketPositionAnalytics",
      "imports": [
        "@/types/analytics",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "MarketPositionAnalytics"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Target",
        "Progress",
        "Shield",
        "TrendingUp",
        "ArrowUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Button",
        "Zap",
        "TabsContent",
        "Badge",
        "Crown",
        "Star",
        "Trophy",
        "Users",
        "AnimatePresence",
        "ArrowDown",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/analytics/MetricsCards.tsx",
      "name": "MetricsCards",
      "imports": [],
      "exports": [
        "MetricsCards"
      ],
      "usedComponents": [
        "MetricCard"
      ]
    },
    {
      "path": "src/components/analytics/MobileAnalyticsDashboard.tsx",
      "name": "MobileAnalyticsDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MobileAnalyticsDashboardProps",
        "MobileViewMode",
        "MobileMetric",
        "WeddingQuickStat",
        "QuickActionConfig",
        "NotificationBadge",
        "AnimatePresence",
        "TrendingUp",
        "Bell",
        "BarChart3",
        "RefreshCw",
        "Filter",
        "X"
      ]
    },
    {
      "path": "src/components/analytics/PerformanceAnalyticsDashboard.tsx",
      "name": "PerformanceAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/lib/analytics/PerformanceAnalyticsEngine"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AnalyticsPeriod",
        "AnalyticsResult",
        "TrendAnalysis",
        "WeddingDayInsights",
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "Button",
        "Download",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "Filter",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "metricConfig",
        "Badge",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "AreaChart",
        "Area",
        "Calendar",
        "Clock",
        "AlertTriangle",
        "Gauge",
        "Alert",
        "AlertDescription",
        "Brain",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/analytics/PerformanceCharts.tsx",
      "name": "PerformanceCharts",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PerformanceChartsProps",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "Bar",
        "Cell",
        "LineChart",
        "Line",
        "AreaChart",
        "linearGradient",
        "Area",
        "PieChart",
        "Pie",
        "ScatterChart",
        "Scatter",
        "BarChart3",
        "Maximize2",
        "Download",
        "ResponsiveContainer"
      ]
    },
    {
      "path": "src/components/analytics/PerformanceKPIDashboard.tsx",
      "name": "PerformanceKPIDashboard",
      "imports": [
        "@/types/analytics",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "PerformanceKPIDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Award",
        "CardContent",
        "Progress",
        "TrendingUp",
        "AlertCircle",
        "Star",
        "Button",
        "IconComponent",
        "Badge",
        "TrendingDown",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/analytics/PerformanceMetricsChart.tsx",
      "name": "PerformanceMetricsChart",
      "imports": [
        "@/components/ui/card",
        "@/hooks/useAnalyticsData",
        "./Skeletons",
        "@/components/ui/tabs"
      ],
      "exports": [
        "PerformanceMetricsChart"
      ],
      "usedComponents": [
        "ChartSkeleton",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TrendingUp",
        "Target",
        "DollarSign",
        "TabsContent",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "Line",
        "AreaChart",
        "Area"
      ]
    },
    {
      "path": "src/components/analytics/RealTimeAnalyticsDashboard.tsx",
      "name": "RealTimeAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Date",
        "WeddingMetric",
        "UserBehaviorData",
        "FeatureAdoptionData",
        "WeddingJourneyStage",
        "RealTimeEvent",
        "Button",
        "Activity",
        "RefreshCw",
        "Download",
        "Card",
        "CardContent",
        "Badge",
        "ArrowUpRight",
        "ArrowDownRight",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "Target",
        "BarChart",
        "Bar",
        "LineChart",
        "Legend",
        "Line",
        "RechartsPieChart",
        "Pie",
        "Cell",
        "Zap",
        "AnimatePresence",
        "Heart",
        "DollarSign",
        "Users"
      ]
    },
    {
      "path": "src/components/analytics/RechartsComponents.tsx",
      "name": "RechartsComponents",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "AnalyticsCard",
        "RevenueTrends",
        "ConversionFunnel",
        "VendorPerformance",
        "WeddingSeasonInsights",
        "ClientAcquisition"
      ],
      "usedComponents": [
        "AnalyticsCardProps",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "RevenueTrendsProps",
        "AnalyticsCard",
        "ResponsiveContainer",
        "AreaChart",
        "linearGradient",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "ConversionFunnelProps",
        "Badge",
        "VendorPerformanceProps",
        "BarChart",
        "Bar",
        "WeddingSeasonInsightsProps",
        "LineChart",
        "Legend",
        "Line",
        "ClientAcquisitionProps",
        "RechartsPieChart",
        "Pie",
        "Cell"
      ]
    },
    {
      "path": "src/components/analytics/ResponseAnalyticsDashboard.tsx",
      "name": "ResponseAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "default",
        "response"
      ],
      "usedComponents": [
        "ResponseAnalyticsDashboardProps",
        "AnalyticsData",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "RefreshCw",
        "Download",
        "Progress",
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "CardContent",
        "Clock",
        "CheckCircle",
        "XCircle",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line"
      ]
    },
    {
      "path": "src/components/analytics/ResponseRateDashboard.tsx",
      "name": "ResponseRateDashboard",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/select",
        "@/components/untitled-ui/button",
        "@/lib/supabase/client"
      ],
      "exports": [
        "ResponseRateDashboard"
      ],
      "usedComponents": [
        "FormResponseMetrics",
        "TimeSeriesData",
        "Select",
        "Card",
        "TrendingUp",
        "TrendingDown",
        "Users",
        "FileText",
        "Badge",
        "CheckCircle",
        "Clock",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "BarChart",
        "Bar",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/analytics/RevenueAnalytics.tsx",
      "name": "RevenueAnalytics",
      "imports": [
        "@/types/analytics",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/progress"
      ],
      "exports": [
        "RevenueAnalytics"
      ],
      "usedComponents": [
        "RevenueData",
        "ChartMode",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "ArrowUp",
        "ArrowDown",
        "Target",
        "Zap",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Download",
        "TabsContent",
        "Badge",
        "Calendar",
        "BarChart3",
        "IconComponent",
        "Progress",
        "TrendingDown",
        "Eye",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/analytics/RevenueAttributionChart.tsx",
      "name": "RevenueAttributionChart",
      "imports": [
        "@/components/ui/card",
        "@/hooks/useAnalyticsData",
        "./Skeletons",
        "@/components/ui/tabs"
      ],
      "exports": [
        "RevenueAttributionChart"
      ],
      "usedComponents": [
        "ChartSkeleton",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar"
      ]
    },
    {
      "path": "src/components/analytics/RevenueDashboard.tsx",
      "name": "RevenueDashboard",
      "imports": [
        "@/hooks/useAnalyticsData",
        "./RechartsComponents",
        "./JourneyOverviewCards",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "RevenueDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardContent",
        "Badge",
        "Button",
        "RefreshCw",
        "Download",
        "JourneyOverviewCards",
        "RevenueTrends",
        "ClientAcquisition",
        "ConversionFunnel",
        "VendorPerformance",
        "WeddingSeasonInsights",
        "CardTitle",
        "Calendar"
      ]
    },
    {
      "path": "src/components/analytics/Skeletons.tsx",
      "name": "Skeletons",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/skeleton"
      ],
      "exports": [
        "OverviewCardsSkeleton",
        "ChartSkeleton",
        "TableSkeleton"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "Skeleton",
        "CardContent"
      ]
    },
    {
      "path": "src/components/analytics/TimeframeSelector.tsx",
      "name": "TimeframeSelector",
      "imports": [
        "@/components/ui/select"
      ],
      "exports": [
        "TimeframeSelector"
      ],
      "usedComponents": [
        "Select",
        "SelectTrigger",
        "Calendar",
        "SelectValue",
        "SelectContent",
        "SelectItem"
      ]
    },
    {
      "path": "src/components/analytics/VendorAnalyticsDashboard.tsx",
      "name": "VendorAnalyticsDashboard",
      "imports": [
        "./PerformanceCharts",
        "./VendorScoreCard",
        "./BenchmarkingInterface",
        "./AnalyticsFilters"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorAnalyticsDashboardProps",
        "AnalyticsFilters",
        "BarChart3",
        "RefreshCw",
        "Filter",
        "Download",
        "Settings",
        "Search",
        "AnimatePresence",
        "AnalyticsFiltersComponent",
        "Icon",
        "VendorScoreCard",
        "PerformanceCharts",
        "BenchmarkingInterface"
      ]
    },
    {
      "path": "src/components/analytics/VendorCompletionTracker.tsx",
      "name": "VendorCompletionTracker",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/lib/supabase/client"
      ],
      "exports": [
        "VendorCompletionTracker"
      ],
      "usedComponents": [
        "VendorCompletionData",
        "VendorDetails",
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "XCircle",
        "Button",
        "Activity",
        "Card",
        "Building2",
        "FileText",
        "TrendingUp",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "Cell",
        "Badge",
        "Send",
        "ChevronRight",
        "Mail",
        "Phone"
      ]
    },
    {
      "path": "src/components/analytics/VendorScoreCard.tsx",
      "name": "VendorScoreCard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorScoreCardProps",
        "IconComponent",
        "TrendIcon",
        "Star"
      ]
    },
    {
      "path": "src/components/analytics/WeddingAnalyticsPatterns.tsx",
      "name": "WeddingAnalyticsPatterns",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingAnalyticsPatternsProps",
        "SeasonalPattern",
        "VenueTypePattern",
        "WeddingDayTimeline",
        "ServiceDemandPattern",
        "GeographicPattern",
        "Zap",
        "AlertTriangle",
        "Target",
        "SeasonalPatternView",
        "VenuePatternView",
        "ServiceDemandView",
        "GeographicPatternView",
        "WeddingDayTimelineView",
        "Activity",
        "Eye",
        "Download",
        "Share2",
        "AnimatePresence",
        "X",
        "Info"
      ]
    },
    {
      "path": "src/components/analytics/__tests__/AnalyticsOverview.test.tsx",
      "name": "AnalyticsOverview.test",
      "imports": [
        "../AnalyticsOverview"
      ],
      "exports": [],
      "usedComponents": [
        "AnalyticsOverview"
      ]
    },
    {
      "path": "src/components/analytics/__tests__/ClientJourney.test.tsx",
      "name": "ClientJourney.test",
      "imports": [
        "../ClientJourney"
      ],
      "exports": [],
      "usedComponents": [
        "ClientJourney"
      ]
    },
    {
      "path": "src/components/analytics/__tests__/ClientPortalAnalytics.test.tsx",
      "name": "ClientPortalAnalytics.test",
      "imports": [
        "../ClientPortalAnalytics"
      ],
      "exports": [],
      "usedComponents": [
        "ClientPortalAnalytics"
      ]
    },
    {
      "path": "src/components/analytics/__tests__/CommunicationAnalytics.test.tsx",
      "name": "CommunicationAnalytics.test",
      "imports": [
        "../CommunicationAnalytics"
      ],
      "exports": [],
      "usedComponents": [
        "CommunicationAnalytics"
      ]
    },
    {
      "path": "src/components/analytics/__tests__/EngagementMetrics.test.tsx",
      "name": "EngagementMetrics.test",
      "imports": [
        "../EngagementMetrics"
      ],
      "exports": [],
      "usedComponents": [
        "EngagementMetrics"
      ]
    },
    {
      "path": "src/components/analytics/__tests__/FeatureUsage.test.tsx",
      "name": "FeatureUsage.test",
      "imports": [
        "../FeatureUsage"
      ],
      "exports": [],
      "usedComponents": [
        "FeatureUsage"
      ]
    },
    {
      "path": "src/components/analytics/ab-tests/ABTestDashboard.tsx",
      "name": "ABTestDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/lib/statistics/significance"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Play",
        "Pause",
        "CheckCircle",
        "Square",
        "Card",
        "Badge",
        "Button",
        "Users",
        "TrendingUp",
        "AlertCircle",
        "Crown",
        "Progress",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Bar",
        "MessageSquare"
      ]
    },
    {
      "path": "src/components/analytics/ab-tests/ABTestRealtimeDashboard.tsx",
      "name": "ABTestRealtimeDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/lib/statistics/core-engine"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RealtimeUpdate",
        "Date",
        "NodeJS",
        "WebSocket",
        "Card",
        "TrendingUp",
        "TrendingDown",
        "Badge",
        "Activity",
        "Pause",
        "Crown",
        "Button",
        "Square",
        "Progress",
        "Target",
        "CheckCircle2",
        "AlertTriangle",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "ReferenceLine",
        "Zap",
        "RefreshCw",
        "Users",
        "Timer"
      ]
    },
    {
      "path": "src/components/analytics/activation/ActivationFunnelDashboard.tsx",
      "name": "ActivationFunnelDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/lib/activation/activation-service"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ActivationAnalytics",
        "Card",
        "CardHeader",
        "CardContent",
        "AlertTriangle",
        "Button",
        "RefreshCw",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardTitle",
        "Users",
        "Target",
        "Progress",
        "TrendingUp",
        "CardDescription",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "PieChart",
        "Pie",
        "Cell",
        "LineChart",
        "Line",
        "Badge"
      ]
    },
    {
      "path": "src/components/analytics/activation/UserActivationProgress.tsx",
      "name": "UserActivationProgress",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/activation/activation-service"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ActivationStatus",
        "Card",
        "CardContent",
        "Button",
        "Badge",
        "Progress",
        "ArrowRight",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardDescription",
        "Star",
        "CheckCircle",
        "Circle",
        "Clock"
      ]
    },
    {
      "path": "src/components/analytics/predictive-insights/BudgetOptimizationPanel.tsx",
      "name": "BudgetOptimizationPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BudgetOptimizationData",
        "Icon",
        "Card",
        "CardHeader",
        "CardTitle",
        "Calculator",
        "CardDescription",
        "CardContent",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "DollarSign",
        "Target",
        "PiggyBank",
        "Sparkles",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "Badge",
        "TrendingUp",
        "TrendingDown",
        "Clock",
        "Progress",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Legend",
        "Area",
        "Line",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/analytics/predictive-insights/ChurnRiskMonitor.tsx",
      "name": "ChurnRiskMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/avatar"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ChurnAnalytics",
        "AlertTriangle",
        "XCircle",
        "Clock",
        "CheckCircle",
        "Shield",
        "Mail",
        "Phone",
        "CreditCard",
        "Users",
        "Zap",
        "Target",
        "Card",
        "CardHeader",
        "CardTitle",
        "UserX",
        "CardDescription",
        "CardContent",
        "Alert",
        "AlertDescription",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "AreaChart",
        "Legend",
        "Area",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "Progress",
        "LineChart",
        "Line"
      ]
    },
    {
      "path": "src/components/analytics/predictive-insights/PredictiveInsightsDashboard.tsx",
      "name": "PredictiveInsightsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MLMetrics",
        "ModelHealth",
        "IconComponent",
        "Card",
        "CardHeader",
        "CardContent",
        "AlertCircle",
        "Button",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Activity",
        "CardTitle",
        "CheckCircle",
        "Heart",
        "TrendingUp",
        "Badge",
        "TabsContent",
        "CardDescription",
        "Users"
      ]
    },
    {
      "path": "src/components/analytics/predictive-insights/RevenueForecasting.tsx",
      "name": "RevenueForecasting",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RevenueData",
        "ArrowUpRight",
        "ArrowDownRight",
        "Minus",
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "CardDescription",
        "CardContent",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "DollarSign",
        "Target",
        "TrendingUp",
        "Activity",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "LineChart",
        "Line",
        "Badge",
        "ComposedChart",
        "Bar",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Progress",
        "CheckCircle",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/analytics/predictive-insights/TrendAnalyticsDashboard.tsx",
      "name": "TrendAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/input",
        "@/components/ui/label"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TrendData",
        "ColorTrend",
        "StyleTrend",
        "RegionalTrend",
        "TrendFilters",
        "TrendingUp",
        "TrendingDown",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Download",
        "Card",
        "CardHeader",
        "CardTitle",
        "Filter",
        "CardContent",
        "Label",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "Badge",
        "Palette",
        "PieChart",
        "Pie",
        "Cell",
        "Sparkles",
        "MapPin"
      ]
    },
    {
      "path": "src/components/analytics/predictive-insights/VendorPerformanceAnalytics.tsx",
      "name": "VendorPerformanceAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/avatar"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorPerformanceData",
        "Icon",
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "CardDescription",
        "CardContent",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Calendar",
        "Target",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "Legend",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "Badge",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Star",
        "Progress",
        "CheckCircle",
        "Clock",
        "TrendingDown",
        "Activity",
        "LineChart",
        "Line",
        "MapPin"
      ]
    },
    {
      "path": "src/components/analytics/seo/SEOAnalyticsDashboard.tsx",
      "name": "SEOAnalyticsDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SEOAnalyticsDashboardProps",
        "SEODashboardData",
        "AlertCircle",
        "RefreshCw",
        "Zap",
        "Trophy",
        "Users",
        "Target",
        "Search",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "ChevronDown",
        "ChevronUp",
        "LineChart",
        "Line",
        "Monitor",
        "Smartphone",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/analytics/wedding/BudgetVarianceReporting.tsx",
      "name": "BudgetVarianceReporting",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/lib/analytics/wedding-metrics"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BudgetCategoryType",
        "BudgetVarianceReportingProps",
        "BudgetAnalyticsData",
        "SpendingTrend",
        "Badge",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardContent",
        "CreditCard",
        "TrendingUp",
        "TrendingDown",
        "BarChart3",
        "ResponsiveContainer",
        "PieChartComponent",
        "Pie",
        "Cell",
        "Tooltip",
        "Legend",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "LineChart",
        "Line",
        "XCircle",
        "CheckCircle",
        "Progress"
      ]
    },
    {
      "path": "src/components/analytics/wedding/ReportBuilder.tsx",
      "name": "ReportBuilder",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "GripVertical",
        "IconComponent",
        "CardTitle",
        "Badge",
        "Button",
        "Settings",
        "X",
        "CardContent",
        "Plus",
        "ReportBuilderProps",
        "CustomReport",
        "ReportWidget",
        "WidgetLibraryItem",
        "Input",
        "Eye",
        "Save",
        "BarChart3",
        "DndContext",
        "SortableContext",
        "SortableWidgetItem",
        "DragOverlay",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem"
      ]
    },
    {
      "path": "src/components/analytics/wedding/TimelineEfficiencyTracker.tsx",
      "name": "TimelineEfficiencyTracker",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/lib/analytics/wedding-metrics"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MilestoneCategory",
        "TimelineEfficiencyTrackerProps",
        "TimelineMilestone",
        "MilestoneEfficiencyMetrics",
        "DependencyIssue",
        "CheckCircle",
        "XCircle",
        "PlayCircle",
        "PauseCircle",
        "Clock",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardHeader",
        "CardTitle",
        "Zap",
        "CardContent",
        "Progress",
        "TrendingUp",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Bar",
        "LineChart",
        "Line",
        "Badge",
        "ArrowUp",
        "ArrowDown",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/analytics/wedding/VendorPerformanceAnalytics.tsx",
      "name": "VendorPerformanceAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/lib/analytics/wedding-metrics"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorCategory",
        "VendorAnalyticsData",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "ResponsiveContainer",
        "RadarChart",
        "PolarGrid",
        "PolarAngleAxis",
        "PolarRadiusAxis",
        "Radar",
        "Legend",
        "Tooltip",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "Badge",
        "Star",
        "Clock",
        "DollarSign",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/analytics/wedding/WeddingMetricsDashboard.tsx",
      "name": "WeddingMetricsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/lib/analytics/wedding-metrics-client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingMetricsDashboardProps",
        "WeddingAnalyticsData",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Download",
        "Progress",
        "AlertTriangle",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardContent",
        "Target",
        "DollarSign",
        "TrendingUp",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Bar",
        "LineChart",
        "Line",
        "XCircle",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/api/MigrationAssistant.tsx",
      "name": "MigrationAssistant",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/types/api-versions"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MigrationPlan",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "ArrowRight",
        "Button",
        "Clock",
        "CheckCircle",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/api-gateway/CriticalEndpointProtection.tsx",
      "name": "CriticalEndpointProtection",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingContext",
        "ProtectionRule",
        "CheckCircle",
        "AlertCircle",
        "XCircle",
        "Heart",
        "AlertTriangle",
        "Clock",
        "Eye",
        "Activity",
        "Shield",
        "Settings",
        "Calendar",
        "RefreshCw",
        "Zap",
        "Phone",
        "Users",
        "MapPin",
        "Icon"
      ]
    },
    {
      "path": "src/components/api-gateway/EndpointConfigurationPanel.tsx",
      "name": "EndpointConfigurationPanel",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EndpointConfiguration",
        "Record",
        "Plus",
        "Search",
        "Database",
        "CategoryIcon",
        "CheckCircle",
        "XCircle",
        "TestTube",
        "Edit",
        "Trash2",
        "Save",
        "X",
        "Settings"
      ]
    },
    {
      "path": "src/components/api-gateway/SeasonalTrafficMonitor.tsx",
      "name": "SeasonalTrafficMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SeasonIcon",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Thermometer",
        "Progress",
        "TrendingUp",
        "Sun",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "ResponsiveContainer",
        "AreaChart",
        "linearGradient",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "BarChart",
        "Bar",
        "Activity"
      ]
    },
    {
      "path": "src/components/api-gateway/VendorAPIAccessManager.tsx",
      "name": "VendorAPIAccessManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorAccess",
        "Button",
        "Users",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardContent",
        "VendorIcon",
        "Badge",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Switch",
        "Key",
        "Alert",
        "Shield",
        "AlertDescription",
        "CheckCircle",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/api-gateway/WeddingAPIUsageAnalytics.tsx",
      "name": "WeddingAPIUsageAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingAPIMetrics",
        "VendorUsageData",
        "SeasonalTrend",
        "WeddingDayHourlyData",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardHeader",
        "CardTitle",
        "Wedding",
        "CardContent",
        "Users",
        "Activity",
        "TrendingUp",
        "Star",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "CardDescription",
        "VendorIcon",
        "Progress",
        "AreaChart",
        "linearGradient",
        "Legend",
        "Area",
        "Badge",
        "LineChart",
        "Line"
      ]
    },
    {
      "path": "src/components/api-keys/APIAnalyticsDashboard.tsx",
      "name": "APIAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "APIAnalyticsDashboard"
      ],
      "usedComponents": [
        "APIUsageMetrics",
        "RateLimitMetrics",
        "Array",
        "Date",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Zap",
        "CardDescription",
        "Progress",
        "BarChart3",
        "XCircle",
        "Badge",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/api-keys/APIDocumentationGenerator.tsx",
      "name": "APIDocumentationGenerator",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/tabs"
      ],
      "exports": [
        "APIDocumentationGenerator"
      ],
      "usedComponents": [
        "APIEndpoint",
        "Button",
        "Download",
        "ExternalLink",
        "Card",
        "CardHeader",
        "CardTitle",
        "Settings",
        "CardDescription",
        "CardContent",
        "Label",
        "Input",
        "Badge",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Copy"
      ]
    },
    {
      "path": "src/components/api-keys/APIKeyManager.tsx",
      "name": "APIKeyManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "APIKeyManager"
      ],
      "usedComponents": [
        "APIKey",
        "APIScope",
        "Record",
        "CreateKeyData",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Checkbox",
        "Card",
        "CardContent",
        "Key",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardDescription",
        "RotateCw",
        "Trash2",
        "Copy",
        "Alert",
        "AlertTriangle",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/articles/ArticleAnalytics.tsx",
      "name": "ArticleAnalytics",
      "imports": [],
      "exports": [
        "ArticleAnalytics"
      ],
      "usedComponents": [
        "ArticleAnalyticsType",
        "BarChart3",
        "RefreshCw",
        "Eye",
        "TrendingUp",
        "Clock",
        "Share2",
        "Globe",
        "Smartphone",
        "Icon",
        "Download"
      ]
    },
    {
      "path": "src/components/articles/ArticleEditor.tsx",
      "name": "ArticleEditor",
      "imports": [],
      "exports": [
        "ArticleEditor"
      ],
      "usedComponents": [
        "Article",
        "ContentDistributionRule",
        "Date",
        "HTMLInputElement",
        "EditorContext",
        "FileText",
        "Eye",
        "Save",
        "Share",
        "Icon",
        "Upload",
        "EditorContent",
        "FloatingMenu",
        "BubbleMenu",
        "Sparkles",
        "Settings"
      ]
    },
    {
      "path": "src/components/articles/ContentDistribution.tsx",
      "name": "ContentDistribution",
      "imports": [
        "@/lib/services/content-distribution"
      ],
      "exports": [
        "ContentDistribution"
      ],
      "usedComponents": [
        "ContentDistributionRule",
        "Target",
        "RefreshCw",
        "Users",
        "TrendingUp",
        "Brain",
        "Search",
        "Filter",
        "Eye",
        "Calendar",
        "Heart"
      ]
    },
    {
      "path": "src/components/articles/PublishingScheduler.tsx",
      "name": "PublishingScheduler",
      "imports": [],
      "exports": [
        "PublishingScheduler"
      ],
      "usedComponents": [
        "Article",
        "PublishingSchedule",
        "Date",
        "NotificationSettings",
        "Calendar",
        "Settings",
        "Target",
        "Icon",
        "Zap",
        "Globe",
        "Bell",
        "Plus",
        "Clock",
        "CheckCircle",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/articles/SEOOptimizer.tsx",
      "name": "SEOOptimizer",
      "imports": [],
      "exports": [
        "SEOOptimizer"
      ],
      "usedComponents": [
        "SEOAnalysis",
        "ScoreIcon",
        "RefreshCw",
        "Sparkles",
        "Target",
        "AlertTriangle",
        "CheckCircle",
        "Lightbulb",
        "TrendingUp",
        "BarChart3"
      ]
    },
    {
      "path": "src/components/audit/AlertManagement.tsx",
      "name": "AlertManagement",
      "imports": [],
      "exports": [
        "AlertManagement"
      ],
      "usedComponents": [
        "Alert",
        "AlertRule",
        "AlertStats",
        "NotificationSettings"
      ]
    },
    {
      "path": "src/components/audit/AuditDashboard.tsx",
      "name": "AuditDashboard",
      "imports": [],
      "exports": [
        "AuditDashboard"
      ],
      "usedComponents": [
        "AuditMetrics",
        "MetricTrend",
        "Alert",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "PieChart",
        "Pie",
        "Cell"
      ]
    },
    {
      "path": "src/components/audit/AuditInvestigationInterface.tsx",
      "name": "AuditInvestigationInterface",
      "imports": [],
      "exports": [
        "AuditInvestigationInterface"
      ],
      "usedComponents": [
        "AuditEvent",
        "SearchFilters"
      ]
    },
    {
      "path": "src/components/auth/CoupleSignupForm.tsx",
      "name": "CoupleSignupForm",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/checkbox",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/lib/supabase/client",
        "./OAuthSignupButtons"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "InvitationData",
        "HeartIcon",
        "OAuthSignupButtons",
        "Label",
        "Input",
        "Checkbox",
        "CalendarDaysIcon",
        "UsersIcon",
        "MapPinIcon",
        "Progress",
        "Card",
        "CardContent",
        "Alert",
        "AlertDescription",
        "Button"
      ]
    },
    {
      "path": "src/components/auth/ForgotPasswordForm.tsx",
      "name": "ForgotPasswordForm",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/lib/supabase/client",
        "@/lib/validations/auth"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PasswordResetRequestInput",
        "CheckCircleIcon",
        "Card",
        "CardContent",
        "Button",
        "Link",
        "HeartIcon",
        "Label",
        "Input"
      ]
    },
    {
      "path": "src/components/auth/MFASetupWizard.tsx",
      "name": "MFASetupWizard",
      "imports": [
        "@/lib/services/auth-security-service",
        "@/lib/supabase/client"
      ],
      "exports": [
        "MFASetupWizard"
      ],
      "usedComponents": [
        "SetupStep",
        "Shield",
        "CheckCircle",
        "Smartphone",
        "Copy",
        "AlertTriangle",
        "Key",
        "React",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/auth/OAuthSignupButtons.tsx",
      "name": "OAuthSignupButtons",
      "imports": [
        "@/components/ui/button",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Button",
        "SiGoogle",
        "SiApple"
      ]
    },
    {
      "path": "src/components/auth/ResetPasswordForm.tsx",
      "name": "ResetPasswordForm",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/lib/supabase/client",
        "@/lib/validations/auth"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PasswordStrength",
        "PasswordResetInput",
        "ExclamationTriangleIcon",
        "Card",
        "CardContent",
        "Link",
        "Button",
        "HeartIcon",
        "Label",
        "Input",
        "EyeSlashIcon",
        "EyeIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/auth/enterprise/DomainBasedRouting.tsx",
      "name": "DomainBasedRouting",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/alert",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DomainDetectionResult",
        "Label",
        "Input",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Globe",
        "Badge",
        "CheckCircle",
        "Shield",
        "Button",
        "ArrowRight",
        "Building2",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/auth/enterprise/EnterpriseProviderSelector.tsx",
      "name": "EnterpriseProviderSelector",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SSOProviderConfig",
        "Badge",
        "Icon",
        "Card",
        "CardContent",
        "Shield",
        "Button",
        "Plus",
        "CardHeader",
        "CardTitle",
        "Settings",
        "ExternalLink",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/auth/enterprise/MultiVendorAccess.tsx",
      "name": "MultiVendorAccess",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/avatar",
        "@/components/ui/input",
        "@/components/ui/switch",
        "@/components/ui/label"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AccessRequest",
        "VendorOrganization",
        "Badge",
        "Icon",
        "Card",
        "CardContent",
        "Link",
        "Users",
        "AlertTriangle",
        "Input",
        "CardHeader",
        "CardTitle",
        "Button",
        "CheckCircle",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Shield",
        "Star",
        "Settings",
        "Unlink",
        "Switch",
        "Alert",
        "Share2",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/auth/enterprise/RoleManagementInterface.tsx",
      "name": "RoleManagementInterface",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/switch"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Role",
        "TeamMember",
        "Permission",
        "RoleFormData",
        "Card",
        "CardContent",
        "Shield",
        "Button",
        "Users",
        "Settings",
        "Plus",
        "Badge",
        "Edit",
        "Trash2",
        "CardHeader",
        "CardTitle",
        "Label",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Checkbox",
        "Switch",
        "AlertTriangle",
        "Save",
        "UserX",
        "EyeOff",
        "Eye",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/auth/enterprise/SSOLoginInterface.tsx",
      "name": "SSOLoginInterface",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SSOProvider",
        "Card",
        "CardHeader",
        "Shield",
        "CardTitle",
        "CardContent",
        "Label",
        "Input",
        "Alert",
        "AlertDescription",
        "Button",
        "Loader2",
        "Building2",
        "Users"
      ]
    },
    {
      "path": "src/components/auth/enterprise/TeamMemberInvitation.tsx",
      "name": "TeamMemberInvitation",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/select",
        "@/components/ui/checkbox"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TeamInvitation",
        "InvitationFormData",
        "UserPlus",
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardContent",
        "Badge",
        "CheckCircle",
        "AlertTriangle",
        "Button",
        "Copy",
        "X",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Checkbox",
        "Mail",
        "Alert",
        "AlertDescription",
        "Send"
      ]
    },
    {
      "path": "src/components/auth/enterprise/VendorNetworkSSO.tsx",
      "name": "VendorNetworkSSO",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/avatar",
        "@/components/ui/input",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorProfile",
        "NetworkConnection",
        "NetworkRegion",
        "Icon",
        "Badge",
        "Shield",
        "Card",
        "CardContent",
        "Network",
        "MapPin",
        "Users",
        "CardHeader",
        "CardTitle",
        "Star",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Label",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "CheckCircle",
        "TrendingUp",
        "Award",
        "Button",
        "Link",
        "Settings",
        "Phone",
        "Globe",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/auth/enterprise/WeddingSeasonAccess.tsx",
      "name": "WeddingSeasonAccess",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SeasonalAccessRule",
        "SeasonalMetrics",
        "Icon",
        "Badge",
        "Card",
        "CardContent",
        "Calendar",
        "AlertTriangle",
        "CardHeader",
        "CardTitle",
        "Shield",
        "Label",
        "Switch",
        "Alert",
        "AlertDescription",
        "BarChart3",
        "Settings",
        "Button",
        "Activity",
        "Sun"
      ]
    },
    {
      "path": "src/components/auth/enterprise/WeddingTeamSSO.tsx",
      "name": "WeddingTeamSSO",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/avatar"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Wedding",
        "WeddingTeamMember",
        "Icon",
        "Badge",
        "Clock",
        "CheckCircle",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Heart",
        "Calendar",
        "Building2",
        "Users",
        "Button",
        "UserPlus",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Shield",
        "Settings",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/backup/BackupAnalyticsDashboard.tsx",
      "name": "BackupAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "./types",
        "@/lib/utils"
      ],
      "exports": [
        "BackupTimelineChart",
        "StorageUtilizationDashboard",
        "RecoveryTimeAnalytics",
        "BackupAnalyticsDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart",
        "CardDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardContent",
        "Camera",
        "Users",
        "FileText",
        "Database",
        "HardDrive",
        "PieChart",
        "Cloud",
        "Server",
        "Badge",
        "Progress",
        "DollarSign",
        "TrendingUp",
        "LineChart",
        "Zap",
        "AlertTriangle",
        "Clock",
        "BackupAnalytics",
        "Activity",
        "Calendar"
      ]
    },
    {
      "path": "src/components/backup/BackupComplianceTracker.tsx",
      "name": "BackupComplianceTracker",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ComplianceRule",
        "ComplianceViolation",
        "ComplianceMetrics",
        "Button",
        "Download",
        "Card",
        "Shield",
        "CheckCircle",
        "AlertCircle",
        "FileText",
        "Badge",
        "Search",
        "Input",
        "Filter"
      ]
    },
    {
      "path": "src/components/backup/BackupScheduler.tsx",
      "name": "BackupScheduler",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BackupSchedule",
        "WeddingEvent",
        "BackupTemplate",
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Shield",
        "IconComponent",
        "Button",
        "Settings",
        "Plus",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "Badge",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardContent",
        "Calendar",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardDescription",
        "Switch",
        "Edit",
        "Trash2",
        "Info",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Save"
      ]
    },
    {
      "path": "src/components/backup/BackupStatusMonitor.tsx",
      "name": "BackupStatusMonitor",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BackupOperation",
        "SystemMetrics",
        "BackupStats",
        "Clock",
        "RefreshCw",
        "CheckCircle",
        "XCircle",
        "Square",
        "Heart",
        "AlertTriangle",
        "Database",
        "Activity",
        "FileText",
        "Badge",
        "Wifi",
        "WifiOff",
        "Button",
        "Pause",
        "Play",
        "Alert",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Progress",
        "TrendingUp",
        "Zap",
        "BarChart3",
        "PieChart",
        "ScrollArea"
      ]
    },
    {
      "path": "src/components/backup/BackupStatusOverview.tsx",
      "name": "BackupStatusOverview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "./types",
        "@/lib/utils"
      ],
      "exports": [
        "BackupStatusOverview"
      ],
      "usedComponents": [
        "Camera",
        "Users",
        "FileText",
        "Server",
        "HardDrive",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardDescription",
        "CardContent",
        "Badge",
        "Progress",
        "CheckCircle",
        "AlertTriangle",
        "Button",
        "Alert",
        "AlertDescription",
        "Cloud",
        "Clock",
        "Calendar"
      ]
    },
    {
      "path": "src/components/backup/BackupStrategyDashboard.tsx",
      "name": "BackupStrategyDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "./types",
        "./BackupStatusOverview",
        "./RealTimeBackupMonitor",
        "./WeddingDataProtectionPanel",
        "./EmergencyBackupControls",
        "@/lib/utils"
      ],
      "exports": [
        "BackupStrategyDashboard"
      ],
      "usedComponents": [
        "BackupSystemStatus",
        "BackupOperation",
        "EmergencyResponse",
        "Date",
        "Card",
        "CardHeader",
        "Shield",
        "CardTitle",
        "Wifi",
        "WifiOff",
        "Badge",
        "CardContent",
        "Progress",
        "Alert",
        "AlertTriangle",
        "AlertTitle",
        "AlertDescription",
        "Button",
        "Zap",
        "Phone",
        "Activity",
        "RefreshCw",
        "Camera",
        "CheckCircle",
        "XCircle",
        "AlertCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "BackupStatusOverview",
        "WeddingDataProtectionPanel",
        "RealTimeBackupMonitor",
        "Database",
        "CardDescription",
        "Clock",
        "EmergencyBackupControls"
      ]
    },
    {
      "path": "src/components/backup/CriticalDateProtection.tsx",
      "name": "CriticalDateProtection",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/alert",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CriticalWedding",
        "ProtectionRule",
        "SystemAlert",
        "Shield",
        "Switch",
        "Button",
        "Alert",
        "AlertTriangle",
        "AlertTitle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Calendar",
        "Bell",
        "Heart",
        "CardDescription",
        "CheckCircle",
        "Badge",
        "Camera",
        "Users",
        "Settings",
        "Phone",
        "Mail",
        "Zap"
      ]
    },
    {
      "path": "src/components/backup/DataIntegrityValidator.tsx",
      "name": "DataIntegrityValidator",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/input"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ValidationRun",
        "ValidationMetrics",
        "Button",
        "RefreshCw",
        "Play",
        "Card",
        "Calendar",
        "Camera",
        "AlertTriangle",
        "Shield",
        "CheckCircle",
        "Input",
        "Search",
        "Badge",
        "Progress",
        "Download",
        "Icon",
        "Database"
      ]
    },
    {
      "path": "src/components/backup/DataProtectionPanel.tsx",
      "name": "DataProtectionPanel",
      "imports": [
        "@/types/backup"
      ],
      "exports": [
        "default",
        "DataProtectionPanel"
      ],
      "usedComponents": [
        "BackupSchedule",
        "RetentionPolicy",
        "BackupDestination"
      ]
    },
    {
      "path": "src/components/backup/EmergencyBackupControls.tsx",
      "name": "EmergencyBackupControls",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "./types",
        "@/lib/utils"
      ],
      "exports": [
        "EmergencyBackupControls"
      ],
      "usedComponents": [
        "RecoverySession",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "Badge",
        "CardDescription",
        "CardContent",
        "CheckCircle",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "Shield",
        "Button",
        "Eye",
        "Phone",
        "Zap",
        "Camera",
        "Database",
        "MessageSquare",
        "Bell",
        "RefreshCw",
        "Cloud",
        "HardDrive",
        "Server",
        "Activity",
        "Progress",
        "StopCircle",
        "FileText"
      ]
    },
    {
      "path": "src/components/backup/EmergencyRecoveryPanel.tsx",
      "name": "EmergencyRecoveryPanel",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EmergencyIncident",
        "Heart",
        "AlertTriangle",
        "XCircle",
        "Users",
        "RefreshCw",
        "CheckCircle",
        "Clock",
        "Zap",
        "Badge",
        "Button",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Shield",
        "CardDescription",
        "Mail",
        "Phone",
        "Camera"
      ]
    },
    {
      "path": "src/components/backup/PointInTimeRecovery.tsx",
      "name": "PointInTimeRecovery",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RecoveryPoint",
        "RecoveryRequest",
        "Button",
        "RotateCcw",
        "Card",
        "Badge",
        "Calendar",
        "Filter",
        "Search",
        "Input",
        "Clock",
        "Users",
        "Camera",
        "FileText",
        "Database",
        "CheckCircle",
        "AlertTriangle",
        "Play"
      ]
    },
    {
      "path": "src/components/backup/RealTimeBackupMonitor.tsx",
      "name": "RealTimeBackupMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "./types",
        "@/lib/utils"
      ],
      "exports": [
        "RealTimeBackupMonitor"
      ],
      "usedComponents": [
        "Camera",
        "Users",
        "FileText",
        "Database",
        "HardDrive",
        "PerformanceData",
        "BackupMetrics",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "Badge",
        "CardDescription",
        "CardContent",
        "Wifi",
        "WifiOff",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "Pause",
        "Play",
        "RefreshCw",
        "TrendingUp",
        "CheckCircle",
        "Clock",
        "Progress"
      ]
    },
    {
      "path": "src/components/backup/RecoveryControlCenter.tsx",
      "name": "RecoveryControlCenter",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/calendar",
        "@/components/ui/popover",
        "./types",
        "@/lib/utils"
      ],
      "exports": [
        "RecoveryControlCenter"
      ],
      "usedComponents": [
        "Camera",
        "Users",
        "FileText",
        "Database",
        "HardDrive",
        "RecoveryPoint",
        "RecoveryOptions",
        "Date",
        "DataType",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardDescription",
        "CardContent",
        "RefreshCw",
        "Progress",
        "Alert",
        "CheckCircle",
        "AlertDescription",
        "Button",
        "StopCircle",
        "Shield",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Checkbox",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Search",
        "Popover",
        "PopoverTrigger",
        "CalendarIcon",
        "PopoverContent",
        "Calendar",
        "Filter",
        "Clock",
        "AlertTriangle",
        "Eye",
        "PlayCircle"
      ]
    },
    {
      "path": "src/components/backup/RecoveryProgressTracker.tsx",
      "name": "RecoveryProgressTracker",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RecoveryOperation",
        "Button",
        "RefreshCw",
        "Card",
        "Icon",
        "Badge",
        "Calendar",
        "Progress",
        "Pause",
        "Play",
        "X",
        "AlertCircle",
        "Activity"
      ]
    },
    {
      "path": "src/components/backup/VendorDataBackupManager.tsx",
      "name": "VendorDataBackupManager",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorData",
        "BackupTemplate",
        "IconComponent",
        "Badge",
        "Users",
        "Button",
        "RefreshCw",
        "Upload",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CheckCircle",
        "Progress",
        "Heart",
        "Eye",
        "Settings"
      ]
    },
    {
      "path": "src/components/backup/WeddingDataBackupSelector.tsx",
      "name": "WeddingDataBackupSelector",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/calendar"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingData",
        "Set",
        "Date",
        "AlertTriangle",
        "Clock",
        "CheckCircle",
        "CalendarIcon",
        "IconComponent",
        "Heart",
        "Button",
        "Shield",
        "Upload",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Star",
        "Badge",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Filter",
        "Checkbox",
        "CardDescription",
        "Calendar"
      ]
    },
    {
      "path": "src/components/backup/WeddingDataProtectionPanel.tsx",
      "name": "WeddingDataProtectionPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "./types",
        "@/lib/utils"
      ],
      "exports": [
        "WeddingDataProtectionPanel"
      ],
      "usedComponents": [
        "Camera",
        "Users",
        "FileText",
        "Database",
        "HardDrive",
        "ConfigurationState",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardDescription",
        "Badge",
        "Button",
        "RotateCcw",
        "Save",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardContent",
        "Switch",
        "Label",
        "CheckCircle",
        "Input",
        "Cloud",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Server",
        "DollarSign",
        "Alert",
        "Calendar",
        "AlertDescription",
        "Zap",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/backup/__tests__/BackupStrategyDashboard.test.tsx",
      "name": "BackupStrategyDashboard.test",
      "imports": [
        "../BackupStrategyDashboard",
        "../types"
      ],
      "exports": [],
      "usedComponents": [
        "BackupStrategyDashboard"
      ]
    },
    {
      "path": "src/components/backup/__tests__/EmergencyBackupControls.test.tsx",
      "name": "EmergencyBackupControls.test",
      "imports": [
        "../EmergencyBackupControls",
        "../types"
      ],
      "exports": [],
      "usedComponents": [
        "EmergencyBackupControls"
      ]
    },
    {
      "path": "src/components/backup/__tests__/RecoveryControlCenter.test.tsx",
      "name": "RecoveryControlCenter.test",
      "imports": [
        "../RecoveryControlCenter",
        "../types"
      ],
      "exports": [],
      "usedComponents": [
        "RecoveryControlCenter"
      ]
    },
    {
      "path": "src/components/backup/__tests__/WeddingDataProtectionPanel.test.tsx",
      "name": "WeddingDataProtectionPanel.test",
      "imports": [
        "../WeddingDataProtectionPanel",
        "../types"
      ],
      "exports": [],
      "usedComponents": [
        "WeddingDataProtectionPanel"
      ]
    },
    {
      "path": "src/components/backup/__tests__/backup-components.test.tsx",
      "name": "backup-components.test",
      "imports": [
        "../BackupManagementDashboard",
        "../DisasterRecoveryWizard",
        "../DataRestorationInterface",
        "../BackupScheduler",
        "../BackupStatusMonitor",
        "../WeddingDataBackupSelector",
        "../CriticalDateProtection",
        "../VendorDataBackupManager",
        "../EmergencyRecoveryPanel",
        "../BackupComplianceTracker",
        "../RecoveryProgressTracker",
        "../DataIntegrityValidator",
        "../PointInTimeRecovery"
      ],
      "exports": [],
      "usedComponents": [
        "BackupManagementDashboard",
        "DisasterRecoveryWizard",
        "DataRestorationInterface",
        "BackupScheduler",
        "BackupStatusMonitor",
        "WeddingDataBackupSelector",
        "CriticalDateProtection",
        "VendorDataBackupManager",
        "EmergencyRecoveryPanel",
        "BackupComplianceTracker",
        "RecoveryProgressTracker",
        "DataIntegrityValidator",
        "PointInTimeRecovery",
        "Component"
      ]
    },
    {
      "path": "src/components/backup/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/backup/types.ts",
      "name": "types",
      "imports": [],
      "exports": [],
      "usedComponents": [
        "T"
      ]
    },
    {
      "path": "src/components/backup-recovery/AdminBackupNavigation.tsx",
      "name": "AdminBackupNavigation",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AdminBackupNavigationProps",
        "Link",
        "ChevronDown",
        "ChevronRight",
        "Menu",
        "X",
        "AlertTriangle",
        "React"
      ]
    },
    {
      "path": "src/components/backup-recovery/AdminLayout.tsx",
      "name": "AdminLayout",
      "imports": [
        "./AdminBackupNavigation",
        "./BackupDashboard",
        "./EmergencyRecovery",
        "./DataRecoveryPreview",
        "./DisasterTimelineVisualizer",
        "./BackupMonitoringWidgets"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AdminLayoutProps",
        "BackupDashboard",
        "BackupStatusWidget",
        "CriticalDataProtectionWidget",
        "RecoveryEstimatorWidget",
        "SystemAlertsWidget",
        "BackupPerformanceWidget",
        "WeddingSeasonWidget",
        "EmergencyRecovery",
        "DisasterTimelineVisualizer",
        "AdminBackupNavigation"
      ]
    },
    {
      "path": "src/components/backup-recovery/BackupDashboard.tsx",
      "name": "BackupDashboard",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/separator",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BackupDashboardProps",
        "CheckCircle2",
        "AlertTriangle",
        "WifiOff",
        "Activity",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "Database",
        "CardContent",
        "HardDrive",
        "TrendingUp",
        "Progress",
        "CloudDownload",
        "Shield",
        "Heart",
        "CardDescription",
        "Calendar",
        "Clock",
        "Users",
        "BarChart3",
        "ScrollArea",
        "FileText",
        "Camera",
        "Zap",
        "Separator",
        "Phone"
      ]
    },
    {
      "path": "src/components/backup-recovery/BackupMonitoringWidgets.tsx",
      "name": "BackupMonitoringWidgets",
      "imports": [
        "@/utils/supabase/client",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "default",
        "BackupStatusWidget",
        "CriticalDataProtectionWidget",
        "RecoveryEstimatorWidget",
        "SystemAlertsWidget",
        "BackupPerformanceWidget",
        "WeddingSeasonWidget",
        "BackupMonitoringDashboard"
      ],
      "usedComponents": [
        "BackupStatus",
        "CheckCircle2",
        "AlertTriangle",
        "Activity",
        "Card",
        "CardContent",
        "RefreshCw",
        "CardHeader",
        "CardTitle",
        "CloudDownload",
        "Badge",
        "CriticalDataProtection",
        "Shield",
        "Progress",
        "Heart",
        "Users",
        "FileText",
        "Camera",
        "RecoveryMetrics",
        "Timer",
        "SystemAlerts",
        "BarChart3",
        "TrendingUp",
        "TrendingDown",
        "Button",
        "BackupStatusWidget",
        "CriticalDataProtectionWidget",
        "RecoveryEstimatorWidget",
        "SystemAlertsWidget",
        "BackupPerformanceWidget",
        "WeddingSeasonWidget"
      ]
    },
    {
      "path": "src/components/backup-recovery/DataRecoveryPreview.tsx",
      "name": "DataRecoveryPreview",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DataRecoveryPreviewProps",
        "DataType",
        "ConflictDetection",
        "RecoveryImpactAssessment",
        "Users",
        "Calendar",
        "FileImage",
        "Database",
        "Heart",
        "MapPin",
        "AlertTriangle",
        "Clock",
        "CheckCircle2",
        "XCircle"
      ]
    },
    {
      "path": "src/components/backup-recovery/DisasterTimelineVisualizer.tsx",
      "name": "DisasterTimelineVisualizer",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DisasterTimelineProps",
        "CheckCircle2",
        "RefreshCw",
        "XCircle",
        "ArrowRight",
        "Clock",
        "Activity",
        "Zap",
        "AlertTriangle",
        "Play",
        "Heart",
        "Database",
        "Shield"
      ]
    },
    {
      "path": "src/components/backup-recovery/EmergencyRecovery.tsx",
      "name": "EmergencyRecovery",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/dialog",
        "@/components/ui/separator"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EmergencyRecoveryProps",
        "RecoveryScope",
        "AlertTriangle",
        "Button",
        "Phone",
        "Card",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardContent",
        "Calendar",
        "MapPin",
        "Badge",
        "Shield",
        "Users",
        "FileText",
        "Clock",
        "Alert",
        "AlertDescription",
        "RefreshCw",
        "PlayCircle",
        "CardDescription",
        "CheckCircle2",
        "Progress",
        "Headphones",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "AlertTitle",
        "DialogFooter",
        "Zap"
      ]
    },
    {
      "path": "src/components/backup-recovery/__tests__/BackupDashboard.test.tsx",
      "name": "BackupDashboard.test",
      "imports": [
        "../BackupDashboard"
      ],
      "exports": [],
      "usedComponents": [
        "BackupDashboard"
      ]
    },
    {
      "path": "src/components/backup-recovery/__tests__/BackupMonitoringWidgets.test.tsx",
      "name": "BackupMonitoringWidgets.test",
      "imports": [
        "../BackupMonitoringWidgets"
      ],
      "exports": [],
      "usedComponents": [
        "BackupStatusWidget",
        "CriticalDataProtectionWidget",
        "RecoveryEstimatorWidget",
        "SystemAlertsWidget",
        "BackupPerformanceWidget",
        "WeddingSeasonWidget"
      ]
    },
    {
      "path": "src/components/backup-recovery/__tests__/DataRecoveryPreview.test.tsx",
      "name": "DataRecoveryPreview.test",
      "imports": [
        "../DataRecoveryPreview"
      ],
      "exports": [],
      "usedComponents": [
        "DataRecoveryPreview"
      ]
    },
    {
      "path": "src/components/backup-recovery/__tests__/DisasterTimelineVisualizer.test.tsx",
      "name": "DisasterTimelineVisualizer.test",
      "imports": [
        "../DisasterTimelineVisualizer"
      ],
      "exports": [],
      "usedComponents": [
        "DisasterTimelineVisualizer"
      ]
    },
    {
      "path": "src/components/backup-recovery/__tests__/EmergencyRecovery.test.tsx",
      "name": "EmergencyRecovery.test",
      "imports": [
        "../EmergencyRecovery"
      ],
      "exports": [],
      "usedComponents": [
        "EmergencyRecovery"
      ]
    },
    {
      "path": "src/components/billing/AdvancedBillingDashboard.tsx",
      "name": "AdvancedBillingDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "AdvancedBillingDashboard"
      ],
      "usedComponents": [
        "UserSubscription",
        "SubscriptionPlan",
        "UsageSummary",
        "Badge",
        "CheckCircle",
        "XCircle",
        "AlertTriangle",
        "Button",
        "ArrowUpRight",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CreditCard",
        "CardContent",
        "Alert",
        "AlertDescription",
        "TrendingUp",
        "Progress",
        "Users",
        "ArrowDownRight",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/billing/PaymentForm.tsx",
      "name": "PaymentForm",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/components/ui/separator",
        "@/lib/stripe-config"
      ],
      "exports": [
        "PaymentForm"
      ],
      "usedComponents": [
        "PaymentFormData",
        "Card",
        "Separator",
        "Label",
        "Input",
        "CardElement",
        "Alert",
        "AlertDescription",
        "Button",
        "Elements",
        "PaymentFormInner"
      ]
    },
    {
      "path": "src/components/billing/PaymentHistory.tsx",
      "name": "PaymentHistory",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/input",
        "@/components/ui/LoadingSkeleton"
      ],
      "exports": [
        "PaymentHistory"
      ],
      "usedComponents": [
        "Badge",
        "Button",
        "PaymentRecord",
        "Card",
        "LoadingSkeleton",
        "Input",
        "PaymentRow"
      ]
    },
    {
      "path": "src/components/billing/PaymentMethods.tsx",
      "name": "PaymentMethods",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/dialog",
        "@/components/ui/LoadingSkeleton"
      ],
      "exports": [
        "PaymentMethods"
      ],
      "usedComponents": [
        "Card",
        "Badge",
        "Button",
        "Dialog",
        "CardElement",
        "Elements",
        "AddPaymentMethodForm",
        "PaymentMethod",
        "LoadingSkeleton",
        "AddPaymentMethodFormWrapper",
        "PaymentMethodCard"
      ]
    },
    {
      "path": "src/components/billing/PricingPlans.tsx",
      "name": "PricingPlans",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/lib/stripe-config"
      ],
      "exports": [
        "PricingPlans"
      ],
      "usedComponents": [
        "Card",
        "Badge",
        "Button",
        "PricingCard"
      ]
    },
    {
      "path": "src/components/billing/SubscriptionCard.tsx",
      "name": "SubscriptionCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/lib/stripe-config"
      ],
      "exports": [
        "SubscriptionCard"
      ],
      "usedComponents": [
        "Badge",
        "Card",
        "Separator",
        "Button"
      ]
    },
    {
      "path": "src/components/billing/SubscriptionManager.tsx",
      "name": "SubscriptionManager",
      "imports": [],
      "exports": [
        "SubscriptionManager"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/billing/UsageDisplay.tsx",
      "name": "UsageDisplay",
      "imports": [],
      "exports": [
        "UsageDisplay"
      ],
      "usedComponents": [
        "UsageItem"
      ]
    },
    {
      "path": "src/components/billing/index.ts",
      "name": "index",
      "imports": [
        "@/lib/stripe-config"
      ],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/booking/MeetingPreparationPanel.tsx",
      "name": "MeetingPreparationPanel",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MeetingPreparationTask",
        "PreparationStatus",
        "CheckCircle",
        "Clock",
        "AlertCircle",
        "Send"
      ]
    },
    {
      "path": "src/components/branding/BrandingCustomizer.tsx",
      "name": "BrandingCustomizer",
      "imports": [
        "@/types/branding"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BrandUploadResponse",
        "CreateBrandRequest",
        "Record",
        "BrandTheme",
        "HTMLInputElement"
      ]
    },
    {
      "path": "src/components/branding/CSSEditor.tsx",
      "name": "CSSEditor",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CSSValidation",
        "HTMLTextAreaElement",
        "AlertTriangle",
        "Info",
        "Code",
        "Button",
        "EyeOff",
        "Eye",
        "Card",
        "Badge",
        "Check"
      ]
    },
    {
      "path": "src/components/branding/LogoUploader.tsx",
      "name": "LogoUploader",
      "imports": [
        "@/components/ui/button-untitled",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "UploadError",
        "HTMLInputElement",
        "Loader2",
        "Button",
        "X",
        "AlertTriangle",
        "Upload",
        "Image",
        "Check"
      ]
    },
    {
      "path": "src/components/branding/__tests__/BrandingCustomizer.test.tsx",
      "name": "BrandingCustomizer.test",
      "imports": [
        "../BrandingCustomizer",
        "@/types/branding"
      ],
      "exports": [],
      "usedComponents": [
        "BrandingCustomizer"
      ]
    },
    {
      "path": "src/components/broadcast/BroadcastBadge.tsx",
      "name": "BroadcastBadge",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/utils",
        "@/hooks/useBroadcastSubscription"
      ],
      "exports": [
        "BroadcastBadge"
      ],
      "usedComponents": [
        "Button",
        "Bell",
        "Badge"
      ]
    },
    {
      "path": "src/components/broadcast/BroadcastCenter.tsx",
      "name": "BroadcastCenter",
      "imports": [
        "./BroadcastToast",
        "@/hooks/useBroadcastSubscription",
        "@/lib/broadcast/priority-queue",
        "@/lib/utils"
      ],
      "exports": [
        "BroadcastCenter"
      ],
      "usedComponents": [
        "BroadcastPriorityQueue",
        "BroadcastToast"
      ]
    },
    {
      "path": "src/components/broadcast/BroadcastInbox.tsx",
      "name": "BroadcastInbox",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/dropdown-menu",
        "@/components/ui/checkbox",
        "@/lib/utils"
      ],
      "exports": [
        "BroadcastInbox"
      ],
      "usedComponents": [
        "BroadcastItem",
        "Set",
        "Bell",
        "Badge",
        "Heart",
        "Button",
        "Loader2",
        "Check",
        "X",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Filter",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "DropdownMenuSeparator",
        "Settings",
        "Search",
        "Input",
        "Checkbox",
        "PriorityIcon",
        "WeddingIcon"
      ]
    },
    {
      "path": "src/components/broadcast/BroadcastPreferences.tsx",
      "name": "BroadcastPreferences",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/hooks/useBroadcastSubscription"
      ],
      "exports": [
        "BroadcastPreferences"
      ],
      "usedComponents": [
        "Preferences",
        "Loader2",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "Bell",
        "CardDescription",
        "CardContent",
        "Label",
        "Switch",
        "Heart",
        "Settings2",
        "Clock",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Users",
        "Button",
        "Save"
      ]
    },
    {
      "path": "src/components/broadcast/BroadcastToast.tsx",
      "name": "BroadcastToast",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "BroadcastToast"
      ],
      "usedComponents": [
        "AnimatePresence",
        "Icon",
        "WeddingIcon",
        "Badge",
        "Heart",
        "Button",
        "Clock",
        "X"
      ]
    },
    {
      "path": "src/components/broadcast/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/budget/AccessibleBudgetInterface.tsx",
      "name": "AccessibleBudgetInterface",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/skip-link",
        "@/components/ui/screen-reader-only",
        "@/hooks/useBudgetOptimized",
        "./BudgetErrorBoundary"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "SkipLink",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "Progress",
        "AlertTriangle",
        "Button",
        "Plus",
        "ScreenReaderOnly",
        "BudgetErrorBoundary",
        "AccessibleBudgetInterfaceContent"
      ]
    },
    {
      "path": "src/components/budget/AdvancedBudgetDashboard.tsx",
      "name": "AdvancedBudgetDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/supabase/client",
        "./export/BudgetExportDialog"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AnalyticsData",
        "ForecastData",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Download",
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "CardContent",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "AlertTriangle",
        "Target",
        "Badge",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Bar",
        "Calculator",
        "DollarSign",
        "BudgetExportDialog"
      ]
    },
    {
      "path": "src/components/budget/BudgetAlerts.tsx",
      "name": "BudgetAlerts",
      "imports": [
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Alert",
        "AlertNotification",
        "BellRing",
        "Volume2",
        "VolumeX",
        "Settings",
        "Bell",
        "Icon",
        "CheckCircle",
        "X",
        "ChannelIcon"
      ]
    },
    {
      "path": "src/components/budget/BudgetAllocation.tsx",
      "name": "BudgetAllocation",
      "imports": [
        "@/types/budget",
        "@/hooks/useBudgetCalculations"
      ],
      "exports": [
        "BudgetAllocation"
      ],
      "usedComponents": [
        "SortableCategoryItemProps",
        "HTMLInputElement",
        "GripVertical",
        "Lock",
        "Unlock",
        "DollarSign",
        "Minus",
        "Plus",
        "TrendingUp",
        "AlertTriangle",
        "TrendingDown",
        "QuickPresetsProps",
        "BudgetAllocationProps",
        "Set",
        "Target",
        "RotateCcw",
        "AnimatePresence",
        "QuickPresets",
        "DndContext",
        "SortableContext",
        "SortableCategoryItem",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/budget/BudgetDashboard.tsx",
      "name": "BudgetDashboard",
      "imports": [
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BudgetCategory",
        "BudgetTotals",
        "PaymentMilestone",
        "Filter",
        "Download",
        "DollarSign",
        "TrendingUp",
        "Activity",
        "AlertCircle",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "CustomTooltip",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Legend",
        "Bar",
        "Calendar",
        "RadarChart",
        "PolarGrid",
        "PolarAngleAxis",
        "PolarRadiusAxis",
        "Radar",
        "AreaChart",
        "Area"
      ]
    },
    {
      "path": "src/components/budget/BudgetErrorBoundary.tsx",
      "name": "BudgetErrorBoundary",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button"
      ],
      "exports": [
        "BudgetErrorBoundary",
        "withBudgetErrorBoundary",
        "useBudgetErrorHandler"
      ],
      "usedComponents": [
        "Props",
        "Card",
        "CardHeader",
        "AlertTriangle",
        "CardTitle",
        "CardContent",
        "Button",
        "RefreshCw",
        "Home",
        "Bug",
        "T",
        "BudgetErrorBoundary",
        "Component"
      ]
    },
    {
      "path": "src/components/budget/BudgetOptimizer.tsx",
      "name": "BudgetOptimizer",
      "imports": [
        "@/types/budget",
        "@/hooks/useBudgetOptimization",
        "@/hooks/useBudgetCalculations",
        "./BudgetVisualization",
        "./CostSavingRecommendations",
        "./BudgetAllocation"
      ],
      "exports": [
        "BudgetOptimizer"
      ],
      "usedComponents": [
        "OptimizationSummaryCardProps",
        "Icon",
        "TrendingUp",
        "TrendingDown",
        "BudgetOptimizerProps",
        "Settings",
        "RefreshCw",
        "Sparkles",
        "AlertTriangle",
        "OptimizationSummaryCard",
        "Lightbulb",
        "CheckCircle",
        "AnimatePresence",
        "BudgetVisualization",
        "BudgetAllocation",
        "CostSavingRecommendations"
      ]
    },
    {
      "path": "src/components/budget/BudgetOverview.tsx",
      "name": "BudgetOverview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BudgetCategory",
        "BudgetSummary",
        "Card",
        "CardContent",
        "AlertTriangle",
        "Button",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "Progress",
        "TrendingUp",
        "DragDropContext",
        "Droppable",
        "PlusCircle",
        "Draggable",
        "Edit3"
      ]
    },
    {
      "path": "src/components/budget/BudgetReallocation.tsx",
      "name": "BudgetReallocation",
      "imports": [
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Category",
        "ReallocationHistory",
        "DragItem",
        "ArrowLeftRight",
        "AlertCircle",
        "CheckCircle",
        "TrendingUp",
        "TrendingDown",
        "Move",
        "Info",
        "DragDropContext",
        "Droppable",
        "Draggable",
        "History"
      ]
    },
    {
      "path": "src/components/budget/BudgetReports.tsx",
      "name": "BudgetReports",
      "imports": [
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ReportTemplate",
        "BudgetData",
        "Plus",
        "Calendar",
        "BarChart3",
        "RefreshCw",
        "Download",
        "FileText",
        "FormatIcon",
        "Clock",
        "Trash2"
      ]
    },
    {
      "path": "src/components/budget/BudgetVisualization.tsx",
      "name": "BudgetVisualization",
      "imports": [
        "@/types/budget",
        "@/hooks/useBudgetCalculations"
      ],
      "exports": [
        "BudgetVisualization"
      ],
      "usedComponents": [
        "CustomTooltipProps",
        "ViewModeSelectorProps",
        "Icon",
        "TrendIndicatorProps",
        "BudgetVisualizationProps",
        "BudgetVisualizationMode",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "AreaChart",
        "Area",
        "Line",
        "Treemap",
        "Settings",
        "ViewModeSelector",
        "TrendIndicator",
        "AnimatePresence",
        "Eye"
      ]
    },
    {
      "path": "src/components/budget/CostSavingRecommendations.tsx",
      "name": "CostSavingRecommendations",
      "imports": [
        "@/types/budget"
      ],
      "exports": [
        "CostSavingRecommendations"
      ],
      "usedComponents": [
        "RecommendationCardProps",
        "Icon",
        "TrendingDown",
        "Target",
        "Clock",
        "AlertTriangle",
        "X",
        "CheckCircle",
        "ExternalLink",
        "ChevronDown",
        "ChevronRight",
        "AnimatePresence",
        "Sparkles",
        "ThumbsUp",
        "ThumbsDown",
        "Info",
        "Star",
        "MapPin",
        "Lightbulb",
        "RecommendationCard"
      ]
    },
    {
      "path": "src/components/budget/ManualExpenseEntry.tsx",
      "name": "ManualExpenseEntry",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ExpenseFormData",
        "File",
        "Record",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "Button",
        "X",
        "CardContent",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "AlertCircle",
        "Upload",
        "Image",
        "FileText",
        "Textarea",
        "Check"
      ]
    },
    {
      "path": "src/components/budget/SmartReceiptScanner.tsx",
      "name": "SmartReceiptScanner",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ScannedReceiptData",
        "HTMLInputElement",
        "Card",
        "CardHeader",
        "CardTitle",
        "Camera",
        "CardContent",
        "Loader2",
        "Upload",
        "Button",
        "CheckCircle",
        "X",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge"
      ]
    },
    {
      "path": "src/components/budget/TransactionManager.tsx",
      "name": "TransactionManager",
      "imports": [
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Transaction",
        "Category",
        "HTMLInputElement",
        "Plus",
        "Search",
        "Receipt",
        "Edit2",
        "Trash2",
        "X",
        "Upload",
        "Check"
      ]
    },
    {
      "path": "src/components/budget/export/BudgetExportDialog.tsx",
      "name": "BudgetExportDialog",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/loading-spinner",
        "@/components/ui/error-boundary",
        "@/hooks/use-toast",
        "@/hooks/useBudgetExport",
        "./ExportFormatSelector",
        "./ExportFilters",
        "./ExportProgress",
        "./ExportHistory"
      ],
      "exports": [
        "default",
        "BudgetExportDialog",
        "hasData"
      ],
      "usedComponents": [
        "ExportOptions",
        "ErrorBoundary",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Download",
        "DialogDescription",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "History",
        "ExportProgress",
        "Settings",
        "ExportFormatSelector",
        "ExportFilters",
        "ExportHistory",
        "LoadingSpinner",
        "Button"
      ]
    },
    {
      "path": "src/components/budget/export/ExportFilters.tsx",
      "name": "ExportFilters",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/badge",
        "@/components/ui/calendar",
        "@/components/ui/popover",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ExportFilters"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Filter",
        "Badge",
        "Button",
        "CardDescription",
        "CardContent",
        "Label",
        "Popover",
        "PopoverTrigger",
        "ChevronDown",
        "PopoverContent",
        "Checkbox",
        "Check",
        "X",
        "CalendarIcon",
        "Calendar",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem"
      ]
    },
    {
      "path": "src/components/budget/export/ExportFormatSelector.tsx",
      "name": "ExportFormatSelector",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "default",
        "ExportFormatSelector"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Icon",
        "Check",
        "CardDescription",
        "CardContent",
        "Badge",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Info",
        "TooltipContent"
      ]
    },
    {
      "path": "src/components/budget/export/ExportHistory.tsx",
      "name": "ExportHistory",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/loading-spinner",
        "@/components/ui/dropdown-menu",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ExportHistory"
      ],
      "usedComponents": [
        "ExportHistoryRecord",
        "Badge",
        "LoadingSpinner",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "FileText",
        "Card",
        "CardContent",
        "FormatIcon",
        "Calendar",
        "Clock",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Button",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Download",
        "Trash2"
      ]
    },
    {
      "path": "src/components/budget/export/ExportProgress.tsx",
      "name": "ExportProgress",
      "imports": [
        "@/components/ui/progress",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/loading-spinner",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ExportProgress"
      ],
      "usedComponents": [
        "StatusIcon",
        "Button",
        "Download",
        "X",
        "RefreshCw",
        "Progress",
        "LoadingSpinner",
        "Alert",
        "CheckCircle",
        "AlertDescription",
        "AlertCircle",
        "Clock"
      ]
    },
    {
      "path": "src/components/budget/export/__tests__/BudgetExportDialog.test.tsx",
      "name": "BudgetExportDialog.test",
      "imports": [
        "../BudgetExportDialog"
      ],
      "exports": [],
      "usedComponents": [
        "BudgetExportDialog"
      ]
    },
    {
      "path": "src/components/budget/export/__tests__/ExportFilters.test.tsx",
      "name": "ExportFilters.test",
      "imports": [
        "../ExportFilters",
        "@/types/budget-export"
      ],
      "exports": [],
      "usedComponents": [
        "ExportFilters"
      ]
    },
    {
      "path": "src/components/budget/export/__tests__/ExportFormatSelector.test.tsx",
      "name": "ExportFormatSelector.test",
      "imports": [
        "../ExportFormatSelector",
        "@/types/budget-export"
      ],
      "exports": [],
      "usedComponents": [
        "ExportFormatSelector"
      ]
    },
    {
      "path": "src/components/budget/export/__tests__/ExportHistory.test.tsx",
      "name": "ExportHistory.test",
      "imports": [
        "../ExportHistory"
      ],
      "exports": [],
      "usedComponents": [
        "ExportHistory"
      ]
    },
    {
      "path": "src/components/budget/export/__tests__/ExportProgress.test.tsx",
      "name": "ExportProgress.test",
      "imports": [
        "../ExportProgress"
      ],
      "exports": [],
      "usedComponents": [
        "ExportProgress"
      ]
    },
    {
      "path": "src/components/business/charts/MRRMovementChart.tsx",
      "name": "MRRMovementChart",
      "imports": [
        "@/types/business-metrics",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MRRMovementChart"
      ],
      "usedComponents": [
        "ChartProps",
        "TrendingUp",
        "ChevronUp",
        "ChevronDown",
        "TrendingDown",
        "DollarSign",
        "Heart"
      ]
    },
    {
      "path": "src/components/business/charts/SeasonalTrendsChart.tsx",
      "name": "SeasonalTrendsChart",
      "imports": [
        "@/types/business-metrics",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "SeasonalTrendsChart"
      ],
      "usedComponents": [
        "ChartProps",
        "Calendar",
        "Flower",
        "Sun",
        "Leaf",
        "Snowflake",
        "Heart",
        "Badge",
        "TrendingUp",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/business/metrics/BusinessHealthIndicator.tsx",
      "name": "BusinessHealthIndicator",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/types/business-metrics",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "BusinessHealthIndicator"
      ],
      "usedComponents": [
        "DollarSign",
        "Users",
        "TrendingUp",
        "Zap",
        "Shield",
        "Target",
        "TrendingDown",
        "XCircle",
        "AlertTriangle",
        "Clock",
        "Card",
        "CardContent",
        "HealthIcon",
        "Badge",
        "Progress",
        "Button",
        "Activity",
        "CardHeader",
        "CardTitle",
        "CheckCircle",
        "Heart"
      ]
    },
    {
      "path": "src/components/business/metrics/ConversionFunnelViz.tsx",
      "name": "ConversionFunnelViz",
      "imports": [
        "@/types/business-metrics",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ConversionFunnelViz"
      ],
      "usedComponents": [
        "ChartProps",
        "Users",
        "UserPlus",
        "UserCheck",
        "TrendingUp",
        "Heart",
        "Badge",
        "ArrowDown"
      ]
    },
    {
      "path": "src/components/business/metrics/MetricsCard.tsx",
      "name": "MetricsCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/types/business-metrics",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MetricsCard"
      ],
      "usedComponents": [
        "DollarSign",
        "Percent",
        "Hash",
        "Minus",
        "TrendingUp",
        "TrendingDown",
        "Card",
        "CardContent",
        "Info",
        "Badge"
      ]
    },
    {
      "path": "src/components/calendar/AppleCalendarSelector.tsx",
      "name": "AppleCalendarSelector",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AppleCalendarSelectorProps",
        "Calendar",
        "RefreshCw",
        "Plus",
        "Check",
        "Clock",
        "TypeIcon",
        "Eye",
        "EyeOff",
        "Heart",
        "Icon",
        "X"
      ]
    },
    {
      "path": "src/components/calendar/AppleCalendarSync.tsx",
      "name": "AppleCalendarSync",
      "imports": [
        "./AppleCalDAVAuth",
        "./AppleCalendarSelector",
        "./AppleSyncStatus",
        "./AppleEventMapping",
        "./AppleSyncSettings",
        "@/types/apple-calendar"
      ],
      "exports": [
        "AppleCalendarSync"
      ],
      "usedComponents": [
        "AppleCalendarSyncProps",
        "AppleCalendarView",
        "CalDAVCredentials",
        "CalendarInfo",
        "SyncStatus",
        "ConflictInfo",
        "SyncSettings",
        "AlertCircle",
        "CheckCircle",
        "Sync",
        "Calendar",
        "Icon",
        "AppleCalendarSelector",
        "AppleSyncStatus"
      ]
    },
    {
      "path": "src/components/calendar/AppleSyncStatus.tsx",
      "name": "AppleSyncStatus",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AppleSyncStatusProps",
        "SyncHistoryItem",
        "StatusIcon",
        "Pause",
        "Square",
        "Play",
        "RefreshCw",
        "ChevronUp",
        "ChevronDown",
        "Activity",
        "CheckCircle",
        "AlertTriangle",
        "XCircle",
        "TrendingUp",
        "Database",
        "Download",
        "Upload",
        "Zap",
        "Clock",
        "Wifi",
        "Calendar"
      ]
    },
    {
      "path": "src/components/calendar/OutlookCalendarSync.tsx",
      "name": "OutlookCalendarSync",
      "imports": [
        "@/hooks/useOutlookSync",
        "./OutlookOAuthFlow",
        "./OutlookSyncStatus",
        "./OutlookEventMapping",
        "./OutlookSyncSettings",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/magicui/shimmer-button",
        "@/types/outlook"
      ],
      "exports": [
        "OutlookCalendarSync"
      ],
      "usedComponents": [
        "WeddingCalendarEvent",
        "XCircle",
        "AlertTriangle",
        "CheckCircle",
        "Calendar",
        "Badge",
        "Card",
        "RefreshCw",
        "Icon",
        "OutlookSyncStatus",
        "OutlookSyncSettings",
        "OutlookEventMapping",
        "Button",
        "OutlookOAuthFlow",
        "ShimmerButton"
      ]
    },
    {
      "path": "src/components/calendar/OutlookEventMapping.tsx",
      "name": "OutlookEventMapping",
      "imports": [
        "@/components/untitled-ui/Button",
        "@/components/untitled-ui/Card",
        "@/components/untitled-ui/Badge",
        "@/components/untitled-ui/Select",
        "@/types/outlook"
      ],
      "exports": [
        "OutlookEventMapping"
      ],
      "usedComponents": [
        "EventConflict",
        "Users",
        "MapPin",
        "Briefcase",
        "Camera",
        "Heart",
        "Settings",
        "Clock",
        "MappingType",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "ArrowRight",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "RefreshCw",
        "CheckCircle2",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/calendar/OutlookOAuthFlow.tsx",
      "name": "OutlookOAuthFlow",
      "imports": [
        "@/components/untitled-ui/Button",
        "@/components/untitled-ui/Card",
        "@/components/untitled-ui/Badge",
        "@/types/outlook",
        "@/hooks/useOutlookSync"
      ],
      "exports": [
        "OutlookOAuthFlow"
      ],
      "usedComponents": [
        "Loader2",
        "CheckCircle2",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "AuthSteps",
        "Calendar",
        "Shield",
        "Button",
        "Badge",
        "XCircle"
      ]
    },
    {
      "path": "src/components/calendar/OutlookSyncSettings.tsx",
      "name": "OutlookSyncSettings",
      "imports": [
        "@/components/untitled-ui/Button",
        "@/components/untitled-ui/Card",
        "@/components/untitled-ui/Badge",
        "@/components/untitled-ui/Select",
        "@/components/untitled-ui/Switch",
        "@/components/untitled-ui/Input",
        "@/components/untitled-ui/Label",
        "@/types/outlook"
      ],
      "exports": [
        "OutlookSyncSettings"
      ],
      "usedComponents": [
        "Users",
        "MapPin",
        "Briefcase",
        "Camera",
        "Heart",
        "Clock",
        "Settings",
        "Card",
        "CardHeader",
        "CardTitle",
        "TestTube",
        "CardDescription",
        "Button",
        "RefreshCw",
        "CardContent",
        "CheckCircle2",
        "AlertTriangle",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Calendar",
        "Input",
        "Bell",
        "Switch",
        "Shield",
        "SettingsType",
        "Save"
      ]
    },
    {
      "path": "src/components/calendar/OutlookSyncStatus.tsx",
      "name": "OutlookSyncStatus",
      "imports": [
        "@/components/untitled-ui/Button",
        "@/components/untitled-ui/Card",
        "@/components/untitled-ui/Badge",
        "@/components/untitled-ui/Progress",
        "@/types/outlook",
        "@/hooks/useOutlookSync"
      ],
      "exports": [
        "OutlookSyncStatus"
      ],
      "usedComponents": [
        "CheckCircle2",
        "XCircle",
        "RefreshCw",
        "Pause",
        "Clock",
        "Users",
        "MapPin",
        "Heart",
        "Camera",
        "Calendar",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Button",
        "Play",
        "CardContent",
        "Progress",
        "AlertTriangle",
        "TrendingUp",
        "CardDescription"
      ]
    },
    {
      "path": "src/components/calendar-integration/AvailabilitySharing.tsx",
      "name": "AvailabilitySharing",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "AvailabilitySharing"
      ],
      "usedComponents": [
        "AvailabilitySlot",
        "SharingSettings",
        "Settings",
        "Share2",
        "Globe",
        "Shield",
        "ChevronLeft",
        "ChevronRight",
        "Users",
        "Calendar",
        "Clock",
        "Check",
        "Copy",
        "Mail"
      ]
    },
    {
      "path": "src/components/calendar-integration/CalendarAuthFlow.tsx",
      "name": "CalendarAuthFlow",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "CalendarAuthFlow",
        "OAUTH_PROVIDERS"
      ],
      "usedComponents": [
        "X",
        "Check",
        "Info",
        "Shield",
        "EyeOff",
        "Eye",
        "ExternalLink",
        "AlertTriangle",
        "Calendar",
        "ArrowRight",
        "Lock"
      ]
    },
    {
      "path": "src/components/calendar-integration/CalendarSyncDashboard.tsx",
      "name": "CalendarSyncDashboard",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "CalendarSyncDashboard"
      ],
      "usedComponents": [
        "CalendarProvider",
        "CalendarSyncStats",
        "CheckCircle",
        "XCircle",
        "AlertCircle",
        "RefreshCw",
        "Calendar",
        "Zap",
        "Shield",
        "Clock",
        "Plus",
        "Settings",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/calendar-integration/TimelineSyncManager.tsx",
      "name": "TimelineSyncManager",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "TimelineSyncManager"
      ],
      "usedComponents": [
        "SyncSettings",
        "Set",
        "Users",
        "Calendar",
        "Music",
        "Camera",
        "Utensils",
        "Clock",
        "CheckCircle",
        "RefreshCw",
        "AlertTriangle",
        "Settings",
        "Filter",
        "Zap",
        "Eye",
        "MapPin"
      ]
    },
    {
      "path": "src/components/catering/DietaryManagementDashboard.tsx",
      "name": "DietaryManagementDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/hooks/useNavigation"
      ],
      "exports": [
        "DietaryManagementDashboard"
      ],
      "usedComponents": [
        "DietarySummary",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "TrendingUp",
        "Plus",
        "Card",
        "CardContent",
        "Users",
        "Activity",
        "CheckCircle",
        "ShieldAlert",
        "Badge",
        "Clock",
        "ChefHat",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Search",
        "Input",
        "CardHeader",
        "CardTitle",
        "AnimatePresence",
        "CategoryIcon",
        "XCircle",
        "Edit3",
        "Trash2",
        "IconComponent"
      ]
    },
    {
      "path": "src/components/catering/MenuGenerator.tsx",
      "name": "MenuGenerator",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/hooks/useNavigation"
      ],
      "exports": [
        "MenuGenerator"
      ],
      "usedComponents": [
        "MenuOption",
        "Wand2",
        "Card",
        "CardHeader",
        "CardTitle",
        "Settings",
        "CardContent",
        "DollarSign",
        "Input",
        "Globe",
        "Leaf",
        "AlertTriangle",
        "ChefHat",
        "Button",
        "Sparkles",
        "Alert",
        "AlertDescription",
        "AnimatePresence",
        "RefreshCw",
        "Utensils",
        "Badge",
        "Clock",
        "TrendingUp",
        "CheckCircle",
        "Download",
        "Share"
      ]
    },
    {
      "path": "src/components/catering/mobile/MobileDietaryInterface.tsx",
      "name": "MobileDietaryInterface",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card"
      ],
      "exports": [
        "MobileDietaryInterface",
        "MobileDietaryCard",
        "MobileTouchButton",
        "MobileDietaryRequirementCard",
        "useMobileOptimization"
      ],
      "usedComponents": [
        "Date",
        "Wifi",
        "WifiOff",
        "Clock",
        "Save",
        "Button",
        "Icon",
        "AnimatePresence",
        "Card",
        "MobileDietaryCard",
        "CardContent",
        "Badge",
        "MobileTouchButton"
      ]
    },
    {
      "path": "src/components/charts/BudgetCharts.tsx",
      "name": "BudgetCharts",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "BudgetCharts"
      ],
      "usedComponents": [
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardContent",
        "DollarSign",
        "TrendingDown",
        "TrendingUp",
        "AlertTriangle",
        "Alert",
        "AlertDescription",
        "CardDescription",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Legend",
        "Bar",
        "Badge",
        "ComposedChart",
        "Area",
        "Line"
      ]
    },
    {
      "path": "src/components/charts/ChartContainer.tsx",
      "name": "ChartContainer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tooltip",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ChartContainerProps",
        "TrendingUp",
        "TrendingDown",
        "Minus",
        "Card",
        "CardHeader",
        "CardTitle",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Badge",
        "TooltipContent",
        "Button",
        "Eye",
        "EyeOff",
        "RefreshCw",
        "Minimize",
        "Maximize",
        "Settings",
        "Share2",
        "Download",
        "CardContent"
      ]
    },
    {
      "path": "src/components/charts/MilestoneTimeline.tsx",
      "name": "MilestoneTimeline",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/untitled-ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MilestoneTimeline"
      ],
      "usedComponents": [
        "Button",
        "Icon",
        "Card",
        "CardContent",
        "Progress",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "ScatterChart",
        "Badge",
        "Scatter",
        "IconComponent",
        "StatusIcon",
        "Calendar"
      ]
    },
    {
      "path": "src/components/charts/MobileOptimizedChart.tsx",
      "name": "MobileOptimizedChart",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MobileOptimizedChart"
      ],
      "usedComponents": [
        "MobileOptimizedChartProps",
        "HTMLDivElement",
        "ChartIcon",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "RefreshCw",
        "Minimize2",
        "Maximize2",
        "Download",
        "ZoomOut",
        "ZoomIn",
        "ResponsiveContainer"
      ]
    },
    {
      "path": "src/components/charts/ProgressCharts.tsx",
      "name": "ProgressCharts",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/lib/utils",
        "@/hooks/useProgressData",
        "./ProgressOverview",
        "./MilestoneTimeline",
        "./TaskProgress",
        "./BudgetCharts",
        "./VendorMetrics"
      ],
      "exports": [
        "default",
        "ProgressCharts"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "CardHeader",
        "CardTitle",
        "Target",
        "Badge",
        "Calendar",
        "DollarSign",
        "CheckCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ProgressOverview",
        "MilestoneTimeline",
        "TaskProgress",
        "BudgetCharts",
        "VendorMetrics",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/charts/ProgressGaugeChart.tsx",
      "name": "ProgressGaugeChart",
      "imports": [
        "./ChartContainer",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ProgressGaugeChartProps",
        "ChartContainer",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Icon"
      ]
    },
    {
      "path": "src/components/charts/ProgressLineChart.tsx",
      "name": "ProgressLineChart",
      "imports": [
        "./ChartContainer",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ProgressLineChartProps",
        "Calendar",
        "ChartContainer",
        "ResponsiveContainer",
        "ChartComponent",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "DataComponent",
        "Line",
        "ReferenceLine",
        "TrendingUp",
        "TrendingDown",
        "Target"
      ]
    },
    {
      "path": "src/components/charts/ProgressOverview.tsx",
      "name": "ProgressOverview",
      "imports": [
        "@/components/ui/card",
        "@/components/untitled-ui/progress",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ProgressOverview"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardContent",
        "MapPin",
        "CheckCircle",
        "Clock",
        "Users",
        "AlertTriangle",
        "Badge",
        "CardDescription",
        "Progress",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "Legend",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Area",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/charts/RealTimeProgressChart.tsx",
      "name": "RealTimeProgressChart",
      "imports": [
        "@/lib/supabase/client",
        "@/hooks/useAuth",
        "./ProgressLineChart",
        "./ProgressGaugeChart",
        "./ChartContainer"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RealTimeProgressChartProps",
        "ChartData",
        "NodeJS",
        "ProgressLineChart",
        "ProgressGaugeChart"
      ]
    },
    {
      "path": "src/components/charts/TaskProgress.tsx",
      "name": "TaskProgress",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/untitled-ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "TaskProgress"
      ],
      "usedComponents": [
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardContent",
        "AlertTriangle",
        "CheckCircle",
        "TrendingUp",
        "Calendar",
        "CardDescription",
        "Progress",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "Legend",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "Badge",
        "User",
        "Tag"
      ]
    },
    {
      "path": "src/components/charts/VendorMetrics.tsx",
      "name": "VendorMetrics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/avatar",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "VendorMetrics"
      ],
      "usedComponents": [
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Star",
        "Clock",
        "DollarSign",
        "CardDescription",
        "Badge",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "RadarChart",
        "PolarGrid",
        "PolarAngleAxis",
        "PolarRadiusAxis",
        "Radar",
        "Legend",
        "ScatterChart",
        "Scatter",
        "Avatar",
        "Phone",
        "Mail"
      ]
    },
    {
      "path": "src/components/chat/VendorChatInterface.tsx",
      "name": "VendorChatInterface",
      "imports": [
        "@/lib/utils",
        "@/lib/services/vendor-chat-service",
        "@/types/chat",
        "@/hooks/useDebounce"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ChatRoom",
        "Record",
        "ChatMessage",
        "HTMLDivElement",
        "HTMLInputElement",
        "NodeJS",
        "AlertCircle",
        "CheckCheck",
        "Check",
        "Clock",
        "Search",
        "Users",
        "Bell",
        "Archive",
        "MoreVertical",
        "ImageIcon",
        "File",
        "Edit2",
        "Trash2",
        "Reply",
        "X",
        "Paperclip",
        "Mic",
        "Send"
      ]
    },
    {
      "path": "src/components/chatbot/ChatInput.tsx",
      "name": "ChatInput",
      "imports": [
        "@/types/chatbot",
        "@/lib/security/file-validation",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ChatInput"
      ],
      "usedComponents": [
        "ChatInputState",
        "HTMLTextAreaElement",
        "HTMLInputElement",
        "HTMLDivElement",
        "AnimatePresence",
        "Zap",
        "Paperclip",
        "X",
        "Loader2",
        "Send",
        "Shield"
      ]
    },
    {
      "path": "src/components/chatbot/ChatWidget.tsx",
      "name": "ChatWidget",
      "imports": [
        "@/types/chatbot",
        "@/hooks/useChat",
        "./MessageBubble",
        "./TypingIndicator",
        "./ChatInput",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ChatWidget",
        "ResponsiveChatWidget"
      ],
      "usedComponents": [
        "ChatWidgetProps",
        "ChatWidgetState",
        "HTMLDivElement",
        "MessageCircle",
        "Move",
        "Shield",
        "Maximize2",
        "Minus",
        "X",
        "AlertCircle",
        "MessageBubble",
        "TypingIndicator",
        "ChatInput",
        "AnimatePresence",
        "ChatInterface",
        "ChatButton",
        "ChatWidget"
      ]
    },
    {
      "path": "src/components/chatbot/ChatbotWidget.tsx",
      "name": "ChatbotWidget",
      "imports": [
        "@/types/chatbot"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ChatbotUIState",
        "HTMLDivElement",
        "HTMLInputElement",
        "AnimatePresence",
        "Bot",
        "X",
        "User",
        "Loader2",
        "AlertCircle",
        "Send",
        "MessageCircle"
      ]
    },
    {
      "path": "src/components/chatbot/MessageBubble.tsx",
      "name": "MessageBubble",
      "imports": [
        "@/types/chatbot",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MessageBubble"
      ],
      "usedComponents": [
        "MessageBubbleState",
        "Paperclip",
        "AlertTriangle",
        "Bot",
        "User",
        "Clock",
        "AnimatePresence",
        "Check",
        "Copy",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/chatbot/TypingIndicator.tsx",
      "name": "TypingIndicator",
      "imports": [
        "@/types/chatbot",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "TypingIndicator",
        "WeddingTypingIndicator"
      ],
      "usedComponents": [
        "AnimatePresence",
        "Bot",
        "Clock",
        "TypingIndicator"
      ]
    },
    {
      "path": "src/components/chatbot/__tests__/ChatInput.test.tsx",
      "name": "ChatInput.test",
      "imports": [
        "../ChatInput"
      ],
      "exports": [],
      "usedComponents": [
        "ChatInput"
      ]
    },
    {
      "path": "src/components/chatbot/__tests__/ChatWidget.test.tsx",
      "name": "ChatWidget.test",
      "imports": [
        "../ChatWidget",
        "@/hooks/useChat"
      ],
      "exports": [],
      "usedComponents": [
        "ChatWidget",
        "ResponsiveChatWidget"
      ]
    },
    {
      "path": "src/components/chatbot/__tests__/MessageBubble.test.tsx",
      "name": "MessageBubble.test",
      "imports": [
        "../MessageBubble",
        "@/types/chatbot"
      ],
      "exports": [],
      "usedComponents": [
        "MessageBubble"
      ]
    },
    {
      "path": "src/components/chatbot/__tests__/TypingIndicator.test.tsx",
      "name": "TypingIndicator.test",
      "imports": [
        "../TypingIndicator"
      ],
      "exports": [],
      "usedComponents": [
        "TypingIndicator",
        "WeddingTypingIndicator"
      ]
    },
    {
      "path": "src/components/chatbot/__tests__/setup.ts",
      "name": "setup",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/clients/BulkActionsBar.tsx",
      "name": "BulkActionsBar",
      "imports": [
        "./ClientListViews"
      ],
      "exports": [
        "BulkActionsBar",
        "BulkActionsToolbar"
      ],
      "usedComponents": [
        "AnimatePresence",
        "ChevronUp",
        "Users",
        "X",
        "Icon",
        "Check",
        "FileText"
      ]
    },
    {
      "path": "src/components/clients/ClientErrorBoundary.tsx",
      "name": "ClientErrorBoundary",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled"
      ],
      "exports": [
        "default",
        "ClientListErrorBoundary",
        "ClientSearchErrorBoundary",
        "ClientNotificationErrorBoundary"
      ],
      "usedComponents": [
        "FallbackComponent",
        "DefaultErrorFallback",
        "Card",
        "AlertTriangle",
        "Button",
        "RefreshCw",
        "Home",
        "Bug",
        "ClientErrorBoundary"
      ]
    },
    {
      "path": "src/components/clients/ClientListViews.tsx",
      "name": "ClientListViews",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "./bulk/BulkSelectionInterface",
        "@/components/tags/TagFilter"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CheckCircle",
        "Square",
        "Mail",
        "Phone",
        "Badge",
        "StatusIcon",
        "LinkIcon",
        "Link",
        "Button",
        "MoreHorizontal",
        "Card",
        "User",
        "Calendar",
        "HTMLInputElement",
        "Upload",
        "Plus",
        "BulkSelectionInterface",
        "Search",
        "Input",
        "TagFilter",
        "Filter",
        "ArrowUpDown",
        "Icon",
        "ListView",
        "GridView",
        "CalendarView",
        "KanbanView"
      ]
    },
    {
      "path": "src/components/clients/ClientLoadingStates.tsx",
      "name": "ClientLoadingStates",
      "imports": [
        "@/components/ui/card-untitled"
      ],
      "exports": [
        "ClientListSkeleton",
        "ClientGridSkeleton",
        "ClientCalendarSkeleton",
        "ClientKanbanSkeleton",
        "ClientNotificationSkeleton",
        "ClientActionLoading",
        "ClientViewTransitionLoading",
        "ClientListProgressiveLoading",
        "ClientListOfflineLoading"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Skeleton",
        "Card",
        "Loader2"
      ]
    },
    {
      "path": "src/components/clients/ClientNotifications.tsx",
      "name": "ClientNotifications",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Notification",
        "Bell",
        "Badge",
        "Button",
        "Card",
        "Icon",
        "Check",
        "X"
      ]
    },
    {
      "path": "src/components/clients/bulk/BulkOperationsModal.tsx",
      "name": "BulkOperationsModal",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/badge",
        "@/components/clients/ClientListViews",
        "./types"
      ],
      "exports": [
        "BulkOperationsModal"
      ],
      "usedComponents": [
        "BulkOperation",
        "Users",
        "Icon",
        "AlertTriangle",
        "currentOperation",
        "Input",
        "Badge",
        "CheckCircle",
        "Button",
        "X"
      ]
    },
    {
      "path": "src/components/clients/bulk/BulkProgressModal.tsx",
      "name": "BulkProgressModal",
      "imports": [
        "@/lib/bulk/bulk-operations"
      ],
      "exports": [
        "BulkProgressModal",
        "MobileBulkProgress"
      ],
      "usedComponents": [
        "AnimatePresence",
        "X",
        "AlertTriangle",
        "CheckCircle",
        "XCircle",
        "RefreshCw",
        "Download"
      ]
    },
    {
      "path": "src/components/clients/bulk/BulkSelectionInterface.tsx",
      "name": "BulkSelectionInterface",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/clients/ClientListViews",
        "./BulkOperationsModal",
        "@/lib/notifications/engine",
        "./types"
      ],
      "exports": [
        "BulkSelectionInterface",
        "useBulkSelection"
      ],
      "usedComponents": [
        "Set",
        "BulkOperation",
        "Square",
        "CheckCircle",
        "Users",
        "Badge",
        "Button",
        "MoreHorizontal",
        "BulkOperationsModal"
      ]
    },
    {
      "path": "src/components/clients/bulk/BulkSelectionProvider.tsx",
      "name": "BulkSelectionProvider",
      "imports": [
        "../ClientListViews"
      ],
      "exports": [
        "BulkSelectionProvider",
        "useBulkSelection",
        "useBulkSelectionIntegration"
      ],
      "usedComponents": [
        "Set",
        "BulkSelectionContext"
      ]
    },
    {
      "path": "src/components/clients/bulk/MobileBulkActions.tsx",
      "name": "MobileBulkActions",
      "imports": [
        "../ClientListViews"
      ],
      "exports": [
        "MobileBulkActions"
      ],
      "usedComponents": [
        "ActionConfig",
        "Users",
        "Icon",
        "ChevronDown",
        "Send",
        "AnimatePresence",
        "X"
      ]
    },
    {
      "path": "src/components/clients/bulk/types.ts",
      "name": "types",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/clients/import/ImportWizard.tsx",
      "name": "ImportWizard",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "File",
        "ParsedClient",
        "Record",
        "ImportResult",
        "ImportError",
        "AbortController",
        "CheckCircle",
        "Card",
        "RefreshCw",
        "Upload",
        "XCircle",
        "Button",
        "ArrowRight",
        "ArrowLeft",
        "Users",
        "Mail",
        "Calendar",
        "MapPin",
        "Badge",
        "Eye",
        "X",
        "Clock",
        "Download"
      ]
    },
    {
      "path": "src/components/clients/profile/ActivityFeed.tsx",
      "name": "ActivityFeed",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/lib/supabase/realtime"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Activity",
        "Button",
        "Filter",
        "RefreshCw",
        "Card",
        "Clock",
        "Icon",
        "Badge"
      ]
    },
    {
      "path": "src/components/clients/profile/DocumentManager.tsx",
      "name": "DocumentManager",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/lib/security/rbac-system",
        "@/lib/security/rbac-system"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FileList",
        "HTMLInputElement",
        "Badge",
        "Check",
        "AlertTriangle",
        "Button",
        "Upload",
        "Card",
        "Progress",
        "File",
        "Search",
        "Icon",
        "Eye",
        "Download",
        "Trash2",
        "Share2"
      ]
    },
    {
      "path": "src/components/clients/profile/NotesSection.tsx",
      "name": "NotesSection",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/lib/security/rbac-system",
        "@/lib/security/rbac-system"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Note",
        "HTMLTextAreaElement",
        "Button",
        "Plus",
        "Card",
        "X",
        "Save",
        "Search",
        "Filter",
        "MessageCircle",
        "TypeIcon",
        "Badge",
        "Lock",
        "EyeOff",
        "Edit",
        "Trash2",
        "Clock"
      ]
    },
    {
      "path": "src/components/clients/profile/ProfileHeader.tsx",
      "name": "ProfileHeader",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/lib/security/rbac-system",
        "@/lib/security/rbac-system"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Link",
        "Button",
        "ArrowLeft",
        "Mail",
        "Phone",
        "Badge",
        "StatusIcon",
        "Star",
        "Activity",
        "Calendar",
        "LinkIcon",
        "Edit"
      ]
    },
    {
      "path": "src/components/clients/profile/TagsSection.tsx",
      "name": "TagsSection",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card-untitled",
        "@/components/tags/TagManager",
        "@/components/tags/TagInput"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Tag",
        "Card",
        "TagIcon",
        "Badge",
        "Button",
        "Plus",
        "Loader2",
        "TagInput"
      ]
    },
    {
      "path": "src/components/cloud-infrastructure/disaster-recovery/DisasterRecoveryControlPanel.tsx",
      "name": "DisasterRecoveryControlPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/alert-dialog",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "DisasterRecoveryControlPanel"
      ],
      "usedComponents": [
        "DRControlPanelProps",
        "DRDashboardData",
        "Date",
        "CheckCircle",
        "AlertTriangle",
        "XCircle",
        "WifiOff",
        "Shield",
        "RefreshCw",
        "Card",
        "CardContent",
        "Badge",
        "Heart",
        "Button",
        "Bell",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "CardHeader",
        "CardTitle",
        "Progress",
        "Zap",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Database",
        "Activity",
        "Phone",
        "Clock",
        "AlertDialog",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction"
      ]
    },
    {
      "path": "src/components/cloud-infrastructure/disaster-recovery/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/cloud-infrastructure/disaster-recovery/types.ts",
      "name": "types",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/cms/ContentEditor.tsx",
      "name": "ContentEditor",
      "imports": [
        "@/types/cms",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ContentEditor"
      ],
      "usedComponents": [
        "ToolbarButtonProps",
        "FormatSelectProps",
        "ContentEditorProps",
        "EditorState",
        "FormatSelect",
        "ToolbarButton",
        "Bold",
        "Italic",
        "Underline",
        "Strikethrough",
        "AlignLeft",
        "AlignCenter",
        "AlignRight",
        "AlignJustify",
        "List",
        "ListOrdered",
        "Quote",
        "Code",
        "Link",
        "Image",
        "Video",
        "Undo",
        "Redo"
      ]
    },
    {
      "path": "src/components/cms/ContentPreview.tsx",
      "name": "ContentPreview",
      "imports": [
        "@/types/cms",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ContentPreview"
      ],
      "usedComponents": [
        "PreviewFrameProps",
        "ContentPreviewProps",
        "Icon",
        "Sun",
        "Moon",
        "RefreshCw",
        "PreviewFrame",
        "ContentRenderer",
        "Eye"
      ]
    },
    {
      "path": "src/components/cms/ContentScheduler.tsx",
      "name": "ContentScheduler",
      "imports": [
        "@/types/cms",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ContentScheduler"
      ],
      "usedComponents": [
        "ScheduleItemProps",
        "CheckCircle",
        "Clock",
        "AlertCircle",
        "XCircle",
        "Eye",
        "Edit3",
        "Trash2",
        "Send",
        "Calendar",
        "RotateCcw",
        "ContentSchedulerProps",
        "ContentStatus",
        "Plus",
        "Search",
        "CalendarDays",
        "ScheduleItem"
      ]
    },
    {
      "path": "src/components/cms/CrossBrowserCMSEditor.tsx",
      "name": "CrossBrowserCMSEditor",
      "imports": [
        "@/lib/compatibility/browser-detection",
        "@/lib/compatibility/platform-keys"
      ],
      "exports": [
        "CrossBrowserCMSEditor"
      ],
      "usedComponents": [
        "Date",
        "HTMLInputElement",
        "AlertTriangle",
        "Bold",
        "Italic",
        "List",
        "LinkIcon",
        "ImageIcon",
        "CheckCircle",
        "Eye",
        "Save",
        "EditorContent"
      ]
    },
    {
      "path": "src/components/cms/MediaLibrary.tsx",
      "name": "MediaLibrary",
      "imports": [
        "@/types/cms",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MediaLibrary"
      ],
      "usedComponents": [
        "MediaGridItemProps",
        "Image",
        "Video",
        "Music",
        "FileText",
        "Check",
        "Edit3",
        "Download",
        "Trash2",
        "UploadZoneProps",
        "HTMLInputElement",
        "Upload",
        "MediaLibraryProps",
        "MediaLibraryState",
        "MediaItem",
        "Grid3X3",
        "List",
        "Search",
        "Filter",
        "UploadZone",
        "MediaGridItem"
      ]
    },
    {
      "path": "src/components/cms/MediaManager.tsx",
      "name": "MediaManager",
      "imports": [
        "@/types/cms",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "MediaManager"
      ],
      "usedComponents": [
        "CMSMedia",
        "UploadProgress",
        "MediaFilters",
        "HTMLInputElement",
        "HTMLDivElement",
        "File",
        "Image",
        "Video",
        "Card",
        "CardHeader",
        "CardTitle",
        "Upload",
        "CardContent",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "Compress",
        "Progress",
        "Zap",
        "Badge",
        "Search",
        "Input",
        "Button",
        "Grid3x3",
        "List",
        "Trash2"
      ]
    },
    {
      "path": "src/components/cms/MediaPerformanceMonitor.tsx",
      "name": "MediaPerformanceMonitor",
      "imports": [
        "@/lib/performance/media-benchmarks"
      ],
      "exports": [
        "MediaPerformanceMonitor"
      ],
      "usedComponents": [
        "MediaBenchmarkResult",
        "File",
        "CheckCircle",
        "AlertTriangle",
        "Activity",
        "Clock",
        "HardDrive",
        "Zap"
      ]
    },
    {
      "path": "src/components/cms/MobileContentEditor.tsx",
      "name": "MobileContentEditor",
      "imports": [
        "@/types/cms",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "MobileContentEditor"
      ],
      "usedComponents": [
        "EditorState",
        "PerformanceStats",
        "HTMLDivElement",
        "NodeJS",
        "CMSContent",
        "Button",
        "Smartphone",
        "Tablet",
        "Monitor",
        "Badge",
        "Zap",
        "Clock",
        "CheckCircle",
        "Eye",
        "Save",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Textarea",
        "TrendingUp",
        "Progress"
      ]
    },
    {
      "path": "src/components/cms/PageBuilder.tsx",
      "name": "PageBuilder",
      "imports": [
        "@/types/cms",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "PageBuilder"
      ],
      "usedComponents": [
        "BlockEditorProps",
        "PageBlock",
        "Plus",
        "Icon",
        "PageBlockComponentProps",
        "Type",
        "Image",
        "Star",
        "Layout",
        "ChevronUp",
        "ChevronDown",
        "Edit3",
        "Copy",
        "Trash2",
        "PageBuilderProps",
        "Eye",
        "blockType",
        "PageBlockComponent",
        "BlockEditor"
      ]
    },
    {
      "path": "src/components/cms/TemplateManager.tsx",
      "name": "TemplateManager",
      "imports": [
        "@/types/cms",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "TemplateManager"
      ],
      "usedComponents": [
        "TemplateCardProps",
        "Heart",
        "Crown",
        "Calendar",
        "Users",
        "Camera",
        "Template",
        "Sparkles",
        "Edit3",
        "Copy",
        "Trash2",
        "TemplateManagerProps",
        "Plus",
        "Search",
        "TemplateCard"
      ]
    },
    {
      "path": "src/components/cms/__tests__/ContentEditor.test.tsx",
      "name": "ContentEditor.test",
      "imports": [
        "../ContentEditor",
        "@/types/cms"
      ],
      "exports": [],
      "usedComponents": [
        "ContentEditor"
      ]
    },
    {
      "path": "src/components/cms/__tests__/ContentScheduler.test.tsx",
      "name": "ContentScheduler.test",
      "imports": [
        "../ContentScheduler",
        "@/types/cms"
      ],
      "exports": [],
      "usedComponents": [
        "ContentScheduler"
      ]
    },
    {
      "path": "src/components/cms/__tests__/MediaLibrary.test.tsx",
      "name": "MediaLibrary.test",
      "imports": [
        "../MediaLibrary",
        "@/types/cms"
      ],
      "exports": [],
      "usedComponents": [
        "MediaLibrary"
      ]
    },
    {
      "path": "src/components/cms/__tests__/useContentState.test.ts",
      "name": "useContentState.test",
      "imports": [
        "../../../hooks/useContentState",
        "@/types/cms"
      ],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/collaboration/CollaborationPresence.tsx",
      "name": "CollaborationPresence",
      "imports": [
        "@/lib/utils",
        "@/types/collaboration",
        "@/components/ui/avatar",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "default",
        "CollaborationPresence"
      ],
      "usedComponents": [
        "CollaboratorPresence",
        "Eye",
        "Edit",
        "MessageCircle",
        "Camera",
        "Calendar",
        "FileText",
        "Zap",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "TooltipContent",
        "WifiOff",
        "Users",
        "Badge",
        "Wifi",
        "Button"
      ]
    },
    {
      "path": "src/components/collaboration/CollaborationToolbar.tsx",
      "name": "CollaborationToolbar",
      "imports": [
        "@/types/collaboration"
      ],
      "exports": [
        "default",
        "CollaborationToolbar"
      ],
      "usedComponents": [
        "CollaborationToolbarProps",
        "HTMLDivElement",
        "UserPlus",
        "Share2",
        "CheckCircle",
        "Link2",
        "MessageCircle",
        "History",
        "Users",
        "connectionIndicator",
        "syncIndicator",
        "Settings",
        "Download"
      ]
    },
    {
      "path": "src/components/collaboration/CollaborativeEditor.tsx",
      "name": "CollaborativeEditor",
      "imports": [
        "@/types/collaboration",
        "@/hooks/useAuth",
        "./PresenceIndicator",
        "./CollaborationToolbar",
        "./UserCursor"
      ],
      "exports": [
        "default",
        "CollaborativeEditor"
      ],
      "usedComponents": [
        "CollaborativeEditorProps",
        "YDoc",
        "WebsocketProvider",
        "IndexeddbPersistence",
        "ConnectionStatus",
        "SyncStatus",
        "CollaboratorInfo",
        "CollaborationError",
        "HTMLTextAreaElement",
        "CollaborationToolbar",
        "PresenceIndicator",
        "UserCursor"
      ]
    },
    {
      "path": "src/components/collaboration/LiveTaskManagement.tsx",
      "name": "LiveTaskManagement",
      "imports": [
        "@/lib/utils",
        "@/types/collaboration",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "LiveTaskManagement"
      ],
      "usedComponents": [
        "WeddingTask",
        "TaskStatus",
        "TaskPriority",
        "Star",
        "Clock",
        "AlertTriangle",
        "Card",
        "CardContent",
        "Progress",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "Calendar",
        "MessageSquare",
        "FileText",
        "Button",
        "Plus",
        "Search",
        "Input",
        "TaskCard",
        "CheckCircle",
        "MoreHorizontal"
      ]
    },
    {
      "path": "src/components/collaboration/LiveWeddingTimeline.tsx",
      "name": "LiveWeddingTimeline",
      "imports": [
        "@/lib/utils",
        "@/hooks/collaboration/useRealTimeCollaboration",
        "@/types/collaboration",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/avatar",
        "@/components/ui/tooltip",
        "@/components/ui/alert",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "LiveWeddingTimeline"
      ],
      "usedComponents": [
        "WeddingTimelineItem",
        "TimelineConflict",
        "TooltipProvider",
        "TimelineStats",
        "Button",
        "Plus",
        "ConflictAlertBanner",
        "Progress",
        "DragDropContext",
        "Droppable",
        "Calendar",
        "Draggable",
        "LiveTimelineItem",
        "Card",
        "CardHeader",
        "GripVertical",
        "Input",
        "Badge",
        "Clock",
        "Tooltip",
        "TooltipTrigger",
        "AlertTriangle",
        "TooltipContent",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Save",
        "Edit3",
        "Trash2",
        "CardContent",
        "Textarea",
        "X",
        "MapPin",
        "Users",
        "Alert",
        "AlertDescription",
        "AlertTitle",
        "CheckCircle",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/collaboration/PresenceIndicator.tsx",
      "name": "PresenceIndicator",
      "imports": [
        "@/types/collaboration"
      ],
      "exports": [
        "default",
        "PresenceIndicator",
        "PresenceIndicatorSimple"
      ],
      "usedComponents": [
        "PresenceIndicatorProps",
        "Crown",
        "Edit3",
        "MessageCircle",
        "Eye",
        "Users",
        "MoreHorizontal"
      ]
    },
    {
      "path": "src/components/collaboration/RealTimeCollaborationHub.tsx",
      "name": "RealTimeCollaborationHub",
      "imports": [
        "@/lib/utils",
        "@/hooks/collaboration/useRealTimeCollaboration",
        "@/types/collaboration",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/separator",
        "@/components/ui/scroll-area",
        "@/components/ui/tooltip",
        "@/components/ui/alert",
        "./LiveWeddingTimeline",
        "./VendorCoordinationPanel",
        "./LiveTaskManagement",
        "./WeddingPartyChat",
        "./SharedWeddingBoard",
        "./CollaborationPresence"
      ],
      "exports": [
        "default",
        "RealTimeCollaborationHub"
      ],
      "usedComponents": [
        "CollaborationSection",
        "TooltipProvider",
        "Users",
        "ConnectionStatus",
        "ActiveCollaborators",
        "Button",
        "UserPlus",
        "Settings",
        "Alert",
        "AlertTriangle",
        "AlertTitle",
        "AlertDescription",
        "X",
        "CollaborationTab",
        "Calendar",
        "Building",
        "CheckSquare",
        "MessageCircle",
        "Layout",
        "LiveWeddingTimeline",
        "VendorCoordinationPanel",
        "LiveTaskManagement",
        "WeddingPartyChat",
        "SharedWeddingBoard",
        "CollaborationSidebar",
        "CollaborationPresence",
        "Tooltip",
        "TooltipTrigger",
        "NotificationBadge",
        "TooltipContent",
        "Wifi",
        "WifiOff",
        "Badge",
        "ScrollArea",
        "Activity",
        "Clock"
      ]
    },
    {
      "path": "src/components/collaboration/SharedWeddingBoard.tsx",
      "name": "SharedWeddingBoard",
      "imports": [
        "@/lib/utils",
        "@/types/collaboration",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "SharedWeddingBoard"
      ],
      "usedComponents": [
        "PlanningBoard",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "Plus",
        "CardContent",
        "Heart",
        "Grid3X3"
      ]
    },
    {
      "path": "src/components/collaboration/UserCursor.tsx",
      "name": "UserCursor",
      "imports": [
        "@/types/collaboration"
      ],
      "exports": [
        "default",
        "UserCursor",
        "UserCursorManager",
        "CursorActivityIndicator"
      ],
      "usedComponents": [
        "HTMLTextAreaElement",
        "UserCursorProps",
        "HTMLDivElement",
        "NodeJS",
        "UserCursorManagerProps",
        "UserCursor"
      ]
    },
    {
      "path": "src/components/collaboration/VendorCoordinationPanel.tsx",
      "name": "VendorCoordinationPanel",
      "imports": [
        "@/lib/utils",
        "@/types/collaboration",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/components/ui/separator",
        "@/components/ui/textarea",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "default",
        "VendorCoordinationPanel"
      ],
      "usedComponents": [
        "WeddingVendor",
        "VendorCategory",
        "VendorStatus",
        "Building",
        "Settings",
        "Button",
        "Plus",
        "Card",
        "CardContent",
        "CheckCircle",
        "FileText",
        "DollarSign",
        "Progress",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "VendorCard",
        "Calendar",
        "VendorDetailsModal",
        "CardHeader",
        "CardTitle",
        "Badge",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreHorizontal",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Mail",
        "Phone",
        "MessageSquare",
        "X",
        "Textarea"
      ]
    },
    {
      "path": "src/components/collaboration/WeddingPartyChat.tsx",
      "name": "WeddingPartyChat",
      "imports": [
        "@/lib/utils",
        "@/types/collaboration",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/scroll-area",
        "@/components/ui/avatar"
      ],
      "exports": [
        "default",
        "WeddingPartyChat"
      ],
      "usedComponents": [
        "ChatMessage",
        "ScrollArea",
        "Users",
        "Avatar",
        "AvatarFallback",
        "Input",
        "Button",
        "Send"
      ]
    },
    {
      "path": "src/components/collaboration/__tests__/RealTimeCollaborationHub.test.tsx",
      "name": "RealTimeCollaborationHub.test",
      "imports": [
        "../RealTimeCollaborationHub",
        "../LiveWeddingTimeline",
        "../VendorCoordinationPanel",
        "../WeddingPartyChat",
        "../SharedWeddingBoard",
        "../LiveTaskManagement",
        "../CollaborationPresence",
        "@/types/collaboration"
      ],
      "exports": [],
      "usedComponents": [
        "RealTimeCollaborationHub",
        "LiveWeddingTimeline",
        "VendorCoordinationPanel",
        "WeddingPartyChat",
        "SharedWeddingBoard",
        "LiveTaskManagement",
        "CollaborationPresence"
      ]
    },
    {
      "path": "src/components/communications/AccessibleMessaging.tsx",
      "name": "AccessibleMessaging",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "AccessibleMessaging"
      ],
      "usedComponents": [
        "AccessibleMessagingProps",
        "Record",
        "HTMLTextAreaElement",
        "HTMLInputElement",
        "CheckCircle",
        "X",
        "Search",
        "Users",
        "AlertCircle",
        "Loader2",
        "Send",
        "Info"
      ]
    },
    {
      "path": "src/components/communications/AdvancedGuestCommunications.tsx",
      "name": "AdvancedGuestCommunications",
      "imports": [
        "@/components/ui/tabs",
        "@/components/ui/card",
        "./MessageScheduler",
        "./MessageABTestDashboard",
        "./AdvancedPersonalization",
        "./MessageAnalytics",
        "./AutomatedFollowUps",
        "./TeamIntegrationHub",
        "@/lib/utils"
      ],
      "exports": [
        "AdvancedGuestCommunications"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "Sparkles",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Calendar",
        "FlaskConical",
        "Variable",
        "Activity",
        "GitBranch",
        "Link2",
        "TabsContent",
        "MessageScheduler",
        "MessageABTestDashboard",
        "AdvancedPersonalization",
        "MessageAnalytics",
        "AutomatedFollowUps",
        "TeamIntegrationHub"
      ]
    },
    {
      "path": "src/components/communications/AdvancedPersonalization.tsx",
      "name": "AdvancedPersonalization",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/scroll-area",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "AdvancedPersonalization"
      ],
      "usedComponents": [
        "PersonalizationToken",
        "ConditionalContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "Variable",
        "CardDescription",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ScrollArea",
        "Icon",
        "Button",
        "Plus",
        "Check",
        "Copy",
        "X",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Textarea",
        "Settings",
        "Wand2",
        "Badge",
        "Sparkles",
        "Eye"
      ]
    },
    {
      "path": "src/components/communications/AutomatedFollowUps.tsx",
      "name": "AutomatedFollowUps",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/ui/alert",
        "@/components/ui/slider",
        "@/lib/utils"
      ],
      "exports": [
        "AutomatedFollowUps"
      ],
      "usedComponents": [
        "FollowUpSequence",
        "Partial",
        "FollowUpStep",
        "Card",
        "CardHeader",
        "CardTitle",
        "GitBranch",
        "CardDescription",
        "CardContent",
        "Button",
        "Plus",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Label",
        "Input",
        "Textarea",
        "ScrollArea",
        "Copy",
        "X",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "ArrowRight",
        "Alert",
        "Users",
        "AlertDescription",
        "Badge",
        "Pause",
        "Play",
        "Eye",
        "Trash2",
        "Send",
        "CheckCircle",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/communications/BulkSendConfig.tsx",
      "name": "BulkSendConfig",
      "imports": [
        "@/lib/utils",
        "@/types/communications"
      ],
      "exports": [
        "BulkSendConfig"
      ],
      "usedComponents": [
        "MailIcon",
        "SmartphoneIcon",
        "MessageCircleIcon",
        "SettingsIcon",
        "ZapIcon",
        "CheckIcon",
        "AlertTriangleIcon",
        "ClockIcon",
        "CalendarIcon",
        "ShieldIcon",
        "InfoIcon"
      ]
    },
    {
      "path": "src/components/communications/DeliveryStatus.tsx",
      "name": "DeliveryStatus",
      "imports": [
        "@/lib/utils",
        "@/types/communications"
      ],
      "exports": [
        "DeliveryStatus"
      ],
      "usedComponents": [
        "ClockIcon",
        "CheckCircleIcon",
        "EyeIcon",
        "TrendingUpIcon",
        "XCircleIcon",
        "ActivityIcon",
        "RefreshCwIcon",
        "BarChart3Icon",
        "MailIcon",
        "SmartphoneIcon",
        "MessageCircleIcon",
        "AlertCircleIcon"
      ]
    },
    {
      "path": "src/components/communications/GuestCommunications.tsx",
      "name": "GuestCommunications",
      "imports": [
        "@/lib/utils",
        "@/types/communications",
        "./GuestSegmentation",
        "./MessageComposition",
        "./BulkSendConfig",
        "./DeliveryStatus",
        "./MessageHistory"
      ],
      "exports": [
        "GuestCommunications"
      ],
      "usedComponents": [
        "BulkMessageData",
        "MessageHistory",
        "ChevronRightIcon",
        "GuestSegmentation",
        "MessageComposition",
        "BulkSendConfig",
        "DeliveryStatus",
        "ChevronLeftIcon"
      ]
    },
    {
      "path": "src/components/communications/GuestSegmentation.tsx",
      "name": "GuestSegmentation",
      "imports": [
        "@/lib/utils",
        "@/types/communications"
      ],
      "exports": [
        "GuestSegmentation"
      ],
      "usedComponents": [
        "GuestWithSegmentInfo",
        "T",
        "UsersIcon",
        "XIcon",
        "FilterIcon",
        "CheckIcon"
      ]
    },
    {
      "path": "src/components/communications/MessageABTestDashboard.tsx",
      "name": "MessageABTestDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/lib/utils"
      ],
      "exports": [
        "MessageABTestDashboard"
      ],
      "usedComponents": [
        "ABTest",
        "Partial",
        "Card",
        "CardHeader",
        "CardTitle",
        "FlaskConical",
        "CardDescription",
        "CardContent",
        "Button",
        "Label",
        "Input",
        "Badge",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Bar",
        "PieChart",
        "Pie",
        "Cell",
        "Award",
        "Progress",
        "LineChart",
        "Line"
      ]
    },
    {
      "path": "src/components/communications/MessageAnalytics.tsx",
      "name": "MessageAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/scroll-area",
        "@/lib/utils"
      ],
      "exports": [
        "MessageAnalytics"
      ],
      "usedComponents": [
        "MessageMetrics",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "RefreshCcw",
        "Download",
        "CardContent",
        "CheckCircle",
        "Eye",
        "MousePointerClick",
        "MessageSquare",
        "XCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Progress",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "LineChart",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "Badge",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/communications/MessageComposition.tsx",
      "name": "MessageComposition",
      "imports": [
        "@/lib/utils",
        "@/types/communications",
        "./PersonalizationTokens"
      ],
      "exports": [
        "MessageComposition"
      ],
      "usedComponents": [
        "MessageCompositionState",
        "HTMLInputElement",
        "HTMLTextAreaElement",
        "PenIcon",
        "TemplateIcon",
        "TypeIcon",
        "EyeIcon",
        "BoldIcon",
        "ItalicIcon",
        "UnderlineIcon",
        "LinkIcon",
        "MailIcon",
        "SmartphoneIcon",
        "PersonalizationTokens"
      ]
    },
    {
      "path": "src/components/communications/MessageHistory.tsx",
      "name": "MessageHistory",
      "imports": [
        "@/lib/utils",
        "@/types/communications"
      ],
      "exports": [
        "MessageHistory"
      ],
      "usedComponents": [
        "ClockIcon",
        "CalendarIcon",
        "ActivityIcon",
        "CheckCircleIcon",
        "XCircleIcon",
        "MailIcon",
        "SmartphoneIcon",
        "MessageCircleIcon",
        "MessageHistoryFilters",
        "Set",
        "K",
        "HistoryIcon",
        "Trash2Icon",
        "FilterIcon",
        "SearchIcon",
        "UsersIcon",
        "EyeIcon",
        "CopyIcon"
      ]
    },
    {
      "path": "src/components/communications/MessagePreview.tsx",
      "name": "MessagePreview",
      "imports": [
        "@/lib/utils",
        "@/types/communications"
      ],
      "exports": [
        "MessagePreview"
      ],
      "usedComponents": [
        "MailIcon",
        "SmartphoneIcon",
        "MessageCircleIcon",
        "EyeIcon",
        "RefreshCwIcon",
        "CheckCircleIcon",
        "AlertTriangleIcon",
        "UserIcon",
        "ChevronDownIcon",
        "EmailPreview",
        "SMSPreview",
        "WhatsAppPreview"
      ]
    },
    {
      "path": "src/components/communications/MessageScheduler.tsx",
      "name": "MessageScheduler",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/label",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/card",
        "@/lib/utils"
      ],
      "exports": [
        "MessageScheduler"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardDescription",
        "CardContent",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Button"
      ]
    },
    {
      "path": "src/components/communications/MultiChannelComposer.tsx",
      "name": "MultiChannelComposer",
      "imports": [
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/input",
        "@/components/untitled-ui/textarea",
        "@/components/untitled-ui/select",
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/tabs",
        "@/components/untitled-ui/switch",
        "@/components/untitled-ui/label",
        "@/components/untitled-ui/separator",
        "@/components/untitled-ui/progress",
        "@/components/untitled-ui/alert",
        "@/lib/supabase/client"
      ],
      "exports": [
        "MultiChannelComposer"
      ],
      "usedComponents": [
        "Recipient",
        "Template",
        "Record",
        "File",
        "HTMLInputElement",
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Icon",
        "Badge",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Textarea",
        "Button",
        "Upload",
        "Switch",
        "Eye",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "DollarSign",
        "Alert",
        "AlertDescription",
        "Send"
      ]
    },
    {
      "path": "src/components/communications/PersonalizationTokens.tsx",
      "name": "PersonalizationTokens",
      "imports": [
        "@/lib/utils",
        "@/types/communications"
      ],
      "exports": [
        "PersonalizationTokens"
      ],
      "usedComponents": [
        "UserIcon",
        "CalendarIcon",
        "HashIcon",
        "TypeIcon",
        "TagIcon",
        "SearchIcon",
        "TokenButton",
        "InfoIcon"
      ]
    },
    {
      "path": "src/components/communications/SMSCompliance.tsx",
      "name": "SMSCompliance",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SMSOptOut",
        "Shield",
        "CheckCircle",
        "XCircle",
        "Phone",
        "AlertTriangle",
        "FileText",
        "Scale"
      ]
    },
    {
      "path": "src/components/communications/SMSConfiguration.tsx",
      "name": "SMSConfiguration",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SMSConfiguration",
        "ConfigFormData",
        "Phone",
        "Shield",
        "DollarSign",
        "Loader2",
        "CheckCircle",
        "XCircle"
      ]
    },
    {
      "path": "src/components/communications/SMSTemplateEditor.tsx",
      "name": "SMSTemplateEditor",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SMSMetrics",
        "TemplateFormData",
        "MessageSquare",
        "Hash",
        "AlertCircle",
        "Type",
        "Shield",
        "XCircle",
        "DollarSign",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/communications/TeamIntegrationHub.tsx",
      "name": "TeamIntegrationHub",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/lib/utils"
      ],
      "exports": [
        "TeamIntegrationHub"
      ],
      "usedComponents": [
        "ProviderStatus",
        "MobileMessagingSync",
        "MessageHistoryEntry",
        "CheckCircle",
        "XCircle",
        "AlertCircle",
        "Clock",
        "Wifi",
        "RefreshCcw",
        "WifiOff",
        "Card",
        "CardHeader",
        "CardTitle",
        "Link2",
        "CardDescription",
        "CardContent",
        "Badge",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Activity",
        "Server",
        "Smartphone",
        "History",
        "TabsContent",
        "Button",
        "ScrollArea",
        "Monitor",
        "Search"
      ]
    },
    {
      "path": "src/components/communications/WhatsAppConfiguration.tsx",
      "name": "WhatsAppConfiguration",
      "imports": [
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/input",
        "@/components/untitled-ui/label",
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/switch",
        "@/components/untitled-ui/tabs",
        "@/components/untitled-ui/alert",
        "@/components/untitled-ui/separator",
        "@/lib/supabase/client",
        "@/types/whatsapp"
      ],
      "exports": [
        "WhatsAppConfiguration"
      ],
      "usedComponents": [
        "Configuration",
        "Template",
        "Card",
        "CardHeader",
        "CardTitle",
        "Settings",
        "CardContent",
        "Alert",
        "Info",
        "AlertDescription",
        "ExternalLink",
        "Label",
        "Input",
        "Switch",
        "Separator",
        "Badge",
        "Check",
        "X",
        "Button",
        "Loader2",
        "Webhook",
        "AlertTriangle",
        "Copy",
        "MessageCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent"
      ]
    },
    {
      "path": "src/components/config/DraggableSection.tsx",
      "name": "DraggableSection",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch"
      ],
      "exports": [
        "default",
        "DraggableSection"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "GripVertical",
        "IconComponent",
        "Badge",
        "Switch",
        "Eye",
        "EyeOff",
        "Button",
        "Settings"
      ]
    },
    {
      "path": "src/components/config/LayoutCustomizer.tsx",
      "name": "LayoutCustomizer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default",
        "LayoutCustomizer"
      ],
      "usedComponents": [
        "LayoutConfiguration",
        "HTMLDivElement",
        "IconComponent",
        "Button",
        "RotateCcw",
        "Save",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardContent",
        "Layout",
        "Slider",
        "Switch",
        "Grid3X3",
        "Badge",
        "Eye",
        "Heart"
      ]
    },
    {
      "path": "src/components/config/MobileSectionConfig.tsx",
      "name": "MobileSectionConfig",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/slider",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Smartphone",
        "Button",
        "Tablet",
        "Eye",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Touch",
        "Zap",
        "Settings",
        "TabsContent",
        "Card",
        "Badge",
        "Switch",
        "Slider",
        "ChevronUp",
        "ChevronDown",
        "Input",
        "Hand",
        "Vibrate",
        "RotateCw",
        "MousePointer"
      ]
    },
    {
      "path": "src/components/config/SectionConfigBuilder.tsx",
      "name": "SectionConfigBuilder",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/scroll-area",
        "@/components/ui/alert",
        "./DraggableSection",
        "./SectionConfigPanel",
        "./TemplateSelector",
        "./BulkOperationsMenu",
        "./hooks/useSectionConfig",
        "./hooks/useSectionTemplates",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default",
        "SectionConfigBuilder"
      ],
      "usedComponents": [
        "SectionConfigBuilderState",
        "UserSectionConfiguration",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Badge",
        "phaseTheme",
        "Button",
        "Template",
        "BulkOperationsMenu",
        "Card",
        "CardHeader",
        "CardTitle",
        "Settings2",
        "CardContent",
        "Plus",
        "DndContext",
        "SortableContext",
        "DraggableSection",
        "DragOverlay",
        "SectionConfigPanel",
        "Eye",
        "RotateCcw",
        "Save"
      ]
    },
    {
      "path": "src/components/config/index.ts",
      "name": "index",
      "imports": [],
      "exports": [
        "DEFAULT_MOBILE_CONFIG",
        "validateMobileConfig",
        "getMobileDeviceInfo",
        "MobileSectionPerformanceMonitor",
        "mobilePerformanceMonitor"
      ],
      "usedComponents": [
        "MobileSectionConfiguration"
      ]
    },
    {
      "path": "src/components/couples/notifications/CoupleNotificationCenter.tsx",
      "name": "CoupleNotificationCenter",
      "imports": [
        "@/types/couple-notifications"
      ],
      "exports": [
        "CoupleNotificationCenter"
      ],
      "usedComponents": [
        "MilestoneNotification",
        "JourneyProgress",
        "HeartIcon",
        "CalendarIcon",
        "SparklesIcon",
        "WeddingJourneyProgressRing",
        "NotificationTabs",
        "AnimatePresence",
        "MilestoneNotificationGrid",
        "PersonalizedNotificationFeed",
        "VendorNotificationSection",
        "PlanningNotificationSection",
        "ViralGrowthPrompts"
      ]
    },
    {
      "path": "src/components/couples/notifications/MilestoneNotificationGrid.tsx",
      "name": "MilestoneNotificationGrid",
      "imports": [
        "@/types/couple-notifications"
      ],
      "exports": [
        "MilestoneNotificationGrid"
      ],
      "usedComponents": [
        "MilestoneNotification",
        "SparklesIcon",
        "AnimatePresence",
        "MilestoneCard",
        "EmptyMilestoneState",
        "MilestoneDetailModal",
        "ProgressVisualization",
        "HeartIcon",
        "ShareIcon",
        "ShareableAssetPreview",
        "BuildingOffice2Icon",
        "HandshakeIcon",
        "BanknotesIcon",
        "CheckCircleIcon",
        "UserGroupIcon",
        "StarIcon",
        "GiftIcon",
        "CakeIcon",
        "CameraIcon",
        "MusicalNoteIcon",
        "MapPinIcon",
        "ClockIcon"
      ]
    },
    {
      "path": "src/components/couples/personalization/CouplePersonalizationEngine.tsx",
      "name": "CouplePersonalizationEngine",
      "imports": [
        "@/types/couple-notifications"
      ],
      "exports": [
        "CouplePersonalizationEngine"
      ],
      "usedComponents": [
        "PersonalizedNotification",
        "ContextualRecommendation",
        "ShareableAsset",
        "PersonalityInsights",
        "PersonalizedContent",
        "EmotionalTone",
        "ViralElement"
      ]
    },
    {
      "path": "src/components/couples/reporting/BudgetAnalysisReport.tsx",
      "name": "BudgetAnalysisReport",
      "imports": [
        "@/types/couple-reporting"
      ],
      "exports": [
        "BudgetAnalysisReport"
      ],
      "usedComponents": [
        "BudgetAnalysis",
        "BudgetAnalysisSkeleton",
        "BudgetSummaryCard",
        "CurrencyPoundIcon",
        "CheckIcon",
        "BanknotesIcon",
        "ArrowTrendingDownIcon",
        "ChartPieIcon",
        "BudgetPieChart",
        "CategoryBudgetCard",
        "SavingsOpportunityCard",
        "PricingBenchmarkChart",
        "CalendarDaysIcon",
        "PaymentScheduleTimeline",
        "BudgetHealthDashboard",
        "LightBulbIcon",
        "ArrowTrendingUpIcon",
        "ScaleIcon",
        "PaymentItem",
        "HealthFactorCard"
      ]
    },
    {
      "path": "src/components/couples/reporting/CoupleReportDashboard.tsx",
      "name": "CoupleReportDashboard",
      "imports": [
        "@/types/couple-reporting",
        "./WeddingProgressOverview",
        "./ReportTypeSelector",
        "./WeddingProgressReport",
        "./BudgetAnalysisReport",
        "./SocialShareableReport",
        "./VendorPerformanceReport"
      ],
      "exports": [
        "CoupleReportDashboard"
      ],
      "usedComponents": [
        "CoupleReportType",
        "CoupleReport",
        "ProgressReport",
        "CalendarIcon",
        "WeddingProgressOverview",
        "ReportTypeSelector",
        "AnimatePresence",
        "WeddingProgressReport",
        "BudgetAnalysisReport",
        "VendorPerformanceReport",
        "SocialShareableReport",
        "QuickActionButton",
        "ChartBarIcon",
        "ShareIcon",
        "UsersIcon",
        "CameraIcon"
      ]
    },
    {
      "path": "src/components/couples/reporting/ReportTypeSelector.tsx",
      "name": "ReportTypeSelector",
      "imports": [
        "@/types/couple-reporting"
      ],
      "exports": [
        "ReportTypeSelector"
      ],
      "usedComponents": [
        "ChartBarIcon",
        "CurrencyPoundIcon",
        "UsersIcon",
        "ShareIcon",
        "CalendarDaysIcon",
        "DocumentTextIcon",
        "ReportTypeCard"
      ]
    },
    {
      "path": "src/components/couples/reporting/SocialShareableReport.tsx",
      "name": "SocialShareableReport",
      "imports": [
        "@/types/couple-reporting"
      ],
      "exports": [
        "SocialShareableReport"
      ],
      "usedComponents": [
        "ShareableContent",
        "TemplateOption",
        "TrendingUpIcon",
        "ShareableContentCard",
        "WeddingStatsInfographic",
        "VendorShoutoutCard",
        "GrowthActionCard",
        "TagIcon",
        "HeartIcon",
        "StarIcon",
        "HashtagRecommendations",
        "SparklesIcon",
        "RocketLaunchIcon",
        "CameraIcon",
        "ChatBubbleLeftIcon",
        "ArrowDownTrayIcon",
        "ShareIcon"
      ]
    },
    {
      "path": "src/components/couples/reporting/VendorPerformanceReport.tsx",
      "name": "VendorPerformanceReport",
      "imports": [
        "../visualization/CircularProgress",
        "@/types/couple-reporting"
      ],
      "exports": [
        "VendorPerformanceReport"
      ],
      "usedComponents": [
        "VendorReport",
        "VendorPerformanceReportSkeleton",
        "CircularProgress",
        "PerformanceMetricCard",
        "ChatBubbleLeftRightIcon",
        "ClockIcon",
        "CheckBadgeIcon",
        "TrophyIcon",
        "UsersIcon",
        "VendorPerformanceCard",
        "VendorComparisonChart",
        "RecommendationCard",
        "TopPerformerCard",
        "ExclamationTriangleIcon",
        "ConcernCard",
        "TestimonialCard",
        "ChartBarIcon",
        "MetricBar",
        "StarIconSolid",
        "LightBulbIcon",
        "HeartIcon"
      ]
    },
    {
      "path": "src/components/couples/reporting/WeddingProgressOverview.tsx",
      "name": "WeddingProgressOverview",
      "imports": [
        "../visualization/CircularProgress",
        "@/types/couple-reporting"
      ],
      "exports": [
        "WeddingProgressOverview"
      ],
      "usedComponents": [
        "TrendingUpIcon",
        "CircularProgress",
        "CheckCircleIcon",
        "ClockIcon",
        "ExclamationTriangleIcon",
        "CalendarDaysIcon",
        "TimelineHealthIndicator",
        "CurrencyPoundIcon",
        "BudgetHealthIndicator"
      ]
    },
    {
      "path": "src/components/couples/reporting/WeddingProgressReport.tsx",
      "name": "WeddingProgressReport",
      "imports": [
        "../visualization/CircularProgress",
        "@/types/couple-reporting"
      ],
      "exports": [
        "WeddingProgressReport"
      ],
      "usedComponents": [
        "ProgressReportSkeleton",
        "CircularProgress",
        "ChartBarIcon",
        "MilestoneCard",
        "UserGroupIcon",
        "VendorStatusCard",
        "TaskCard",
        "RiskFactorCard",
        "ShareIcon",
        "CheckCircleIcon",
        "ClockIcon",
        "CalendarIcon",
        "ExclamationTriangleIcon",
        "ProgressRing"
      ]
    },
    {
      "path": "src/components/couples/sharing/ViralGrowthPrompts.tsx",
      "name": "ViralGrowthPrompts",
      "imports": [
        "@/types/couple-notifications"
      ],
      "exports": [
        "ViralGrowthPrompts"
      ],
      "usedComponents": [
        "ShareableContent",
        "SparklesIcon",
        "HeartIcon",
        "GiftIcon",
        "FriendInvitationCard",
        "ShareableContentGrid",
        "JourneySharingOptions",
        "AnimatePresence",
        "FriendInvitationModal",
        "UserPlusIcon",
        "CheckIcon",
        "ShareableContentCard",
        "EmptyContentState",
        "ShareIcon",
        "SocialShareButton",
        "FriendContact",
        "XMarkIcon",
        "ClipboardIcon"
      ]
    },
    {
      "path": "src/components/couples/visualization/CircularProgress.tsx",
      "name": "CircularProgress",
      "imports": [],
      "exports": [
        "CircularProgress",
        "ProgressRing",
        "MiniProgressRing"
      ],
      "usedComponents": [
        "CircularProgress"
      ]
    },
    {
      "path": "src/components/customer-success/AdvancedInterventionManager.tsx",
      "name": "AdvancedInterventionManager",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/hooks/useSupabaseRealtime",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default",
        "AdvancedInterventionManager"
      ],
      "usedComponents": [
        "InterventionWorkflow",
        "InterventionTemplate",
        "CheckCircle2",
        "PlayCircle",
        "Clock",
        "XCircle",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Target",
        "Button",
        "Zap",
        "Select",
        "Input",
        "AnimatePresence",
        "Badge",
        "Calendar",
        "TrendingUp",
        "FileText"
      ]
    },
    {
      "path": "src/components/customer-success/CustomerSuccessDashboard.tsx",
      "name": "CustomerSuccessDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SuccessMetrics",
        "HealthScore",
        "MilestoneAnalytics",
        "TriggerAnalytics",
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Heart",
        "Target",
        "Star",
        "CardDescription",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "LineChart",
        "Legend",
        "Line",
        "Award",
        "Progress",
        "AreaChart",
        "Area",
        "Badge",
        "Clock",
        "Zap",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/customer-success/DashboardTestSuite.ts",
      "name": "DashboardTestSuite",
      "imports": [],
      "exports": [
        "DashboardTestSuite"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/customer-success/EnhancedCustomerSuccessDashboard.tsx",
      "name": "EnhancedCustomerSuccessDashboard",
      "imports": [
        "@/lib/security/admin-auth",
        "@/lib/security/admin-validation",
        "@/lib/security/audit-logger",
        "@/lib/security/data-protection",
        "@/hooks/useCustomerHealthData",
        "@/hooks/useRealtimeHealthUpdates",
        "@/lib/api/customer-health"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Record",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "DashboardProps",
        "Download",
        "Mail",
        "MetricsCard",
        "Users",
        "TrendingUp",
        "Heart",
        "Target",
        "AlertTriangle",
        "TrendingDown",
        "Star",
        "HealthDistributionChart",
        "LineChart",
        "Line",
        "Filter",
        "Zap",
        "CheckCircle2",
        "DashboardErrorBoundary",
        "Suspense",
        "DashboardLoading",
        "CustomerSuccessDashboard"
      ]
    },
    {
      "path": "src/components/customer-success/HealthMetricsVisualization.tsx",
      "name": "HealthMetricsVisualization",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/button-untitled"
      ],
      "exports": [
        "default",
        "HealthMetricsVisualization"
      ],
      "usedComponents": [
        "TrendDataPoint",
        "HealthMetric",
        "Activity",
        "Users",
        "Target",
        "CheckCircle2",
        "HealthSegment",
        "Card",
        "CardContent",
        "TrendingUp",
        "TrendingDown",
        "ResponsiveContainer",
        "LineChart",
        "Line",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "Button",
        "RefreshCw",
        "PieChart",
        "AnimatePresence",
        "MetricCard",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "RechartsLineChart",
        "RechartsPieChart",
        "Cell",
        "Zap",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/customer-success/InterventionWorkflowManager.tsx",
      "name": "InterventionWorkflowManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Intervention",
        "InterventionWorkflowManagerSkeleton",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "Badge",
        "Button",
        "Plus",
        "CardContent",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "KanbanView",
        "ListView",
        "TimelineView",
        "InterventionDetail",
        "InterventionCard",
        "InterventionListItem",
        "InterventionTimelineItem",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Progress",
        "XCircle"
      ]
    },
    {
      "path": "src/components/customer-success/OnboardingWorkflowManager.tsx",
      "name": "OnboardingWorkflowManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "OnboardingWorkflow",
        "AutomationRule",
        "WorkflowAnalytics",
        "CheckCircle2",
        "PlayCircle",
        "Clock",
        "StopCircle",
        "AlertTriangle",
        "RefreshCw",
        "Alert",
        "AlertDescription",
        "Badge",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardContent",
        "Progress",
        "Calendar",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Zap",
        "Users",
        "BarChart3",
        "Settings",
        "MessageSquare"
      ]
    },
    {
      "path": "src/components/customer-success/OptimizedCustomerSuccessDashboard.tsx",
      "name": "OptimizedCustomerSuccessDashboard",
      "imports": [
        "@/hooks/useDebounce",
        "@/lib/security/admin-auth",
        "@/lib/security/admin-validation",
        "@/lib/security/audit-logger",
        "@/lib/security/data-protection",
        "@/hooks/useOptimizedHealthData",
        "@/hooks/useRealtimeHealthUpdates",
        "@/lib/api/customer-health-optimized",
        "@/lib/monitoring/web-vitals"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "OptimizedMetrics",
        "AlertTriangle",
        "Zap",
        "DashboardProps",
        "Search",
        "Download",
        "OptimizedMetricsCard",
        "Users",
        "TrendingUp",
        "Heart",
        "Target",
        "TrendingDown",
        "Star",
        "LazyHealthChart",
        "LineChart",
        "Line",
        "Mail",
        "VirtualizedAtRiskList",
        "OptimizedErrorBoundary",
        "Suspense",
        "OptimizedDashboardLoading",
        "OptimizedCustomerSuccessDashboard"
      ]
    },
    {
      "path": "src/components/customer-success/SupplierHealthMonitor.tsx",
      "name": "SupplierHealthMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SupplierHealthMonitorSkeleton",
        "Card",
        "CardContent",
        "Users",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Button",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "SuppliersList",
        "SuppliersGrid",
        "SupplierListItem",
        "SupplierGridItem",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "CategoryIcon",
        "Mail",
        "Clock",
        "TrendIcon",
        "Progress"
      ]
    },
    {
      "path": "src/components/customer-success/WeddingSeasonAdjustments.tsx",
      "name": "WeddingSeasonAdjustments",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/switch",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingSeasonData",
        "SeasonalAdjustment",
        "WeddingSeasonAdjustmentsSkeleton",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "SeasonIcon",
        "Badge",
        "AlertCircle",
        "Settings",
        "Switch",
        "TrendingUp",
        "Progress",
        "Flower2",
        "Sun",
        "Leaf",
        "Snowflake",
        "Calendar"
      ]
    },
    {
      "path": "src/components/dashboard/CustomerHealthDashboard.tsx",
      "name": "CustomerHealthDashboard",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/LoadingSkeleton",
        "@/components/ui/alert",
        "./HealthTrendChart",
        "./InterventionActions",
        "./RiskLevelFilter",
        "./HealthExportButton",
        "@/hooks/useSupabaseRealtime",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SupplierHealthMetrics",
        "HealthDashboardFilters",
        "DashboardSummary",
        "DashboardSkeleton",
        "Alert",
        "AlertTriangle",
        "HealthExportButton",
        "Card",
        "CardContent",
        "Users",
        "TrendingUp",
        "Badge",
        "ArrowUpIcon",
        "ArrowDownIcon",
        "CheckCircle2",
        "RiskLevelFilter",
        "CardHeader",
        "CardTitle",
        "HealthTrendChart",
        "InterventionActions",
        "Button",
        "FileText"
      ]
    },
    {
      "path": "src/components/dashboard/DashboardSkeleton.tsx",
      "name": "DashboardSkeleton",
      "imports": [],
      "exports": [
        "DashboardSkeleton"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/dashboard/ExecutiveDashboard.tsx",
      "name": "ExecutiveDashboard",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/dashboard/HealthExportButton.tsx",
      "name": "HealthExportButton",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/dropdown"
      ],
      "exports": [
        "default",
        "HealthExportButton"
      ],
      "usedComponents": [
        "Dropdown",
        "Button",
        "Download",
        "Icon"
      ]
    },
    {
      "path": "src/components/dashboard/HealthTrendChart.tsx",
      "name": "HealthTrendChart",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/select",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "HealthTrendChart"
      ],
      "usedComponents": [
        "ChartConfiguration",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge",
        "TrendingUp",
        "TrendingDown",
        "Button",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Line",
        "AreaChart",
        "Area"
      ]
    },
    {
      "path": "src/components/dashboard/InterventionActions.tsx",
      "name": "InterventionActions",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card-untitled",
        "@/components/ui/avatar"
      ],
      "exports": [
        "default",
        "InterventionActions"
      ],
      "usedComponents": [
        "Set",
        "CheckCircle2",
        "Card",
        "CardContent",
        "Avatar",
        "Badge",
        "Icon",
        "Clock",
        "Button"
      ]
    },
    {
      "path": "src/components/dashboard/QuickActions.tsx",
      "name": "QuickActions",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/dialog"
      ],
      "exports": [
        "QuickActions"
      ],
      "usedComponents": [
        "QuickAction",
        "Button",
        "Icon",
        "Dialog"
      ]
    },
    {
      "path": "src/components/dashboard/RealtimeStatusPanel.tsx",
      "name": "RealtimeStatusPanel",
      "imports": [
        "@/lib/utils",
        "@/components/providers/RealtimeProvider",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/RealtimeIndicator"
      ],
      "exports": [
        "RealtimeStatusPanel"
      ],
      "usedComponents": [
        "Card",
        "RealtimeIndicator",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "AnimatePresence",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "Activity",
        "RefreshCw",
        "CardContent",
        "MetricCard",
        "Bell",
        "Signal",
        "Clock",
        "Users",
        "Badge",
        "WeddingChannelCard",
        "Zap",
        "MessageCircle",
        "Heart"
      ]
    },
    {
      "path": "src/components/dashboard/RiskLevelFilter.tsx",
      "name": "RiskLevelFilter",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/input"
      ],
      "exports": [
        "default",
        "RiskLevelFilter"
      ],
      "usedComponents": [
        "HealthDashboardFilters",
        "Card",
        "CardContent",
        "Search",
        "Input",
        "X",
        "Button",
        "Icon",
        "Badge",
        "Select",
        "SelectTrigger",
        "Calendar",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Filter",
        "ArrowUpDown"
      ]
    },
    {
      "path": "src/components/dashboard/budget/EnhancedBudgetTracker.tsx",
      "name": "EnhancedBudgetTracker",
      "imports": [
        "@/lib/services/budget-analytics",
        "@/lib/services/receipt-scanner",
        "@/lib/services/bank-sync",
        "@/lib/services/payment-reminders",
        "@/lib/utils"
      ],
      "exports": [
        "EnhancedBudgetTracker"
      ],
      "usedComponents": [
        "SpendingTrend",
        "BudgetForecast",
        "BankAccount",
        "BankTransaction",
        "ReceiptData",
        "PaymentReminder",
        "Camera",
        "Bank",
        "DollarSign",
        "TrendingUp",
        "PiggyBank",
        "Bell",
        "TrendingDown",
        "AlertCircle",
        "CheckCircle",
        "Sparkles",
        "Calendar",
        "FileText"
      ]
    },
    {
      "path": "src/components/dashboard/realtime/DocumentStatus.tsx",
      "name": "DocumentStatus",
      "imports": [
        "@/hooks/useRealtime",
        "@/lib/utils"
      ],
      "exports": [
        "RealtimeDocumentStatus",
        "DocumentList"
      ],
      "usedComponents": [
        "DocumentStatus",
        "Edit",
        "Clock",
        "CheckCircle",
        "XCircle",
        "FileSignature",
        "FileText",
        "Users",
        "Shield",
        "Eye",
        "Download",
        "AlertCircle",
        "StatusBadge"
      ]
    },
    {
      "path": "src/components/dashboard/realtime/RealtimeActivityFeed.tsx",
      "name": "RealtimeActivityFeed",
      "imports": [
        "@/hooks/useRealtime",
        "@/lib/utils"
      ],
      "exports": [
        "RealtimeActivityFeed"
      ],
      "usedComponents": [
        "ActivityFeedItem",
        "NodeJS",
        "HTMLDivElement",
        "Search",
        "Loader2",
        "RefreshCw",
        "TrendingUp",
        "Bell",
        "ActivityItem",
        "Icon",
        "Pin"
      ]
    },
    {
      "path": "src/components/dashboard/realtime/RealtimeBudgetTracker.tsx",
      "name": "RealtimeBudgetTracker",
      "imports": [
        "@/hooks/useRealtime",
        "@/lib/utils"
      ],
      "exports": [
        "RealtimeBudgetTracker"
      ],
      "usedComponents": [
        "BudgetUpdate",
        "Set",
        "DollarSign",
        "Wifi",
        "Loader2",
        "WifiOff",
        "AlertTriangle",
        "Download",
        "FileText",
        "ChevronDown",
        "ChevronRight",
        "Plus",
        "Edit2",
        "CheckCircle",
        "Clock",
        "CreditCard",
        "Trash2",
        "BarChart",
        "PieChart",
        "Calendar",
        "Receipt"
      ]
    },
    {
      "path": "src/components/dashboard/realtime/RealtimeTimeline.tsx",
      "name": "RealtimeTimeline",
      "imports": [
        "@/hooks/useRealtime",
        "@/lib/utils"
      ],
      "exports": [
        "RealtimeTimeline"
      ],
      "usedComponents": [
        "NodeJS",
        "Wifi",
        "Loader2",
        "WifiOff",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "User",
        "MapPin"
      ]
    },
    {
      "path": "src/components/dashboard/realtime/VendorPresence.tsx",
      "name": "VendorPresence",
      "imports": [
        "@/hooks/useRealtime",
        "@/lib/utils"
      ],
      "exports": [
        "VendorPresenceIndicator",
        "VendorPresenceList",
        "VendorMap",
        "VendorActivityTimeline"
      ],
      "usedComponents": [
        "Circle",
        "Activity",
        "Wifi",
        "VendorCard",
        "CheckCircle",
        "Clock",
        "AlertCircle",
        "WifiOff",
        "User",
        "MapPin"
      ]
    },
    {
      "path": "src/components/dashboard-builder/ContentConfigPanel.tsx",
      "name": "ContentConfigPanel",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ContentItem",
        "Filter",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "Plus",
        "Button",
        "FileText",
        "Image",
        "CheckSquare",
        "Clock",
        "IconComponent",
        "Input",
        "Badge",
        "Switch",
        "ChevronUp",
        "ChevronDown",
        "Copy",
        "Trash2",
        "Layers",
        "Eye"
      ]
    },
    {
      "path": "src/components/dashboard-builder/SectionConfigEditor.tsx",
      "name": "SectionConfigEditor",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VisibilityRule",
        "Settings",
        "Button",
        "Trash2",
        "Card",
        "Calendar",
        "Badge",
        "Sparkles",
        "Eye",
        "Filter",
        "Users",
        "Input",
        "CheckCircle",
        "AlertCircle",
        "ChevronUp",
        "ChevronDown",
        "Plus",
        "Switch"
      ]
    },
    {
      "path": "src/components/dashboard-builder/VisibilityRulesBuilder.tsx",
      "name": "VisibilityRulesBuilder",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ClientContext",
        "Date",
        "VisibilityRule",
        "Sparkles",
        "Button",
        "Pause",
        "Play",
        "Card",
        "Eye",
        "EyeOff",
        "Badge",
        "Target",
        "Input",
        "Zap"
      ]
    },
    {
      "path": "src/components/dashboard-templates/ClientDashboardRenderer.tsx",
      "name": "ClientDashboardRenderer",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/utils",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "AlertCircle",
        "Button",
        "RefreshCw",
        "IconComponent",
        "SectionWrapper",
        "SectionProps",
        "Badge",
        "Record",
        "Set",
        "Suspense",
        "SectionLoadingPlaceholder",
        "SectionComponent",
        "FallbackSection",
        "Grid3x3"
      ]
    },
    {
      "path": "src/components/dashboard-templates/DashboardTemplateBuilder.tsx",
      "name": "DashboardTemplateBuilder",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DashboardTemplate",
        "DashboardSection",
        "Record",
        "Button",
        "Eye",
        "Save",
        "Card",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Settings",
        "LayoutDashboard",
        "Palette",
        "Sparkles",
        "TabsContent",
        "Input",
        "Switch",
        "Badge",
        "IconComponent",
        "Copy",
        "Trash2",
        "Layers"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/ActivityFeedSection.tsx",
      "name": "ActivityFeedSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "IconComponent",
        "Activity",
        "Button"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/BudgetTrackerSection.tsx",
      "name": "BudgetTrackerSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/utils",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DollarSign",
        "Badge",
        "AlertCircle",
        "PieChart",
        "TrendingUp",
        "TrendingDown",
        "Button",
        "Plus"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/CommunicationSection.tsx",
      "name": "CommunicationSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MessageCircle",
        "Badge",
        "Button",
        "Send"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/DocumentsSection.tsx",
      "name": "DocumentsSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FileText",
        "Button",
        "Download",
        "Upload"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/GallerySection.tsx",
      "name": "GallerySection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Camera",
        "Eye",
        "Button",
        "Plus"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/GuestListSection.tsx",
      "name": "GuestListSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Users",
        "Button",
        "Plus"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/NotesSection.tsx",
      "name": "NotesSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FileText",
        "Button",
        "Edit3",
        "Plus"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/TaskManagerSection.tsx",
      "name": "TaskManagerSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CheckSquare",
        "Badge",
        "Button",
        "Plus"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/TimelineSection.tsx",
      "name": "TimelineSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/utils",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CheckCircle2",
        "Clock",
        "AlertCircle",
        "Circle",
        "Badge",
        "Calendar",
        "ChevronRight",
        "Button"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/VendorPortfolioSection.tsx",
      "name": "VendorPortfolioSection",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Badge",
        "Users",
        "Star",
        "MapPin",
        "Button",
        "Phone",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/dashboard-templates/sections/WelcomeSection.tsx",
      "name": "WelcomeSection",
      "imports": [
        "@/components/ui/badge",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Heart",
        "Calendar",
        "MapPin",
        "Users",
        "Badge"
      ]
    },
    {
      "path": "src/components/debug/TouchPerformanceDebugger.tsx",
      "name": "TouchPerformanceDebugger",
      "imports": [
        "@/lib/utils/touch-performance"
      ],
      "exports": [
        "TouchPerformanceDebugger"
      ],
      "usedComponents": [
        "TouchPerformanceReport"
      ]
    },
    {
      "path": "src/components/demo/DemoAssetsProvider.tsx",
      "name": "DemoAssetsProvider",
      "imports": [
        "@/lib/demo/brand-assets",
        "@/lib/demo/config"
      ],
      "exports": [
        "default",
        "DemoAssetsProvider",
        "useDemoAssets",
        "DemoAssetsLoader",
        "withDemoAssets"
      ],
      "usedComponents": [
        "DemoAssetsContextType",
        "DemoAssetsContext",
        "P",
        "Component",
        "DemoAssetsLoader"
      ]
    },
    {
      "path": "src/components/demo/DemoBanner.tsx",
      "name": "DemoBanner",
      "imports": [
        "@/lib/demo/config",
        "@/lib/demo/auth"
      ],
      "exports": [
        "default",
        "DemoBannerMinimal",
        "useDemoMode"
      ],
      "usedComponents": [
        "XMarkIcon"
      ]
    },
    {
      "path": "src/components/demo/ScreenshotModeToggle.tsx",
      "name": "ScreenshotModeToggle",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/demo/screenshot-helpers",
        "@/lib/demo/config"
      ],
      "exports": [
        "default",
        "ScreenshotModeToggle"
      ],
      "usedComponents": [
        "Button",
        "EyeSlashIcon",
        "CameraIcon",
        "Badge",
        "Card",
        "CardContent",
        "EyeIcon",
        "SparklesIcon",
        "ClockIcon"
      ]
    },
    {
      "path": "src/components/demo/SupplierTiles.tsx",
      "name": "SupplierTiles",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/demo/config",
        "@/lib/demo/auth-provider",
        "@/lib/demo/brand-assets"
      ],
      "exports": [
        "default",
        "SupplierTiles"
      ],
      "usedComponents": [
        "CameraIcon",
        "VideoCameraIcon",
        "MusicalNoteIcon",
        "SparklesIcon",
        "BuildingOfficeIcon",
        "ScissorsIcon",
        "PaintBrushIcon",
        "ClipboardDocumentListIcon",
        "ChatBubbleLeftIcon",
        "CalendarIcon",
        "DocumentIcon",
        "FolderIcon",
        "Button",
        "GlobeAltIcon",
        "InstagramLogoIcon",
        "AtSymbolIcon",
        "PhoneIcon",
        "Card",
        "CardHeader",
        "SupplierLogoBg",
        "CardTitle",
        "Badge",
        "CardContent",
        "QuickActions",
        "ContactLinks",
        "SupplierTile"
      ]
    },
    {
      "path": "src/components/developer/RouteDocumentationViewer.tsx",
      "name": "RouteDocumentationViewer",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ShieldCheckIcon",
        "ExclamationCircleIcon",
        "HeartIcon",
        "IconComponent",
        "CopyIcon",
        "CogIcon",
        "CheckCircleIcon",
        "CodeBracketIcon",
        "EyeIcon"
      ]
    },
    {
      "path": "src/components/directory/PortfolioGallery.tsx",
      "name": "PortfolioGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/input"
      ],
      "exports": [
        "PortfolioGallery"
      ],
      "usedComponents": [
        "GalleryImage",
        "NodeJS",
        "Search",
        "Input",
        "Button",
        "Grid",
        "ImageCard",
        "LightboxModal",
        "Badge",
        "Eye",
        "Heart",
        "ZoomIn",
        "Info",
        "Pause",
        "Play",
        "X",
        "ChevronLeft",
        "ChevronRight",
        "ZoomOut",
        "RotateCw",
        "Share2",
        "Download"
      ]
    },
    {
      "path": "src/components/directory/style/AestheticPreferenceSliders.tsx",
      "name": "AestheticPreferenceSliders",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/slider",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "AestheticPreferenceSliders"
      ],
      "usedComponents": [
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Slider"
      ]
    },
    {
      "path": "src/components/directory/style/ColorPalettePicker.tsx",
      "name": "ColorPalettePicker",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ColorPalettePicker"
      ],
      "usedComponents": [
        "Palette",
        "Card",
        "CardContent",
        "CheckCircle2",
        "CardHeader",
        "CardTitle",
        "Badge",
        "ColorSwatch"
      ]
    },
    {
      "path": "src/components/directory/style/StyleCategorySelector.tsx",
      "name": "StyleCategorySelector",
      "imports": [
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "StyleCategorySelector"
      ],
      "usedComponents": [
        "Search",
        "Input",
        "Badge",
        "Card",
        "CardContent",
        "Check"
      ]
    },
    {
      "path": "src/components/directory/style/StyleDiscoveryWizard.tsx",
      "name": "StyleDiscoveryWizard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/progress",
        "./StyleCategorySelector",
        "./ColorPalettePicker",
        "./AestheticPreferenceSliders",
        "./StyleMatchResults",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "StyleDiscoveryWizard"
      ],
      "usedComponents": [
        "StylePreferences",
        "StyleCategorySelector",
        "ColorPalettePicker",
        "AestheticPreferenceSliders",
        "StyleMatchResults",
        "currentStepData",
        "Button",
        "Progress",
        "CheckCircle2",
        "AnimatePresence",
        "ChevronLeft",
        "Sparkles",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/directory/style/StyleMatchResults.tsx",
      "name": "StyleMatchResults",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "StyleMatchResults"
      ],
      "usedComponents": [
        "Heart",
        "Card",
        "Badge",
        "Button",
        "CardHeader",
        "CardTitle",
        "MapPin",
        "Star",
        "CardContent",
        "ChevronRight",
        "ExternalLink",
        "Input",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "AnimatePresence",
        "VenueCard",
        "VendorCard"
      ]
    },
    {
      "path": "src/components/directory/style/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/directory/verification/DocumentUploader.tsx",
      "name": "DocumentUploader",
      "imports": [],
      "exports": [
        "default",
        "DocumentUploader"
      ],
      "usedComponents": [
        "CheckCircle",
        "AlertCircle",
        "FileText",
        "X",
        "Upload"
      ]
    },
    {
      "path": "src/components/directory/verification/TrustIndicator.tsx",
      "name": "TrustIndicator",
      "imports": [],
      "exports": [
        "default",
        "TrustIndicator"
      ],
      "usedComponents": [
        "TrustIcon",
        "LevelIcon",
        "CheckCircle",
        "ChevronUp",
        "ChevronDown",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/directory/verification/VerificationBadges.tsx",
      "name": "VerificationBadges",
      "imports": [],
      "exports": [
        "default",
        "VerificationBadges"
      ],
      "usedComponents": [
        "levelBadge"
      ]
    },
    {
      "path": "src/components/directory/verification/VerificationDashboard.tsx",
      "name": "VerificationDashboard",
      "imports": [
        "./VerificationBadges"
      ],
      "exports": [
        "default",
        "VerificationDashboard"
      ],
      "usedComponents": [
        "Clock",
        "RefreshCw",
        "CheckCircle",
        "AlertCircle",
        "Shield",
        "currentConfig",
        "Upload"
      ]
    },
    {
      "path": "src/components/directory/verification/VerificationModal.tsx",
      "name": "VerificationModal",
      "imports": [],
      "exports": [
        "default",
        "VerificationModal"
      ],
      "usedComponents": [
        "IconComponent",
        "statusConfig",
        "X",
        "CheckCircle",
        "Clock",
        "AlertCircle",
        "Shield",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/directory/verification/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/documents/AccessControlPanel.tsx",
      "name": "AccessControlPanel",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/switch",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/separator",
        "@/components/ui/table",
        "@/lib/services/documentStorageService"
      ],
      "exports": [
        "AccessControlPanel"
      ],
      "usedComponents": [
        "DocumentSharingLink",
        "DocumentAccessControl",
        "DocumentSharingLog",
        "ShareLinkForm",
        "Eye",
        "Download",
        "Share2",
        "Settings",
        "ExternalLink",
        "Button",
        "Users",
        "Link2",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Plus",
        "Badge",
        "Lock",
        "Mail",
        "Check",
        "Copy",
        "Edit3",
        "Trash2",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "Activity",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Switch",
        "Textarea",
        "Alert",
        "Info",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/documents/DocumentLibrary.tsx",
      "name": "DocumentLibrary",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/dropdown-menu",
        "@/components/ui/separator",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/lib/services/documentStorageService"
      ],
      "exports": [
        "DocumentLibrary"
      ],
      "usedComponents": [
        "DocumentWithCategory",
        "DocumentCategory",
        "DocumentStatistics",
        "DocumentLibraryFilters",
        "Badge",
        "Shield",
        "Card",
        "CardHeader",
        "IconComponent",
        "Button",
        "Eye",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreHorizontal",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Share2",
        "Edit3",
        "DropdownMenuSeparator",
        "Trash2",
        "CardContent",
        "Checkbox",
        "FileText",
        "Clock",
        "XCircle",
        "Archive",
        "Search",
        "Input",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "RefreshCw",
        "Filter",
        "ChevronUp",
        "ChevronDown",
        "SortAsc",
        "SortDesc",
        "DropdownMenuCheckboxItem",
        "Grid3X3",
        "List",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "DocumentCard",
        "DocumentListItem"
      ]
    },
    {
      "path": "src/components/documents/DocumentManager.tsx",
      "name": "DocumentManager",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/lib/services/documentStorageService"
      ],
      "exports": [
        "DocumentManager"
      ],
      "usedComponents": [
        "DocumentWithCategory",
        "DocumentCategory",
        "DocumentUploadProgress",
        "DocumentLibraryFilters",
        "Partial",
        "DocumentUploadRequest",
        "HTMLInputElement",
        "Badge",
        "Shield",
        "IconComponent",
        "Card",
        "CardHeader",
        "Button",
        "Eye",
        "Share2",
        "Trash2",
        "CardContent",
        "Checkbox",
        "Grid3X3",
        "List",
        "Plus",
        "Search",
        "Input",
        "Filter",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardTitle",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "Progress",
        "Upload",
        "DocumentCard",
        "DocumentListItem",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Textarea"
      ]
    },
    {
      "path": "src/components/documents/DocumentUploader.tsx",
      "name": "DocumentUploader",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tooltip",
        "@/lib/services/documentStorageService"
      ],
      "exports": [
        "DocumentUploader"
      ],
      "usedComponents": [
        "DocumentUploadProgress",
        "DocumentCategory",
        "Map",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Badge",
        "Shield",
        "TooltipContent",
        "IconComponent",
        "Upload",
        "FileText",
        "Button",
        "Card",
        "CardContent",
        "X",
        "Progress",
        "Alert",
        "AlertDescription",
        "Eye",
        "Info",
        "CardHeader",
        "CardTitle"
      ]
    },
    {
      "path": "src/components/documents/ExpiryTracker.tsx",
      "name": "ExpiryTracker",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/dialog",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "@/components/ui/tabs",
        "@/lib/services/documentStorageService"
      ],
      "exports": [
        "ExpiryTracker"
      ],
      "usedComponents": [
        "DocumentComplianceAlert",
        "DocumentWithCategory",
        "ExpirySettings",
        "Card",
        "CardContent",
        "IconComponent",
        "Badge",
        "Button",
        "Settings",
        "RefreshCw",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "Target",
        "Progress",
        "XCircle",
        "Clock",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ExpiryCard",
        "CheckCircle",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Checkbox",
        "Info"
      ]
    },
    {
      "path": "src/components/domains/DNSInstructions.tsx",
      "name": "DNSInstructions",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/types/domains"
      ],
      "exports": [
        "DNSInstructions"
      ],
      "usedComponents": [
        "CheckCircle",
        "Clock",
        "XCircle",
        "Badge",
        "Globe",
        "Button",
        "Zap",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Copy",
        "FileText",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/domains/DomainManager.tsx",
      "name": "DomainManager",
      "imports": [
        "@/types/domains",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/table",
        "@/components/ui/select",
        "@/lib/utils"
      ],
      "exports": [
        "DomainManager"
      ],
      "usedComponents": [
        "DomainStatus",
        "HealthStatus",
        "SSLStatus",
        "DomainTableRow",
        "DomainMetrics",
        "DomainFilters",
        "DomainSort",
        "Card",
        "CardContent",
        "XCircle",
        "Button",
        "Globe",
        "CheckCircle",
        "Shield",
        "TrendingUp",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Filter",
        "Plus",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "Badge",
        "AlertTriangle",
        "ExternalLink",
        "Settings"
      ]
    },
    {
      "path": "src/components/domains/DomainPreview.tsx",
      "name": "DomainPreview",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs"
      ],
      "exports": [
        "DomainPreview"
      ],
      "usedComponents": [
        "Monitor",
        "Tablet",
        "Smartphone",
        "Globe",
        "Badge",
        "Sparkles",
        "Button",
        "Eye",
        "ExternalLink",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "ClientPortalPreview",
        "PublicWebsitePreview",
        "Alert",
        "AlertDescription",
        "Heart",
        "Camera",
        "Calendar"
      ]
    },
    {
      "path": "src/components/domains/DomainVerification.tsx",
      "name": "DomainVerification",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/hooks/useDomainStatus",
        "@/types/domains"
      ],
      "exports": [
        "DomainVerification"
      ],
      "usedComponents": [
        "DomainValidationResult",
        "Progress",
        "Icon",
        "Label",
        "Input",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "CheckCircle",
        "Button",
        "Loader2"
      ]
    },
    {
      "path": "src/components/domains/SSLStatus.tsx",
      "name": "SSLStatus",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/types/domains"
      ],
      "exports": [
        "SSLStatus"
      ],
      "usedComponents": [
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Shield",
        "Badge",
        "Button",
        "RefreshCw",
        "Alert",
        "AlertDescription",
        "Zap",
        "Progress",
        "Calendar"
      ]
    },
    {
      "path": "src/components/domains/__tests__/DomainManager.test.tsx",
      "name": "DomainManager.test",
      "imports": [
        "../DomainManager",
        "@/types/domains"
      ],
      "exports": [],
      "usedComponents": [
        "DomainManager"
      ]
    },
    {
      "path": "src/components/domains/__tests__/domain-playwright.test.ts",
      "name": "domain-playwright.test",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/encryption/EncryptionKeyManager.tsx",
      "name": "EncryptionKeyManager",
      "imports": [
        "@/lib/utils",
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/progress",
        "@/types/encryption"
      ],
      "exports": [
        "default",
        "EncryptionKeyManager"
      ],
      "usedComponents": [
        "Card",
        "Shield",
        "Badge",
        "AlertTriangle",
        "Button",
        "Plus",
        "Key",
        "Lock",
        "EyeOff",
        "Eye",
        "RotateCcw",
        "Trash2",
        "Progress",
        "Activity",
        "Calendar"
      ]
    },
    {
      "path": "src/components/encryption/EncryptionStatusIndicator.tsx",
      "name": "EncryptionStatusIndicator",
      "imports": [
        "@/lib/utils",
        "@/components/untitled-ui/badge",
        "@/types/encryption"
      ],
      "exports": [
        "default",
        "EncryptionStatusIndicator"
      ],
      "usedComponents": [
        "Badge",
        "StatusIcon",
        "Lock",
        "Shield",
        "Clock",
        "LevelIcon"
      ]
    },
    {
      "path": "src/components/encryption/SecureDataDisplay.tsx",
      "name": "SecureDataDisplay",
      "imports": [
        "@/lib/utils",
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/input",
        "@/components/untitled-ui/badge",
        "@/types/encryption",
        "./EncryptionStatusIndicator"
      ],
      "exports": [
        "default",
        "SecureDataDisplay"
      ],
      "usedComponents": [
        "T",
        "Card",
        "EncryptionStatusIndicator",
        "AlertTriangle",
        "Input",
        "Button",
        "Save",
        "X",
        "Loader2",
        "Lock",
        "Unlock",
        "EyeOff",
        "Eye",
        "CheckCircle2",
        "Copy",
        "Edit3",
        "ShieldCheck"
      ]
    },
    {
      "path": "src/components/environment-variables/DeploymentSyncDashboard.tsx",
      "name": "DeploymentSyncDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "DeploymentSyncDashboard"
      ],
      "usedComponents": [
        "DeploymentJob",
        "SyncComparison",
        "Clock",
        "RefreshCw",
        "CheckCircle",
        "XCircle",
        "Square",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "GitBranch",
        "CardContent",
        "ArrowRight",
        "Button",
        "Play",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Zap",
        "Progress",
        "History",
        "Database",
        "RotateCcw",
        "Layers"
      ]
    },
    {
      "path": "src/components/environment-variables/EnvironmentHealthCard.tsx",
      "name": "EnvironmentHealthCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "EnvironmentHealthCard"
      ],
      "usedComponents": [
        "CheckCircle",
        "AlertTriangle",
        "XCircle",
        "Clock",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Progress"
      ]
    },
    {
      "path": "src/components/environment-variables/EnvironmentVariablesManagement.tsx",
      "name": "EnvironmentVariablesManagement",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "./EnvironmentHealthCard",
        "./VariableConfigurationForm",
        "./VariableSecurityCenter",
        "./DeploymentSyncDashboard",
        "./VariablesList",
        "./utils/accessibility"
      ],
      "exports": [
        "EnvironmentVariablesManagement"
      ],
      "usedComponents": [
        "EnvironmentVariable",
        "HTMLDivElement",
        "Badge",
        "AlertTriangle",
        "Card",
        "CardContent",
        "Database",
        "Activity",
        "Shield",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "EnvironmentHealthCard",
        "VariableConfigurationForm",
        "VariablesList",
        "VariableSecurityCenter",
        "DeploymentSyncDashboard"
      ]
    },
    {
      "path": "src/components/environment-variables/EnvironmentVariablesManagementOptimized.tsx",
      "name": "EnvironmentVariablesManagementOptimized",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "./utils/performance",
        "./utils/accessibility"
      ],
      "exports": [
        "EnvironmentVariablesManagementOptimized"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "Icon",
        "EnvironmentVariable",
        "HTMLDivElement",
        "Badge",
        "AlertTriangle",
        "StatusCard",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Suspense",
        "ComponentLoader",
        "TabsContent",
        "EnvironmentHealthCard",
        "VariableConfigurationForm",
        "VariablesList",
        "VariableSecurityCenter",
        "DeploymentSyncDashboard"
      ]
    },
    {
      "path": "src/components/environment-variables/VariableConfigurationForm.tsx",
      "name": "VariableConfigurationForm",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/badge"
      ],
      "exports": [
        "VariableConfigurationForm"
      ],
      "usedComponents": [
        "FormData",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "Plus",
        "CardContent",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "AlertTriangle",
        "Textarea",
        "Button",
        "EyeOff",
        "Eye",
        "Shield",
        "Lock",
        "Switch"
      ]
    },
    {
      "path": "src/components/environment-variables/VariableSecurityCenter.tsx",
      "name": "VariableSecurityCenter",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/progress"
      ],
      "exports": [
        "VariableSecurityCenter"
      ],
      "usedComponents": [
        "AuditLogEntry",
        "SecurityStats",
        "User",
        "Activity",
        "AlertTriangle",
        "Eye",
        "Lock",
        "Key",
        "Card",
        "CardContent",
        "Shield",
        "Progress",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Search",
        "Input",
        "Clock",
        "UserCheck"
      ]
    },
    {
      "path": "src/components/environment-variables/VariablesList.tsx",
      "name": "VariablesList",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "VariablesList"
      ],
      "usedComponents": [
        "Set",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Filter",
        "Lock",
        "Button",
        "EyeOff",
        "Eye",
        "Calendar",
        "Copy",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Edit",
        "Trash2"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/EnvironmentHealthCard.test.tsx",
      "name": "EnvironmentHealthCard.test",
      "imports": [
        "../EnvironmentHealthCard"
      ],
      "exports": [],
      "usedComponents": [
        "EnvironmentHealthCard"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/EnvironmentVariablesManagement.test.tsx",
      "name": "EnvironmentVariablesManagement.test",
      "imports": [
        "../EnvironmentVariablesManagement"
      ],
      "exports": [],
      "usedComponents": [
        "EnvironmentVariablesManagement",
        "ComponentWithSpy"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/VariableConfigurationForm.test.tsx",
      "name": "VariableConfigurationForm.test",
      "imports": [
        "../VariableConfigurationForm"
      ],
      "exports": [],
      "usedComponents": [
        "VariableConfigurationForm"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/VariablesList.test.tsx",
      "name": "VariablesList.test",
      "imports": [
        "../VariablesList"
      ],
      "exports": [],
      "usedComponents": [
        "VariablesList"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/accessibility.test.tsx",
      "name": "accessibility.test",
      "imports": [
        "../EnvironmentVariablesManagement",
        "../VariableConfigurationForm",
        "../VariablesList"
      ],
      "exports": [],
      "usedComponents": [
        "EnvironmentVariablesManagement",
        "VariableConfigurationForm",
        "VariablesList"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/integration/deployment-sync-integration.test.tsx",
      "name": "deployment-sync-integration.test",
      "imports": [
        "../DeploymentSyncDashboard"
      ],
      "exports": [],
      "usedComponents": [
        "TestWrapper",
        "DeploymentSyncDashboard"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/integration/mobile-integration.test.tsx",
      "name": "mobile-integration.test",
      "imports": [
        "../mobile/MobileEnvironmentVariablesManager",
        "../mobile/MobileVariableForm"
      ],
      "exports": [],
      "usedComponents": [
        "MobileTestWrapper",
        "MobileEnvironmentVariablesManager",
        "MobileVariableForm"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/integration/realtime-integration.test.tsx",
      "name": "realtime-integration.test",
      "imports": [
        "../EnvironmentVariablesManagement",
        "../DeploymentSyncDashboard"
      ],
      "exports": [],
      "usedComponents": [
        "TestWrapper",
        "EnvironmentVariablesManagement",
        "DeploymentSyncDashboard"
      ]
    },
    {
      "path": "src/components/environment-variables/__tests__/integration/setup.ts",
      "name": "setup",
      "imports": [],
      "exports": [
        "waitForTimeout",
        "mockSupabaseResponse",
        "createMockUser",
        "createMockEnvironmentVariable",
        "createMockDeploymentJob",
        "measureRenderTime",
        "setMobileViewport",
        "setDesktopViewport",
        "createTouchEvent",
        "createMockRealtimeChannel",
        "simulateRealtimeEvent",
        "mockWeddingDay"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/environment-variables/__tests__/performance.test.tsx",
      "name": "performance.test",
      "imports": [
        "../EnvironmentVariablesManagementOptimized",
        "../utils/performance"
      ],
      "exports": [],
      "usedComponents": [
        "EnvironmentVariablesManagementOptimized",
        "OriginalComponent",
        "WrappedComponent"
      ]
    },
    {
      "path": "src/components/environment-variables/mobile/MobileEnvironmentVariablesManager.tsx",
      "name": "MobileEnvironmentVariablesManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./MobileVariableCard",
        "./MobileVariableForm",
        "./MobileHealthOverview"
      ],
      "exports": [
        "MobileEnvironmentVariablesManager"
      ],
      "usedComponents": [
        "EnvironmentVariable",
        "MobileView",
        "NodeJS",
        "Button",
        "ChevronLeft",
        "Badge",
        "X",
        "Menu",
        "Activity",
        "Database",
        "Shield",
        "Settings",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Plus",
        "MobileVariableCard",
        "Search",
        "Filter",
        "MobileHealthOverview",
        "MobileVariableForm"
      ]
    },
    {
      "path": "src/components/environment-variables/mobile/MobileHealthOverview.tsx",
      "name": "MobileHealthOverview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "MobileHealthOverview"
      ],
      "usedComponents": [
        "CheckCircle",
        "AlertTriangle",
        "XCircle",
        "Activity",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Shield",
        "Progress",
        "Database",
        "Lock",
        "TrendingDown",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/environment-variables/mobile/MobileVariableCard.tsx",
      "name": "MobileVariableCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "MobileVariableCard"
      ],
      "usedComponents": [
        "Badge",
        "Card",
        "CardContent",
        "Lock",
        "Button",
        "Copy",
        "MoreVertical",
        "EyeOff",
        "Eye",
        "ChevronUp",
        "ChevronDown",
        "Edit",
        "Trash2"
      ]
    },
    {
      "path": "src/components/environment-variables/mobile/MobileVariableForm.tsx",
      "name": "MobileVariableForm",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge"
      ],
      "exports": [
        "MobileVariableForm"
      ],
      "usedComponents": [
        "NodeJS",
        "FormData",
        "Card",
        "CardContent",
        "Save",
        "CardHeader",
        "CardTitle",
        "Input",
        "Badge",
        "AlertTriangle",
        "Textarea",
        "Button",
        "EyeOff",
        "Eye",
        "Lock"
      ]
    },
    {
      "path": "src/components/environment-variables/utils/accessibility.ts",
      "name": "accessibility",
      "imports": [],
      "exports": [
        "KEYBOARD_KEYS",
        "ARIA_ROLES",
        "ScreenReaderAnnouncer",
        "FocusManager",
        "ColorContrastChecker",
        "handleArrowNavigation",
        "generateAriaAttributes",
        "createSkipLink",
        "prefersReducedMotion",
        "prefersHighContrast",
        "getPreferredFontSize",
        "checkTouchTargetSize",
        "announceFormError",
        "clearFormError",
        "makeTableAccessible"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/environment-variables/utils/performance.ts",
      "name": "performance",
      "imports": [],
      "exports": [
        "useVirtualScrolling",
        "useDebouncedSearch",
        "useIntersectionObserver",
        "DataProcessor",
        "PerformanceMonitor",
        "APICache",
        "optimizeImageLoading",
        "getBundleInfo",
        "useOptimizedState",
        "useStableCallback",
        "MemoryLeakPrevention",
        "createWebWorker"
      ],
      "usedComponents": [
        "T",
        "HTMLDivElement",
        "Element",
        "IntersectionObserverEntry",
        "R",
        "NodeJS",
        "ServiceWorkerRegistration"
      ]
    },
    {
      "path": "src/components/error/ErrorRecoveryActions.tsx",
      "name": "ErrorRecoveryActions",
      "imports": [],
      "exports": [
        "ErrorRecoveryActions"
      ],
      "usedComponents": [
        "ErrorRecoveryActionsProps",
        "Date",
        "AlertTriangle",
        "Clock",
        "CheckCircle",
        "RefreshCw",
        "Phone",
        "Wifi",
        "FileText",
        "Camera",
        "CreditCard",
        "Calendar",
        "MessageCircle"
      ]
    },
    {
      "path": "src/components/error/UserFriendlyError.tsx",
      "name": "UserFriendlyError",
      "imports": [],
      "exports": [
        "UserFriendlyError",
        "weddingErrors"
      ],
      "usedComponents": [
        "Info",
        "AlertTriangle",
        "AlertCircle",
        "XCircle",
        "UserFriendlyErrorProps",
        "ChevronUp",
        "ChevronDown"
      ]
    },
    {
      "path": "src/components/error/__tests__/UserFriendlyError.test.tsx",
      "name": "UserFriendlyError.test",
      "imports": [
        "../UserFriendlyError"
      ],
      "exports": [],
      "usedComponents": [
        "WedSyncError",
        "WeddingWorkflowContext",
        "UserFriendlyError"
      ]
    },
    {
      "path": "src/components/error/monitoring/ErrorAnalyticsDashboard.tsx",
      "name": "ErrorAnalyticsDashboard",
      "imports": [],
      "exports": [
        "ErrorAnalyticsDashboard"
      ],
      "usedComponents": [
        "ErrorMetric",
        "ErrorPattern",
        "WeddingDayAlert",
        "CheckCircle",
        "AlertTriangle",
        "AlertCircle",
        "XCircle",
        "TrendingUp",
        "Zap",
        "Clock",
        "Activity",
        "Users"
      ]
    },
    {
      "path": "src/components/error-boundary/ErrorBoundary.tsx",
      "name": "ErrorBoundary",
      "imports": [],
      "exports": [
        "ErrorBoundary",
        "SupplierDashboardErrorBoundary",
        "CoupleFormsErrorBoundary",
        "AdminPanelErrorBoundary",
        "withErrorBoundary"
      ],
      "usedComponents": [
        "ErrorInfo",
        "ErrorBoundaryState",
        "FallbackComponent",
        "React",
        "ErrorFallbackInterface",
        "ErrorBoundary",
        "P",
        "ErrorBoundaryProps",
        "Component"
      ]
    },
    {
      "path": "src/components/error-boundary/ErrorFallbackInterface.tsx",
      "name": "ErrorFallbackInterface",
      "imports": [],
      "exports": [
        "ErrorFallbackInterface"
      ],
      "usedComponents": [
        "ErrorFallbackInterfaceProps",
        "AlertTriangle",
        "RefreshCw",
        "MessageCircle",
        "Home",
        "ChevronUp",
        "ChevronDown"
      ]
    },
    {
      "path": "src/components/error-boundary/WeddingErrorBoundary.tsx",
      "name": "WeddingErrorBoundary",
      "imports": [
        "./ErrorBoundary"
      ],
      "exports": [
        "WeddingErrorBoundary",
        "PhotographerErrorBoundary",
        "VenueErrorBoundary",
        "FloristErrorBoundary",
        "CateringErrorBoundary"
      ],
      "usedComponents": [
        "WeddingErrorBoundaryProps",
        "ErrorBoundary",
        "WeddingErrorBoundary"
      ]
    },
    {
      "path": "src/components/error-boundary/__tests__/ErrorBoundary.test.tsx",
      "name": "ErrorBoundary.test",
      "imports": [
        "../ErrorBoundary"
      ],
      "exports": [],
      "usedComponents": [
        "ErrorBoundary",
        "TestChild",
        "ThrowError",
        "TestComponent",
        "SupplierDashboardErrorBoundary",
        "CoupleFormsErrorBoundary",
        "AdminPanelErrorBoundary",
        "MultipleErrors"
      ]
    },
    {
      "path": "src/components/error-boundary.tsx",
      "name": "error-boundary",
      "imports": [
        "@/lib/monitoring/structured-logger",
        "@/lib/monitoring/metrics",
        "@/lib/stability/error-handler"
      ],
      "exports": [
        "ErrorBoundary",
        "withErrorBoundary",
        "useErrorHandler",
        "PageErrorBoundary",
        "ComponentErrorBoundary",
        "CriticalErrorBoundary"
      ],
      "usedComponents": [
        "ErrorBoundaryState",
        "ErrorDisplay",
        "P",
        "ErrorBoundaryProps",
        "ErrorBoundary",
        "Component"
      ]
    },
    {
      "path": "src/components/executive/ExecutiveDashboard.tsx",
      "name": "ExecutiveDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "./RevenueMetrics",
        "./GrowthAnalytics",
        "./SupplierMetrics",
        "./MarketInsights",
        "./KPIDashboard",
        "./useExecutiveData"
      ],
      "exports": [
        "default",
        "ExecutiveDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "CardContent",
        "Button",
        "RefreshCw",
        "Activity",
        "DollarSign",
        "TrendingUp",
        "TrendingDown",
        "Users",
        "Calendar",
        "Badge",
        "CheckCircle",
        "Target",
        "CardDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "BarChart3",
        "PieChart",
        "TabsContent",
        "RevenueMetrics",
        "GrowthAnalytics",
        "SupplierMetrics",
        "MarketInsights",
        "KPIDashboard"
      ]
    },
    {
      "path": "src/components/executive/GrowthAnalytics.tsx",
      "name": "GrowthAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "GrowthAnalytics"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "CardContent",
        "TrendingDown",
        "UserPlus",
        "Heart",
        "Progress",
        "Target",
        "Badge",
        "CardDescription",
        "ResponsiveContainer",
        "ComposedChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "Area",
        "Line",
        "Calendar",
        "Award",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/executive/KPIDashboard.tsx",
      "name": "KPIDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "KPIDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "IconComponent",
        "CardContent",
        "TrendingUp",
        "TrendingDown",
        "Badge",
        "Progress",
        "Activity",
        "CardDescription",
        "ResponsiveContainer",
        "RadialBarChart",
        "RadialBar",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Line",
        "AlertTriangle",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/executive/MarketInsights.tsx",
      "name": "MarketInsights",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "MarketInsights"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Globe",
        "CardContent",
        "TrendingUp",
        "Badge",
        "DollarSign",
        "Award",
        "CardDescription",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "Target",
        "MapPin",
        "Zap",
        "ComposedChart",
        "Bar",
        "Line"
      ]
    },
    {
      "path": "src/components/executive/RevenueMetrics.tsx",
      "name": "RevenueMetrics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "RevenueMetrics"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "TrendingUp",
        "TrendingDown",
        "Calculator",
        "Target",
        "Badge",
        "CreditCard",
        "CardDescription",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "Repeat"
      ]
    },
    {
      "path": "src/components/executive/SupplierMetrics.tsx",
      "name": "SupplierMetrics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "SupplierMetrics"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "TrendingUp",
        "Star",
        "TrendingDown",
        "Award",
        "Progress",
        "Badge",
        "CardDescription",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "RadarChart",
        "PolarGrid",
        "PolarAngleAxis",
        "PolarRadiusAxis",
        "Radar",
        "PieChart",
        "Pie",
        "Cell",
        "IconComponent",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/executive/useExecutiveData.ts",
      "name": "useExecutiveData",
      "imports": [
        "@/lib/analytics/executiveMetrics"
      ],
      "exports": [
        "default",
        "useExecutiveData"
      ],
      "usedComponents": [
        "Date",
        "NodeJS"
      ]
    },
    {
      "path": "src/components/faq/FAQAnalytics.tsx",
      "name": "FAQAnalytics",
      "imports": [
        "@/lib/services/faqService"
      ],
      "exports": [
        "FAQAnalytics"
      ],
      "usedComponents": [
        "FaqTopSearchTerms",
        "FaqPerformanceMetrics",
        "AlertCircle",
        "MetricCard",
        "Search",
        "TrendIcon",
        "BarChart3",
        "Eye",
        "Heart",
        "HelpCircle",
        "TrendingUp",
        "ArrowUpRight",
        "ArrowDownRight",
        "Icon",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/faq/FAQCategoryManager.tsx",
      "name": "FAQCategoryManager",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FAQCategory",
        "PlusIcon",
        "EyeSlashIcon",
        "EyeIcon",
        "AnimatePresence",
        "CreateCategoryForm",
        "TagIcon",
        "DndContext",
        "SortableContext",
        "SortableCategoryItem",
        "SparklesIcon",
        "AutoCategorizationRules",
        "Bars3Icon",
        "PencilIcon",
        "TrashIcon"
      ]
    },
    {
      "path": "src/components/faq/FAQDisplay.tsx",
      "name": "FAQDisplay",
      "imports": [
        "@/lib/services/faqService",
        "@/types/faq"
      ],
      "exports": [
        "FAQDisplay"
      ],
      "usedComponents": [
        "FaqSearchResult",
        "Set",
        "Search",
        "X",
        "Filter",
        "Icon",
        "Loader2",
        "Star",
        "FAQItem",
        "MessageCircle",
        "Clock",
        "ThumbsUp",
        "ChevronUp",
        "ChevronDown",
        "ThumbsDown"
      ]
    },
    {
      "path": "src/components/faq/FAQEditor.tsx",
      "name": "FAQEditor",
      "imports": [
        "@/lib/services/faqService",
        "@/types/faq"
      ],
      "exports": [
        "FAQEditor"
      ],
      "usedComponents": [
        "Record",
        "Icon",
        "FileText",
        "Eye",
        "X",
        "FAQPreview",
        "Plus",
        "Star",
        "Save",
        "EyeOff"
      ]
    },
    {
      "path": "src/components/faq/FAQExtractionDashboard.tsx",
      "name": "FAQExtractionDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/dialog",
        "@/lib/utils",
        "@/lib/services/faq-extraction-service",
        "./FAQExtractionReview"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DashboardMetrics",
        "ExtractionSession",
        "File",
        "Card",
        "CardContent",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Upload",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DocumentUploadForm",
        "Settings",
        "FileText",
        "TrendingUp",
        "Clock",
        "AlertTriangle",
        "Target",
        "Progress",
        "Activity",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "PieChart",
        "Badge",
        "BarChart3",
        "FAQExtractionReview",
        "Input",
        "Label",
        "UploadCloud"
      ]
    },
    {
      "path": "src/components/faq/FAQExtractionReview.tsx",
      "name": "FAQExtractionReview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/progress",
        "@/lib/utils",
        "@/lib/services/faq-extraction-service",
        "@/lib/services/faq-categorization-service",
        "@/types/faq"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ReviewableExtraction",
        "Set",
        "ReviewFilters",
        "ReviewStats",
        "ExtractedFAQ",
        "Badge",
        "CheckCircle",
        "XCircle",
        "Edit3",
        "Clock",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Button",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "FileText",
        "Star",
        "Eye",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "ScrollArea",
        "FAQEditForm",
        "Textarea"
      ]
    },
    {
      "path": "src/components/faq/FAQExtractionWizard.tsx",
      "name": "FAQExtractionWizard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ExtractionState",
        "CheckCircleIcon",
        "AnimatePresence",
        "URLEntryStep",
        "PageDiscoveryStep",
        "ProcessingStep",
        "ReviewFAQsStep",
        "CategorizeStep",
        "CompleteStep",
        "ChevronLeftIcon",
        "GlobeAltIcon",
        "ExclamationTriangleIcon",
        "ChevronRightIcon",
        "InformationCircleIcon",
        "DocumentTextIcon",
        "CpuChipIcon",
        "EyeIcon",
        "XMarkIcon",
        "TagIcon"
      ]
    },
    {
      "path": "src/components/faq/FAQManager.tsx",
      "name": "FAQManager",
      "imports": [
        "@/lib/services/faqService",
        "@/types/faq"
      ],
      "exports": [
        "FAQManager"
      ],
      "usedComponents": [
        "FaqItem",
        "FaqCategory",
        "FaqSortBy",
        "FaqFilterBy",
        "Set",
        "Search",
        "Filter",
        "X",
        "Plus",
        "BookOpen",
        "FAQListItem",
        "Eye",
        "Check",
        "Star",
        "StarOff",
        "EyeOff",
        "Edit3",
        "MoreHorizontal"
      ]
    },
    {
      "path": "src/components/faq/FAQReviewQueue.tsx",
      "name": "FAQReviewQueue",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ExtractedFAQ",
        "Set",
        "FilterType",
        "SortType",
        "AdjustmentsHorizontalIcon",
        "MagnifyingGlassIcon",
        "AnimatePresence",
        "CheckCircleIcon",
        "XCircleIcon",
        "TrashIcon",
        "ClockIcon",
        "FAQReviewCard",
        "EyeIcon",
        "PencilIcon",
        "ArrowTopRightOnSquareIcon",
        "XMarkIcon",
        "CheckIcon"
      ]
    },
    {
      "path": "src/components/feedback/FeedbackForm.tsx",
      "name": "FeedbackForm",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/radio-group",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "FeedbackForm"
      ],
      "usedComponents": [
        "FeedbackFormData",
        "Card",
        "CardHeader",
        "CardTitle",
        "TypeIcon",
        "Badge",
        "AlertTriangle",
        "CardContent",
        "Label",
        "Controller",
        "RadioGroup",
        "RadioGroupItem",
        "Icon",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Textarea",
        "Checkbox",
        "Calendar",
        "Button"
      ]
    },
    {
      "path": "src/components/feedback/FeedbackList.tsx",
      "name": "FeedbackList",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/dropdown-menu",
        "@/components/ui/table",
        "@/components/ui/skeleton"
      ],
      "exports": [
        "FeedbackList"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "MessageSquare",
        "Badge",
        "Label",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "Button",
        "ArrowUpDown",
        "TableBody",
        "TableCell",
        "Skeleton",
        "AlertTriangle",
        "StatusIcon",
        "Calendar",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreHorizontal",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Eye",
        "CheckCircle",
        "Clock",
        "Trash2"
      ]
    },
    {
      "path": "src/components/feedback/FeedbackModal.tsx",
      "name": "FeedbackModal",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/dialog",
        "./FeedbackForm",
        "@/hooks/useFeedbackCategories"
      ],
      "exports": [
        "FeedbackModal",
        "FeedbackWidget",
        "QuickFeedback"
      ],
      "usedComponents": [
        "Button",
        "MessageSquare",
        "Dialog",
        "DialogTrigger",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "X",
        "FeedbackForm",
        "FeedbackModal"
      ]
    },
    {
      "path": "src/components/file-management/AdvancedFileUpload.tsx",
      "name": "AdvancedFileUpload",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/types/file-management",
        "@/lib/utils",
        "@/lib/storage",
        "@/lib/ai-analysis"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "UploadingFile",
        "HTMLInputElement",
        "AIAnalysisResult",
        "Check",
        "X",
        "Sparkles",
        "Upload",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Zap",
        "Eye",
        "Users",
        "TabsContent",
        "Badge",
        "Button",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "CategoryIcon",
        "Progress",
        "Tag"
      ]
    },
    {
      "path": "src/components/file-management/FileAnalyticsDashboard.tsx",
      "name": "FileAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/button",
        "@/types/file-management",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingFileCategory",
        "FileAnalytics",
        "Card",
        "CardContent",
        "Files",
        "TrendingUp",
        "HardDrive",
        "Progress",
        "Star",
        "Users",
        "Badge",
        "Sparkles",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Image",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "Icon",
        "LineChart",
        "Legend",
        "Line",
        "Calendar",
        "Camera",
        "Eye",
        "Share",
        "Download",
        "Button"
      ]
    },
    {
      "path": "src/components/file-management/FileSecurityPanel.tsx",
      "name": "FileSecurityPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/label",
        "@/types/file-management",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FileSecuritySettings",
        "SecurityViolation",
        "AuditAction",
        "CheckCircle",
        "XCircle",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Shield",
        "Badge",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Lock",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "UserCheck",
        "Users",
        "Globe",
        "Switch",
        "Share2",
        "Textarea",
        "Button",
        "Key",
        "FileText",
        "Database",
        "History",
        "Clock",
        "Eye",
        "Download",
        "Zap"
      ]
    },
    {
      "path": "src/components/file-management/__tests__/AdvancedFileUpload.test.tsx",
      "name": "AdvancedFileUpload.test",
      "imports": [
        "../AdvancedFileUpload",
        "@/types/file-management"
      ],
      "exports": [],
      "usedComponents": [
        "AdvancedFileUpload"
      ]
    },
    {
      "path": "src/components/file-management/__tests__/FileManagementDashboard.test.tsx",
      "name": "FileManagementDashboard.test",
      "imports": [
        "../FileManagementDashboard",
        "@/types/file-management"
      ],
      "exports": [],
      "usedComponents": [
        "FileManagementDashboard"
      ]
    },
    {
      "path": "src/components/file-management/__tests__/FileSecurityPanel.test.tsx",
      "name": "FileSecurityPanel.test",
      "imports": [
        "../FileSecurityPanel",
        "@/types/file-management"
      ],
      "exports": [],
      "usedComponents": [
        "FileSecurityPanel"
      ]
    },
    {
      "path": "src/components/file-management/__tests__/setup.ts",
      "name": "setup",
      "imports": [],
      "exports": [],
      "usedComponents": [
        "FileReader"
      ]
    },
    {
      "path": "src/components/florist/ArrangementPlanner.tsx",
      "name": "ArrangementPlanner",
      "imports": [
        "@/components/ui/Button",
        "@/components/ui/Card",
        "@/components/ui/Badge",
        "@/components/ui/Select",
        "@/components/ui/Slider",
        "@/lib/utils"
      ],
      "exports": [
        "ArrangementPlanner"
      ],
      "usedComponents": [
        "TrashIcon",
        "Badge",
        "FlowerItem",
        "SparklesIcon",
        "Button",
        "EyeIcon",
        "BookmarkIcon",
        "Select",
        "Card",
        "PlusIcon",
        "DndContext",
        "SortableContext",
        "SortableFlowerItem",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/florist/ColorPaletteGenerator.tsx",
      "name": "ColorPaletteGenerator",
      "imports": [
        "@/components/ui/Button",
        "@/components/ui/Card",
        "@/components/ui/Badge",
        "@/components/ui/ColorPicker",
        "@/components/ui/Select",
        "@/hooks/useColorPalette",
        "@/lib/utils"
      ],
      "exports": [
        "ColorPaletteGenerator"
      ],
      "usedComponents": [
        "SwatchIcon",
        "Button",
        "ArrowPathIcon",
        "ColorPicker",
        "Select",
        "SparklesIcon",
        "Card",
        "Badge",
        "EyeIcon"
      ]
    },
    {
      "path": "src/components/florist/FloristIntelligence.tsx",
      "name": "FloristIntelligence",
      "imports": [
        "./FlowerSearch",
        "./ColorPaletteGenerator",
        "./ArrangementPlanner",
        "./SustainabilityAnalyzer",
        "@/lib/utils"
      ],
      "exports": [
        "FloristIntelligence"
      ],
      "usedComponents": [
        "Tab",
        "FlowerSearch",
        "ColorPaletteGenerator",
        "ArrangementPlanner",
        "SustainabilityAnalyzer"
      ]
    },
    {
      "path": "src/components/florist/FlowerSearch.tsx",
      "name": "FlowerSearch",
      "imports": [
        "@/components/ui/Slider",
        "@/components/ui/ColorPicker",
        "@/components/ui/Badge",
        "@/components/ui/Button",
        "@/components/ui/Card",
        "@/components/ui/Select",
        "@/hooks/useFloristSearch",
        "@/lib/utils"
      ],
      "exports": [
        "FlowerSearch"
      ],
      "usedComponents": [
        "Button",
        "AdjustmentsHorizontalIcon",
        "ColorPicker",
        "Badge",
        "XMarkIcon",
        "Select",
        "Slider",
        "MagnifyingGlassIcon",
        "Card"
      ]
    },
    {
      "path": "src/components/florist/SustainabilityAnalyzer.tsx",
      "name": "SustainabilityAnalyzer",
      "imports": [
        "@/components/ui/Button",
        "@/components/ui/Card",
        "@/components/ui/Badge",
        "@/components/ui/Progress",
        "@/lib/utils"
      ],
      "exports": [
        "SustainabilityAnalyzer"
      ],
      "usedComponents": [
        "Card",
        "Icon",
        "Progress",
        "SustainabilityMetrics",
        "LeafIcon",
        "Button",
        "ChartBarIcon",
        "MetricCard",
        "Badge",
        "CheckCircleIcon",
        "TruckIcon",
        "InformationCircleIcon",
        "ExclamationTriangleIcon"
      ]
    },
    {
      "path": "src/components/form-builder/__tests__/FieldPalette.test.tsx",
      "name": "FieldPalette.test",
      "imports": [
        "../palette/FieldPalette",
        "@/types/form-builder"
      ],
      "exports": [],
      "usedComponents": [
        "FieldPalette"
      ]
    },
    {
      "path": "src/components/form-builder/__tests__/FormBuilder.integration.test.tsx",
      "name": "FormBuilder.integration.test",
      "imports": [
        "../canvas/FormBuilderCanvas",
        "../palette/FieldPalette",
        "../preview/FormPreview",
        "@/types/form-builder"
      ],
      "exports": [],
      "usedComponents": [
        "WeddingFormField",
        "DndContext",
        "FieldPalette",
        "FormBuilderCanvas",
        "FormPreview",
        "DragOverlay",
        "MockFormBuilder",
        "TestComponent"
      ]
    },
    {
      "path": "src/components/form-builder/__tests__/FormBuilderCanvas.test.tsx",
      "name": "FormBuilderCanvas.test",
      "imports": [
        "../canvas/FormBuilderCanvas",
        "@/types/form-builder"
      ],
      "exports": [],
      "usedComponents": [
        "FormBuilderCanvas"
      ]
    },
    {
      "path": "src/components/form-builder/__tests__/FormPreview.test.tsx",
      "name": "FormPreview.test",
      "imports": [
        "../preview/FormPreview",
        "@/types/form-builder"
      ],
      "exports": [],
      "usedComponents": [
        "FormPreview"
      ]
    },
    {
      "path": "src/components/form-builder/__tests__/WeddingDateField.test.tsx",
      "name": "WeddingDateField.test",
      "imports": [
        "../fields/WeddingDateField",
        "@/types/form-builder"
      ],
      "exports": [],
      "usedComponents": [
        "WeddingDateField"
      ]
    },
    {
      "path": "src/components/form-builder/__tests__/setup.ts",
      "name": "setup",
      "imports": [],
      "exports": [
        "createMockFormField",
        "createMockTierLimitations",
        "setupWeddingContext"
      ],
      "usedComponents": [
        "RenderOptions"
      ]
    },
    {
      "path": "src/components/form-builder/canvas/CanvasToolbar.tsx",
      "name": "CanvasToolbar",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "default",
        "CanvasToolbar"
      ],
      "usedComponents": [
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Button",
        "Undo2",
        "TooltipContent",
        "Redo2",
        "Separator",
        "Save",
        "Zap",
        "Badge",
        "Info",
        "Smartphone",
        "Tablet",
        "Monitor",
        "Eye",
        "Settings"
      ]
    },
    {
      "path": "src/components/form-builder/canvas/DraggableFieldOverlay.tsx",
      "name": "DraggableFieldOverlay",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "DraggableFieldOverlay"
      ],
      "usedComponents": [
        "GripVertical",
        "Badge",
        "Crown"
      ]
    },
    {
      "path": "src/components/form-builder/canvas/EmptyCanvasState.tsx",
      "name": "EmptyCanvasState",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "EmptyCanvasState"
      ],
      "usedComponents": [
        "Sparkles",
        "Heart",
        "Card",
        "ArrowRight",
        "Button",
        "Plus"
      ]
    },
    {
      "path": "src/components/form-builder/canvas/FormBuilderCanvas.tsx",
      "name": "FormBuilderCanvas",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/lib/utils",
        "./SortableFormField",
        "./DraggableFieldOverlay",
        "./EmptyCanvasState",
        "./CanvasToolbar"
      ],
      "exports": [
        "default",
        "FormBuilderCanvas"
      ],
      "usedComponents": [
        "FormBuilderCanvasState",
        "FormBuilderDragData",
        "CanvasToolbar",
        "DndContext",
        "EmptyCanvasState",
        "SortableContext",
        "SortableFormField",
        "DragOverlay",
        "DraggableFieldOverlay"
      ]
    },
    {
      "path": "src/components/form-builder/canvas/FormFieldPreview.tsx",
      "name": "FormFieldPreview",
      "imports": [
        "@/types/form-builder",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "FormFieldPreview"
      ],
      "usedComponents": [
        "Calendar",
        "MapPin",
        "Users",
        "DollarSign",
        "Utensils",
        "Camera",
        "FileText",
        "Signature"
      ]
    },
    {
      "path": "src/components/form-builder/canvas/SortableFormField.tsx",
      "name": "SortableFormField",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/button",
        "@/components/ui/badge",
        "./FormFieldPreview"
      ],
      "exports": [
        "default",
        "SortableFormField"
      ],
      "usedComponents": [
        "GripVertical",
        "Badge",
        "Crown",
        "FormFieldPreview",
        "Button",
        "Settings",
        "Copy",
        "Trash2"
      ]
    },
    {
      "path": "src/components/form-builder/config/FieldConfigPanel.tsx",
      "name": "FieldConfigPanel",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/separator",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/form",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default",
        "FieldConfigPanel"
      ],
      "usedComponents": [
        "FieldConfigForm",
        "Settings",
        "Button",
        "X",
        "Heart",
        "Camera",
        "Form",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Crown",
        "TabsContent",
        "FormField",
        "FormItem",
        "FormLabel",
        "FormControl",
        "Input",
        "FormDescription",
        "FormMessage",
        "Textarea",
        "Switch",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Label",
        "Plus",
        "Minus",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Info",
        "CardDescription",
        "MapPin",
        "Users",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/form-builder/fields/BudgetRangeField.tsx",
      "name": "BudgetRangeField",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "BudgetRangeField"
      ],
      "usedComponents": [
        "DollarSign",
        "Label",
        "Heart",
        "Card",
        "Button",
        "Progress",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Calculator",
        "Badge",
        "AlertTriangle",
        "Target"
      ]
    },
    {
      "path": "src/components/form-builder/fields/GuestCountField.tsx",
      "name": "GuestCountField",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default",
        "GuestCountField"
      ],
      "usedComponents": [
        "Users",
        "Label",
        "Heart",
        "Card",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Slider",
        "Input",
        "Baby",
        "Badge",
        "Calculator",
        "TrendingUp",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/form-builder/fields/VenueField.tsx",
      "name": "VenueField",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default",
        "VenueField"
      ],
      "usedComponents": [
        "MapPin",
        "Label",
        "Building",
        "Card",
        "Switch",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Users",
        "Car",
        "Camera",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/form-builder/fields/WeddingDateField.tsx",
      "name": "WeddingDateField",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/popover",
        "@/components/ui/calendar",
        "@/components/ui/select"
      ],
      "exports": [
        "default",
        "WeddingDateField"
      ],
      "usedComponents": [
        "Calendar",
        "Label",
        "Heart",
        "Card",
        "Popover",
        "PopoverTrigger",
        "Button",
        "CalendarDays",
        "PopoverContent",
        "CalendarComponent",
        "Badge",
        "Clock",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/form-builder/palette/FieldPalette.tsx",
      "name": "FieldPalette",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/collapsible",
        "@/components/ui/tooltip"
      ],
      "exports": [
        "default",
        "FieldPalette"
      ],
      "usedComponents": [
        "WeddingFieldCategory",
        "TooltipProvider",
        "Sparkles",
        "Search",
        "Input",
        "Collapsible",
        "CollapsibleTrigger",
        "Button",
        "ChevronDown",
        "ChevronRight",
        "CollapsibleContent",
        "DraggableFieldItem",
        "Badge",
        "Crown",
        "Tooltip",
        "TooltipTrigger",
        "TooltipContent",
        "WeddingFieldType"
      ]
    },
    {
      "path": "src/components/form-builder/preview/FormPreview.tsx",
      "name": "FormPreview",
      "imports": [
        "@/lib/utils",
        "@/types/form-builder",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/tooltip",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default",
        "FormPreview"
      ],
      "usedComponents": [
        "ViewportSize",
        "PreviewMode",
        "Record",
        "Button",
        "Eye",
        "TooltipProvider",
        "Heart",
        "Badge",
        "EyeOff",
        "Tooltip",
        "TooltipTrigger",
        "Monitor",
        "Tablet",
        "Smartphone",
        "TooltipContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "ScrollArea",
        "PreviewFormField",
        "RotateCcw",
        "Check",
        "AlertCircle",
        "Calendar",
        "MapPin",
        "Users",
        "Camera",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/forms/AutoPopulateIndicator.tsx",
      "name": "AutoPopulateIndicator",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "AutoPopulateIndicator"
      ],
      "usedComponents": [
        "SparklesIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/forms/AutoPopulationProvider.tsx",
      "name": "AutoPopulationProvider",
      "imports": [
        "@/types/auto-population"
      ],
      "exports": [
        "useAutoPopulationContext",
        "AutoPopulationProvider"
      ],
      "usedComponents": [
        "PopulationContext",
        "PopulationSession",
        "PerformanceMetrics",
        "AbortController",
        "NodeJS",
        "PopulationEvent",
        "FieldPopulationData",
        "AutoPopulationContext"
      ]
    },
    {
      "path": "src/components/forms/AutoSaveFormWrapper.tsx",
      "name": "AutoSaveFormWrapper",
      "imports": [],
      "exports": [
        "AutoSaveFormWrapper"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/forms/ClientFormSubmission.tsx",
      "name": "ClientFormSubmission",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/skeleton",
        "@/hooks/useFormAnalytics",
        "@/hooks/useFormAutoSave",
        "@/components/forms/AutoSaveFormWrapper",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Record",
        "Card",
        "CardHeader",
        "CheckCircle",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Button",
        "Save",
        "AutoSaveFormWrapper",
        "Progress",
        "Badge",
        "FormField",
        "ArrowLeft",
        "RefreshCw",
        "AlertCircle",
        "ArrowRight",
        "Send",
        "Shield"
      ]
    },
    {
      "path": "src/components/forms/CollaborativeFormBuilder.tsx",
      "name": "CollaborativeFormBuilder",
      "imports": [
        "@/types/forms",
        "./FieldPalette",
        "./FormCanvas",
        "./FieldEditor",
        "./FormPreview",
        "@/components/ui/button",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/hooks/useCollaboration",
        "@/lib/utils"
      ],
      "exports": [
        "CollaborativeFormBuilder"
      ],
      "usedComponents": [
        "FormSection",
        "FormField",
        "Date",
        "HTMLDivElement",
        "Card",
        "CardHeader",
        "Wifi",
        "WifiOff",
        "Users",
        "Button",
        "Undo2",
        "Redo2",
        "CardContent",
        "Avatar",
        "MousePointer2",
        "DndContext",
        "FieldPalette",
        "Eye",
        "Settings",
        "FormCanvas",
        "FormPreview",
        "CardTitle",
        "FieldEditor",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/forms/CoreFieldsPanel.tsx",
      "name": "CoreFieldsPanel",
      "imports": [
        "@/lib/utils",
        "@/lib/core-fields-manager",
        "@/types/core-fields",
        "./AutoPopulateIndicator",
        "./FieldConfidenceScore"
      ],
      "exports": [
        "CoreFieldsPanel"
      ],
      "usedComponents": [
        "CoreFieldData",
        "CoreFieldCategory",
        "SparklesIcon",
        "AnimatePresence",
        "AutoPopulateIndicator",
        "BatchConfidenceActions",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/forms/DynamicFormBuilder.tsx",
      "name": "DynamicFormBuilder",
      "imports": [
        "@/types/forms",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/switch",
        "./FieldManager",
        "./FieldEditor",
        "./FormPreview"
      ],
      "exports": [
        "DynamicFormBuilder"
      ],
      "usedComponents": [
        "Form",
        "Partial",
        "BuilderState",
        "Date",
        "FormSection",
        "FormField",
        "FieldManager",
        "DndContext",
        "SectionBuilder",
        "Button",
        "PlusIcon",
        "DragOverlay",
        "FieldEditor",
        "BeakerIcon",
        "FormPreview",
        "FormSettings",
        "ChartBarIcon",
        "Switch",
        "EyeIcon",
        "CheckCircleIcon",
        "PlayIcon",
        "XCircleIcon",
        "Card",
        "TrashIcon",
        "SortableContext",
        "FieldCard"
      ]
    },
    {
      "path": "src/components/forms/EnhancedFormBuilder.tsx",
      "name": "EnhancedFormBuilder",
      "imports": [
        "./OptimizedFormCanvas",
        "./OptimizedFieldPalette",
        "./CoreFieldsPanel",
        "../../types/forms",
        "../../hooks/useAutoSave",
        "../../lib/form-validation",
        "../../lib/crypto-utils",
        "@/types/core-fields"
      ],
      "exports": [
        "EnhancedFormBuilder"
      ],
      "usedComponents": [
        "FormBuilderState",
        "Set",
        "Map",
        "FormField",
        "SaveStatusIndicator",
        "SparklesIcon",
        "FieldPalette",
        "CoreFieldsPanel",
        "Suspense",
        "FormPreview",
        "FormCanvas",
        "AnimatePresence",
        "MobileDrawer"
      ]
    },
    {
      "path": "src/components/forms/FieldConfidenceScore.tsx",
      "name": "FieldConfidenceScore",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "FieldConfidenceScore",
        "BatchConfidenceActions"
      ],
      "usedComponents": [
        "CheckIcon",
        "ExclamationTriangleIcon",
        "XMarkIcon"
      ]
    },
    {
      "path": "src/components/forms/FieldEditor.tsx",
      "name": "FieldEditor",
      "imports": [
        "@/types/forms",
        "@/components/ui/button"
      ],
      "exports": [
        "FieldEditor"
      ],
      "usedComponents": [
        "FormField",
        "FormFieldOption",
        "XMarkIcon",
        "Button",
        "PlusIcon",
        "Switch",
        "TrashIcon"
      ]
    },
    {
      "path": "src/components/forms/FieldIntegration.tsx",
      "name": "FieldIntegration",
      "imports": [
        "@/types/forms",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/select"
      ],
      "exports": [
        "default",
        "FieldIntegration"
      ],
      "usedComponents": [
        "FieldIntegrationSource",
        "FieldMapping",
        "FormField",
        "Badge",
        "CheckCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "RefreshCw",
        "AlertTriangle",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Download"
      ]
    },
    {
      "path": "src/components/forms/FieldManagementDemo.tsx",
      "name": "FieldManagementDemo",
      "imports": [
        "@/types/forms",
        "./FieldManager",
        "./DynamicFormBuilder",
        "./FieldValidator",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge"
      ],
      "exports": [
        "FieldManagementDemo"
      ],
      "usedComponents": [
        "Partial",
        "Form",
        "BeakerIcon",
        "Badge",
        "Card",
        "CpuChipIcon",
        "ShieldCheckIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "Button",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "DynamicFormBuilder",
        "FieldManager",
        "FieldValidator"
      ]
    },
    {
      "path": "src/components/forms/FieldManager.tsx",
      "name": "FieldManager",
      "imports": [
        "@/types/forms",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/switch"
      ],
      "exports": [
        "FieldManager"
      ],
      "usedComponents": [
        "FieldManagerState",
        "Set",
        "FormField",
        "MagnifyingGlassIcon",
        "FunnelIcon",
        "Button",
        "PlusIcon",
        "FieldCard",
        "Card",
        "EyeSlashIcon",
        "EyeIcon",
        "Cog6ToothIcon",
        "ChevronUpIcon",
        "ChevronDownIcon",
        "DuplicateIcon",
        "TrashIcon",
        "Switch",
        "FieldPreview"
      ]
    },
    {
      "path": "src/components/forms/FieldPalette.tsx",
      "name": "FieldPalette",
      "imports": [
        "@/types/forms",
        "@/components/ui/heading"
      ],
      "exports": [
        "FieldPalette"
      ],
      "usedComponents": [
        "Icon",
        "DraggableField"
      ]
    },
    {
      "path": "src/components/forms/FieldValidator.tsx",
      "name": "FieldValidator",
      "imports": [
        "@/types/forms",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/switch"
      ],
      "exports": [
        "FieldValidator",
        "useFieldValidator",
        "ValidationUtils"
      ],
      "usedComponents": [
        "ValidationRuleType",
        "ValidationRule",
        "ValidationResult",
        "FieldValidationResult",
        "Card",
        "ShieldCheckIcon",
        "ClockIcon",
        "XCircleIcon",
        "ExclamationTriangleIcon",
        "CpuChipIcon",
        "FieldValidatorProps",
        "Record"
      ]
    },
    {
      "path": "src/components/forms/FormBuilder.tsx",
      "name": "FormBuilder",
      "imports": [
        "@/types/forms",
        "./FieldPalette",
        "./FormCanvas",
        "./FieldEditor",
        "./FormPreview",
        "@/components/ui/button",
        "@/components/templates/TemplateGallery",
        "@/components/templates/TemplateModal",
        "@/components/ui/dialog",
        "@/lib/toast-helper"
      ],
      "exports": [
        "FormBuilder"
      ],
      "usedComponents": [
        "FormSection",
        "FormRow",
        "FormField",
        "EyeIcon",
        "Cog6ToothIcon",
        "Button",
        "FolderIcon",
        "DocumentArrowDownIcon",
        "CloudArrowUpIcon",
        "DndContext",
        "FieldPalette",
        "FormCanvas",
        "FieldEditor",
        "FormPreview",
        "DragOverlay",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "TemplateGallery",
        "TemplateModal"
      ]
    },
    {
      "path": "src/components/forms/FormCanvas.tsx",
      "name": "FormCanvas",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "FormCanvas"
      ],
      "usedComponents": [
        "React",
        "FormSection",
        "PencilIcon",
        "DocumentDuplicateIcon",
        "TrashIcon",
        "SortableField",
        "FormRow",
        "Squares2X2Icon",
        "GridCanvas",
        "DroppableSection"
      ]
    },
    {
      "path": "src/components/forms/FormPreview.tsx",
      "name": "FormPreview",
      "imports": [
        "@/types/forms",
        "@/components/ui/button",
        "@/hooks/useCoreFields",
        "@/components/ui/ProgressIndicator"
      ],
      "exports": [
        "default",
        "FormPreview"
      ],
      "usedComponents": [
        "Record",
        "Button"
      ]
    },
    {
      "path": "src/components/forms/LazyFormBuilder.tsx",
      "name": "LazyFormBuilder",
      "imports": [
        "@/components/ui/LoadingSkeleton",
        "@/components/ui/ErrorBoundary"
      ],
      "exports": [
        "LazyFormBuilder",
        "LazyFormPreview",
        "LazyPDFImport",
        "preloadFormBuilder"
      ],
      "usedComponents": [
        "ErrorBoundary",
        "Suspense",
        "FormSkeleton",
        "FormComponent"
      ]
    },
    {
      "path": "src/components/forms/OptimizedFieldPalette.tsx",
      "name": "OptimizedFieldPalette",
      "imports": [],
      "exports": [
        "OptimizedFieldPalette"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/forms/OptimizedFormBuilder.tsx",
      "name": "OptimizedFormBuilder",
      "imports": [
        "./FormCanvas",
        "./FieldPalette",
        "../../types/forms",
        "../../hooks/useAutoSave",
        "../../lib/form-validation",
        "../../lib/crypto-utils"
      ],
      "exports": [
        "OptimizedFormBuilder"
      ],
      "usedComponents": [
        "FormBuilderState",
        "FormField",
        "SaveStatusIndicator",
        "FieldPalette",
        "Suspense",
        "FormPreview",
        "FormCanvas",
        "MobileDrawer",
        "CoreFieldsMapper"
      ]
    },
    {
      "path": "src/components/forms/OptimizedFormCanvas.tsx",
      "name": "OptimizedFormCanvas",
      "imports": [],
      "exports": [
        "OptimizedFormCanvas"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/forms/PasswordProtectedFormAccess.tsx",
      "name": "PasswordProtectedFormAccess",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "Lock",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Label",
        "Input",
        "EyeOff",
        "Eye",
        "AlertCircle",
        "Button",
        "Shield"
      ]
    },
    {
      "path": "src/components/forms/PerformanceOptimizedFormBuilder.tsx",
      "name": "PerformanceOptimizedFormBuilder",
      "imports": [
        "@/types/forms",
        "./VirtualizedFormCanvas",
        "./ProgressiveSavingProvider",
        "../performance/OptimisticUpdateProvider",
        "../performance/IntelligentCacheProvider",
        "@/hooks/usePerformanceOptimization",
        "./FieldPalette",
        "./FieldEditor",
        "./FormPreview"
      ],
      "exports": [
        "PerformanceOptimizedFormBuilder"
      ],
      "usedComponents": [
        "Icon",
        "ChartBarIcon",
        "FormField",
        "SaveStatusIndicator",
        "CloudArrowUpIcon",
        "FieldPalette",
        "VirtualizedFormCanvas",
        "FieldEditor",
        "FormPreview",
        "PerformanceMetrics",
        "IntelligentCacheProvider",
        "OptimisticUpdateProvider",
        "ProgressiveSavingProvider",
        "FormBuilderCore"
      ]
    },
    {
      "path": "src/components/forms/PopulatedFormField.tsx",
      "name": "PopulatedFormField",
      "imports": [
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/input",
        "@/components/untitled-ui/label",
        "@/components/untitled-ui/badge",
        "@/components/ui/card",
        "@/components/ui/tooltip",
        "@/components/ui/alert",
        "./AutoPopulationProvider",
        "@/types/auto-population",
        "@/lib/utils"
      ],
      "exports": [
        "PopulatedFormField"
      ],
      "usedComponents": [
        "HTMLInputElement",
        "TooltipProvider",
        "Label",
        "Tooltip",
        "TooltipTrigger",
        "Shield",
        "TooltipContent",
        "Sparkles",
        "Button",
        "EyeOff",
        "Eye",
        "Input",
        "Clock",
        "Check",
        "AlertTriangle",
        "AnimatePresence",
        "Alert",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "Info",
        "CardContent",
        "Badge",
        "ChevronUp",
        "ChevronDown",
        "X"
      ]
    },
    {
      "path": "src/components/forms/PopulationStatusBanner.tsx",
      "name": "PopulationStatusBanner",
      "imports": [
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/progress",
        "@/components/ui/card",
        "@/components/ui/separator",
        "@/components/ui/tooltip",
        "./AutoPopulationProvider",
        "@/types/auto-population",
        "@/lib/utils"
      ],
      "exports": [
        "PopulationStatusBanner"
      ],
      "usedComponents": [
        "TooltipProvider",
        "Card",
        "CardHeader",
        "CardTitle",
        "Sparkles",
        "Badge",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "Progress",
        "Clock",
        "AnimatePresence",
        "CardContent",
        "Shield",
        "Separator",
        "Check",
        "Eye",
        "RefreshCw",
        "Download",
        "X",
        "Tooltip",
        "TooltipTrigger",
        "AlertCircle",
        "TooltipContent",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/forms/ProgressiveSavingProvider.tsx",
      "name": "ProgressiveSavingProvider",
      "imports": [
        "@/hooks/usePerformanceOptimization",
        "../performance/OptimisticUpdateProvider",
        "@/types/forms"
      ],
      "exports": [
        "ProgressiveSavingProvider",
        "useProgressiveSaving",
        "useFormProgressiveSaving"
      ],
      "usedComponents": [
        "SaveChunk",
        "ProgressiveSavingContextValue",
        "NodeJS",
        "ProgressiveSavingContext"
      ]
    },
    {
      "path": "src/components/forms/RealtimeFormProvider.tsx",
      "name": "RealtimeFormProvider",
      "imports": [
        "../performance/RealtimeProvider",
        "../../hooks/usePerformanceOptimization",
        "../../types/forms"
      ],
      "exports": [
        "default",
        "useRealtimeForm",
        "RealtimeFormProvider"
      ],
      "usedComponents": [
        "FormField",
        "FormSection",
        "RealtimeFormContextValue",
        "RealtimeFormProviderProps",
        "NodeJS",
        "Map",
        "RealtimeFormEvent",
        "RealtimeFormState",
        "RealtimeFormContext"
      ]
    },
    {
      "path": "src/components/forms/VirtualizedFormCanvas.tsx",
      "name": "VirtualizedFormCanvas",
      "imports": [
        "@/types/forms",
        "../performance/VirtualizedList",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "VirtualizedFormCanvas"
      ],
      "usedComponents": [
        "FormField",
        "VirtualizedFieldItemProps",
        "EyeIcon",
        "DocumentDuplicateIcon",
        "PencilIcon",
        "TrashIcon",
        "ChevronDownIcon",
        "ChevronRightIcon",
        "VirtualizedFormCanvasProps",
        "Set",
        "VirtualizedSectionHeader",
        "VirtualizedFieldItem",
        "VirtualizedList"
      ]
    },
    {
      "path": "src/components/forms/__tests__/DynamicFormBuilder.test.tsx",
      "name": "DynamicFormBuilder.test",
      "imports": [
        "../DynamicFormBuilder",
        "@/types/forms"
      ],
      "exports": [],
      "usedComponents": [
        "Form",
        "DynamicFormBuilder"
      ]
    },
    {
      "path": "src/components/forms/__tests__/EmailTemplateEditor.test.tsx",
      "name": "EmailTemplateEditor.test",
      "imports": [
        "../EmailTemplateEditor",
        "@/types/email-template-library",
        "@/app/actions/email-templates"
      ],
      "exports": [],
      "usedComponents": [
        "EmailTemplateEditor"
      ]
    },
    {
      "path": "src/components/forms/__tests__/EmailTemplateLibrary.test.tsx",
      "name": "EmailTemplateLibrary.test",
      "imports": [
        "../EmailTemplateLibrary",
        "@/app/actions/email-templates"
      ],
      "exports": [],
      "usedComponents": [
        "EmailTemplateLibrary"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldAccessibilityTester.tsx",
      "name": "FieldAccessibilityTester",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "default",
        "FieldAccessibilityTester"
      ],
      "usedComponents": [
        "AccessibilityTestResult"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldDataIntegrityTester.tsx",
      "name": "FieldDataIntegrityTester",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "default",
        "FieldDataIntegrityTester"
      ],
      "usedComponents": [
        "DataIntegrityTestResult"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldIntegration.test.tsx",
      "name": "FieldIntegration.test",
      "imports": [
        "../FieldIntegration",
        "@/lib/services/field-integration-service"
      ],
      "exports": [],
      "usedComponents": [
        "FieldIntegration"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldIntegrationTester.tsx",
      "name": "FieldIntegrationTester",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "default",
        "FieldIntegrationTester"
      ],
      "usedComponents": [
        "IntegrationTestResult"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldManager.test.tsx",
      "name": "FieldManager.test",
      "imports": [
        "../FieldManager",
        "@/types/forms"
      ],
      "exports": [],
      "usedComponents": [
        "FieldManager"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldOptionsTester.tsx",
      "name": "FieldOptionsTester",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "default",
        "FieldOptionsTester"
      ],
      "usedComponents": [
        "OptionsTestResult"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldPerformanceTester.tsx",
      "name": "FieldPerformanceTester",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "default",
        "FieldPerformanceTester"
      ],
      "usedComponents": [
        "PerformanceTestResult"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldTests.tsx",
      "name": "FieldTests",
      "imports": [
        "@/components/ui/tabs",
        "./FieldValidationTester",
        "./FieldTypeTester",
        "./FieldOptionsTester",
        "./FieldAccessibilityTester",
        "./FieldPerformanceTester",
        "./FieldIntegrationTester",
        "./FieldDataIntegrityTester"
      ],
      "exports": [
        "default",
        "FieldTests"
      ],
      "usedComponents": [
        "Set",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Component"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldTypeTester.tsx",
      "name": "FieldTypeTester",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "default",
        "FieldTypeTester"
      ],
      "usedComponents": [
        "FieldTypeTestResult"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldValidationTester.tsx",
      "name": "FieldValidationTester",
      "imports": [
        "@/types/forms"
      ],
      "exports": [
        "default",
        "FieldValidationTester"
      ],
      "usedComponents": [
        "ValidationTestResult"
      ]
    },
    {
      "path": "src/components/forms/__tests__/FieldValidator.test.tsx",
      "name": "FieldValidator.test",
      "imports": [
        "../FieldValidator",
        "@/types/forms"
      ],
      "exports": [],
      "usedComponents": [
        "FieldValidator"
      ]
    },
    {
      "path": "src/components/forms/__tests__/TemplateBulkActions.test.tsx",
      "name": "TemplateBulkActions.test",
      "imports": [
        "../TemplateBulkActions",
        "@/types/email-template-library"
      ],
      "exports": [],
      "usedComponents": [
        "TemplateBulkActions"
      ]
    },
    {
      "path": "src/components/forms/__tests__/TemplateCard.test.tsx",
      "name": "TemplateCard.test",
      "imports": [
        "../TemplateCard",
        "@/types/email-template-library"
      ],
      "exports": [],
      "usedComponents": [
        "TemplateCard"
      ]
    },
    {
      "path": "src/components/forms/__tests__/TemplateFilters.test.tsx",
      "name": "TemplateFilters.test",
      "imports": [
        "../TemplateFilters",
        "@/types/email-template-library"
      ],
      "exports": [],
      "usedComponents": [
        "TemplateFilters"
      ]
    },
    {
      "path": "src/components/forms/responses/AutomatedWorkflows.tsx",
      "name": "AutomatedWorkflows",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AutomatedWorkflowsProps",
        "WorkflowRule",
        "Partial",
        "Plus",
        "Settings",
        "Clock",
        "CheckCircle",
        "Mail",
        "MessageSquare",
        "Users",
        "Tag",
        "Calendar",
        "Zap",
        "Button",
        "Card",
        "CardContent",
        "Play",
        "AlertTriangle",
        "CardHeader",
        "Switch",
        "CardTitle",
        "Badge",
        "Label",
        "Star",
        "Heart",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/forms/responses/ResponseAnalyticsDashboard.tsx",
      "name": "ResponseAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ResponseAnalyticsDashboardProps",
        "AnalyticsData",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Search",
        "Input",
        "Button",
        "RefreshCw",
        "Download",
        "Progress",
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "CardContent",
        "CheckCircle",
        "Clock",
        "Badge",
        "ResponsiveContainer",
        "AreaChart",
        "linearGradient",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "LineChart",
        "Line",
        "XCircle"
      ]
    },
    {
      "path": "src/components/forms/responses/ResponseFilters.tsx",
      "name": "ResponseFilters",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/calendar",
        "@/components/ui/popover",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FilterState",
        "ResponseFiltersProps",
        "SavedFilter",
        "Card",
        "CardHeader",
        "CardTitle",
        "Filter",
        "Badge",
        "Button",
        "X",
        "CardContent",
        "Search",
        "Input",
        "Label",
        "CalendarIcon",
        "Popover",
        "PopoverTrigger",
        "PopoverContent",
        "Calendar",
        "Clock",
        "Heart",
        "User",
        "MapPin",
        "Tag",
        "Save"
      ]
    },
    {
      "path": "src/components/forms/responses/ResponseNotifications.tsx",
      "name": "ResponseNotifications",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ResponseNotificationsProps",
        "NotificationChannel",
        "NotificationRule",
        "Mail",
        "MessageSquare",
        "Bell",
        "Settings",
        "Button",
        "Plus",
        "Card",
        "CardContent",
        "Star",
        "Heart",
        "Edit",
        "CardHeader",
        "Switch",
        "CardTitle",
        "Badge",
        "Trash2",
        "Label",
        "Users",
        "Clock",
        "Calendar",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/gdpr/ConsentBanner.tsx",
      "name": "ConsentBanner",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/types/gdpr",
        "@/lib/compliance/gdpr-compliance"
      ],
      "exports": [
        "ConsentBanner"
      ],
      "usedComponents": [
        "ConsentBannerState",
        "Card",
        "CardContent",
        "Shield",
        "Button",
        "X",
        "Badge",
        "Info",
        "Settings"
      ]
    },
    {
      "path": "src/components/gdpr/ConsentManager.tsx",
      "name": "ConsentManager",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/components/ui/tabs",
        "@/components/ui/tooltip",
        "@/lib/compliance/gdpr-compliance",
        "@/types/gdpr"
      ],
      "exports": [
        "ConsentManager"
      ],
      "usedComponents": [
        "ConsentManagerState",
        "ConsentSettings",
        "Card",
        "CardContent",
        "AlertTriangle",
        "Button",
        "CardHeader",
        "CardTitle",
        "Shield",
        "Badge",
        "Clock",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Download",
        "TooltipContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Eye",
        "Settings",
        "History",
        "TabsContent",
        "CheckCircle",
        "XCircle",
        "Info",
        "Switch",
        "Separator",
        "RotateCcw"
      ]
    },
    {
      "path": "src/components/gdpr/CookieConsentBanner.tsx",
      "name": "CookieConsentBanner",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/checkbox"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ConsentOptions",
        "Card",
        "Shield",
        "X",
        "Button",
        "Settings",
        "Checkbox"
      ]
    },
    {
      "path": "src/components/gdpr/DataRequestForm.tsx",
      "name": "DataRequestForm",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/form",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/checkbox",
        "@/types/gdpr",
        "@/lib/validations/form"
      ],
      "exports": [
        "DataRequestForm"
      ],
      "usedComponents": [
        "FormState",
        "DataRequestFormData",
        "HTMLInputElement",
        "Card",
        "CardContent",
        "CheckCircle",
        "Button",
        "CardHeader",
        "CardTitle",
        "requestInfo",
        "Clock",
        "Badge",
        "Form",
        "FormField",
        "FormItem",
        "FormLabel",
        "Select",
        "FormControl",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "FormDescription",
        "FormMessage",
        "Separator",
        "Input",
        "Textarea",
        "Upload",
        "FileText",
        "X",
        "Checkbox",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/gdpr/GDPRIntelligenceDashboard.tsx",
      "name": "GDPRIntelligenceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ComplianceMetrics",
        "RiskPrediction",
        "DocumentAnalysis",
        "LocalizedNotice",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardContent",
        "Badge",
        "Progress",
        "Brain",
        "Languages",
        "Target",
        "CardDescription",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "BarChart",
        "Bar",
        "PieChart",
        "Pie",
        "Cell",
        "Button",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Settings"
      ]
    },
    {
      "path": "src/components/gdpr/PrivacyPolicyModal.tsx",
      "name": "PrivacyPolicyModal",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/scroll-area",
        "@/components/ui/tabs",
        "@/lib/compliance/gdpr-compliance"
      ],
      "exports": [
        "PrivacyPolicyModal"
      ],
      "usedComponents": [
        "Badge",
        "AlertTriangle",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Shield",
        "DialogDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "FileText",
        "Database",
        "Users",
        "TabsContent",
        "BookOpen",
        "ScrollArea",
        "Separator",
        "Clock",
        "Info",
        "Mail",
        "ExternalLink",
        "DialogFooter",
        "Button"
      ]
    },
    {
      "path": "src/components/growth/ReferralProgramBuilder.tsx",
      "name": "ReferralProgramBuilder",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/lib/toast-helper"
      ],
      "exports": [
        "ReferralProgramBuilder"
      ],
      "usedComponents": [
        "ReferralProgram",
        "Record",
        "CurrencyDollarIcon",
        "PercentBadgeIcon",
        "SparklesIcon",
        "GiftIcon",
        "Card",
        "Label",
        "Input",
        "RewardTypeIcon",
        "Button",
        "TrashIcon",
        "PlusIcon",
        "ClipboardDocumentIcon",
        "Textarea"
      ]
    },
    {
      "path": "src/components/guests/AddGuestModal.tsx",
      "name": "AddGuestModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "AddGuestModal"
      ],
      "usedComponents": [
        "GuestFormData",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "UserPlusIcon",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Textarea",
        "Alert",
        "ExclamationTriangleIcon",
        "AlertDescription",
        "DialogFooter",
        "Button"
      ]
    },
    {
      "path": "src/components/guests/AllergenWarnings.tsx",
      "name": "AllergenWarnings",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/lib/utils/toast",
        "@/lib/utils"
      ],
      "exports": [
        "AllergenWarnings"
      ],
      "usedComponents": [
        "AllergyInfo",
        "KitchenProtocol",
        "Set",
        "Card",
        "Alert",
        "ShieldExclamationIcon",
        "Button",
        "PhoneIcon",
        "Badge",
        "CheckCircleIcon",
        "DocumentArrowDownIcon",
        "PrinterIcon",
        "ClipboardDocumentCheckIcon"
      ]
    },
    {
      "path": "src/components/guests/BudgetIntegration.tsx",
      "name": "BudgetIntegration",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/types/guest-management"
      ],
      "exports": [
        "BudgetIntegration"
      ],
      "usedComponents": [
        "GuestBudgetData",
        "ExclamationTriangleIcon",
        "ArrowTrendingUpIcon",
        "ChartBarIcon",
        "Card",
        "CurrencyDollarIcon",
        "Progress",
        "Badge",
        "UsersIcon",
        "CalculatorIcon",
        "Button",
        "ArrowTrendingDownIcon"
      ]
    },
    {
      "path": "src/components/guests/BulkOperationsModal.tsx",
      "name": "BulkOperationsModal",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/separator",
        "@/components/ui/dialog",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "BulkOperationsModal"
      ],
      "usedComponents": [
        "BulkUpdateData",
        "ExportOptions",
        "TableAssignmentOptions",
        "PencilSquareIcon",
        "TrashIcon",
        "ArrowDownTrayIcon",
        "TableCellsIcon",
        "EnvelopeIcon",
        "Alert",
        "CheckCircleIcon",
        "AlertDescription",
        "ExclamationTriangleIcon",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Textarea",
        "Card",
        "Switch",
        "Button",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Badge",
        "XCircleIcon",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/guests/BulkSelectionBar.tsx",
      "name": "BulkSelectionBar",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "BulkSelectionBar"
      ],
      "usedComponents": [
        "Badge",
        "Button",
        "CheckIcon",
        "XMarkIcon",
        "PencilSquareIcon",
        "ArrowDownTrayIcon",
        "TableCellsIcon",
        "EnvelopeIcon",
        "TrashIcon"
      ]
    },
    {
      "path": "src/components/guests/ConflictDetectionPanel.tsx",
      "name": "ConflictDetectionPanel",
      "imports": [
        "@/types/photo-groups",
        "@/lib/services/photo-groups-api-service"
      ],
      "exports": [
        "default",
        "ConflictDetectionPanel"
      ],
      "usedComponents": [
        "PhotoGroupConflict",
        "Set",
        "RefreshCw",
        "AlertTriangle",
        "EyeOff",
        "Eye",
        "CheckCircle",
        "Clock",
        "Camera",
        "Users",
        "XCircle",
        "MapPin",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/guests/DietaryMatrix.tsx",
      "name": "DietaryMatrix",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/lib/utils/toast",
        "@/lib/utils"
      ],
      "exports": [
        "DietaryMatrix"
      ],
      "usedComponents": [
        "DietaryRequirement",
        "Card",
        "MagnifyingGlassIcon",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "DocumentArrowDownIcon",
        "PrinterIcon",
        "ShieldExclamationIcon",
        "Badge",
        "ExclamationTriangleIcon"
      ]
    },
    {
      "path": "src/components/guests/DietaryRequirementsForm.tsx",
      "name": "DietaryRequirementsForm",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/checkbox",
        "@/components/ui/radio-group",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/lib/utils/toast",
        "@/lib/utils"
      ],
      "exports": [
        "DietaryRequirementsForm"
      ],
      "usedComponents": [
        "Date",
        "DietaryFormData",
        "Card",
        "Alert",
        "ShieldExclamationIcon",
        "Badge",
        "CheckCircleIcon",
        "Button",
        "DocumentArrowDownIcon",
        "Label",
        "RadioGroup",
        "RadioGroupItem",
        "Icon",
        "Checkbox",
        "Textarea"
      ]
    },
    {
      "path": "src/components/guests/DietaryTracker.tsx",
      "name": "DietaryTracker",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/alert",
        "@/lib/utils/toast"
      ],
      "exports": [
        "DietaryTracker"
      ],
      "usedComponents": [
        "Guest",
        "DietaryRequirement",
        "HTMLInputElement",
        "Icon",
        "Card",
        "Badge",
        "Button",
        "ShieldExclamationIcon",
        "Textarea",
        "CheckCircleIcon",
        "DocumentArrowUpIcon",
        "XCircleIcon",
        "Alert"
      ]
    },
    {
      "path": "src/components/guests/EnhancedDietaryTracker.tsx",
      "name": "EnhancedDietaryTracker",
      "imports": [
        "@/lib/services/dietary-requirements-service",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/lib/utils/toast",
        "@/lib/utils"
      ],
      "exports": [
        "EnhancedDietaryTracker"
      ],
      "usedComponents": [
        "DietarySeverity",
        "Guest",
        "DietaryRequirement",
        "DietaryMatrix",
        "DietaryLoadingSkeleton",
        "Alert",
        "AlertTriangle",
        "AlertTitle",
        "AlertDescription",
        "ShieldAlert",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "DietaryOverview",
        "IndividualDietaryManagement",
        "CateringView",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Lock",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "AuditLogView",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Sparkles",
        "Badge",
        "CardDescription",
        "Icon",
        "CheckCircle",
        "ChefHat",
        "XCircle",
        "Shield",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Input",
        "Download"
      ]
    },
    {
      "path": "src/components/guests/GroupPriorityManager.tsx",
      "name": "GroupPriorityManager",
      "imports": [
        "@/types/photo-groups",
        "@/hooks/useSupabaseRealtime"
      ],
      "exports": [
        "default",
        "GroupPriorityManager"
      ],
      "usedComponents": [
        "GripVertical",
        "AlertTriangle",
        "Clock",
        "Users",
        "ChevronUp",
        "ChevronDown",
        "PhotoGroup",
        "PriorityConflict",
        "Map",
        "Target",
        "Zap",
        "RotateCcw",
        "CheckCircle",
        "Hash",
        "DndContext",
        "SortableContext",
        "SortableGroupItem",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/guests/GuestAnalyticsDashboard.tsx",
      "name": "GuestAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card"
      ]
    },
    {
      "path": "src/components/guests/GuestCards.tsx",
      "name": "GuestCards",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/checkbox",
        "@/lib/utils"
      ],
      "exports": [
        "GuestCards"
      ],
      "usedComponents": [
        "Card",
        "Checkbox",
        "UserIcon",
        "EnvelopeIcon",
        "PhoneIcon",
        "Badge",
        "Button",
        "PencilIcon",
        "EllipsisHorizontalIcon"
      ]
    },
    {
      "path": "src/components/guests/GuestExportModal.tsx",
      "name": "GuestExportModal",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "GuestExportModal"
      ],
      "usedComponents": [
        "ExportConfig",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "CheckCircleIcon",
        "ArrowDownTrayIcon",
        "Button",
        "DialogFooter",
        "Badge",
        "Card",
        "Icon",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Alert",
        "ExclamationTriangleIcon",
        "AlertDescription",
        "Progress"
      ]
    },
    {
      "path": "src/components/guests/GuestFilters.tsx",
      "name": "GuestFilters",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "GuestFilters"
      ],
      "usedComponents": [
        "GuestListFilters",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "HeartIcon",
        "UsersIcon",
        "BriefcaseIcon",
        "Badge",
        "Card",
        "AdjustmentsHorizontalIcon",
        "Button",
        "XMarkIcon",
        "Input",
        "Separator",
        "Switch"
      ]
    },
    {
      "path": "src/components/guests/GuestListBuilder.tsx",
      "name": "GuestListBuilder",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/ui/alert",
        "@/lib/utils/toast",
        "@/hooks/useDebounce"
      ],
      "exports": [
        "GuestListBuilder"
      ],
      "usedComponents": [
        "Guest",
        "Household",
        "Set",
        "GuestCounts",
        "Draggable",
        "Checkbox",
        "Badge",
        "Button",
        "EllipsisHorizontalIcon",
        "MagnifyingGlassIcon",
        "Input",
        "Alert",
        "TrashIcon",
        "DragDropContext",
        "Card",
        "CategoryIcon",
        "Droppable",
        "UserGroupIcon"
      ]
    },
    {
      "path": "src/components/guests/GuestListLoadingSkeleton.tsx",
      "name": "GuestListLoadingSkeleton",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/guests/GuestListManager.tsx",
      "name": "GuestListManager",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/types/guest-management",
        "./GuestTable",
        "./GuestCards",
        "./HouseholdView",
        "./GuestFilters",
        "./BulkOperationsModal",
        "./BulkSelectionBar",
        "./import/GuestImportWizard",
        "./GuestExportModal",
        "./AddGuestModal",
        "@/hooks/useGuestSearch",
        "@/hooks/useKeyboardShortcuts",
        "@/hooks/useVirtualScrolling",
        "@/hooks/useGuestBulkOperations"
      ],
      "exports": [
        "GuestListManager"
      ],
      "usedComponents": [
        "GuestListFilters",
        "GuestListSort",
        "GuestListView",
        "Badge",
        "XMarkIcon",
        "Button",
        "GuestListLoadingSkeleton",
        "Card",
        "PlusIcon",
        "ArrowUpTrayIcon",
        "GuestCards",
        "HouseholdView",
        "GuestTable",
        "MagnifyingGlassIcon",
        "Input",
        "TableCellsIcon",
        "Squares2X2Icon",
        "HomeIcon",
        "FunnelIcon",
        "ArrowDownTrayIcon",
        "GuestFilters",
        "BulkSelectionBar",
        "GuestImportWizard",
        "GuestExportModal",
        "AddGuestModal",
        "BulkOperationsModal"
      ]
    },
    {
      "path": "src/components/guests/GuestListManagerIntegrated.tsx",
      "name": "GuestListManagerIntegrated",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/types/guest-management",
        "./RSVPIntegration",
        "./TaskIntegration",
        "./BudgetIntegration",
        "./WebsiteIntegration",
        "./GuestTable",
        "./GuestCards",
        "./HouseholdView",
        "./GuestFilters",
        "./BulkOperationsModal",
        "./BulkSelectionBar",
        "./import/GuestImportWizard",
        "./GuestExportModal",
        "./AddGuestModal",
        "@/hooks/useGuestSearch",
        "@/hooks/useKeyboardShortcuts",
        "@/hooks/useVirtualScrolling",
        "@/hooks/useGuestBulkOperations",
        "@/lib/realtime/guest-sync"
      ],
      "exports": [
        "default",
        "GuestListManagerIntegrated"
      ],
      "usedComponents": [
        "GuestListFilters",
        "GuestListSort",
        "GuestListView",
        "Badge",
        "XMarkIcon",
        "Button",
        "GuestListLoadingSkeleton",
        "Card",
        "PlusIcon",
        "ArrowUpTrayIcon",
        "GuestCards",
        "HouseholdView",
        "GuestTable",
        "WifiIcon",
        "HeartIcon",
        "ClipboardDocumentListIcon",
        "CurrencyDollarIcon",
        "GlobeAltIcon",
        "MagnifyingGlassIcon",
        "Input",
        "TableCellsIcon",
        "Squares2X2Icon",
        "HomeIcon",
        "FunnelIcon",
        "ArrowDownTrayIcon",
        "GuestFilters",
        "BulkSelectionBar",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "UserGroupIcon",
        "TabsContent",
        "RSVPIntegration",
        "TaskIntegration",
        "BudgetIntegration",
        "WebsiteIntegration",
        "GuestImportWizard",
        "GuestExportModal",
        "AddGuestModal",
        "BulkOperationsModal"
      ]
    },
    {
      "path": "src/components/guests/GuestListManagerUntitledUI.tsx",
      "name": "GuestListManagerUntitledUI",
      "imports": [
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/input",
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/magicui/shimmer-button",
        "@/types/guest-management",
        "./GuestTable",
        "./GuestCards",
        "./HouseholdView",
        "./GuestFilters",
        "./BulkOperationsModal",
        "./BulkSelectionBar",
        "./import/GuestImportWizard",
        "./GuestExportModal",
        "./AddGuestModal",
        "@/hooks/useGuestSearch",
        "@/hooks/useKeyboardShortcuts",
        "@/hooks/useVirtualScrolling",
        "@/hooks/useGuestBulkOperations"
      ],
      "exports": [
        "GuestListManager"
      ],
      "usedComponents": [
        "GuestListFilters",
        "GuestListSort",
        "GuestListView",
        "Badge",
        "XMarkIcon",
        "Button",
        "GuestListLoadingSkeleton",
        "Card",
        "PlusIcon",
        "ShimmerButton",
        "ArrowUpTrayIcon",
        "GuestCards",
        "HouseholdView",
        "GuestTable",
        "MagnifyingGlassIcon",
        "Input",
        "TableCellsIcon",
        "Squares2X2Icon",
        "HomeIcon",
        "FunnelIcon",
        "ArrowDownTrayIcon",
        "GuestFilters",
        "BulkSelectionBar",
        "GuestImportWizard",
        "GuestExportModal",
        "AddGuestModal",
        "BulkOperationsModal"
      ]
    },
    {
      "path": "src/components/guests/GuestMessageHistory.tsx",
      "name": "GuestMessageHistory",
      "imports": [
        "@/lib/utils",
        "@/lib/supabase/client",
        "@/components/messaging/QuickActionTemplates",
        "@/lib/services/voice-message-integration",
        "@/lib/services/smart-message-composer",
        "@/lib/services/advanced-offline-sync"
      ],
      "exports": [
        "GuestMessageHistory"
      ],
      "usedComponents": [
        "Message",
        "GuestInfo",
        "HTMLDivElement",
        "HTMLTextAreaElement",
        "Clock",
        "Check",
        "CheckCheck",
        "AlertCircle",
        "Mail",
        "Phone",
        "Search",
        "Filter",
        "Download",
        "AnimatePresence",
        "Mic",
        "Paperclip",
        "MessageStatusIcon",
        "QuickActionTemplates",
        "Smile",
        "Send"
      ]
    },
    {
      "path": "src/components/guests/GuestSelector.tsx",
      "name": "GuestSelector",
      "imports": [
        "@/types/photo-groups"
      ],
      "exports": [
        "default",
        "GuestSelector"
      ],
      "usedComponents": [
        "GripVertical",
        "Check",
        "UserCheck",
        "CategoryIcon",
        "AlertTriangle",
        "ChevronDown",
        "ChevronRight",
        "GuestCard",
        "Search",
        "Users",
        "Filter",
        "CategoryGroup"
      ]
    },
    {
      "path": "src/components/guests/GuestTable.tsx",
      "name": "GuestTable",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/lib/utils"
      ],
      "exports": [
        "GuestTable"
      ],
      "usedComponents": [
        "ChevronUpIcon",
        "ChevronDownIcon",
        "Checkbox",
        "UserIcon",
        "Badge",
        "Button",
        "PencilIcon",
        "EllipsisHorizontalIcon"
      ]
    },
    {
      "path": "src/components/guests/HouseholdView.tsx",
      "name": "HouseholdView",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/checkbox",
        "@/lib/utils"
      ],
      "exports": [
        "HouseholdView"
      ],
      "usedComponents": [
        "Card",
        "Checkbox",
        "HomeIcon",
        "Badge",
        "UserIcon",
        "EnvelopeIcon",
        "PhoneIcon",
        "Button",
        "PlusIcon"
      ]
    },
    {
      "path": "src/components/guests/PhotoGroupBuilder.tsx",
      "name": "PhotoGroupBuilder",
      "imports": [
        "./GuestSelector",
        "@/types/photo-groups"
      ],
      "exports": [
        "default",
        "PhotoGroupBuilder"
      ],
      "usedComponents": [
        "PhotoGroupFormData",
        "PhotoGroupFormErrors",
        "X",
        "AlertTriangle",
        "Clock",
        "MapPin",
        "Info",
        "GuestSelector",
        "Save"
      ]
    },
    {
      "path": "src/components/guests/PhotoGroupCard.tsx",
      "name": "PhotoGroupCard",
      "imports": [
        "@/types/photo-groups"
      ],
      "exports": [
        "default",
        "PhotoGroupCard"
      ],
      "usedComponents": [
        "Target",
        "IconComponent",
        "Clock",
        "MapPin",
        "Users",
        "GripVertical",
        "ChevronUp",
        "ChevronDown",
        "Edit3",
        "Trash2",
        "AlertTriangle",
        "UserPlus"
      ]
    },
    {
      "path": "src/components/guests/PhotoGroupErrorBoundary.tsx",
      "name": "PhotoGroupErrorBoundary",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Props",
        "State",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "CardDescription",
        "CardContent",
        "Button",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/guests/PhotoGroupLoadingSkeleton.tsx",
      "name": "PhotoGroupLoadingSkeleton",
      "imports": [
        "@/components/ui/card"
      ],
      "exports": [
        "PhotoGroupLoadingSkeleton",
        "PhotoGroupGridSkeleton",
        "PhotoGroupFormSkeleton",
        "InlineLoadingIndicator"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "PhotoGroupItemSkeleton",
        "CardHeader"
      ]
    },
    {
      "path": "src/components/guests/PhotoGroupManager.tsx",
      "name": "PhotoGroupManager",
      "imports": [
        "./PhotoGroupBuilder",
        "./PhotoGroupCard",
        "./GuestSelector",
        "@/types/photo-groups",
        "@/types/guest-management",
        "@/hooks/useGuestPhotoGroups",
        "@/hooks/usePhotoGroupConflicts"
      ],
      "exports": [
        "default",
        "PhotoGroupManager"
      ],
      "usedComponents": [
        "PhotoGroupFilters",
        "PhotoGroupSort",
        "PhotoGroup",
        "DragDropContextData",
        "Icon",
        "AlertTriangle",
        "Plus",
        "MetricsCard",
        "Search",
        "Filter",
        "DndContext",
        "Target",
        "SortableContext",
        "PhotoGroupCard",
        "GuestSelector",
        "DragOverlay",
        "PhotoGroupBuilder"
      ]
    },
    {
      "path": "src/components/guests/PhotoGroupScheduler.tsx",
      "name": "PhotoGroupScheduler",
      "imports": [
        "@/types/photo-groups",
        "@/hooks/useSupabaseRealtime"
      ],
      "exports": [
        "default",
        "PhotoGroupScheduler"
      ],
      "usedComponents": [
        "TimeSlot",
        "SchedulingConflict",
        "Calendar",
        "MapPin",
        "XCircle",
        "AlertTriangle",
        "Clock",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/guests/PhotoGroupsManager.tsx",
      "name": "PhotoGroupsManager",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/lib/utils/toast"
      ],
      "exports": [
        "PhotoGroupsManager"
      ],
      "usedComponents": [
        "Badge",
        "UserGroupIcon",
        "ClockIcon",
        "MapPinIcon",
        "Button",
        "DocumentDuplicateIcon",
        "TrashIcon",
        "PhotoGroup",
        "Guest",
        "PrinterIcon",
        "PlusIcon",
        "Card",
        "Input",
        "Textarea",
        "DndContext",
        "SortableContext",
        "SortablePhotoGroup",
        "CameraIcon"
      ]
    },
    {
      "path": "src/components/guests/PhotographerNotesEditor.tsx",
      "name": "PhotographerNotesEditor",
      "imports": [
        "@/types/photo-groups"
      ],
      "exports": [
        "default",
        "PhotographerNotesEditor"
      ],
      "usedComponents": [
        "Date",
        "NotesVersion",
        "HTMLTextAreaElement",
        "NodeJS",
        "Camera",
        "Clock",
        "Users",
        "MapPin",
        "AlertCircle",
        "Lightbulb",
        "Bold",
        "Italic",
        "List",
        "Check",
        "Copy",
        "History",
        "RotateCcw",
        "Save"
      ]
    },
    {
      "path": "src/components/guests/QuickAddGuest.tsx",
      "name": "QuickAddGuest",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/checkbox",
        "@/lib/utils/toast",
        "@/hooks/useDebounce"
      ],
      "exports": [
        "QuickAddGuest"
      ],
      "usedComponents": [
        "ParsedGuestData",
        "Household",
        "HTMLInputElement",
        "Card",
        "UserPlusIcon",
        "Button",
        "LightBulbIcon",
        "Alert",
        "SparklesIcon",
        "Input",
        "XCircleIcon",
        "CheckCircleIcon",
        "Badge"
      ]
    },
    {
      "path": "src/components/guests/RSVPIntegration.tsx",
      "name": "RSVPIntegration",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/types/guest-management"
      ],
      "exports": [
        "RSVPIntegration"
      ],
      "usedComponents": [
        "RSVPResponse",
        "Map",
        "CheckCircleIcon",
        "XCircleIcon",
        "QuestionMarkCircleIcon",
        "ClockIcon",
        "Badge",
        "Card",
        "Button",
        "EnvelopeIcon",
        "PhoneIcon"
      ]
    },
    {
      "path": "src/components/guests/TaskIntegration.tsx",
      "name": "TaskIntegration",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/types/guest-management"
      ],
      "exports": [
        "TaskIntegration"
      ],
      "usedComponents": [
        "Task",
        "Set",
        "Badge",
        "CheckCircleIcon",
        "ClockIcon",
        "ClipboardDocumentListIcon",
        "Card",
        "Button",
        "UserGroupIcon",
        "PlusIcon",
        "Input",
        "Textarea",
        "CalendarIcon"
      ]
    },
    {
      "path": "src/components/guests/WebsiteIntegration.tsx",
      "name": "WebsiteIntegration",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/switch",
        "@/types/guest-management"
      ],
      "exports": [
        "WebsiteIntegration"
      ],
      "usedComponents": [
        "WebsiteData",
        "WebsiteSection",
        "HeartIcon",
        "PhotoIcon",
        "UserGroupIcon",
        "Badge",
        "MapPinIcon",
        "Card",
        "GlobeAltIcon",
        "Button",
        "LinkIcon",
        "Switch",
        "EyeIcon",
        "ShareIcon"
      ]
    },
    {
      "path": "src/components/guests/import/CompletionStep.tsx",
      "name": "CompletionStep",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button"
      ],
      "exports": [
        "CompletionStep"
      ],
      "usedComponents": [
        "AlertTriangle",
        "CheckCircle",
        "Card",
        "CardHeader",
        "CardContent",
        "Button",
        "Users",
        "FileText"
      ]
    },
    {
      "path": "src/components/guests/import/FieldMappingStep.tsx",
      "name": "FieldMappingStep",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "FieldMappingStep"
      ],
      "usedComponents": [
        "ColumnMapping",
        "Button",
        "ArrowPathIcon",
        "SparklesIcon",
        "Card",
        "Badge",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Alert",
        "ExclamationTriangleIcon",
        "AlertDescription",
        "EyeIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/guests/import/FileUploadStep.tsx",
      "name": "FileUploadStep",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "FileUploadStep"
      ],
      "usedComponents": [
        "File",
        "FileAnalysis",
        "HTMLInputElement",
        "Progress",
        "Card",
        "DocumentTextIcon",
        "TableCellsIcon",
        "CheckCircleIcon",
        "Alert",
        "ExclamationTriangleIcon",
        "AlertDescription",
        "Button",
        "CloudArrowUpIcon"
      ]
    },
    {
      "path": "src/components/guests/import/GuestImportWizard.tsx",
      "name": "GuestImportWizard",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/badge",
        "@/types/guest-management",
        "@/lib/utils",
        "./FileUploadStep",
        "./FieldMappingStep",
        "./ImportPreviewStep",
        "./ProcessingStep",
        "./CompletionStep"
      ],
      "exports": [
        "GuestImportWizard"
      ],
      "usedComponents": [
        "ImportState",
        "FileUploadStep",
        "FieldMappingStep",
        "ImportPreviewStep",
        "ProcessingStep",
        "CompletionStep",
        "CheckCircleIcon",
        "CloudArrowUpIcon",
        "Cog6ToothIcon",
        "EyeIcon",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Badge",
        "Progress",
        "Alert",
        "XCircleIcon",
        "AlertDescription",
        "Button"
      ]
    },
    {
      "path": "src/components/guests/import/ImportPreviewStep.tsx",
      "name": "ImportPreviewStep",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "ImportPreviewStep"
      ],
      "usedComponents": [
        "Alert",
        "XCircleIcon",
        "AlertDescription",
        "Card",
        "EyeIcon",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Badge",
        "TabsContent",
        "CheckCircleIcon",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "ExclamationTriangleIcon",
        "Button",
        "UserGroupIcon"
      ]
    },
    {
      "path": "src/components/guests/import/ProcessingStep.tsx",
      "name": "ProcessingStep",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/progress"
      ],
      "exports": [
        "ProcessingStep"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "Loader",
        "AlertCircle",
        "CheckCircle",
        "CardContent",
        "Progress"
      ]
    },
    {
      "path": "src/components/helpers/HelperScheduleTimeline.tsx",
      "name": "HelperScheduleTimeline",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/avatar"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HelperTask",
        "Card",
        "CardContent",
        "AlertCircle",
        "Button",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "Users",
        "StatusIcon",
        "Badge",
        "Clock",
        "MapPin",
        "UserCheck",
        "Phone",
        "MessageSquare",
        "Star",
        "CheckCircle",
        "Timer",
        "Avatar",
        "AvatarFallback",
        "Mail"
      ]
    },
    {
      "path": "src/components/helpers/RealtimeScheduleManager.tsx",
      "name": "RealtimeScheduleManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ScheduleTask",
        "Helper",
        "Users",
        "Badge",
        "Input",
        "Button",
        "RefreshCw",
        "Calendar",
        "Printer",
        "Search",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "DragDropContext",
        "Droppable",
        "Card",
        "CardContent",
        "Draggable",
        "GripVertical",
        "Clock",
        "Phone",
        "MapPin",
        "AlertCircle",
        "Edit2"
      ]
    },
    {
      "path": "src/components/i18n/AddressFormLocalizer.tsx",
      "name": "AddressFormLocalizer",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "AddressFormLocalizer"
      ],
      "usedComponents": [
        "WeddingMarketLocale",
        "AddressField",
        "Record",
        "AddressFormLocalizerProps",
        "AddressFormatType",
        "Set",
        "AlertCircleIcon",
        "MapPinIcon",
        "InfoIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/i18n/CeremonyTypeLocalizer.tsx",
      "name": "CeremonyTypeLocalizer",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "CeremonyTypeLocalizer"
      ],
      "usedComponents": [
        "WeddingMarketLocale",
        "CeremonyTypeLocalizerProps",
        "CeremonyType",
        "ClockIcon",
        "UsersIcon",
        "InfoIcon",
        "ChevronDownIcon",
        "AnimatePresence",
        "MapPinIcon",
        "CalendarIcon",
        "HeartIcon"
      ]
    },
    {
      "path": "src/components/i18n/CurrencyFormatter.tsx",
      "name": "CurrencyFormatter",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "CurrencyFormatter",
        "BudgetBreakdown"
      ],
      "usedComponents": [
        "CurrencyFormatterProps",
        "TrendingUpIcon",
        "TrendingDownIcon",
        "InfoIcon",
        "BudgetBreakdownProps",
        "WeddingVendorCategory",
        "CurrencyFormatter"
      ]
    },
    {
      "path": "src/components/i18n/GiftRegistryLocalizer.tsx",
      "name": "GiftRegistryLocalizer",
      "imports": [
        "@/types/i18n",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "GiftRegistryLocalizer"
      ],
      "usedComponents": [
        "WeddingMarketLocale",
        "GiftRegistrySettings",
        "GiftRegistryLocalizerProps",
        "WeddingTraditionType",
        "GiftGivingGuidance",
        "GiftCategory",
        "Gift",
        "Info",
        "Heart",
        "AnimatePresence",
        "ShoppingBag",
        "DollarSign",
        "Star"
      ]
    },
    {
      "path": "src/components/i18n/LanguageSwitcher.tsx",
      "name": "LanguageSwitcher",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "LanguageSwitcher",
        "useLanguageDirection",
        "useIsRTL",
        "getLanguageConfig"
      ],
      "usedComponents": [
        "LanguagePreviewProps",
        "LanguageSwitcherProps",
        "WeddingMarketLocale",
        "LanguageConfig",
        "HTMLDivElement",
        "HTMLInputElement",
        "CheckIcon",
        "ChevronDownIcon",
        "AnimatePresence",
        "GlobeIcon",
        "SearchIcon",
        "LanguagePreview"
      ]
    },
    {
      "path": "src/components/i18n/LocalizedDatePicker.tsx",
      "name": "LocalizedDatePicker",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "LocalizedDatePicker"
      ],
      "usedComponents": [
        "WeddingMarketLocale",
        "LocalizedDatePickerProps",
        "Date",
        "HTMLDivElement",
        "CalendarIcon",
        "AnimatePresence",
        "ChevronLeftIcon",
        "ChevronRightIcon",
        "XIcon"
      ]
    },
    {
      "path": "src/components/i18n/LocalizedWeddingCalendar.tsx",
      "name": "LocalizedWeddingCalendar",
      "imports": [
        "@/types/i18n",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "LocalizedWeddingCalendar",
        "WeddingDateRecommendation"
      ],
      "usedComponents": [
        "WeddingMarketLocale",
        "CalendarViewOptions",
        "Date",
        "Calendar",
        "ChevronLeft",
        "ChevronRight",
        "AnimatePresence",
        "Star",
        "Heart",
        "Info"
      ]
    },
    {
      "path": "src/components/i18n/MultilingualForm.tsx",
      "name": "MultilingualForm",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "MultilingualForm"
      ],
      "usedComponents": [
        "FormFieldProps",
        "EyeOffIcon",
        "EyeIcon",
        "AnimatePresence",
        "AlertCircleIcon",
        "MultilingualFormProps",
        "Record",
        "Set",
        "CheckCircleIcon",
        "FormField"
      ]
    },
    {
      "path": "src/components/i18n/RTLLayoutProvider.tsx",
      "name": "RTLLayoutProvider",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "RTLLayoutProvider",
        "useRTLLayout",
        "useDirectionalStyles",
        "useDirectionalClasses",
        "withRTL",
        "DirectionalFlex",
        "DirectionalText",
        "WeddingCard",
        "rtlStyles",
        "isRTLLocale",
        "isRTLLanguage",
        "getTextDirectionFromLocale"
      ],
      "usedComponents": [
        "SupportedLanguageCode",
        "WeddingMarketLocale",
        "RTLLayoutContextValue",
        "RTLLayoutProviderProps",
        "TextDirection",
        "RTLLayoutContext",
        "T",
        "Component",
        "DirectionalFlexProps",
        "DirectionalTextProps",
        "WeddingCardProps",
        "DirectionalFlex"
      ]
    },
    {
      "path": "src/components/i18n/WeddingTraditionSelector.tsx",
      "name": "WeddingTraditionSelector",
      "imports": [
        "@/types/i18n"
      ],
      "exports": [
        "default",
        "WeddingTraditionSelector"
      ],
      "usedComponents": [
        "WeddingMarketLocale",
        "WeddingTraditionType",
        "HTMLDivElement",
        "HTMLInputElement",
        "HeartIcon",
        "ChevronDownIcon",
        "AnimatePresence",
        "SearchIcon",
        "TraditionItem",
        "TraditionItemProps",
        "InfoIcon",
        "CheckIcon"
      ]
    },
    {
      "path": "src/components/integration/TeamOptimizationIntegration.tsx",
      "name": "TeamOptimizationIntegration",
      "imports": [
        "@/components/performance/ProgressiveImage",
        "@/components/performance/VirtualizedList"
      ],
      "exports": [
        "default",
        "TeamOptimizationIntegration"
      ],
      "usedComponents": [
        "VirtualizedList",
        "ProgressiveImage"
      ]
    },
    {
      "path": "src/components/integrations/CRMIntegrationCard.tsx",
      "name": "CRMIntegrationCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/dropdown-menu",
        "@/components/ui/progress",
        "@/components/ui/tooltip",
        "@/lib/utils",
        "@/types/crm"
      ],
      "exports": [
        "CRMIntegrationCard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "StatusIcon",
        "Tooltip",
        "TooltipTrigger",
        "Wifi",
        "TooltipContent",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Button",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Settings",
        "RefreshCw",
        "DropdownMenuSeparator",
        "Unplug",
        "CardContent",
        "Progress"
      ]
    },
    {
      "path": "src/components/integrations/CRMIntegrationDashboard.tsx",
      "name": "CRMIntegrationDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/skeleton",
        "@/components/ui/alert",
        "@/lib/utils",
        "@/lib/api/crm-integrations",
        "@/types/crm",
        "./CRMIntegrationCard",
        "./CRMProviderWizard"
      ],
      "exports": [
        "CRMIntegrationDashboard"
      ],
      "usedComponents": [
        "Skeleton",
        "Card",
        "CardContent",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "Plus",
        "Settings",
        "CheckCircle",
        "Clock",
        "CRMIntegrationCard",
        "CRMProviderWizard",
        "Badge",
        "Icon"
      ]
    },
    {
      "path": "src/components/integrations/CRMProviderWizard.tsx",
      "name": "CRMProviderWizard",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/components/ui/separator",
        "@/components/ui/form",
        "@/components/ui/input",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/lib/utils",
        "@/types/crm",
        "./OAuthFlowHandler",
        "./FieldMappingInterface"
      ],
      "exports": [
        "CRMProviderWizard"
      ],
      "usedComponents": [
        "WizardStep",
        "CRMProvider",
        "ProviderFormData",
        "AuthFormData",
        "SyncFormData",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Button",
        "X",
        "Progress",
        "Check",
        "ProviderSelectionStep",
        "AuthenticationStep",
        "FieldMappingStep",
        "SyncSettingsStep",
        "ConfirmationStep",
        "Form",
        "FormField",
        "FormItem",
        "FormLabel",
        "FormControl",
        "Input",
        "FormDescription",
        "FormMessage",
        "Card",
        "CardContent",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "Star",
        "Zap",
        "Shield",
        "ChevronRight",
        "OAuthFlowHandler",
        "ChevronLeft",
        "Switch",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardHeader",
        "CardTitle"
      ]
    },
    {
      "path": "src/components/integrations/FieldMappingInterface.tsx",
      "name": "FieldMappingInterface",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tooltip",
        "@/components/ui/separator",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "FieldMappingInterface"
      ],
      "usedComponents": [
        "FieldMapping",
        "TooltipProvider",
        "DndContext",
        "Tooltip",
        "TooltipTrigger",
        "Button",
        "EyeOff",
        "Eye",
        "TooltipContent",
        "Wand2",
        "RotateCcw",
        "Alert",
        "Info",
        "AlertDescription",
        "Progress",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "SortableContext",
        "DraggableField",
        "ArrowRight",
        "Shuffle",
        "MappingPairCard",
        "DragOverlay",
        "DragOverlayField",
        "Badge",
        "CheckCircle",
        "AlertCircle",
        "Unlink",
        "FieldType"
      ]
    },
    {
      "path": "src/components/integrations/IntegrationHealth.tsx",
      "name": "IntegrationHealth",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ServiceHealth",
        "IntegrationMetrics",
        "HealthAlert",
        "CheckCircle",
        "AlertTriangle",
        "XCircle",
        "Clock",
        "RefreshCw",
        "Button",
        "Card",
        "CardContent",
        "Activity",
        "Progress",
        "Database",
        "TrendingUp",
        "Zap",
        "Alert",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardDescription",
        "Mail",
        "Wallet"
      ]
    },
    {
      "path": "src/components/integrations/IntegrationHealthDashboard.tsx",
      "name": "IntegrationHealthDashboard",
      "imports": [
        "@/components/magicui/shimmer-button",
        "@/lib/integrations/payment-calendar-orchestrator"
      ],
      "exports": [
        "IntegrationHealthDashboard"
      ],
      "usedComponents": [
        "IntegrationHealthDashboard",
        "Date",
        "AlertTriangle",
        "ShimmerButton",
        "RefreshCw",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "Zap",
        "TrendingUp",
        "Mail",
        "BarChart3",
        "ServiceIcon"
      ]
    },
    {
      "path": "src/components/integrations/OAuthFlowHandler.tsx",
      "name": "OAuthFlowHandler",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "OAuthFlowHandler"
      ],
      "usedComponents": [
        "OAuthState",
        "OAuthProgress",
        "Card",
        "CardHeader",
        "CardTitle",
        "Smartphone",
        "CardContent",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "ExternalLink",
        "Shield",
        "CheckCircle",
        "Progress",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/integrations/SyncStatusMonitor.tsx",
      "name": "SyncStatusMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/dropdown-menu",
        "@/components/ui/collapsible",
        "@/components/ui/skeleton",
        "@/lib/utils"
      ],
      "exports": [
        "SyncStatusMonitor"
      ],
      "usedComponents": [
        "SyncFilters",
        "Set",
        "SyncMonitorSkeleton",
        "Card",
        "CardContent",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Button",
        "RefreshCw",
        "Activity",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Filter",
        "DropdownMenuContent",
        "DropdownMenuLabel",
        "DropdownMenuSeparator",
        "DropdownMenuCheckboxItem",
        "StatusBadge",
        "StatsCard",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "SyncJobCard",
        "LogsViewer",
        "Icon",
        "Badge",
        "Progress",
        "Eye",
        "Pause",
        "Square",
        "ChevronDown",
        "ChevronRight",
        "Collapsible",
        "CollapsibleContent",
        "Separator",
        "FileText",
        "Download",
        "Skeleton",
        "CRMSyncJob",
        "SyncMetrics",
        "SyncLogEntry"
      ]
    },
    {
      "path": "src/components/integrations/__tests__/IntegrationHealthDashboard.test.tsx",
      "name": "IntegrationHealthDashboard.test",
      "imports": [
        "../IntegrationHealthDashboard",
        "@/lib/integrations/payment-calendar-orchestrator"
      ],
      "exports": [],
      "usedComponents": [
        "IntegrationHealthDashboard"
      ]
    },
    {
      "path": "src/components/intelligence/WeddingIntelligenceDashboard.tsx",
      "name": "WeddingIntelligenceDashboard",
      "imports": [
        "@/hooks/useAnalyticsData",
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "WeddingIntelligenceDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardContent",
        "ResponsiveContainer",
        "AreaChart",
        "linearGradient",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "Line",
        "Target",
        "Badge",
        "TrendingUp",
        "TrendingDown",
        "BarChart3",
        "ArrowUpRight",
        "ArrowDownRight",
        "BarChart",
        "Bar",
        "Users",
        "Lightbulb",
        "AlertCircle",
        "CheckCircle",
        "Activity",
        "Zap",
        "Button",
        "Icon",
        "SeasonalTrendsCard",
        "PriceOptimizationCard",
        "MarketComparisonCard",
        "ClientBehaviorInsights",
        "IntelligenceInsights"
      ]
    },
    {
      "path": "src/components/intelligence/predictive/ActionRecommendations.tsx",
      "name": "ActionRecommendations",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress"
      ],
      "exports": [
        "ActionRecommendations"
      ],
      "usedComponents": [
        "Badge",
        "Phone",
        "Mail",
        "Calendar",
        "Users",
        "Target",
        "AlertCircle",
        "TrendingUp",
        "Lightbulb",
        "Card",
        "CardContent",
        "DollarSign",
        "Clock",
        "Star",
        "Button",
        "CardHeader",
        "CardTitle",
        "Progress",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/intelligence/predictive/BehaviorPatternAnalytics.tsx",
      "name": "BehaviorPatternAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress"
      ],
      "exports": [
        "BehaviorPatternAnalytics"
      ],
      "usedComponents": [
        "CheckCircle",
        "DollarSign",
        "Brain",
        "Zap",
        "XCircle",
        "Target",
        "Users",
        "Badge",
        "Progress",
        "Card",
        "CardContent",
        "TrendingUp",
        "Button",
        "CardHeader",
        "CardTitle"
      ]
    },
    {
      "path": "src/components/intelligence/predictive/BookingProbabilityChart.tsx",
      "name": "BookingProbabilityChart",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress"
      ],
      "exports": [
        "BookingProbabilityChart"
      ],
      "usedComponents": [
        "Target",
        "TrendingUp",
        "Progress",
        "Card",
        "CardContent",
        "Users",
        "DollarSign",
        "Button",
        "BarChart3",
        "Clock",
        "CardHeader",
        "CardTitle",
        "Badge",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/intelligence/predictive/ClientIntentWidget.tsx",
      "name": "ClientIntentWidget",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "ClientIntentWidget"
      ],
      "usedComponents": [
        "TrendingUp",
        "TrendingDown",
        "Minus",
        "Users",
        "Target",
        "TrendIcon",
        "Progress",
        "Card",
        "CardContent",
        "Activity",
        "Clock",
        "CardHeader",
        "CardTitle",
        "Badge"
      ]
    },
    {
      "path": "src/components/intelligence/predictive/HistoricalInsights.tsx",
      "name": "HistoricalInsights",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/lib/ml/prediction/historical-analyzer"
      ],
      "exports": [
        "HistoricalInsights"
      ],
      "usedComponents": [
        "HistoricalAnalytics",
        "SeasonalPattern",
        "ChurnPattern",
        "Date",
        "TrendingUp",
        "TrendingDown",
        "BarChart3",
        "RefreshCw",
        "Card",
        "CardContent",
        "AlertTriangle",
        "Badge",
        "Button",
        "Download",
        "Target",
        "Clock",
        "Users",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Progress",
        "Lightbulb"
      ]
    },
    {
      "path": "src/components/intelligence/predictive/PredictiveInsightsDashboard.tsx",
      "name": "PredictiveInsightsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/lib/ml/prediction/booking-predictor",
        "@/lib/ml/prediction/intent-scorer",
        "@/lib/ml/prediction/real-time-scoring",
        "./ClientIntentWidget",
        "./BookingProbabilityChart",
        "./BehaviorPatternAnalytics",
        "./RiskAssessmentPanel",
        "./ActionRecommendations"
      ],
      "exports": [
        "PredictiveInsightsDashboard"
      ],
      "usedComponents": [
        "DashboardMetrics",
        "BookingPrediction",
        "IntentScore",
        "BehaviorPattern",
        "Date",
        "RefreshCw",
        "Badge",
        "Button",
        "Download",
        "Card",
        "CardContent",
        "Users",
        "TrendingUp",
        "Target",
        "Star",
        "AlertTriangle",
        "DollarSign",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Activity",
        "ClientIntentWidget",
        "BookingProbabilityChart",
        "BehaviorPatternAnalytics",
        "RiskAssessmentPanel",
        "ActionRecommendations",
        "Alert",
        "AlertTitle",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/intelligence/predictive/RiskAssessmentPanel.tsx",
      "name": "RiskAssessmentPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "RiskAssessmentPanel"
      ],
      "usedComponents": [
        "Badge",
        "XCircle",
        "AlertTriangle",
        "Clock",
        "Shield",
        "Activity",
        "Card",
        "CardContent",
        "DollarSign",
        "Target",
        "Button",
        "Users",
        "Bell",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "CardHeader",
        "CardTitle",
        "Progress",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/journey/JourneyCanvas.tsx",
      "name": "JourneyCanvas",
      "imports": [
        "../journey-builder/hooks/useCanvasState",
        "@/lib/utils",
        "./canvas/CanvasGrid",
        "./canvas/NodeLibrary",
        "./canvas/TimelineAnchor",
        "./canvas/NodeConnector",
        "../journey-builder/nodes/OverflowNodes"
      ],
      "exports": [
        "default",
        "JourneyCanvas"
      ],
      "usedComponents": [
        "Node",
        "HTMLDivElement",
        "NodeJS",
        "DndProvider",
        "DndContext",
        "NodeLibrary",
        "CanvasGrid",
        "ReactFlow",
        "Controls",
        "Background",
        "TimelineAnchor",
        "DragOverlay",
        "ReactFlowProvider",
        "JourneyCanvasInner"
      ]
    },
    {
      "path": "src/components/journey/canvas/CanvasGrid.tsx",
      "name": "CanvasGrid",
      "imports": [],
      "exports": [
        "default",
        "CanvasGrid",
        "snapToGrid",
        "getGridCoordinates",
        "gridToPixel"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/journey/canvas/NodeConnector.tsx",
      "name": "NodeConnector",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "NodeConnector",
        "ConnectionHandle",
        "getConnectionPosition"
      ],
      "usedComponents": [
        "Connection",
        "DragState",
        "SVGSVGElement",
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/journey/canvas/NodeLibrary.tsx",
      "name": "NodeLibrary",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "NodeLibrary"
      ],
      "usedComponents": [
        "IconComponent",
        "DraggableNode"
      ]
    },
    {
      "path": "src/components/journey/canvas/TimelineAnchor.tsx",
      "name": "TimelineAnchor",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "TimelineAnchor",
        "calculateExecutionDate",
        "validateTimelineConfig"
      ],
      "usedComponents": [
        "Date",
        "TimelineAnchorConfig",
        "Calendar",
        "Settings",
        "Clock",
        "AlertCircle",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/journey/nodes/ConditionalNode.tsx",
      "name": "ConditionalNode",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/components/ui/separator",
        "@/lib/journey/branching/conditionalEngine"
      ],
      "exports": [
        "default",
        "ConditionalNode"
      ],
      "usedComponents": [
        "ConditionalBranch",
        "ConditionalNodeProps",
        "Card",
        "GitBranch",
        "Badge",
        "CheckCircle",
        "XCircle",
        "Button",
        "Settings",
        "Input",
        "ConditionGroupPreview",
        "Eye",
        "Label",
        "ConditionBuilder",
        "ConditionGroupDisplay",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "ABTestConfig",
        "ConditionGroup",
        "Condition",
        "ConditionEditor",
        "Plus",
        "Trash2"
      ]
    },
    {
      "path": "src/components/journey/nodes/SplitNode.tsx",
      "name": "SplitNode",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/slider"
      ],
      "exports": [
        "default",
        "SplitNode"
      ],
      "usedComponents": [
        "SplitNodeData",
        "SplitNodeProps",
        "SplitBranch",
        "Card",
        "Shuffle",
        "Badge",
        "BarChart3",
        "Button",
        "Settings",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Label",
        "Target",
        "Plus",
        "BranchEditor",
        "AnalyticsConfig",
        "Trash2",
        "Slider"
      ]
    },
    {
      "path": "src/components/journey-builder/CanvasToolbar.tsx",
      "name": "CanvasToolbar",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "CanvasToolbar"
      ],
      "usedComponents": [
        "Button",
        "ZoomOut",
        "ZoomIn",
        "Maximize2",
        "Grid",
        "Undo",
        "Redo",
        "Upload",
        "Download",
        "Save",
        "Play",
        "Pause"
      ]
    },
    {
      "path": "src/components/journey-builder/JourneyCanvas.tsx",
      "name": "JourneyCanvas",
      "imports": [
        "./OverflowNodePalette",
        "./OverflowCanvasToolbar",
        "./hooks/useCanvasState",
        "@/lib/journey/canvas-to-execution",
        "./nodes/OverflowNodes"
      ],
      "exports": [
        "JourneyCanvas"
      ],
      "usedComponents": [
        "Node",
        "HTMLDivElement",
        "NodeJS",
        "DndContext",
        "OverflowNodePalette",
        "OverflowCanvasToolbar",
        "ReactFlow",
        "Controls",
        "Background",
        "DragOverlay",
        "ReactFlowProvider",
        "JourneyCanvasInner"
      ]
    },
    {
      "path": "src/components/journey-builder/NodeConfigPanel.tsx",
      "name": "NodeConfigPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "./config/TimelineNodeConfig",
        "./config/EmailNodeConfig",
        "./config/SmsNodeConfig",
        "./config/FormNodeConfig",
        "./config/MeetingNodeConfig",
        "./config/ReviewNodeConfig",
        "./config/ReferralNodeConfig",
        "./config/ConditionNodeConfig",
        "./config/SplitNodeConfig"
      ],
      "exports": [
        "default",
        "NodeConfigPanel"
      ],
      "usedComponents": [
        "Node",
        "TimelineNodeConfig",
        "EmailNodeConfig",
        "SmsNodeConfig",
        "FormNodeConfig",
        "MeetingNodeConfig",
        "ReviewNodeConfig",
        "ReferralNodeConfig",
        "ConditionNodeConfig",
        "SplitNodeConfig",
        "Settings",
        "Button",
        "X",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "AlertCircle",
        "CheckCircle",
        "Save",
        "Copy",
        "Trash2"
      ]
    },
    {
      "path": "src/components/journey-builder/NodePalette.tsx",
      "name": "NodePalette",
      "imports": [],
      "exports": [
        "NodePalette"
      ],
      "usedComponents": [
        "PlayCircle",
        "CheckCircle",
        "Mail",
        "FileText",
        "Star",
        "Calendar",
        "Users",
        "GitBranch",
        "Split",
        "DraggableNode"
      ]
    },
    {
      "path": "src/components/journey-builder/OverflowCanvasToolbar.tsx",
      "name": "OverflowCanvasToolbar",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/separator",
        "@/components/ui/badge"
      ],
      "exports": [
        "OverflowCanvasToolbar"
      ],
      "usedComponents": [
        "Button",
        "Undo",
        "Redo",
        "Separator",
        "ZoomIn",
        "ZoomOut",
        "Maximize",
        "Eye",
        "Download",
        "Badge",
        "Settings",
        "Save",
        "Play",
        "Sparkles",
        "Pause"
      ]
    },
    {
      "path": "src/components/journey-builder/OverflowNodePalette.tsx",
      "name": "OverflowNodePalette",
      "imports": [],
      "exports": [
        "OverflowNodePalette"
      ],
      "usedComponents": [
        "Sparkles",
        "PlayCircle",
        "CheckCircle",
        "Mail",
        "FileText",
        "Star",
        "Clock",
        "Calendar",
        "Users",
        "GitBranch",
        "Split",
        "DraggableNode"
      ]
    },
    {
      "path": "src/components/journey-builder/OverflowTemplateCard.tsx",
      "name": "OverflowTemplateCard",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/journey/templates/types"
      ],
      "exports": [
        "OverflowTemplateCard"
      ],
      "usedComponents": [
        "TrendingUp",
        "Sparkles",
        "Badge",
        "Clock",
        "Star",
        "ChevronRight",
        "Button",
        "Eye",
        "Lock",
        "Copy"
      ]
    },
    {
      "path": "src/components/journey-builder/TemplatePreviewModal.tsx",
      "name": "TemplatePreviewModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/lib/journey/templates/library",
        "@/lib/journey/templates/types"
      ],
      "exports": [
        "TemplatePreviewModal"
      ],
      "usedComponents": [
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Badge",
        "Clock",
        "TrendingUp",
        "Workflow",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ReactFlow",
        "Background",
        "Controls",
        "MiniMap",
        "ScrollArea",
        "ChevronRight",
        "Variable",
        "Target",
        "DialogFooter",
        "Button",
        "Copy"
      ]
    },
    {
      "path": "src/components/journey-builder/__tests__/performance.test.tsx",
      "name": "performance.test",
      "imports": [
        "../JourneyCanvas"
      ],
      "exports": [],
      "usedComponents": [
        "JourneyCanvas"
      ]
    },
    {
      "path": "src/components/journey-builder/config/ConditionNodeConfig.tsx",
      "name": "ConditionNodeConfig",
      "imports": [],
      "exports": [
        "ConditionNodeConfig"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/journey-builder/config/EmailNodeConfig.tsx",
      "name": "EmailNodeConfig",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "EmailNodeConfig"
      ],
      "usedComponents": [
        "User",
        "Users",
        "Mail",
        "Button",
        "Clock",
        "Eye",
        "Wand2"
      ]
    },
    {
      "path": "src/components/journey-builder/config/FormNodeConfig.tsx",
      "name": "FormNodeConfig",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "FormNodeConfig"
      ],
      "usedComponents": [
        "Clock",
        "Badge",
        "Button",
        "Users",
        "AlertCircle",
        "FileText",
        "Settings",
        "Eye",
        "Plus"
      ]
    },
    {
      "path": "src/components/journey-builder/config/MeetingNodeConfig.tsx",
      "name": "MeetingNodeConfig",
      "imports": [],
      "exports": [
        "MeetingNodeConfig"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/journey-builder/config/ReferralNodeConfig.tsx",
      "name": "ReferralNodeConfig",
      "imports": [],
      "exports": [
        "ReferralNodeConfig"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/journey-builder/config/ReviewNodeConfig.tsx",
      "name": "ReviewNodeConfig",
      "imports": [],
      "exports": [
        "ReviewNodeConfig"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/journey-builder/config/SmsNodeConfig.tsx",
      "name": "SmsNodeConfig",
      "imports": [],
      "exports": [
        "SmsNodeConfig"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/journey-builder/config/SplitNodeConfig.tsx",
      "name": "SplitNodeConfig",
      "imports": [],
      "exports": [
        "SplitNodeConfig"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/journey-builder/config/TimelineNodeConfig.tsx",
      "name": "TimelineNodeConfig",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "TimelineNodeConfig"
      ],
      "usedComponents": [
        "Target",
        "Clock",
        "AlertTriangle",
        "CheckCircle",
        "Button",
        "Badge",
        "Repeat",
        "Calendar"
      ]
    },
    {
      "path": "src/components/journey-builder/hooks/useCanvasState.ts",
      "name": "useCanvasState",
      "imports": [],
      "exports": [
        "useCanvasStore"
      ],
      "usedComponents": [
        "CanvasState"
      ]
    },
    {
      "path": "src/components/journey-builder/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/journey-builder/nodes/BaseNode.tsx",
      "name": "BaseNode",
      "imports": [],
      "exports": [
        "BaseNode"
      ],
      "usedComponents": [
        "Handle"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/ConditionNode.tsx",
      "name": "ConditionNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "ConditionNode"
      ],
      "usedComponents": [
        "BaseNode",
        "GitBranch"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/EmailNode.tsx",
      "name": "EmailNode",
      "imports": [
        "./OverflowBaseNode"
      ],
      "exports": [
        "EmailNode"
      ],
      "usedComponents": [
        "OverflowBaseNode",
        "Mail"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/EndNode.tsx",
      "name": "EndNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "EndNode"
      ],
      "usedComponents": [
        "BaseNode",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/FormNode.tsx",
      "name": "FormNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "FormNode"
      ],
      "usedComponents": [
        "BaseNode",
        "FileText"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/MeetingNode.tsx",
      "name": "MeetingNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "MeetingNode"
      ],
      "usedComponents": [
        "BaseNode",
        "Users"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/OverflowBaseNode.tsx",
      "name": "OverflowBaseNode",
      "imports": [],
      "exports": [
        "OverflowBaseNode"
      ],
      "usedComponents": [
        "Handle"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/OverflowNodes.tsx",
      "name": "OverflowNodes",
      "imports": [
        "./OverflowBaseNode"
      ],
      "exports": [
        "OverflowEmailNode",
        "OverflowTimelineNode",
        "OverflowFormNode",
        "OverflowConditionNode",
        "OverflowReviewNode",
        "OverflowMeetingNode",
        "OverflowSplitNode",
        "OverflowStartNode",
        "OverflowEndNode",
        "OverflowDelayNode"
      ],
      "usedComponents": [
        "OverflowBaseNode",
        "Mail",
        "Calendar",
        "FileText",
        "GitBranch",
        "Star",
        "Users",
        "Split",
        "PlayCircle",
        "CheckCircle",
        "Clock"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/ReviewNode.tsx",
      "name": "ReviewNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "ReviewNode"
      ],
      "usedComponents": [
        "BaseNode",
        "Star"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/SplitNode.tsx",
      "name": "SplitNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "SplitNode"
      ],
      "usedComponents": [
        "BaseNode",
        "Split"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/StartNode.tsx",
      "name": "StartNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "StartNode"
      ],
      "usedComponents": [
        "BaseNode",
        "PlayCircle"
      ]
    },
    {
      "path": "src/components/journey-builder/nodes/TimelineNode.tsx",
      "name": "TimelineNode",
      "imports": [
        "./BaseNode"
      ],
      "exports": [
        "TimelineNode"
      ],
      "usedComponents": [
        "BaseNode",
        "Calendar"
      ]
    },
    {
      "path": "src/components/journey-engine/JourneyExecutionMonitor.tsx",
      "name": "JourneyExecutionMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/badge",
        "@/hooks/useSupabaseRealtime"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "JourneyInstance",
        "JourneyExecutionMetrics",
        "JourneyExecution",
        "Card",
        "CardContent",
        "Activity",
        "CheckCircle",
        "AlertTriangle",
        "TrendingUp",
        "CardHeader",
        "CardTitle",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "PieChart",
        "Pie",
        "Cell",
        "Badge",
        "Button",
        "Pause",
        "Play",
        "Square",
        "Settings",
        "Clock",
        "AlertCircle",
        "RefreshCw",
        "Icon"
      ]
    },
    {
      "path": "src/components/knowledge-base/ArticleDisplay.tsx",
      "name": "ArticleDisplay",
      "imports": [
        "./ArticleRating"
      ],
      "exports": [
        "ArticleDisplay"
      ],
      "usedComponents": [
        "ArrowLeftIcon",
        "BookmarkIconSolid",
        "BookmarkIcon",
        "ShareIcon",
        "PrinterIcon",
        "ClockIcon",
        "EyeIcon",
        "StarIcon",
        "HandThumbUpIcon",
        "HandThumbDownIcon",
        "ArticleRating"
      ]
    },
    {
      "path": "src/components/knowledge-base/ArticleRating.tsx",
      "name": "ArticleRating",
      "imports": [],
      "exports": [
        "ArticleRating"
      ],
      "usedComponents": [
        "StarIconSolid",
        "StarIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/knowledge-base/ContextualHelpWidget.tsx",
      "name": "ContextualHelpWidget",
      "imports": [],
      "exports": [
        "ContextualHelpWidget"
      ],
      "usedComponents": [
        "AnimatePresence",
        "XMarkIcon",
        "Icon",
        "BookOpenIcon",
        "MagnifyingGlassIcon",
        "ChatBubbleLeftEllipsisIcon",
        "QuestionMarkCircleIcon"
      ]
    },
    {
      "path": "src/components/knowledge-base/IntelligentSearchBar.tsx",
      "name": "IntelligentSearchBar",
      "imports": [],
      "exports": [
        "IntelligentSearchBar"
      ],
      "usedComponents": [
        "SearchSuggestion",
        "SearchFilter",
        "HTMLInputElement",
        "MagnifyingGlassIcon",
        "XMarkIcon",
        "FunnelIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/knowledge-base/KnowledgeBaseInterface.tsx",
      "name": "KnowledgeBaseInterface",
      "imports": [
        "./IntelligentSearchBar",
        "./SearchResults",
        "./ArticleDisplay",
        "./TutorialProgress",
        "./KnowledgeBaseNavigation",
        "./ContextualHelpWidget",
        "./ArticleRating"
      ],
      "exports": [
        "KnowledgeBaseInterface"
      ],
      "usedComponents": [
        "ViewType",
        "SearchResult",
        "Article",
        "Tutorial",
        "UserProgress",
        "IntelligentSearchBar",
        "SearchResults",
        "ArticleDisplay",
        "TutorialProgress",
        "KnowledgeBaseNavigation",
        "AnimatePresence",
        "ContextualHelpWidget"
      ]
    },
    {
      "path": "src/components/knowledge-base/KnowledgeBaseNavigation.tsx",
      "name": "KnowledgeBaseNavigation",
      "imports": [],
      "exports": [
        "KnowledgeBaseNavigation"
      ],
      "usedComponents": [
        "Set",
        "ChevronDownIcon",
        "ChevronRightIcon",
        "FolderOpenIcon",
        "FolderIcon",
        "BookOpenIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/knowledge-base/SearchResults.tsx",
      "name": "SearchResults",
      "imports": [],
      "exports": [
        "SearchResults"
      ],
      "usedComponents": [
        "MagnifyingGlassIcon",
        "AnimatePresence",
        "ClockIcon",
        "StarIcon",
        "EyeIcon",
        "ChevronLeftIcon",
        "ChevronRightIcon"
      ]
    },
    {
      "path": "src/components/knowledge-base/TutorialProgress.tsx",
      "name": "TutorialProgress",
      "imports": [],
      "exports": [
        "TutorialProgress"
      ],
      "usedComponents": [
        "Set",
        "TrophyIcon",
        "AcademicCapIcon",
        "CheckCircleIconSolid",
        "ClockIcon",
        "ChevronDownIcon",
        "ChevronRightIcon",
        "AnimatePresence",
        "PlayIcon",
        "CheckCircleIcon",
        "BookmarkIconSolid",
        "BookmarkIcon",
        "StarIcon"
      ]
    },
    {
      "path": "src/components/leads/LeadScoringCard.tsx",
      "name": "LeadScoringCard",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "MinusIcon",
        "StarIcon",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "InformationCircleIcon",
        "ArrowPathIcon",
        "CardContent",
        "Badge",
        "Progress"
      ]
    },
    {
      "path": "src/components/leads/StatusProgressionTimeline.tsx",
      "name": "StatusProgressionTimeline",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge",
        "Button",
        "ClockIcon",
        "CheckCircleIcon",
        "UserIcon"
      ]
    },
    {
      "path": "src/components/magicui/shimmer-button.tsx",
      "name": "shimmer-button",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLButtonElement"
      ]
    },
    {
      "path": "src/components/magicui/shine-border.tsx",
      "name": "shine-border",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "ShineBorder"
      ],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/maintenance/MaintenancePage.tsx",
      "name": "MaintenancePage",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Clock",
        "Wrench",
        "CheckCircle",
        "AlertCircle",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "Heart",
        "Progress",
        "Button",
        "MessageCircle",
        "Twitter",
        "Mail"
      ]
    },
    {
      "path": "src/components/maps/SupplierLocationMap.tsx",
      "name": "SupplierLocationMap",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/lib/services/geographic-search-service"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MapSettings",
        "MapSupplier",
        "MapLocation",
        "Map",
        "InfoWindow",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Star",
        "Badge",
        "Shield",
        "Button",
        "Navigation",
        "LoadScript",
        "Card",
        "Target",
        "Minimize2",
        "Maximize2",
        "Settings",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Layers",
        "Label",
        "Switch",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "GoogleMap",
        "Marker",
        "Circle",
        "React"
      ]
    },
    {
      "path": "src/components/marketing/AttributionVisualizer.tsx",
      "name": "AttributionVisualizer",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select"
      ],
      "exports": [
        "AttributionVisualizer"
      ],
      "usedComponents": [
        "AttributionPath",
        "AttributionModel",
        "SankeyData",
        "Mail",
        "Share2",
        "Eye",
        "DollarSign",
        "GitBranch",
        "MousePointer",
        "Target",
        "Card",
        "CardHeader",
        "CardTitle",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardContent",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "React",
        "Sankey",
        "Badge"
      ]
    },
    {
      "path": "src/components/marketing/CampaignBuilder.tsx",
      "name": "CampaignBuilder",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "CampaignBuilder"
      ],
      "usedComponents": [
        "CampaignStep",
        "CampaignMetrics",
        "Users",
        "Target",
        "Zap",
        "TrendingUp",
        "Card",
        "CardHeader",
        "CardTitle",
        "Sparkles",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Label",
        "Input",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Mail",
        "MessageSquare",
        "Clock",
        "Badge",
        "Brain"
      ]
    },
    {
      "path": "src/components/marketing/CampaignDashboard.tsx",
      "name": "CampaignDashboard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/hooks/use-toast",
        "./CampaignBuilder",
        "./CampaignAnalytics",
        "./SegmentManager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Campaign",
        "CampaignStats",
        "Mail",
        "MessageSquare",
        "BarChart3",
        "Play",
        "Button",
        "Users",
        "Plus",
        "Card",
        "CardContent",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Badge",
        "Edit",
        "Pause",
        "Trash2",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "CampaignBuilder",
        "CampaignAnalytics",
        "SegmentManager"
      ]
    },
    {
      "path": "src/components/marketing/MarketingDashboard.tsx",
      "name": "MarketingDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "./CampaignBuilder",
        "./ViralTracker",
        "./AttributionVisualizer"
      ],
      "exports": [
        "MarketingDashboard"
      ],
      "usedComponents": [
        "DashboardMetrics",
        "CampaignPerformance",
        "ChannelPerformance",
        "Date",
        "RefreshCw",
        "Button",
        "Card",
        "CardContent",
        "ArrowUpRight",
        "ArrowDownRight",
        "DollarSign",
        "Target",
        "Users",
        "BarChart3",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "ResponsiveContainer",
        "RadarChart",
        "PolarGrid",
        "PolarAngleAxis",
        "PolarRadiusAxis",
        "Radar",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "Badge",
        "ViralTracker",
        "AttributionVisualizer",
        "CampaignBuilder"
      ]
    },
    {
      "path": "src/components/marketing/ViralTracker.tsx",
      "name": "ViralTracker",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "ViralTracker"
      ],
      "usedComponents": [
        "ViralMetrics",
        "TimeSeriesData",
        "ViralChain",
        "Card",
        "CardHeader",
        "CardContent",
        "CardTitle",
        "Activity",
        "Badge",
        "ArrowUp",
        "ArrowDown",
        "Progress",
        "Share2",
        "Users",
        "Target",
        "Award",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "Zap"
      ]
    },
    {
      "path": "src/components/marketplace/CategoryFilter.tsx",
      "name": "CategoryFilter",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/collapsible"
      ],
      "exports": [
        "CategoryFilter"
      ],
      "usedComponents": [
        "Set",
        "Filter",
        "Button",
        "X",
        "Search",
        "Input",
        "ChevronDown",
        "ChevronRight",
        "Badge",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/marketplace/CommissionManagementPanel.tsx",
      "name": "CommissionManagementPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/alert"
      ],
      "exports": [
        "CommissionManagementPanel"
      ],
      "usedComponents": [
        "CommissionTier",
        "CreatorCommissionData",
        "Alert",
        "RefreshCw",
        "CheckCircle",
        "AlertTriangle",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "Percent",
        "CardDescription",
        "CardContent",
        "Label",
        "Input",
        "Separator",
        "Button",
        "Users",
        "Badge",
        "Settings",
        "TrendingUp",
        "Calculator"
      ]
    },
    {
      "path": "src/components/marketplace/CreatorEarningsTable.tsx",
      "name": "CreatorEarningsTable",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/select"
      ],
      "exports": [
        "CreatorEarningsTable"
      ],
      "usedComponents": [
        "CreatorEarning",
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardDescription",
        "Button",
        "Download",
        "CardContent",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "DollarSign",
        "TrendingUp",
        "Award",
        "Calendar",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "TrendingDown",
        "Badge",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/marketplace/FinancialReportsSection.tsx",
      "name": "FinancialReportsSection",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "FinancialReportsSection"
      ],
      "usedComponents": [
        "TaxDocument",
        "Check",
        "Mail",
        "FileText",
        "Clock",
        "AlertTriangle",
        "Alert",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Download",
        "BarChart",
        "PieChart",
        "Badge",
        "Receipt",
        "Calculator",
        "TrendingUp",
        "FileSpreadsheet",
        "Calendar"
      ]
    },
    {
      "path": "src/components/marketplace/MarketplaceFilterSidebar.tsx",
      "name": "MarketplaceFilterSidebar",
      "imports": [
        "@/components/ui/slider",
        "@/components/ui/checkbox",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "MarketplaceFilterSidebar"
      ],
      "usedComponents": [
        "Badge",
        "ChevronUp",
        "ChevronDown",
        "Checkbox",
        "Slider",
        "FacetsData",
        "SearchFilters",
        "Camera",
        "Utensils",
        "Building",
        "Clipboard",
        "Flower",
        "Music",
        "Filter",
        "ScrollArea",
        "Button",
        "Loader2",
        "FilterSection",
        "FacetList",
        "DollarSign",
        "PriceRangeSlider",
        "Star",
        "Crown",
        "Hash",
        "Calendar"
      ]
    },
    {
      "path": "src/components/marketplace/MarketplaceRevenueMetrics.tsx",
      "name": "MarketplaceRevenueMetrics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "MarketplaceRevenueMetrics"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "Badge",
        "TrendingUp",
        "TrendingDown",
        "Progress",
        "Users",
        "Award",
        "ShoppingBag",
        "Target",
        "Calendar"
      ]
    },
    {
      "path": "src/components/marketplace/MarketplaceSearchInterface.tsx",
      "name": "MarketplaceSearchInterface",
      "imports": [
        "@/hooks/useDebounce",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "MarketplaceSearchInterface"
      ],
      "usedComponents": [
        "SearchSuggestion",
        "RecentSearch",
        "SearchFilters",
        "HTMLInputElement",
        "HTMLDivElement",
        "Search",
        "TrendingUp",
        "Badge",
        "Clock",
        "Input",
        "X",
        "Loader2",
        "Star",
        "Button",
        "Bookmark"
      ]
    },
    {
      "path": "src/components/marketplace/MarketplaceSearchPage.tsx",
      "name": "MarketplaceSearchPage",
      "imports": [
        "./MarketplaceSearchInterface",
        "./MarketplaceFilterSidebar",
        "./MarketplaceSearchResults",
        "@/components/ui/button",
        "@/components/ui/sheet"
      ],
      "exports": [
        "MarketplaceSearchPage"
      ],
      "usedComponents": [
        "SearchFilters",
        "SearchResults",
        "MarketplaceSearchInterface",
        "MarketplaceFilterSidebar",
        "Sheet",
        "SheetTrigger",
        "Button",
        "Filter",
        "SheetContent",
        "X",
        "MarketplaceSearchResults"
      ]
    },
    {
      "path": "src/components/marketplace/MarketplaceSearchResults.tsx",
      "name": "MarketplaceSearchResults",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/card"
      ],
      "exports": [
        "MarketplaceSearchResults"
      ],
      "usedComponents": [
        "Card",
        "Filter",
        "Badge",
        "Star",
        "Download",
        "Eye",
        "TrendingUp",
        "CardHeader",
        "CardContent",
        "CardFooter",
        "Search",
        "ViewMode",
        "SortOption",
        "Loader2",
        "EmptyState",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "SortDesc",
        "Button",
        "Grid",
        "List",
        "TemplateCard",
        "ChevronLeft",
        "React",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/marketplace/MobilePurchaseInterface.tsx",
      "name": "MobilePurchaseInterface",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/separator",
        "@/components/ui/scroll-area",
        "@/lib/utils",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default",
        "PurchaseButton"
      ],
      "usedComponents": [
        "Button",
        "ArrowLeft",
        "ScrollArea",
        "Monitor",
        "Badge",
        "Users",
        "Star",
        "Download",
        "Smartphone",
        "Tablet",
        "Zap",
        "ShoppingCart",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Separator",
        "Label",
        "Input",
        "Loader2",
        "Shield",
        "AlertCircle",
        "CreditCard",
        "MobilePurchaseInterface"
      ]
    },
    {
      "path": "src/components/marketplace/PurchaseButton.tsx",
      "name": "PurchaseButton",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/stripe-config",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default",
        "PurchaseButton",
        "BulkPurchaseButton",
        "OneClickPurchaseButton"
      ],
      "usedComponents": [
        "PurchaseButtonProps",
        "PurchaseState",
        "Loader2",
        "Check",
        "AlertCircle",
        "Download",
        "Zap",
        "ShoppingCart",
        "Button",
        "Lock",
        "Badge",
        "PurchaseButton"
      ]
    },
    {
      "path": "src/components/marketplace/PurchaseModal.tsx",
      "name": "PurchaseModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/components/ui/alert",
        "@/lib/stripe-config"
      ],
      "exports": [
        "default",
        "PurchaseModal"
      ],
      "usedComponents": [
        "PurchaseState",
        "PurchaseReview",
        "PaymentForm",
        "ProcessingState",
        "SuccessState",
        "ErrorState",
        "Badge",
        "Star",
        "Users",
        "Clock",
        "CheckCircle",
        "Shield",
        "Button",
        "Loader2",
        "ArrowRight",
        "Separator",
        "CreditCard",
        "CardElement",
        "Alert",
        "AlertDescription",
        "Download",
        "AlertCircle",
        "PurchaseModalProps",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Elements",
        "PurchaseFlow"
      ]
    },
    {
      "path": "src/components/marketplace/RevenueChartsPanel.tsx",
      "name": "RevenueChartsPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/select"
      ],
      "exports": [
        "RevenueChartsPanel"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "CardDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardContent",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Line",
        "BarChart",
        "Legend",
        "Bar",
        "PieChartIcon",
        "PieChart",
        "Pie",
        "Cell",
        "CustomPieTooltip",
        "BarChart3",
        "DollarSign",
        "Badge",
        "Award"
      ]
    },
    {
      "path": "src/components/marketplace/TemplateCard.tsx",
      "name": "TemplateCard",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card"
      ],
      "exports": [
        "TemplateCard"
      ],
      "usedComponents": [
        "Card",
        "Badge",
        "Award",
        "Button",
        "Play",
        "Heart",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Star",
        "ExternalLink",
        "ShoppingBag",
        "Clock",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/marketplace/creator/analytics/ABTestManager.tsx",
      "name": "ABTestManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/dialog",
        "@/components/ui/form",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/slider"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ABTestFormData",
        "Card",
        "CardContent",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Form",
        "FormField",
        "FormItem",
        "FormLabel",
        "Select",
        "FormControl",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "FormMessage",
        "Input",
        "Slider",
        "FormDescription",
        "DialogFooter",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Badge",
        "Progress",
        "TrendingUp",
        "Trophy",
        "AlertCircle",
        "Pause",
        "StopCircle",
        "ChevronRight",
        "FlaskConical"
      ]
    },
    {
      "path": "src/components/marketplace/creator/analytics/CreatorAnalyticsDashboard.tsx",
      "name": "CreatorAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/components/ui/tabs",
        "@/lib/utils",
        "./InsightsPanel",
        "./ABTestManager",
        "./RevenueChart",
        "./TemplatePerformanceTable"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "AlertCircle",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "RefreshCw",
        "Download",
        "CardHeader",
        "CardTitle",
        "ShoppingCart",
        "TrendingUp",
        "DollarSign",
        "Activity",
        "TrendingDown",
        "Users",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "Legend",
        "BarChart",
        "Bar",
        "RevenueChart",
        "TemplatePerformanceTable",
        "InsightsPanel",
        "ABTestManager"
      ]
    },
    {
      "path": "src/components/marketplace/creator/analytics/InsightsPanel.tsx",
      "name": "InsightsPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DollarSign",
        "Package",
        "Calendar",
        "Lightbulb",
        "Info",
        "Card",
        "CardContent",
        "Badge",
        "TrendingUp",
        "Alert",
        "AlertTitle",
        "Button",
        "X",
        "AlertDescription",
        "ChevronRight",
        "CardHeader",
        "CardTitle",
        "CardDescription"
      ]
    },
    {
      "path": "src/components/marketplace/creator/analytics/RevenueChart.tsx",
      "name": "RevenueChart",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "TrendingUp",
        "TrendingDown",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "BarChart",
        "Bar",
        "Badge",
        "Calendar"
      ]
    },
    {
      "path": "src/components/marketplace/creator/analytics/TemplatePerformanceTable.tsx",
      "name": "TemplatePerformanceTable",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/components/ui/input",
        "@/components/ui/table",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Search",
        "Input",
        "CardContent",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "Button",
        "ArrowUpDown",
        "TableBody",
        "TableCell",
        "Eye",
        "ShoppingCart",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuLabel",
        "DropdownMenuSeparator",
        "DropdownMenuItem",
        "Edit",
        "BarChart3",
        "FlaskConical"
      ]
    },
    {
      "path": "src/components/messaging/ActivityFeed.tsx",
      "name": "ActivityFeed",
      "imports": [
        "@/lib/supabase/realtime",
        "@/types/database",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "ActivityFeed"
      ],
      "usedComponents": [
        "ActivityFeed",
        "Bell",
        "Icon",
        "Avatar",
        "Badge",
        "Button",
        "Eye"
      ]
    },
    {
      "path": "src/components/messaging/ConversationList.tsx",
      "name": "ConversationList",
      "imports": [
        "@/lib/supabase/client",
        "@/lib/supabase/realtime",
        "@/types/database",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input"
      ],
      "exports": [
        "ConversationList"
      ],
      "usedComponents": [
        "Conversation",
        "Button",
        "Plus",
        "Search",
        "Input",
        "MessageCircle",
        "Avatar",
        "Badge"
      ]
    },
    {
      "path": "src/components/messaging/DeliveryStatusMobile.tsx",
      "name": "DeliveryStatusMobile",
      "imports": [
        "@/components/ui/card",
        "@/components/touch/TouchButton",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/progress"
      ],
      "exports": [
        "DeliveryStatusMobile"
      ],
      "usedComponents": [
        "Card",
        "MessageSquare",
        "WifiOff",
        "TouchButton",
        "RefreshCw",
        "ScrollArea",
        "ChannelIcon",
        "Badge",
        "ExternalLink",
        "Progress",
        "StatusIcon"
      ]
    },
    {
      "path": "src/components/messaging/GuestSelectionModal.tsx",
      "name": "GuestSelectionModal",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/touch/TouchButton",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "GuestSelectionModal"
      ],
      "usedComponents": [
        "UserCheck",
        "Heart",
        "Users",
        "Card",
        "TouchButton",
        "X",
        "Filter",
        "Search",
        "Input",
        "ScrollArea",
        "Badge",
        "Checkbox",
        "Check"
      ]
    },
    {
      "path": "src/components/messaging/MessageThread.tsx",
      "name": "MessageThread",
      "imports": [
        "@/lib/supabase/realtime",
        "@/types/database",
        "@/components/ui/button"
      ],
      "exports": [
        "MessageThread"
      ],
      "usedComponents": [
        "Message",
        "NodeJS",
        "HTMLDivElement",
        "HTMLTextAreaElement",
        "Avatar",
        "Button",
        "MoreVertical",
        "Paperclip",
        "Send"
      ]
    },
    {
      "path": "src/components/messaging/MessagingLayout.tsx",
      "name": "MessagingLayout",
      "imports": [
        "./ConversationList",
        "./MessageThread",
        "./ActivityFeed",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/types/database"
      ],
      "exports": [
        "MessagingLayout"
      ],
      "usedComponents": [
        "Conversation",
        "ConversationList",
        "MessageThread",
        "Plus",
        "Button",
        "ActivityFeed",
        "Dialog",
        "X",
        "Search",
        "Input"
      ]
    },
    {
      "path": "src/components/messaging/MessagingStatsDashboard.tsx",
      "name": "MessagingStatsDashboard",
      "imports": [
        "@/lib/utils",
        "@/lib/supabase/client"
      ],
      "exports": [
        "MessagingStatsDashboard"
      ],
      "usedComponents": [
        "MessagingStats",
        "TrendingUp",
        "TrendingDown",
        "AlertCircle",
        "MessageSquare",
        "Activity",
        "StatCard",
        "CheckCheck",
        "Users",
        "Clock",
        "BarChart3",
        "PieChart",
        "Calendar",
        "AnimatePresence",
        "Send"
      ]
    },
    {
      "path": "src/components/messaging/MobileMessageComposer.tsx",
      "name": "MobileMessageComposer",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/components/ui/card",
        "@/components/touch/TouchButton"
      ],
      "exports": [
        "MobileMessageComposer"
      ],
      "usedComponents": [
        "HTMLTextAreaElement",
        "Card",
        "Clock",
        "TouchButton",
        "X",
        "Users",
        "Textarea",
        "AlertTriangle",
        "Send"
      ]
    },
    {
      "path": "src/components/messaging/MobilePersonalization.tsx",
      "name": "MobilePersonalization",
      "imports": [
        "@/components/ui/card",
        "@/components/touch/TouchButton",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/scroll-area",
        "@/components/ui/textarea"
      ],
      "exports": [
        "MobilePersonalization"
      ],
      "usedComponents": [
        "User",
        "Users",
        "Heart",
        "Calendar",
        "MapPin",
        "Clock",
        "Sparkles",
        "Set",
        "HTMLTextAreaElement",
        "Card",
        "TouchButton",
        "Edit3",
        "MessageSquare",
        "Check",
        "X",
        "ScrollArea",
        "Badge",
        "ChevronDown",
        "ChevronRight",
        "Plus",
        "Input"
      ]
    },
    {
      "path": "src/components/messaging/OfflineMessageQueue.tsx",
      "name": "OfflineMessageQueue",
      "imports": [
        "@/components/ui/use-toast",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/touch/TouchButton"
      ],
      "exports": [
        "OfflineMessageProvider",
        "useOfflineMessageQueue"
      ],
      "usedComponents": [
        "QueuedMessage",
        "OfflineMessageContext",
        "OfflineMessageQueueUI",
        "TouchButton",
        "Wifi",
        "WifiOff",
        "Badge",
        "Card",
        "X",
        "Clock",
        "Send",
        "Upload"
      ]
    },
    {
      "path": "src/components/messaging/PushNotifications.tsx",
      "name": "PushNotifications",
      "imports": [
        "@/components/ui/Toast",
        "@/components/touch/TouchButton",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "PushNotificationProvider",
        "usePushNotifications",
        "NotificationSettings"
      ],
      "usedComponents": [
        "PushNotificationSettings",
        "MessageNotification",
        "NotificationPermission",
        "PushNotificationContext",
        "NotificationDisplay",
        "Card",
        "BellOff",
        "Bell",
        "Badge",
        "TouchButton",
        "CheckCircle2",
        "AlertCircle",
        "Users",
        "Volume2",
        "VolumeX",
        "MessageSquare",
        "X"
      ]
    },
    {
      "path": "src/components/messaging/QuickActionTemplates.tsx",
      "name": "QuickActionTemplates",
      "imports": [
        "@/lib/utils",
        "@/lib/supabase/client",
        "@/lib/services/smart-message-composer",
        "@/lib/services/push-notification-system",
        "@/lib/services/advanced-offline-sync"
      ],
      "exports": [
        "QuickActionTemplates"
      ],
      "usedComponents": [
        "TemplateAction",
        "QuickAction",
        "HTMLDivElement",
        "Clock",
        "Heart",
        "AlertCircle",
        "MapPin",
        "Phone",
        "Archive",
        "Mail",
        "CheckCircle",
        "Send"
      ]
    },
    {
      "path": "src/components/messaging/QuickMessageTemplates.tsx",
      "name": "QuickMessageTemplates",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/touch/TouchButton",
        "@/components/ui/badge",
        "@/components/ui/input"
      ],
      "exports": [
        "QuickMessageTemplates"
      ],
      "usedComponents": [
        "MapPin",
        "Clock",
        "AlertTriangle",
        "Car",
        "Camera",
        "Heart",
        "Calendar",
        "Utensils",
        "Gift",
        "MessageTemplate",
        "Card",
        "TouchButton",
        "Badge",
        "Search",
        "Input",
        "Info"
      ]
    },
    {
      "path": "src/components/messaging/TouchOptimizedControls.tsx",
      "name": "TouchOptimizedControls",
      "imports": [
        "@/components/touch/TouchButton",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "TouchOptimizedControls"
      ],
      "usedComponents": [
        "TouchButton",
        "Send",
        "MessageSquare",
        "X",
        "Badge",
        "AlertTriangle",
        "Users",
        "Eye",
        "Template",
        "Sparkles",
        "Clock",
        "Card",
        "Volume2"
      ]
    },
    {
      "path": "src/components/messaging/WedMeMessagingLayout.tsx",
      "name": "WedMeMessagingLayout",
      "imports": [
        "@/components/wedme/WedMeHeader",
        "./MobileMessageComposer",
        "./QuickMessageTemplates",
        "./GuestSelectionModal",
        "./DeliveryStatusMobile",
        "./OfflineMessageQueue",
        "@/components/touch/TouchButton",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs"
      ],
      "exports": [
        "WedMeMessagingLayout"
      ],
      "usedComponents": [
        "MessageTemplate",
        "WedMeHeader",
        "Card",
        "CheckCircle2",
        "Clock",
        "MessageSquare",
        "AlertCircle",
        "Sparkles",
        "Badge",
        "TouchButton",
        "Send",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Template",
        "History",
        "TabsContent",
        "QuickMessageTemplates",
        "DeliveryStatusMobile",
        "MobileMessageComposer",
        "GuestSelectionModal",
        "Heart",
        "OfflineMessageProvider",
        "WedMeMessagingContent"
      ]
    },
    {
      "path": "src/components/metrics/engagement/EngagementDashboard.tsx",
      "name": "EngagementDashboard",
      "imports": [
        "@/lib/analytics/real-time-metrics"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DashboardData",
        "Date",
        "Mail",
        "Eye",
        "FileText",
        "MousePointer",
        "Clock",
        "DollarSign",
        "DashboardSkeleton",
        "AlertTriangle",
        "RefreshCw",
        "SummaryCard",
        "Target",
        "Users",
        "ResponsiveContainer",
        "AreaChart",
        "linearGradient",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "PerformanceMetric",
        "Bell",
        "Zap",
        "TrendingUp",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/mobile/AppleCalendarMobile.tsx",
      "name": "AppleCalendarMobile",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "AppleCalendarMobile"
      ],
      "usedComponents": [
        "Calendar",
        "ChevronLeft",
        "ChevronRight",
        "AnimatePresence",
        "Plus",
        "Clock",
        "MapPin"
      ]
    },
    {
      "path": "src/components/mobile/EmergencyControlPanel.tsx",
      "name": "EmergencyControlPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "EmergencyControlPanel"
      ],
      "usedComponents": [
        "EmergencyAction",
        "SystemStatus",
        "Date",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "Button",
        "Volume2",
        "VolumeX",
        "Badge",
        "Activity",
        "CardContent",
        "Phone",
        "Shield",
        "Timer",
        "AnimatePresence",
        "selectedAction",
        "Progress",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/mobile/MobileArrangementPlanner.tsx",
      "name": "MobileArrangementPlanner",
      "imports": [
        "@/hooks/useTouch"
      ],
      "exports": [
        "MobileArrangementPlanner"
      ],
      "usedComponents": [
        "ArrangementItem"
      ]
    },
    {
      "path": "src/components/mobile/MobileColorPalette.tsx",
      "name": "MobileColorPalette",
      "imports": [
        "@/hooks/useTouch",
        "./MobileColorPicker"
      ],
      "exports": [
        "MobileColorPalette"
      ],
      "usedComponents": [
        "ColorPalette",
        "MobileColorPicker"
      ]
    },
    {
      "path": "src/components/mobile/MobileColorPicker.tsx",
      "name": "MobileColorPicker",
      "imports": [
        "@/hooks/useTouch"
      ],
      "exports": [
        "MobileColorPicker"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLCanvasElement"
      ]
    },
    {
      "path": "src/components/mobile/MobileEnhancedFeatures.tsx",
      "name": "MobileEnhancedFeatures",
      "imports": [
        "@/lib/utils",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "useSwipeGesture",
        "PullToRefresh",
        "SwipeableCard",
        "BottomSheet",
        "useLongPress",
        "useHapticFeedback",
        "MobileEnhancedExample"
      ],
      "usedComponents": [
        "SwipeConfig",
        "PullToRefreshConfig",
        "HTMLDivElement",
        "RefreshCwIcon",
        "NodeJS",
        "PullToRefresh",
        "SwipeableCard",
        "HeartIcon",
        "ShareIcon",
        "BottomSheet"
      ]
    },
    {
      "path": "src/components/mobile/MobileFloristIntelligence.tsx",
      "name": "MobileFloristIntelligence",
      "imports": [
        "@/hooks/useTouch",
        "./MobileColorPicker",
        "./TouchFlowerSearch",
        "./MobileColorPalette",
        "./MobileArrangementPlanner",
        "./MobileSustainabilityAnalyzer"
      ],
      "exports": [
        "MobileFloristIntelligence"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "TouchFlowerSearch",
        "MobileColorPalette",
        "MobileArrangementPlanner",
        "MobileSustainabilityAnalyzer"
      ]
    },
    {
      "path": "src/components/mobile/MobileInfrastructureDashboard.tsx",
      "name": "MobileInfrastructureDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/progress"
      ],
      "exports": [
        "default",
        "MobileInfrastructureDashboard"
      ],
      "usedComponents": [
        "InfrastructureStatus",
        "CloudProvider",
        "WeddingAlert",
        "Date",
        "CheckCircle",
        "AlertTriangle",
        "Clock",
        "WifiOff",
        "Wifi",
        "Battery",
        "Button",
        "RefreshCw",
        "AnimatePresence",
        "TrendingUp",
        "Zap",
        "TrendingDown",
        "Card",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardContent",
        "Phone",
        "Shield",
        "Server",
        "Activity",
        "Progress",
        "Badge",
        "Icon"
      ]
    },
    {
      "path": "src/components/mobile/MobileMetricsCards.tsx",
      "name": "MobileMetricsCards",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default",
        "MobileMetricsCards"
      ],
      "usedComponents": [
        "PerformanceMetric",
        "TrendingUp",
        "TrendingDown",
        "Activity",
        "Icon",
        "Badge",
        "Progress",
        "ResponsiveContainer",
        "AreaChart",
        "linearGradient",
        "Area",
        "BarChart3",
        "Card",
        "CardContent"
      ]
    },
    {
      "path": "src/components/mobile/MobileNavigation.tsx",
      "name": "MobileNavigation",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "default",
        "MobileNavigation"
      ],
      "usedComponents": [
        "NodeJS",
        "Button",
        "Menu",
        "Badge",
        "Bell",
        "Search",
        "AnimatePresence",
        "AlertTriangle",
        "Plus",
        "X",
        "Calendar",
        "Filter"
      ]
    },
    {
      "path": "src/components/mobile/MobilePlacesSearch.tsx",
      "name": "MobilePlacesSearch",
      "imports": [
        "../../lib/mobile/venue-discovery-pwa",
        "../../lib/performance/places-cache-optimizer"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MobilePlacesSearchProps",
        "VenueDiscoveryPWA",
        "HTMLInputElement",
        "NodeJS",
        "SearchState",
        "SearchFilters",
        "WifiOff",
        "Wifi",
        "Navigation",
        "Search",
        "Filter",
        "RefreshCcw",
        "MapPin",
        "BookmarkPlus",
        "Star",
        "DollarSign",
        "Users",
        "Phone",
        "Globe",
        "Map"
      ]
    },
    {
      "path": "src/components/mobile/MobileSustainabilityAnalyzer.tsx",
      "name": "MobileSustainabilityAnalyzer",
      "imports": [
        "@/hooks/useTouch"
      ],
      "exports": [
        "MobileSustainabilityAnalyzer"
      ],
      "usedComponents": [
        "SustainabilityReport"
      ]
    },
    {
      "path": "src/components/mobile/MobileVariableForm.tsx",
      "name": "MobileVariableForm",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/hooks/useGestureHandler",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MobileVariableForm"
      ],
      "usedComponents": [
        "VariableFormData",
        "VoiceRecognition",
        "HTMLFormElement",
        "HTMLElement",
        "HTMLInputElement",
        "Card",
        "CardHeader",
        "CardTitle",
        "Smartphone",
        "Badge",
        "CardContent",
        "Label",
        "Type",
        "Button",
        "MicOff",
        "Mic",
        "Controller",
        "Input",
        "AlertCircle",
        "Hash",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "ToggleLeft",
        "FileJson",
        "Zap",
        "EyeOff",
        "Eye",
        "Textarea",
        "CheckCircle",
        "Switch",
        "CardFooter",
        "X",
        "Loader2",
        "Save"
      ]
    },
    {
      "path": "src/components/mobile/OutlookCalendarMobile.tsx",
      "name": "OutlookCalendarMobile",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "OutlookCalendarMobileProps",
        "Date",
        "ChevronLeft",
        "ChevronRight",
        "Filter",
        "RefreshCw",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/PWAInstallPrompt.tsx",
      "name": "PWAInstallPrompt",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/hooks/useMobileInfrastructure"
      ],
      "exports": [
        "default",
        "PWAInstallStatus"
      ],
      "usedComponents": [
        "BeforeInstallPromptEvent",
        "AnimatePresence",
        "Card",
        "CardContent",
        "Smartphone",
        "Badge",
        "Button",
        "X",
        "Zap",
        "Wifi",
        "Shield",
        "Battery",
        "Download"
      ]
    },
    {
      "path": "src/components/mobile/ProgressiveLoader.tsx",
      "name": "ProgressiveLoader",
      "imports": [
        "@/lib/loading/mobile-first-loader",
        "@/lib/utils/mobile-performance"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ComponentLoadingState",
        "Suspense",
        "FallbackComponents",
        "ComponentRegistry",
        "CustomError",
        "CustomLoading",
        "T"
      ]
    },
    {
      "path": "src/components/mobile/RateLimitIndicator.tsx",
      "name": "RateLimitIndicator",
      "imports": [
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "RateLimitIndicator"
      ],
      "usedComponents": [
        "Record",
        "Card",
        "WifiOff",
        "Badge",
        "TierIcon",
        "Wifi",
        "Clock",
        "Progress",
        "Button",
        "ArrowUp"
      ]
    },
    {
      "path": "src/components/mobile/TouchFlowerSearch.tsx",
      "name": "TouchFlowerSearch",
      "imports": [
        "@/hooks/useTouch",
        "./MobileColorPicker"
      ],
      "exports": [
        "TouchFlowerSearch"
      ],
      "usedComponents": [
        "FlowerData",
        "MobileColorPicker"
      ]
    },
    {
      "path": "src/components/mobile/TouchOptimizedVariableCard.tsx",
      "name": "TouchOptimizedVariableCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/hooks/useGestureHandler",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "TouchOptimizedVariableCard",
        "VirtualizedVariableList"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Trash2",
        "Card",
        "CardContent",
        "WifiOff",
        "Badge",
        "Lock",
        "Button",
        "EyeOff",
        "Eye",
        "Copy",
        "Unlock",
        "Edit",
        "Smartphone",
        "TouchOptimizedVariableCard"
      ]
    },
    {
      "path": "src/components/mobile/ai/MobileEmailTemplateGenerator.tsx",
      "name": "MobileEmailTemplateGenerator",
      "imports": [
        "@/lib/utils",
        "@/components/ui/use-toast",
        "@/components/mobile/MobileEnhancedFeatures",
        "./TouchOptimizedVariantSelector",
        "@/lib/mobile/ai-email-optimization"
      ],
      "exports": [
        "MobileEmailTemplateGenerator"
      ],
      "usedComponents": [
        "ClientContext",
        "VoiceRecognitionState",
        "Set",
        "EmailTemplate",
        "HTMLButtonElement",
        "ChevronDownIcon",
        "ChevronUpIcon",
        "PullToRefresh",
        "SettingsIcon",
        "MicIcon",
        "MicOffIcon",
        "TouchOptimizedVariantSelector",
        "RefreshCwIcon",
        "ZapIcon",
        "BottomSheet",
        "VolumeXIcon",
        "Volume2Icon"
      ]
    },
    {
      "path": "src/components/mobile/ai/MobileKnowledgeSearch.tsx",
      "name": "MobileKnowledgeSearch",
      "imports": [
        "@/lib/utils",
        "@/components/ui/use-toast",
        "@/components/mobile/MobileEnhancedFeatures"
      ],
      "exports": [
        "MobileKnowledgeSearch"
      ],
      "usedComponents": [
        "KnowledgeArticle",
        "SearchFilters",
        "HTMLInputElement",
        "PullToRefresh",
        "SearchIcon",
        "MicIcon",
        "MicOffIcon",
        "FilterIcon",
        "XIcon",
        "RefreshCwIcon",
        "SwipeableCard",
        "StarIcon",
        "ClockIcon",
        "TrendingUpIcon",
        "BookmarkIcon",
        "ShareIcon",
        "BookOpenIcon",
        "BottomSheet"
      ]
    },
    {
      "path": "src/components/mobile/ai/OfflineKnowledge.tsx",
      "name": "OfflineKnowledge",
      "imports": [
        "@/lib/utils",
        "@/components/ui/use-toast",
        "@/components/mobile/MobileEnhancedFeatures"
      ],
      "exports": [
        "OfflineKnowledge"
      ],
      "usedComponents": [
        "CachedArticle",
        "CacheStatistics",
        "SyncQueueItem",
        "KnowledgeCacheManager",
        "NodeJS",
        "PullToRefresh",
        "WifiIcon",
        "WifiOffIcon",
        "DatabaseIcon",
        "StorageIcon",
        "CloudOffIcon",
        "SyncIcon",
        "RefreshCwIcon",
        "ClockIcon",
        "TrashIcon",
        "BottomSheet"
      ]
    },
    {
      "path": "src/components/mobile/ai/TouchOptimizedVariantSelector.tsx",
      "name": "TouchOptimizedVariantSelector",
      "imports": [
        "@/lib/utils",
        "@/components/ui/use-toast",
        "@/components/mobile/MobileEnhancedFeatures"
      ],
      "exports": [
        "TouchOptimizedVariantSelector"
      ],
      "usedComponents": [
        "PinchZoomState",
        "HTMLDivElement",
        "Set",
        "EditIcon",
        "CopyIcon",
        "ShareIcon",
        "BookmarkIcon",
        "BarChart3Icon",
        "SwipeableCard",
        "ChevronLeftIcon",
        "ChevronRightIcon",
        "ClockIcon",
        "SendIcon",
        "XIcon",
        "BottomSheet"
      ]
    },
    {
      "path": "src/components/mobile/ai/VoiceSearch.tsx",
      "name": "VoiceSearch",
      "imports": [
        "@/lib/utils",
        "@/components/ui/use-toast",
        "@/components/mobile/MobileEnhancedFeatures"
      ],
      "exports": [
        "VoiceSearch"
      ],
      "usedComponents": [
        "NodeJS",
        "SpeechSynthesisVoice",
        "SpeechSynthesisUtterance",
        "VoiceRecognitionConfig",
        "AudioFeedbackConfig",
        "VoiceCommand",
        "VoiceSearchResult",
        "AudioContext",
        "AnalyserNode",
        "MediaStream",
        "PullToRefresh",
        "BrainIcon",
        "WifiOffIcon",
        "SettingsIcon",
        "AlertCircleIcon",
        "MicIcon",
        "ActivityIcon",
        "ZapIcon",
        "MicOffIcon",
        "CheckCircleIcon",
        "PauseIcon",
        "Volume2Icon",
        "VolumeXIcon",
        "PlayIcon",
        "MessageSquareIcon",
        "BottomSheet",
        "HeadphonesIcon",
        "RotateCcwIcon"
      ]
    },
    {
      "path": "src/components/mobile/analytics/MobileAnalyticsDashboard.tsx",
      "name": "MobileAnalyticsDashboard",
      "imports": [
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/types/mobile-analytics"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MobileNavigationState",
        "MobilePerformanceMetrics",
        "HTMLDivElement",
        "Star",
        "RefreshCw",
        "Badge",
        "WifiOff",
        "Wifi",
        "Button",
        "Filter",
        "Search",
        "Card",
        "DollarSign",
        "Users",
        "Clock",
        "ArrowUpDown",
        "CardContent",
        "MoreVertical",
        "TrendingUp",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/mobile/analytics/MobilePerformanceCharts.tsx",
      "name": "MobilePerformanceCharts",
      "imports": [
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/types/mobile-analytics"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Line",
        "AreaChart",
        "Area",
        "BarChart",
        "Bar",
        "PieChart",
        "Pie",
        "Cell",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "RotateCcw",
        "Icon",
        "Badge",
        "CardContent",
        "ResponsiveContainer",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/mobile/analytics/TouchVendorComparison.tsx",
      "name": "TouchVendorComparison",
      "imports": [
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/types/mobile-analytics"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Star",
        "Button",
        "MoreHorizontal",
        "CardContent",
        "Phone",
        "Mail",
        "MessageSquare",
        "TrendingUp",
        "TrendingDown",
        "Users",
        "ChevronLeft",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/mobile/api-gateway/CriticalWeddingEndpoints.tsx",
      "name": "CriticalWeddingEndpoints",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "CriticalWeddingEndpoints"
      ],
      "usedComponents": [
        "CriticalEndpoint",
        "EmergencyContact",
        "WeddingDayStatus",
        "Heart",
        "Button",
        "AlertTriangle",
        "Card",
        "Signal",
        "Progress",
        "Battery",
        "Users",
        "CardHeader",
        "CardTitle",
        "Zap",
        "Badge",
        "CardContent",
        "IconComponent",
        "Phone"
      ]
    },
    {
      "path": "src/components/mobile/app-store/MobileAssetGenerator.tsx",
      "name": "MobileAssetGenerator",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GeneratedAsset",
        "HTMLCanvasElement",
        "Blob",
        "Smartphone",
        "Tablet",
        "Monitor",
        "Crop",
        "Palette",
        "Camera",
        "Download"
      ]
    },
    {
      "path": "src/components/mobile/app-store/ResponsiveSubmissionForm.tsx",
      "name": "ResponsiveSubmissionForm",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FormData",
        "Date",
        "ValidationError",
        "Upload",
        "CheckCircle",
        "Wifi",
        "WifiOff",
        "Save",
        "ChevronLeft",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/mobile/app-store/WedMeIntegrationPanel.tsx",
      "name": "WedMeIntegrationPanel",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Asset",
        "Link",
        "Shield",
        "Users",
        "Zap",
        "StatusIcon",
        "Sync",
        "Image",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/mobile/backup/CriticalDocumentAccess.tsx",
      "name": "CriticalDocumentAccess",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CriticalDocument",
        "SignalSlashIcon",
        "WifiIcon",
        "MagnifyingGlassIcon",
        "Icon",
        "FolderIcon",
        "TypeIcon",
        "LockClosedIcon",
        "ClockIcon",
        "CheckCircleIcon",
        "EyeIcon",
        "ArrowDownTrayIcon",
        "ShareIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/EmergencyDataAccess.tsx",
      "name": "EmergencyDataAccess",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EmergencyData",
        "EmergencyContact",
        "ExclamationTriangleIcon",
        "StarIcon",
        "InformationCircleIcon",
        "SignalSlashIcon",
        "WifiIcon",
        "ClockIcon",
        "PhoneIcon",
        "MapPinIcon",
        "Icon",
        "AnimatePresence",
        "MagnifyingGlassIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/EmergencyRecoveryMobile.tsx",
      "name": "EmergencyRecoveryMobile",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/hooks/useOfflineSync",
        "@/hooks/useHapticFeedback"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AlertTriangle",
        "CheckCircle",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "RefreshCw",
        "CardContent",
        "Wifi",
        "WifiOff",
        "Download",
        "Shield",
        "Upload",
        "Phone",
        "Alert",
        "AlertDescription",
        "BackupStatus",
        "EmergencyHeader",
        "BackupStatusCheck",
        "QuickRecoveryActions",
        "EmergencySupport"
      ]
    },
    {
      "path": "src/components/mobile/backup/LocalBackupSync.tsx",
      "name": "LocalBackupSync",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Device",
        "SyncItem",
        "SyncSession",
        "SignalSlashIcon",
        "WifiIcon",
        "ArrowPathIcon",
        "PauseIcon",
        "AnimatePresence",
        "DeviceIcon",
        "StatusIcon",
        "PlayIcon",
        "ExclamationTriangleIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/MobileBackupManager.tsx",
      "name": "MobileBackupManager",
      "imports": [
        "@/utils/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BackupItem",
        "BackupStats",
        "CpuChipIcon",
        "ServerIcon",
        "ShieldCheckIcon",
        "CloudArrowUpIcon",
        "CheckCircleIcon",
        "StatusIcon",
        "CloudArrowDownIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/MobileBackupScheduler.tsx",
      "name": "MobileBackupScheduler",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BackupSchedule",
        "BackupPolicy",
        "SystemStatus",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "CalendarIcon",
        "BatteryIcon",
        "WifiIcon",
        "Icon",
        "AnimatePresence",
        "ClockIcon",
        "PlayIcon",
        "CogIcon",
        "XCircleIcon",
        "DevicePhoneMobileIcon",
        "CloudArrowUpIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/OfflineRecoveryInterface.tsx",
      "name": "OfflineRecoveryInterface",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RecoveryStep",
        "RecoveryItem",
        "RecoverySession",
        "SignalSlashIcon",
        "WifiIcon",
        "AnimatePresence",
        "ServerIcon",
        "CheckCircleIcon",
        "ItemIcon",
        "ExclamationTriangleIcon",
        "ChevronLeftIcon",
        "ChevronRightIcon",
        "ArrowPathIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/OfflineVendorContacts.tsx",
      "name": "OfflineVendorContacts",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorContact",
        "SignalSlashIcon",
        "WifiIcon",
        "MagnifyingGlassIcon",
        "Icon",
        "UserGroupIcon",
        "CategoryIcon",
        "ClockIcon",
        "InformationCircleIcon",
        "PhoneIcon",
        "MapPinIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/TouchRecoveryControls.tsx",
      "name": "TouchRecoveryControls",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/hooks/useHapticFeedback"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RecoveryProgress",
        "Shield",
        "Calendar",
        "Users",
        "Camera",
        "FileText",
        "Heart",
        "Alert",
        "AlertDescription",
        "Card",
        "CardContent",
        "Clock",
        "Progress",
        "RefreshCw",
        "CheckCircle",
        "AlertTriangle",
        "Button",
        "Zap"
      ]
    },
    {
      "path": "src/components/mobile/backup/WeddingDayEmergencyAccess.tsx",
      "name": "WeddingDayEmergencyAccess",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingEmergency",
        "CalendarIcon",
        "HeartIcon",
        "BellAlertIcon",
        "PhoneIcon",
        "MapPinIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon"
      ]
    },
    {
      "path": "src/components/mobile/backup/performance/BackupPWAManager.tsx",
      "name": "BackupPWAManager",
      "imports": [
        "@/hooks/useBackupPerformanceMonitoring",
        "@/hooks/mobile/useHapticFeedback"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ServiceWorkerState",
        "InstallationState",
        "CacheStatus",
        "BackgroundSync"
      ]
    },
    {
      "path": "src/components/mobile/backup/performance/GestureNavigationManager.tsx",
      "name": "GestureNavigationManager",
      "imports": [
        "@/hooks/mobile/useHapticFeedback",
        "@/hooks/useBackupPerformanceMonitoring"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GestureState",
        "MultiTouchState",
        "HTMLDivElement",
        "NodeJS"
      ]
    },
    {
      "path": "src/components/mobile/backup/performance/MobileBackupDataVisualization.tsx",
      "name": "MobileBackupDataVisualization",
      "imports": [
        "@/hooks/useBackupPerformanceMonitoring",
        "@/hooks/mobile/useHapticFeedback"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ViewMode",
        "HTMLDivElement",
        "SVGSVGElement",
        "linearGradient",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/backup/performance/RealTimePerformanceMonitor.tsx",
      "name": "RealTimePerformanceMonitor",
      "imports": [
        "@/hooks/useBackupPerformanceMonitoring",
        "@/hooks/mobile/useHapticFeedback"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PerformanceMetric",
        "PerformanceAlert",
        "Date",
        "WebSocket",
        "Map",
        "NodeJS",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/backup/performance/TouchBackupControls.tsx",
      "name": "TouchBackupControls",
      "imports": [
        "@/hooks/useBackupPerformanceMonitoring",
        "@/hooks/usePerformanceMonitor"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "NodeJS"
      ]
    },
    {
      "path": "src/components/mobile/budget/MobileBudgetDashboard.tsx",
      "name": "MobileBudgetDashboard",
      "imports": [
        "@/lib/mobile/notification-manager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BudgetCategory",
        "BudgetSummary",
        "RefreshCw",
        "Wallet",
        "Settings",
        "Bell",
        "Target",
        "CreditCard",
        "Calendar",
        "PlusCircle",
        "BarChart3",
        "ChevronUp",
        "ChevronDown",
        "TrendingUp",
        "TrendingDown",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/mobile/budget/MobileBudgetOptimizer.tsx",
      "name": "MobileBudgetOptimizer",
      "imports": [
        "./TouchBudgetAllocation",
        "./MobileBudgetVisualization",
        "./QuickBudgetEntry",
        "@/lib/utils"
      ],
      "exports": [
        "MobileBudgetOptimizer"
      ],
      "usedComponents": [
        "ViewMode",
        "Date",
        "BudgetCategory",
        "AnimatePresence",
        "BudgetOverview",
        "TouchBudgetAllocation",
        "MobileBudgetVisualization",
        "QuickBudgetEntry"
      ]
    },
    {
      "path": "src/components/mobile/budget/MobileBudgetVisualization.tsx",
      "name": "MobileBudgetVisualization",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "MobileBudgetVisualization"
      ],
      "usedComponents": [
        "TouchState",
        "SVGSVGElement",
        "HTMLDivElement",
        "ChartTypeSwitcher",
        "AnimatePresence",
        "PieChart",
        "BarChart",
        "ProgressChart"
      ]
    },
    {
      "path": "src/components/mobile/budget/QuickBudgetEntry.tsx",
      "name": "QuickBudgetEntry",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "QuickBudgetEntry"
      ],
      "usedComponents": [
        "FormStep",
        "BudgetEntry",
        "File",
        "HTMLInputElement",
        "HTMLVideoElement",
        "HTMLCanvasElement",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/budget/TouchBudgetAllocation.tsx",
      "name": "TouchBudgetAllocation",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TouchBudgetAllocation"
      ],
      "usedComponents": [
        "DragState",
        "BudgetAllocation",
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/mobile/budget-export/MobileExportInterface.tsx",
      "name": "MobileExportInterface",
      "imports": [
        "@/lib/performance/budget-export/export-optimizer",
        "@/lib/performance/budget-export/mobile-export-queue",
        "@/lib/performance/budget-export/wedme-export-integration"
      ],
      "exports": [
        "MobileExportInterface"
      ],
      "usedComponents": [
        "MobileExportInterfaceProps",
        "ExportProgress",
        "DeviceInfo",
        "TouchGesture",
        "Loader2",
        "X",
        "Wifi",
        "WifiOff",
        "Battery",
        "Smartphone",
        "Download",
        "AnimatePresence",
        "ChevronDown",
        "CheckCircle2",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/mobile/budget-export/ProgressiveExportLoader.tsx",
      "name": "ProgressiveExportLoader",
      "imports": [
        "@/lib/performance/budget-export/export-optimizer",
        "@/lib/performance/budget-export/mobile-export-queue"
      ],
      "exports": [
        "ProgressiveExportLoader"
      ],
      "usedComponents": [
        "PerformanceMetrics",
        "LoadingState",
        "ExportPhase",
        "DevicePerformance",
        "ExportResult",
        "HTMLDivElement",
        "NodeJS",
        "CheckCircle2",
        "AlertTriangle",
        "Cpu",
        "HardDrive",
        "Battery",
        "Wifi",
        "Play",
        "Pause",
        "X",
        "Clock",
        "RotateCcw"
      ]
    },
    {
      "path": "src/components/mobile/calendar/MobileCalendarSync.tsx",
      "name": "MobileCalendarSync",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MobileCalendarSyncProps",
        "SyncStatus",
        "CalendarProvider",
        "Sync",
        "Wifi",
        "WifiOff",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "CardContent",
        "AlertTriangle",
        "CheckCircle",
        "AnimatePresence",
        "Badge",
        "Calendar"
      ]
    },
    {
      "path": "src/components/mobile/calendar/MobileCalendarWidgets.tsx",
      "name": "MobileCalendarWidgets",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "QuickTimelineWidget",
        "SyncStatusWidget",
        "ConflictResolutionWidget",
        "WeddingProgressWidget"
      ],
      "usedComponents": [
        "UpcomingEvent",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "Button",
        "ChevronRight",
        "AnimatePresence",
        "Clock",
        "MapPin",
        "Badge",
        "SyncStatus",
        "Sync",
        "Wifi",
        "WifiOff",
        "CheckCircle",
        "AlertTriangle",
        "WeddingProgress",
        "Heart",
        "Progress",
        "MobileCalendarWidgetsProps",
        "ConflictItem",
        "QuickTimelineWidget",
        "SyncStatusWidget",
        "ConflictResolutionWidget",
        "WeddingProgressWidget"
      ]
    },
    {
      "path": "src/components/mobile/calendar/TouchTimelineView.tsx",
      "name": "TouchTimelineView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/hooks/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimelineEvent",
        "TouchTimelineProps",
        "HTMLDivElement",
        "Card",
        "CardContent",
        "Edit3",
        "Eye",
        "User",
        "MapPin",
        "Clock",
        "Badge",
        "Button",
        "ChevronLeft",
        "ChevronRight",
        "ZoomOut",
        "ZoomIn",
        "AlertCircle",
        "DndContext",
        "SortableContext",
        "AnimatePresence",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/mobile/categories/MobileCategoryCard.tsx",
      "name": "MobileCategoryCard",
      "imports": [
        "@/types/task-categories",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "NodeJS",
        "HTMLDivElement",
        "ClockIcon",
        "CheckCircleIcon",
        "AlertCircleIcon",
        "FolderIcon",
        "ChevronRightIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/categories/MobileCategoryDashboard.tsx",
      "name": "MobileCategoryDashboard",
      "imports": [
        "./MobileCategoryCard",
        "./MobileCategoryTimeline",
        "@/types/task-categories",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TaskCategory",
        "CategoryGroup",
        "ViewMode",
        "CategoryPhase",
        "AnimatePresence",
        "MobileCategoryCard",
        "Reorder",
        "MobileCategoryTimeline",
        "XMarkIcon",
        "ArrowPathIcon",
        "AdjustmentsHorizontalIcon",
        "PlusIcon",
        "Icon",
        "CheckIcon"
      ]
    },
    {
      "path": "src/components/mobile/categories/MobileCategoryTimeline.tsx",
      "name": "MobileCategoryTimeline",
      "imports": [
        "@/types/task-categories",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CheckCircleIcon",
        "ClockIcon",
        "CalendarIcon",
        "ExclamationCircleIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/categories/TouchDragDropCategories.tsx",
      "name": "TouchDragDropCategories",
      "imports": [
        "@/types/task-categories",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DragState",
        "HTMLDivElement",
        "NodeJS",
        "Reorder",
        "Bars3Icon"
      ]
    },
    {
      "path": "src/components/mobile/categories/WedMeCategoryIntegration.tsx",
      "name": "WedMeCategoryIntegration",
      "imports": [
        "@/types/task-categories",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MobileSession",
        "ShareableLink",
        "DevicePhoneMobileIcon",
        "LinkIcon",
        "CheckCircleIcon",
        "ArrowRightIcon",
        "ShareIcon",
        "AnimatePresence",
        "QrCodeIcon"
      ]
    },
    {
      "path": "src/components/mobile/chatbot/BottomSheetChat.tsx",
      "name": "BottomSheetChat",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "BottomSheetChat",
        "useBottomSheetHeights",
        "useBottomSheetDrag"
      ],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/mobile/chatbot/MobileChatInterface.tsx",
      "name": "MobileChatInterface",
      "imports": [
        "@/lib/utils",
        "@/hooks/useMobileChat",
        "./BottomSheetChat",
        "./MobileMessageBubble",
        "./TouchInputHandler",
        "./types"
      ],
      "exports": [
        "default",
        "MobileChatInterface"
      ],
      "usedComponents": [
        "ChatState",
        "ChatMessage",
        "HTMLDivElement",
        "HTMLInputElement",
        "AnimatePresence",
        "MessageCircle",
        "BottomSheetChat",
        "Minimize2",
        "Maximize2",
        "X",
        "MobileMessageBubble",
        "TouchInputHandler"
      ]
    },
    {
      "path": "src/components/mobile/chatbot/MobileMessageBubble.tsx",
      "name": "MobileMessageBubble",
      "imports": [
        "@/lib/utils",
        "./types"
      ],
      "exports": [
        "default",
        "MobileMessageBubble",
        "generateQuickActions"
      ],
      "usedComponents": [
        "NodeJS",
        "HTMLDivElement",
        "Clock",
        "Check",
        "CheckCheck",
        "AlertCircle",
        "AnimatePresence",
        "Calendar",
        "DollarSign",
        "Users",
        "MapPin"
      ]
    },
    {
      "path": "src/components/mobile/chatbot/TouchInputHandler.tsx",
      "name": "TouchInputHandler",
      "imports": [
        "@/lib/utils",
        "./types"
      ],
      "exports": [
        "default",
        "TouchInputHandler"
      ],
      "usedComponents": [
        "VoiceState",
        "HTMLInputElement",
        "MediaRecorder",
        "NodeJS",
        "AnimatePresence",
        "X",
        "Camera",
        "Paperclip",
        "Plus",
        "Smile",
        "Send",
        "MicOff",
        "Mic"
      ]
    },
    {
      "path": "src/components/mobile/chatbot/types.ts",
      "name": "types",
      "imports": [],
      "exports": [],
      "usedComponents": [
        "WeddingContext"
      ]
    },
    {
      "path": "src/components/mobile/collaboration/CollaborativeDocumentLoader.tsx",
      "name": "CollaborativeDocumentLoader",
      "imports": [],
      "exports": [
        "CollaborativeDocumentProvider"
      ],
      "usedComponents": [
        "Metadata",
        "Suspense",
        "DocumentLoadingSkeleton",
        "CollaborativeDocumentLoader"
      ]
    },
    {
      "path": "src/components/mobile/collaboration/MobileCollaborativeEditor.tsx",
      "name": "MobileCollaborativeEditor",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "MobileCollaborativeEditor"
      ],
      "usedComponents": [
        "SaveState",
        "WebsocketProvider",
        "Map",
        "Date",
        "HTMLTextAreaElement",
        "NodeJS",
        "StatusIcon",
        "Users",
        "EyeOff",
        "Eye",
        "AnimatePresence",
        "Clock",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/mobile/collaboration/MobilePresenceDisplay.tsx",
      "name": "MobilePresenceDisplay",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "MobilePresenceDisplay"
      ],
      "usedComponents": [
        "RoleIcon",
        "ChevronDown",
        "ChevronRight",
        "Dot",
        "Clock",
        "Users"
      ]
    },
    {
      "path": "src/components/mobile/collaboration/OfflineCollaborationManager.tsx",
      "name": "OfflineCollaborationManager",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "OfflineCollaborationManager"
      ],
      "usedComponents": [
        "SyncState",
        "NetworkQuality",
        "ConflictResolution",
        "NodeJS",
        "Map",
        "IndexeddbPersistence",
        "StatusIcon",
        "RefreshCw",
        "CloudOff",
        "Cloud",
        "Smartphone",
        "Battery",
        "AnimatePresence",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/mobile/collaboration/TouchSelectionHandler.tsx",
      "name": "TouchSelectionHandler",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TouchSelectionHandler"
      ],
      "usedComponents": [
        "TextSelection",
        "TouchGesture",
        "HTMLDivElement",
        "NodeJS",
        "AnimatePresence",
        "X"
      ]
    },
    {
      "path": "src/components/mobile/dietary/MobileDietaryManager.tsx",
      "name": "MobileDietaryManager",
      "imports": [
        "@/hooks/mobile/useTouch",
        "@/hooks/mobile/useOffline",
        "@/hooks/mobile/usePushNotifications",
        "./MobileMenuGenerator",
        "./MobileAlertsPanel",
        "./MobileRequirementModal",
        "./MobileAddRequirementForm",
        "./MobileQuickActionsPanel"
      ],
      "exports": [
        "MobileDietaryManager"
      ],
      "usedComponents": [
        "DietaryRequirement",
        "DietaryAlert",
        "HTMLDivElement",
        "RefreshCwIcon",
        "ArrowLeftIcon",
        "BellIcon",
        "AnimatePresence",
        "AlertTriangleIcon",
        "PhoneIcon",
        "PlusIcon",
        "StarIcon",
        "SearchIcon",
        "FilterIcon",
        "CheckCircleIcon",
        "UserIcon",
        "MobileMenuGenerator",
        "MobileAlertsPanel",
        "MobileRequirementModal",
        "MobileAddRequirementForm",
        "MobileQuickActionsPanel"
      ]
    },
    {
      "path": "src/components/mobile/emergency/EmergencyCommandCenter.tsx",
      "name": "EmergencyCommandCenter",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/hooks/useMobileInfrastructure"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ActiveEmergency",
        "Shield",
        "Button",
        "Volume2",
        "VolumeX",
        "Radio",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Badge",
        "TabsContent",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Clock",
        "Users",
        "MapPin",
        "Play",
        "AlertTriangle",
        "Phone",
        "MessageSquare"
      ]
    },
    {
      "path": "src/components/mobile/emergency/EmergencyVoiceCommands.tsx",
      "name": "EmergencyVoiceCommands",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/progress",
        "@/hooks/useMobileInfrastructure"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VoiceSession",
        "VoiceCommand",
        "SpeechSynthesis",
        "NodeJS",
        "Card",
        "CardContent",
        "MicOff",
        "CardHeader",
        "CardTitle",
        "Button",
        "Volume2",
        "VolumeX",
        "Mic",
        "Badge",
        "Progress",
        "AnimatePresence",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "CheckCircle",
        "XCircle"
      ]
    },
    {
      "path": "src/components/mobile/emergency/EmergencyWorkflow.tsx",
      "name": "EmergencyWorkflow",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/hooks/useMobileInfrastructure"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Set",
        "Card",
        "CardContent",
        "XCircle",
        "CheckCircle",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Progress",
        "AnimatePresence",
        "Clock",
        "Button",
        "Phone",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/mobile/enterprise-auth/CrossPlatformAuthSync.ts",
      "name": "CrossPlatformAuthSync",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SyncConfiguration",
        "AuthSession",
        "GeolocationCoordinates"
      ]
    },
    {
      "path": "src/components/mobile/enterprise-auth/DeviceComplianceValidator.ts",
      "name": "DeviceComplianceValidator",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ComplianceCheck",
        "DeviceFingerprint",
        "ComplianceValidation",
        "PerformanceMetrics"
      ]
    },
    {
      "path": "src/components/mobile/enterprise-auth/MobileSecurityPolicies.ts",
      "name": "MobileSecurityPolicies",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PolicyEvaluationResult",
        "SecurityPolicy"
      ]
    },
    {
      "path": "src/components/mobile/enterprise-auth/MobileTokenSecurityManager.ts",
      "name": "MobileTokenSecurityManager",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SecureToken",
        "TokenRotationPolicy",
        "ArrayBuffer",
        "TokenValidationResult"
      ]
    },
    {
      "path": "src/components/mobile/executive/BusinessMetricsMobile.tsx",
      "name": "BusinessMetricsMobile",
      "imports": [
        "./widgets/RevenueWidget",
        "./widgets/ClientMetricsWidget",
        "./widgets/PerformanceWidget"
      ],
      "exports": [
        "default",
        "BusinessMetricsMobile"
      ],
      "usedComponents": [
        "BusinessMetrics",
        "RefreshCcw",
        "RevenueWidget",
        "ClientMetricsWidget",
        "PerformanceWidget"
      ]
    },
    {
      "path": "src/components/mobile/executive/widgets/ChartComponents.tsx",
      "name": "ChartComponents",
      "imports": [],
      "exports": [
        "LineChart",
        "DonutChart",
        "BarChart",
        "GaugeChart",
        "ProgressRing"
      ],
      "usedComponents": [
        "HTMLCanvasElement"
      ]
    },
    {
      "path": "src/components/mobile/executive/widgets/ClientMetricsWidget.tsx",
      "name": "ClientMetricsWidget",
      "imports": [
        "./WidgetContainer",
        "./ChartComponents"
      ],
      "exports": [
        "default",
        "ClientMetricsWidget"
      ],
      "usedComponents": [
        "WidgetContainer",
        "ProgressRing",
        "Users",
        "UserPlus",
        "UserMinus",
        "Heart",
        "DonutChart"
      ]
    },
    {
      "path": "src/components/mobile/executive/widgets/PerformanceWidget.tsx",
      "name": "PerformanceWidget",
      "imports": [
        "./WidgetContainer",
        "./ChartComponents"
      ],
      "exports": [
        "default",
        "PerformanceWidget"
      ],
      "usedComponents": [
        "CheckCircle",
        "AlertTriangle",
        "Zap",
        "WidgetContainer",
        "ProgressRing",
        "GaugeChart",
        "Clock"
      ]
    },
    {
      "path": "src/components/mobile/executive/widgets/RevenueWidget.tsx",
      "name": "RevenueWidget",
      "imports": [
        "./WidgetContainer",
        "./ChartComponents"
      ],
      "exports": [
        "default",
        "RevenueWidget"
      ],
      "usedComponents": [
        "TrendingUp",
        "TrendingDown",
        "DollarSign",
        "WidgetContainer",
        "LineChart"
      ]
    },
    {
      "path": "src/components/mobile/executive/widgets/WidgetContainer.tsx",
      "name": "WidgetContainer",
      "imports": [],
      "exports": [
        "default",
        "WidgetContainer"
      ],
      "usedComponents": [
        "Icon"
      ]
    },
    {
      "path": "src/components/mobile/expenses/MobileExpenseCapture.tsx",
      "name": "MobileExpenseCapture",
      "imports": [
        "@/lib/mobile/camera-manager",
        "@/lib/mobile/voice-manager",
        "@/lib/mobile/notification-manager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CapturedPhoto",
        "ReceiptData",
        "ParsedExpense",
        "ExpenseData",
        "Record",
        "HTMLVideoElement",
        "RefreshCw",
        "FlashOn",
        "FlashOff",
        "Camera",
        "RotateCcw",
        "MicOff",
        "Mic",
        "Volume2",
        "VolumeX",
        "FileText",
        "DollarSign",
        "MapPin",
        "Tag",
        "Calendar",
        "Edit",
        "Save",
        "CreditCard",
        "ArrowLeft"
      ]
    },
    {
      "path": "src/components/mobile/faq/MobileFAQCategoryManager.tsx",
      "name": "MobileFAQCategoryManager",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FAQCategory",
        "CreateCategoryForm",
        "VoiceState",
        "SpeechRecognition",
        "HTMLInputElement",
        "HTMLDivElement",
        "Card",
        "Badge",
        "Button",
        "ArrowsUpDownIcon",
        "PencilIcon",
        "XMarkIcon",
        "AnimatePresence",
        "Input",
        "CheckIcon",
        "Squares2X2Icon",
        "MicrophoneIcon",
        "EyeDropperIcon",
        "PlusIcon",
        "SwatchIcon",
        "Reorder",
        "CategoryCard"
      ]
    },
    {
      "path": "src/components/mobile/faq/MobileFAQExtractor.tsx",
      "name": "MobileFAQExtractor",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VoiceRecognitionState",
        "HTMLInputElement",
        "SpeechRecognition",
        "HTMLDivElement",
        "ArrowPathIcon",
        "Card",
        "GlobeAltIcon",
        "Button",
        "XMarkIcon",
        "AnimatePresence",
        "SpeakerWaveIcon",
        "LoadingSkeleton",
        "Input",
        "MicrophoneIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "Badge"
      ]
    },
    {
      "path": "src/components/mobile/faq/TouchOptimizedFAQReview.tsx",
      "name": "TouchOptimizedFAQReview",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FAQItem",
        "GestureState",
        "EditState",
        "List",
        "HTMLDivElement",
        "AnimatePresence",
        "CheckIcon",
        "XMarkIcon",
        "Card",
        "Badge",
        "Button",
        "ArrowsUpDownIcon",
        "PencilIcon",
        "Textarea",
        "Input",
        "HandThumbUpIcon",
        "HandThumbDownIcon",
        "MagnifyingGlassIcon"
      ]
    },
    {
      "path": "src/components/mobile/fields/MobileFieldEditor.tsx",
      "name": "MobileFieldEditor",
      "imports": [
        "../touch/TouchButton",
        "@/hooks/useDebounce"
      ],
      "exports": [
        "MobileFieldEditor"
      ],
      "usedComponents": [
        "ValidationError",
        "HTMLInputElement",
        "HTMLTextAreaElement",
        "ClockIcon",
        "CheckCircleIcon",
        "ExclamationCircleIcon",
        "TouchButton"
      ]
    },
    {
      "path": "src/components/mobile/fields/MobileFieldManager.tsx",
      "name": "MobileFieldManager",
      "imports": [
        "../touch/TouchButton",
        "../touch/PullToRefresh",
        "./MobileFieldEditor",
        "./MobileFieldStatusIndicator",
        "./MobileFieldSyncTracker",
        "@/lib/stores/coreFieldsStore"
      ],
      "exports": [
        "MobileFieldManager"
      ],
      "usedComponents": [
        "Map",
        "PullToRefresh",
        "TouchButton",
        "MobileFieldSyncTracker",
        "MobileFieldStatusIndicator",
        "ChevronDownIcon",
        "MobileFieldEditor",
        "ClockIcon"
      ]
    },
    {
      "path": "src/components/mobile/fields/MobileFieldPerformanceProvider.tsx",
      "name": "MobileFieldPerformanceProvider",
      "imports": [
        "./types"
      ],
      "exports": [
        "MobileFieldPerformanceProvider",
        "useMobileFieldPerformance",
        "MobileFieldPerformanceUtils"
      ],
      "usedComponents": [
        "MobileFieldConfig",
        "MobileFieldPerformanceContextType",
        "PerformanceMetrics",
        "Map",
        "Set",
        "MobileFieldPerformanceContext"
      ]
    },
    {
      "path": "src/components/mobile/fields/MobileFieldStatusIndicator.tsx",
      "name": "MobileFieldStatusIndicator",
      "imports": [],
      "exports": [
        "MobileFieldStatusIndicator",
        "MobileFieldCompletionBadge",
        "MobileFieldSyncStatus"
      ],
      "usedComponents": [
        "CheckCircleIconSolid",
        "ClockIcon",
        "ExclamationCircleIcon"
      ]
    },
    {
      "path": "src/components/mobile/fields/MobileFieldSyncTracker.tsx",
      "name": "MobileFieldSyncTracker",
      "imports": [
        "../touch/TouchButton",
        "@/lib/stores/coreFieldsStore"
      ],
      "exports": [
        "MobileFieldSyncTracker"
      ],
      "usedComponents": [
        "SyncStatus",
        "SignalSlashIcon",
        "ExclamationCircleIcon",
        "ArrowPathIcon",
        "CheckCircleIcon",
        "ClockIcon",
        "TouchButton",
        "WifiIcon"
      ]
    },
    {
      "path": "src/components/mobile/fields/MobileFieldValidator.tsx",
      "name": "MobileFieldValidator",
      "imports": [
        "../touch/TouchButton"
      ],
      "exports": [
        "MobileFieldValidator",
        "MobileFieldValidationUtils"
      ],
      "usedComponents": [
        "Set",
        "ExclamationCircleIcon",
        "ExclamationTriangleIcon",
        "InformationCircleIcon",
        "CheckCircleIcon",
        "TouchButton"
      ]
    },
    {
      "path": "src/components/mobile/fields/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/mobile/fields/types.ts",
      "name": "types",
      "imports": [],
      "exports": [
        "DEFAULT_MOBILE_CONFIG"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/mobile/helper-assignment/HelperAssignmentMobileDashboard.tsx",
      "name": "HelperAssignmentMobileDashboard",
      "imports": [
        "./TouchOptimizedHelperDashboard",
        "./MobileHelperDirectory",
        "./TouchDragAndDrop",
        "./WedMeIntegration"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DashboardStats",
        "RecentActivity",
        "CheckCircle2",
        "Clock",
        "Users",
        "AlertTriangle",
        "Bell",
        "Heart",
        "Star",
        "TrendingUp",
        "Plus",
        "Zap",
        "MessageCircle",
        "WedMeIntegration",
        "TouchOptimizedHelperDashboard",
        "MobileHelperDirectory",
        "TouchDragAndDrop",
        "Settings",
        "Search",
        "Icon"
      ]
    },
    {
      "path": "src/components/mobile/helper-assignment/MobileHelperDirectory.tsx",
      "name": "MobileHelperDirectory",
      "imports": [
        "@/lib/offline/helper-sync/offline-helper-service"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Helper",
        "FilterOptions",
        "Search",
        "SlidersHorizontal",
        "User",
        "Star",
        "Clock",
        "ChevronRight",
        "X",
        "Mail",
        "Phone",
        "MapPin",
        "MessageCircle"
      ]
    },
    {
      "path": "src/components/mobile/helper-assignment/TouchDragAndDrop.tsx",
      "name": "TouchDragAndDrop",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DragState",
        "DropZone",
        "HTMLDivElement",
        "NodeJS",
        "CheckCircle2",
        "Clock",
        "AlertCircle",
        "ArrowUpDown",
        "Zap",
        "GripVertical",
        "User",
        "ChevronDown"
      ]
    },
    {
      "path": "src/components/mobile/helper-assignment/TouchOptimizedHelperDashboard.tsx",
      "name": "TouchOptimizedHelperDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HelperTask",
        "TaskStats",
        "TouchGesture",
        "NodeJS",
        "HTMLDivElement",
        "IDBDatabase",
        "CheckCircle2",
        "Clock",
        "FileText",
        "AlertCircle",
        "WifiOff",
        "Wifi",
        "Bell",
        "Calendar",
        "Download",
        "User",
        "BarChart3",
        "ChevronRight",
        "GripVertical"
      ]
    },
    {
      "path": "src/components/mobile/helper-assignment/WedMeIntegration.tsx",
      "name": "WedMeIntegration",
      "imports": [],
      "exports": [
        "default",
        "useWedMeIntegration"
      ],
      "usedComponents": [
        "WedMeAppStatus",
        "Smartphone",
        "Check",
        "Download",
        "QrCode",
        "Bell",
        "Sync",
        "Share2",
        "ArrowRight",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/mobile/helpers/HelperTaskDashboard.tsx",
      "name": "HelperTaskDashboard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HelperTask",
        "TaskStats",
        "CheckCircle2",
        "Clock",
        "FileText",
        "AlertCircle",
        "Bell",
        "Calendar",
        "User",
        "BarChart3",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/mobile/i18n/MobileCulturalAdaptations.tsx",
      "name": "MobileCulturalAdaptations",
      "imports": [],
      "exports": [
        "default",
        "CULTURAL_PRESETS",
        "WEDDING_CULTURAL_NORMS",
        "MOBILE_INTERACTION_PATTERNS",
        "CulturalAdaptationContext",
        "MobileCulturalAdaptations",
        "useCulturalAdaptations",
        "CulturallyAdaptedButton",
        "CulturallyAdaptedForm",
        "CulturalColorPicker",
        "CulturalDateTimePicker"
      ],
      "usedComponents": [
        "CulturalAdaptationContext"
      ]
    },
    {
      "path": "src/components/mobile/i18n/MobileCulturalCalendar.tsx",
      "name": "MobileCulturalCalendar",
      "imports": [
        "./MobileCulturalAdaptations",
        "./MobileRTLLayout"
      ],
      "exports": [
        "default",
        "CULTURAL_CALENDARS",
        "MobileCulturalCalendar",
        "useCulturalCalendar"
      ],
      "usedComponents": [
        "MobileCulturalCalendarProps",
        "ChevronRightIcon",
        "ChevronLeftIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/i18n/MobileLanguageSelector.tsx",
      "name": "MobileLanguageSelector",
      "imports": [],
      "exports": [
        "default",
        "DEFAULT_LANGUAGES",
        "MobileLanguageSelector",
        "useLanguageSelector"
      ],
      "usedComponents": [
        "MobileLanguageSelectorProps",
        "ChevronDownIcon",
        "AnimatePresence",
        "GlobeAltIcon",
        "CheckIcon",
        "Language"
      ]
    },
    {
      "path": "src/components/mobile/i18n/MobileRTLLayout.tsx",
      "name": "MobileRTLLayout",
      "imports": [],
      "exports": [
        "default",
        "RTLContext",
        "rtlUtils",
        "createRTLClassMapper",
        "MobileRTLLayout",
        "RTLAdaptive",
        "useRTL",
        "MobileRTLContainer",
        "MobileRTLHeader",
        "MobileRTLCard",
        "generateRTLClass",
        "MobileWeddingRTLForm"
      ],
      "usedComponents": [
        "RTLContextValue",
        "MobileRTLLayoutProps",
        "RTLContext",
        "RTLAdaptiveProps"
      ]
    },
    {
      "path": "src/components/mobile/i18n/MobileWeddingFormsLocalizer.tsx",
      "name": "MobileWeddingFormsLocalizer",
      "imports": [
        "./MobileCulturalAdaptations",
        "../../../lib/services/mobile-i18n/MobileKeyboardSupport",
        "../../../lib/services/mobile-i18n/OfflineTranslationManager",
        "./MobileRTLLayout"
      ],
      "exports": [
        "default",
        "WEDDING_FORM_TEMPLATES",
        "MobileWeddingFormsLocalizer",
        "useWeddingFormTemplates"
      ],
      "usedComponents": [
        "Record",
        "Controller"
      ]
    },
    {
      "path": "src/components/mobile/journey/MobileJourneyAI.tsx",
      "name": "MobileJourneyAI",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/components/ui/skeleton",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MobileJourneyAI"
      ],
      "usedComponents": [
        "SpeechRecognition",
        "MobileJourneyAIProps",
        "JourneyNode",
        "AIGenerationState",
        "Icon",
        "Sparkles",
        "Badge",
        "WifiOff",
        "Wifi",
        "Button",
        "Settings",
        "Card",
        "CardContent",
        "Progress",
        "Textarea",
        "MicOff",
        "Mic",
        "Send",
        "ChevronLeft",
        "ChevronRight",
        "AnimatePresence",
        "Calendar",
        "Save",
        "Download",
        "Plus"
      ]
    },
    {
      "path": "src/components/mobile/offline/MobileOfflineManager.tsx",
      "name": "MobileOfflineManager",
      "imports": [
        "@/hooks/useOfflineData",
        "@/hooks/useBatteryOptimization"
      ],
      "exports": [
        "MobileOfflineManager"
      ],
      "usedComponents": [
        "MobileOfflineManagerProps",
        "OfflineStatus",
        "Signal",
        "WiFiOff",
        "Battery",
        "Clock",
        "CheckCircle",
        "Settings",
        "AnimatePresence",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/mobile/offline/MobilePerformanceOptimizer.tsx",
      "name": "MobilePerformanceOptimizer",
      "imports": [
        "@/hooks/useBatteryOptimization"
      ],
      "exports": [
        "MobilePerformanceOptimizer"
      ],
      "usedComponents": [
        "BatteryLow",
        "Battery",
        "Zap",
        "HardDrive",
        "Settings",
        "AnimatePresence",
        "AlertTriangle",
        "Activity"
      ]
    },
    {
      "path": "src/components/mobile/offline/TouchConflictResolver.tsx",
      "name": "TouchConflictResolver",
      "imports": [],
      "exports": [
        "TouchConflictResolver"
      ],
      "usedComponents": [
        "TouchConflictResolverProps",
        "Check",
        "SwipableConflictCard",
        "X",
        "SwipableConflictCardProps",
        "AlertTriangle",
        "User",
        "Clock",
        "ChevronRight",
        "RotateCcw",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/offline/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/mobile/offline/types.ts",
      "name": "types",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/mobile/payments/MobilePaymentCalendar.tsx",
      "name": "MobilePaymentCalendar",
      "imports": [
        "@/hooks/useOfflineData",
        "@/hooks/usePWAInstall",
        "@/lib/performance/mobile-performance-optimizer",
        "@/lib/security/payment-security",
        "@/lib/security/payment-validation",
        "@/lib/realtime/couple-sync",
        "@/lib/offline/conflict-resolution",
        "@/hooks/useRealTimeNotifications",
        "@/lib/sync/optimistic-updates"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Payment",
        "MobilePaymentCalendarProps",
        "Date",
        "TouchGestureState",
        "HTMLDivElement",
        "NodeJS",
        "Icon",
        "ChevronLeftIcon",
        "ChevronRightIcon",
        "DollarSignIcon",
        "PaymentStatusBadge",
        "AlertCircleIcon",
        "BellIcon",
        "ShieldCheckIcon",
        "WifiOffIcon"
      ]
    },
    {
      "path": "src/components/mobile/personalization/MobilePersonalizationEditor.tsx",
      "name": "MobilePersonalizationEditor",
      "imports": [
        "@/components/ui/use-toast",
        "./TouchPersonalizationControls"
      ],
      "exports": [
        "MobilePersonalizationEditor"
      ],
      "usedComponents": [
        "PersonalizationTemplate",
        "Set",
        "Eye",
        "X",
        "Sparkles",
        "RefreshCw",
        "Save",
        "Edit3",
        "ChevronUp",
        "ChevronDown",
        "Check",
        "Copy",
        "Wand2",
        "Minus",
        "Plus",
        "Palette",
        "TouchPersonalizationControls"
      ]
    },
    {
      "path": "src/components/mobile/personalization/TouchPersonalizationControls.tsx",
      "name": "TouchPersonalizationControls",
      "imports": [
        "@/components/ui/use-toast"
      ],
      "exports": [
        "TouchPersonalizationControls"
      ],
      "usedComponents": [
        "GestureState",
        "NodeJS",
        "HTMLDivElement",
        "Minimize",
        "Maximize",
        "Star",
        "Volume2",
        "VolumeX",
        "MoreVertical",
        "AlertCircle",
        "Info",
        "IconComponent"
      ]
    },
    {
      "path": "src/components/mobile/portfolio/CouplePortfolioView.tsx",
      "name": "CouplePortfolioView",
      "imports": [
        "@/lib/mobile/wedme-portfolio-sync",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "CouplePortfolioView"
      ],
      "usedComponents": [
        "CouplePortfolioViewProps",
        "CouplePortfolioImage",
        "Set",
        "CoupleEngagementMetrics",
        "Star",
        "Grid3X3",
        "List",
        "Image",
        "Heart",
        "Share2",
        "MessageCircle"
      ]
    },
    {
      "path": "src/components/mobile/portfolio/MobilePortfolioManager.tsx",
      "name": "MobilePortfolioManager",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MobilePortfolioManager"
      ],
      "usedComponents": [
        "MobilePortfolioManagerProps",
        "Set",
        "Upload",
        "Filter",
        "Search",
        "Grid3X3",
        "List",
        "Star",
        "Share2",
        "Move",
        "Trash2",
        "Folder",
        "Image",
        "Eye"
      ]
    },
    {
      "path": "src/components/mobile/portfolio/MobileUploader.tsx",
      "name": "MobileUploader",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MobileUploader"
      ],
      "usedComponents": [
        "MobileUploaderProps",
        "UploadFile",
        "HTMLInputElement",
        "File",
        "Wifi",
        "WifiOff",
        "Settings",
        "X",
        "ImageIcon",
        "Camera",
        "Upload",
        "Check",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/mobile/portfolio/PresentationMode.tsx",
      "name": "PresentationMode",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "PresentationMode"
      ],
      "usedComponents": [
        "PresentationModeProps",
        "Set",
        "HTMLDivElement",
        "NodeJS",
        "X",
        "Pause",
        "Play",
        "Grid3X3",
        "Maximize2",
        "Image",
        "ChevronLeft",
        "ChevronRight",
        "MoreHorizontal",
        "Heart",
        "MessageCircle",
        "Share2",
        "Star"
      ]
    },
    {
      "path": "src/components/mobile/referrals/CrossPlatformShare.tsx",
      "name": "CrossPlatformShare",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "CrossPlatformShare"
      ],
      "usedComponents": [
        "PlatformInfo",
        "HTMLButtonElement",
        "CrossPlatformShareProps",
        "Badge",
        "TouchOptimizedButton",
        "CheckCircle2",
        "Card",
        "Copy",
        "Apple",
        "Chrome",
        "Smartphone"
      ]
    },
    {
      "path": "src/components/mobile/referrals/MobileAnalytics.tsx",
      "name": "MobileAnalytics",
      "imports": [],
      "exports": [
        "MobileAnalytics"
      ],
      "usedComponents": [
        "MobileAnalyticsProps",
        "Icon",
        "TrendingUp",
        "EyeOff",
        "Eye",
        "StatCard"
      ]
    },
    {
      "path": "src/components/mobile/referrals/MobileLeaderboard.tsx",
      "name": "MobileLeaderboard",
      "imports": [],
      "exports": [
        "MobileLeaderboard"
      ],
      "usedComponents": [
        "MobileLeaderboardProps",
        "Trophy",
        "Star"
      ]
    },
    {
      "path": "src/components/mobile/referrals/MobileOptimizations.tsx",
      "name": "MobileOptimizations",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MobileOptimizations"
      ],
      "usedComponents": [
        "NetworkInfo",
        "NetworkIcon",
        "Loader2",
        "NetworkStatus",
        "PerformanceIndicator",
        "Suspense",
        "OptimizedSpinner",
        "LazyQRGenerator",
        "LazyLeaderboard",
        "LazyAnalytics"
      ]
    },
    {
      "path": "src/components/mobile/referrals/MobileQRGenerator.tsx",
      "name": "MobileQRGenerator",
      "imports": [],
      "exports": [
        "MobileQRGenerator"
      ],
      "usedComponents": [
        "MobileQRGeneratorProps",
        "QRCode",
        "Check",
        "Copy",
        "Share2",
        "Download"
      ]
    },
    {
      "path": "src/components/mobile/referrals/MobileReferralShare.tsx",
      "name": "MobileReferralShare",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "MobileReferralShare"
      ],
      "usedComponents": [
        "HTMLButtonElement",
        "MobileReferralShareProps",
        "Heart",
        "WifiOff",
        "TouchFriendlyButton",
        "QrCode",
        "Badge",
        "AnimatePresence",
        "QRCodeCanvas",
        "Download",
        "Shield",
        "CheckCircle2",
        "Smartphone"
      ]
    },
    {
      "path": "src/components/mobile/schedules/MobileHelperScheduleView.tsx",
      "name": "MobileHelperScheduleView",
      "imports": [
        "@/lib/mobile/notification-manager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ScheduleAssignment",
        "Calendar",
        "Wifi",
        "WifiOff",
        "RefreshCw",
        "Clock",
        "MapPin",
        "CheckCircle2",
        "Navigation",
        "Phone",
        "MessageSquare",
        "QrCode"
      ]
    },
    {
      "path": "src/components/mobile/search/MapBasedVendorSearch.tsx",
      "name": "MapBasedVendorSearch",
      "imports": [
        "@/types/mobile-search",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SearchResult",
        "ClusterMarker",
        "HTMLDivElement",
        "Map",
        "List",
        "Filter",
        "Plus",
        "Minus",
        "Navigation",
        "MapPin",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/search/MobileSearchHistory.tsx",
      "name": "MobileSearchHistory",
      "imports": [
        "@/types/mobile-search",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SearchHistoryItem",
        "PopularSearch",
        "SearchAnalytics",
        "Clock",
        "Download",
        "X",
        "Search",
        "Eye",
        "Calendar",
        "MapPin",
        "Share2",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/search/NearbyVendorDiscovery.tsx",
      "name": "NearbyVendorDiscovery",
      "imports": [
        "@/types/mobile-search",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DiscoveryVendor",
        "Set",
        "NodeJS",
        "GeolocationPosition",
        "Radar",
        "IconComponent",
        "RefreshCw",
        "Zap",
        "Navigation",
        "Heart",
        "Star",
        "MapPin",
        "Clock",
        "Phone",
        "Share2"
      ]
    },
    {
      "path": "src/components/mobile/search/QuickSearchActions.tsx",
      "name": "QuickSearchActions",
      "imports": [
        "@/types/mobile-search",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SearchFilters",
        "RecentLocation",
        "Navigation",
        "MapPin",
        "Camera",
        "Star",
        "IconComponent",
        "TrendingUp",
        "Clock",
        "Heart"
      ]
    },
    {
      "path": "src/components/mobile/search/SwipeableSearchResults.tsx",
      "name": "SwipeableSearchResults",
      "imports": [
        "@/types/mobile-search",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Set",
        "HTMLDivElement",
        "AnimatePresence",
        "Heart",
        "Star",
        "MapPin",
        "Phone",
        "MessageCircle"
      ]
    },
    {
      "path": "src/components/mobile/search/TouchOptimizedAutocomplete.tsx",
      "name": "TouchOptimizedAutocomplete",
      "imports": [
        "@/types/mobile-search",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AutocompleteSuggestion",
        "HTMLInputElement",
        "HTMLDivElement",
        "Clock",
        "TrendingUp",
        "MapPin",
        "Search",
        "X",
        "Filter",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/mobile/seating/ConflictMobileBanner.tsx",
      "name": "ConflictMobileBanner",
      "imports": [
        "@/components/ui/alert",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "ConflictMobileBanner"
      ],
      "usedComponents": [
        "ConflictMobileBannerProps",
        "Utensils",
        "Users",
        "Settings",
        "AlertTriangle",
        "Alert",
        "Badge",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "Zap",
        "X"
      ]
    },
    {
      "path": "src/components/mobile/seating/CoupleAuthGuard.tsx",
      "name": "CoupleAuthGuard",
      "imports": [
        "@/components/ui/loading-spinner",
        "@/components/ui/alert",
        "@/components/ui/button"
      ],
      "exports": [
        "CoupleAuthGuard"
      ],
      "usedComponents": [
        "CoupleAuthGuardProps",
        "AuthState",
        "LoadingSpinner",
        "Alert",
        "Button"
      ]
    },
    {
      "path": "src/components/mobile/seating/GuestAssignmentModal.tsx",
      "name": "GuestAssignmentModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/checkbox",
        "@/components/ui/alert",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "GuestAssignmentModal"
      ],
      "usedComponents": [
        "GuestAssignmentModalProps",
        "GuestCategory",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "Button",
        "ArrowLeft",
        "DialogTitle",
        "Badge",
        "Search",
        "Input",
        "X",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Alert",
        "AlertTriangle",
        "ScrollArea",
        "Users",
        "Checkbox",
        "Check"
      ]
    },
    {
      "path": "src/components/mobile/seating/MobileSeatingDashboard.tsx",
      "name": "MobileSeatingDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert"
      ],
      "exports": [
        "MobileSeatingDashboard"
      ],
      "usedComponents": [
        "MobileSeatingDashboardProps",
        "Settings",
        "Share",
        "Download",
        "Card",
        "CheckCircle",
        "Progress",
        "AlertTriangle",
        "Alert",
        "Clock",
        "Button"
      ]
    },
    {
      "path": "src/components/mobile/seating/MobileSeatingViewer.tsx",
      "name": "MobileSeatingViewer",
      "imports": [
        "./TouchTableCard",
        "./SeatingNavigationControls",
        "./ConflictMobileBanner",
        "./GuestAssignmentModal",
        "@/components/ui/LoadingSkeleton",
        "@/components/ui/alert"
      ],
      "exports": [
        "MobileSeatingViewer"
      ],
      "usedComponents": [
        "MobileSeatingViewerProps",
        "ViewportBounds",
        "ConflictFlag",
        "HTMLDivElement",
        "LoadingSkeleton",
        "Alert",
        "WifiOff",
        "RefreshCw",
        "ConflictMobileBanner",
        "TouchTableCard",
        "SeatingNavigationControls",
        "GuestAssignmentModal"
      ]
    },
    {
      "path": "src/components/mobile/seating/ProductionSeatingDashboard.tsx",
      "name": "ProductionSeatingDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/components/ui/badge",
        "@/hooks/useSeatingOffline",
        "@/lib/offline/seating-offline-storage",
        "@/components/touch/TouchInput"
      ],
      "exports": [
        "default",
        "ProductionSeatingDashboard"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Zap",
        "RefreshCw",
        "Share",
        "Download",
        "TouchInput",
        "Wifi",
        "WifiOff",
        "Badge",
        "Activity",
        "Shield",
        "Alert",
        "AlertTriangle",
        "Button",
        "Card",
        "statusInfo",
        "Progress",
        "TrendingUp",
        "Clock"
      ]
    },
    {
      "path": "src/components/mobile/seating/SeatingNavigationControls.tsx",
      "name": "SeatingNavigationControls",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "SeatingNavigationControls"
      ],
      "usedComponents": [
        "Badge",
        "Button",
        "Map",
        "Settings",
        "ZoomIn",
        "ZoomOut",
        "RotateCcw",
        "Maximize"
      ]
    },
    {
      "path": "src/components/mobile/seating/TouchTableCard.tsx",
      "name": "TouchTableCard",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "TouchTableCard"
      ],
      "usedComponents": [
        "TouchTableCardProps",
        "HTMLDivElement",
        "NodeJS",
        "Badge",
        "Users",
        "AlertTriangle",
        "Button",
        "Plus",
        "Settings"
      ]
    },
    {
      "path": "src/components/mobile/security/ConsentManager.tsx",
      "name": "ConsentManager",
      "imports": [],
      "exports": [
        "default",
        "ConsentManager"
      ],
      "usedComponents": [
        "ConsentManagerProps",
        "ConsentItem",
        "Check",
        "CategoryIcon",
        "Icon",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/mobile/security/DataControlActions.tsx",
      "name": "DataControlActions",
      "imports": [],
      "exports": [
        "default",
        "DataControlActions"
      ],
      "usedComponents": [
        "DataControlActionsProps",
        "DataItem",
        "FileText",
        "CheckCircle",
        "Icon",
        "AlertTriangle",
        "Download",
        "Trash2",
        "Eye"
      ]
    },
    {
      "path": "src/components/mobile/security/EmergencyContacts.tsx",
      "name": "EmergencyContacts",
      "imports": [],
      "exports": [
        "default",
        "EmergencyContacts"
      ],
      "usedComponents": [
        "AlertTriangle",
        "Icon",
        "Phone",
        "Smartphone",
        "Mail",
        "Clock",
        "Info",
        "Heart",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/mobile/security/EmergencyResponseMobile.tsx",
      "name": "EmergencyResponseMobile",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select"
      ],
      "exports": [
        "default",
        "EmergencyResponseMobile"
      ],
      "usedComponents": [
        "GeolocationCoordinates",
        "Partial",
        "EmergencyReport",
        "MediaRecorder",
        "Blob",
        "HTMLInputElement",
        "User",
        "Card",
        "CardContent",
        "Button",
        "Phone",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "MapPin",
        "Input",
        "FileText",
        "Textarea",
        "MicOff",
        "Mic",
        "Badge",
        "Camera",
        "Send"
      ]
    },
    {
      "path": "src/components/mobile/security/GuestPrivacyControls.tsx",
      "name": "GuestPrivacyControls",
      "imports": [
        "./ConsentManager",
        "./PrivacyPreferences",
        "./DataControlActions"
      ],
      "exports": [
        "default",
        "GuestPrivacyControls"
      ],
      "usedComponents": [
        "Shield",
        "EyeOff",
        "Eye",
        "Camera",
        "Share2",
        "Settings",
        "Icon",
        "ConsentManager",
        "PrivacyPreferences",
        "DataControlActions",
        "Trash2",
        "Download"
      ]
    },
    {
      "path": "src/components/mobile/security/MobileIncidentDashboard.tsx",
      "name": "MobileIncidentDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "MobileIncidentDashboard"
      ],
      "usedComponents": [
        "Incident",
        "GeolocationCoordinates",
        "Shield",
        "MapPin",
        "Card",
        "CardHeader",
        "CardTitle",
        "Phone",
        "CardContent",
        "Button",
        "AlertTriangle",
        "Badge",
        "Clock",
        "Users"
      ]
    },
    {
      "path": "src/components/mobile/security/MobileSecurityDashboard.tsx",
      "name": "MobileSecurityDashboard",
      "imports": [
        "./SecurityStatusOverview",
        "./WeddingDataProtection",
        "./EmergencyContacts"
      ],
      "exports": [
        "default",
        "MobileSecurityDashboard"
      ],
      "usedComponents": [
        "SecurityMetrics",
        "ShieldCheck",
        "Shield",
        "ShieldAlert",
        "Users",
        "Camera",
        "AlertTriangle",
        "CheckCircle",
        "Icon",
        "SecurityStatusOverview",
        "WeddingDataProtection",
        "EmergencyContacts",
        "Settings",
        "Heart"
      ]
    },
    {
      "path": "src/components/mobile/security/OfflineIncidentHandler.tsx",
      "name": "OfflineIncidentHandler",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert"
      ],
      "exports": [
        "default",
        "OfflineIncidentHandler",
        "useOfflineIncidents"
      ],
      "usedComponents": [
        "OfflineIncident",
        "OfflineIncidentHandlerProps",
        "CriticalContact",
        "Date",
        "Clock",
        "Sync",
        "CheckCircle",
        "AlertTriangle",
        "Alert",
        "Wifi",
        "CloudOff",
        "AlertDescription",
        "Card",
        "CardHeader",
        "CardTitle",
        "Database",
        "Badge",
        "CardContent",
        "Button",
        "Upload",
        "OfflineIncidentHandler"
      ]
    },
    {
      "path": "src/components/mobile/security/PrivacyPreferences.tsx",
      "name": "PrivacyPreferences",
      "imports": [],
      "exports": [
        "default",
        "PrivacyPreferences"
      ],
      "usedComponents": [
        "PrivacyPreferencesProps",
        "PrivacySetting",
        "CategoryIcon",
        "Icon",
        "Lock",
        "Globe"
      ]
    },
    {
      "path": "src/components/mobile/security/SecurityStatusOverview.tsx",
      "name": "SecurityStatusOverview",
      "imports": [],
      "exports": [
        "default",
        "SecurityStatusOverview"
      ],
      "usedComponents": [
        "SecurityStatusOverviewProps",
        "Icon",
        "StatusIcon",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/mobile/security/WeddingDataProtection.tsx",
      "name": "WeddingDataProtection",
      "imports": [],
      "exports": [
        "default",
        "WeddingDataProtection"
      ],
      "usedComponents": [
        "WeddingDataProtectionProps",
        "Shield",
        "Cloud",
        "Lock",
        "CheckCircle",
        "Icon",
        "ChevronDown",
        "ConfigIcon",
        "Download",
        "Settings"
      ]
    },
    {
      "path": "src/components/mobile/timeline/NodeEditor.tsx",
      "name": "NodeEditor",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/slider"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimelineNode",
        "Icon",
        "AnimatePresence",
        "Button",
        "X",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Textarea",
        "Slider",
        "Calendar",
        "Save"
      ]
    },
    {
      "path": "src/components/mobile/timeline/TimelineNodes.tsx",
      "name": "TimelineNodes",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CheckCircle",
        "Play",
        "AlertCircle",
        "Pause",
        "AnimatePresence",
        "Card",
        "Badge",
        "Calendar",
        "Clock",
        "Button"
      ]
    },
    {
      "path": "src/components/mobile/touch/MobileTouchOptimizer.tsx",
      "name": "MobileTouchOptimizer",
      "imports": [
        "@/lib/utils",
        "@/hooks/useMobileTouch"
      ],
      "exports": [
        "default",
        "MobileTouchOptimizer"
      ],
      "usedComponents": [
        "MobileTouchOptimizerProps",
        "HTMLDivElement",
        "TouchTargetAnalysis"
      ]
    },
    {
      "path": "src/components/mobile/touch/MobileWeddingWorkflow.tsx",
      "name": "MobileWeddingWorkflow",
      "imports": [
        "@/lib/utils",
        "./TouchOptimizedButton",
        "./GestureHandler",
        "@/hooks/useHapticFeedback",
        "@/hooks/useMobileTouch"
      ],
      "exports": [
        "default",
        "MobileWeddingWorkflow"
      ],
      "usedComponents": [
        "MobileWeddingWorkflowProps",
        "TouchOptimizedButton",
        "GestureHandler"
      ]
    },
    {
      "path": "src/components/mobile/touch/WedMeMobileTouchSync.tsx",
      "name": "WedMeMobileTouchSync",
      "imports": [
        "@/lib/utils",
        "./TouchOptimizedButton",
        "@/hooks/useMobileTouch",
        "@/lib/wedme/cross-platform-touch-sync"
      ],
      "exports": [
        "default",
        "WedMeMobileTouchSync"
      ],
      "usedComponents": [
        "WedMeMobileTouchSyncProps",
        "SyncEvent",
        "WedMeCrossPlatformTouchSync",
        "TouchOptimizedButton"
      ]
    },
    {
      "path": "src/components/mobile/touch/index.ts",
      "name": "index",
      "imports": [],
      "exports": [
        "default",
        "MOBILE_TOUCH_PRESETS",
        "TOUCH_TARGET_SIZES",
        "GESTURE_THRESHOLDS",
        "PERFORMANCE_MODES",
        "WEDDING_CONTEXTS",
        "SYNC_EVENTS",
        "SECURITY_CLASSIFICATIONS",
        "MobileTouchUtils"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/mobile/viral/ViralDashboard.tsx",
      "name": "ViralDashboard",
      "imports": [
        "@/types/viral-tracking"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ViralDashboardStore",
        "MetricCardProps",
        "TrendingUp",
        "Icon",
        "PullToRefreshProps",
        "RefreshCcw",
        "AnimatePresence",
        "PullToRefresh",
        "MetricCard",
        "QuickActions",
        "BottomSheet"
      ]
    },
    {
      "path": "src/components/mobile/viral/ViralPWAManager.tsx",
      "name": "ViralPWAManager",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PWAState",
        "React",
        "StatusBannerProps",
        "AnimatePresence",
        "Icon",
        "X",
        "InstallBannerProps",
        "Download",
        "StatusBanner",
        "InstallBanner"
      ]
    },
    {
      "path": "src/components/mobile/widgets/MobileWidgetGrid.tsx",
      "name": "MobileWidgetGrid",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "MobileWidgetGrid",
        "useWidgetGrid"
      ],
      "usedComponents": [
        "Card",
        "Button",
        "Minimize2",
        "Maximize2",
        "WidgetComponent",
        "Grid",
        "List",
        "Widget"
      ]
    },
    {
      "path": "src/components/mobile/widgets/SwipeableWidgets.tsx",
      "name": "SwipeableWidgets",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "SwipeableWidgets",
        "SwipeableWidgetsOptimized"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "NodeJS",
        "Card",
        "WidgetComponent",
        "Button",
        "ChevronLeft",
        "ChevronRight",
        "SwipeableWidgetsProps"
      ]
    },
    {
      "path": "src/components/modals/ConfirmationDialog.tsx",
      "name": "ConfirmationDialog",
      "imports": [
        "@/components/ui/alert-dialog"
      ],
      "exports": [
        "ConfirmationDialog",
        "useConfirmationDialog"
      ],
      "usedComponents": [
        "AlertTriangle",
        "CheckCircle",
        "XCircle",
        "Info",
        "AlertDialog",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction"
      ]
    },
    {
      "path": "src/components/modals/FormPreviewModal.tsx",
      "name": "FormPreviewModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button"
      ],
      "exports": [
        "FormPreviewModal"
      ],
      "usedComponents": [
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Eye",
        "DialogDescription",
        "AnimatePresence",
        "Button",
        "DialogFooter",
        "Download",
        "Share2"
      ]
    },
    {
      "path": "src/components/monitoring/HealthDashboard.tsx",
      "name": "HealthDashboard",
      "imports": [
        "@/hooks/useHealthMetrics"
      ],
      "exports": [
        "HealthDashboard"
      ],
      "usedComponents": [
        "SystemHealth"
      ]
    },
    {
      "path": "src/components/monitoring/MonitoringProvider.tsx",
      "name": "MonitoringProvider",
      "imports": [
        "@/lib/monitoring/integration-hub"
      ],
      "exports": [
        "MonitoringProvider"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/monitoring/PerformanceDashboard.tsx",
      "name": "PerformanceDashboard",
      "imports": [
        "@/lib/monitoring/performance-monitor",
        "@/lib/monitoring/performance-monitor"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PerformanceMetrics",
        "Alert",
        "PerformanceTrend"
      ]
    },
    {
      "path": "src/components/monitoring/performance-dashboard.tsx",
      "name": "performance-dashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/select"
      ],
      "exports": [
        "PerformanceDashboard"
      ],
      "usedComponents": [
        "DashboardData",
        "Date",
        "Badge",
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Server",
        "TrendingUp",
        "TrendingDown",
        "RefreshCw",
        "AlertCircle",
        "Heart",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "Globe",
        "Camera",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/music/AppropriatenessChecker.tsx",
      "name": "AppropriatenessChecker",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/textarea"
      ],
      "exports": [
        "AppropriatenessChecker"
      ],
      "usedComponents": [
        "AppropriatenessScore",
        "AnimatePresence",
        "Sparkles",
        "Button",
        "X",
        "Card",
        "CardHeader",
        "Music",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Badge",
        "Heart",
        "Brain",
        "scoreDisplay",
        "Progress",
        "Shield",
        "AlertTriangle",
        "Textarea",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/music/AudioPreview.tsx",
      "name": "AudioPreview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/slider"
      ],
      "exports": [
        "AudioPreview"
      ],
      "usedComponents": [
        "ReactPlayer",
        "PlayerState",
        "Button",
        "Maximize2",
        "X",
        "Slider",
        "SkipBack",
        "Pause",
        "Play",
        "SkipForward",
        "VolumeX",
        "Volume2",
        "Minimize2",
        "AnimatePresence",
        "ExpandedPlayer",
        "MiniPlayer"
      ]
    },
    {
      "path": "src/components/music/GuestRequestForm.tsx",
      "name": "GuestRequestForm",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GuestRequestMusicRequest",
        "Card",
        "CardContent",
        "CheckCircle",
        "Button",
        "CardHeader",
        "Music",
        "CardTitle",
        "Heart",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Input",
        "Textarea",
        "Send"
      ]
    },
    {
      "path": "src/components/music/MusicDashboard.tsx",
      "name": "MusicDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MusicPlaylist",
        "MusicTrack",
        "MusicRecommendation",
        "GuestMusicRequest",
        "Music",
        "Button",
        "Sparkles",
        "Plus",
        "Card",
        "CardContent",
        "PlayCircle",
        "Users",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Clock",
        "Search",
        "Input",
        "Heart"
      ]
    },
    {
      "path": "src/components/music/MusicDatabase.tsx",
      "name": "MusicDatabase",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input"
      ],
      "exports": [
        "MusicDatabase"
      ],
      "usedComponents": [
        "SearchState",
        "MusicTrack",
        "MusicPlaylist",
        "Search",
        "Input",
        "Button",
        "Settings",
        "Music",
        "Filter",
        "AnimatePresence",
        "Card",
        "CardContent",
        "Badge",
        "Pause",
        "Play",
        "Sparkles",
        "Plus",
        "Heart",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Volume2",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "CardDescription"
      ]
    },
    {
      "path": "src/components/music/PlaylistBuilder.tsx",
      "name": "PlaylistBuilder",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/textarea"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MusicPlaylist",
        "Partial",
        "PlaylistTrack",
        "MusicTrack",
        "Music",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Clock",
        "Sparkles",
        "GripVertical",
        "Badge",
        "Trash2",
        "Search",
        "PlayCircle",
        "Plus"
      ]
    },
    {
      "path": "src/components/music/SongRequestResolver.tsx",
      "name": "SongRequestResolver",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/components/ui/select"
      ],
      "exports": [
        "SongRequestResolver"
      ],
      "usedComponents": [
        "VagueRequest",
        "RequestFormData",
        "AnimatePresence",
        "Brain",
        "Button",
        "X",
        "Card",
        "CardHeader",
        "CardTitle",
        "MessageSquare",
        "CardDescription",
        "CardContent",
        "Textarea",
        "Sparkles",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "HelpCircle",
        "CheckCircle",
        "Badge",
        "Music",
        "Search",
        "Heart",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/music/SongSearch.tsx",
      "name": "SongSearch",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/label",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/select"
      ],
      "exports": [
        "SongSearch"
      ],
      "usedComponents": [
        "MusicTrack",
        "MusicProvider",
        "SearchFormData",
        "Card",
        "CardHeader",
        "CardTitle",
        "Search",
        "Button",
        "Filter",
        "CardContent",
        "Input",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Zap",
        "Slider",
        "Clock",
        "Switch",
        "AlertTriangle",
        "Music",
        "Heart",
        "Sparkles",
        "Badge"
      ]
    },
    {
      "path": "src/components/music/mobile/MobileMusicInterface.tsx",
      "name": "MobileMusicInterface",
      "imports": [
        "@/lib/utils",
        "@/lib/platform/mobile-detector",
        "@/lib/platform/offline-manager",
        "@/lib/platform/touch-gestures",
        "@/lib/platform/performance-monitor",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge"
      ],
      "exports": [
        "default",
        "MobileMusicInterface"
      ],
      "usedComponents": [
        "MobileMusicInterfaceProps",
        "Track",
        "WifiOff",
        "Battery",
        "Music",
        "Button",
        "Sun",
        "Moon",
        "Search",
        "Input",
        "Card",
        "Badge",
        "Pause",
        "Play",
        "Minus",
        "Plus"
      ]
    },
    {
      "path": "src/components/navigation/Breadcrumbs.tsx",
      "name": "Breadcrumbs",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/dropdown",
        "@/lib/navigation/navigationContext",
        "@/lib/navigation/deepLinking"
      ],
      "exports": [
        "default",
        "Breadcrumbs",
        "MobileBreadcrumbs",
        "StructuredBreadcrumbs"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Link",
        "HomeIcon",
        "ChevronRightIcon",
        "Dropdown",
        "DropdownButton",
        "EllipsisHorizontalIcon",
        "DropdownMenu",
        "DropdownItem",
        "React",
        "Button",
        "ClockIcon",
        "ShareIcon",
        "BookmarkIcon"
      ]
    },
    {
      "path": "src/components/navigation/CommandPalette.tsx",
      "name": "CommandPalette",
      "imports": [
        "@/components/ui/dialog",
        "@/lib/utils",
        "@/lib/navigation/navigationContext",
        "@/lib/navigation/roleBasedAccess",
        "@/lib/navigation/deepLinking"
      ],
      "exports": [
        "default",
        "CommandPalette"
      ],
      "usedComponents": [
        "SearchResult",
        "RecentItem",
        "HTMLInputElement",
        "Dialog",
        "DialogContent",
        "MagnifyingGlassIcon",
        "ResultItem",
        "Icon",
        "ArrowRightIcon"
      ]
    },
    {
      "path": "src/components/navigation/MobileNav.tsx",
      "name": "MobileNav",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/lib/navigation/navigationContext",
        "@/components/ui/RealtimeIndicator",
        "@/components/providers/RealtimeProvider"
      ],
      "exports": [
        "default",
        "MobileNav",
        "BottomNav"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Button",
        "XMarkIcon",
        "Avatar",
        "RealtimeIndicator",
        "MagnifyingGlassIcon",
        "BellIcon",
        "Badge",
        "Link",
        "Icon",
        "ChevronRightIcon",
        "ChildIcon",
        "UserCircleIcon",
        "ArrowRightStartOnRectangleIcon",
        "PlusIcon"
      ]
    },
    {
      "path": "src/components/navigation/NavigationBar.tsx",
      "name": "NavigationBar",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/dropdown",
        "@/lib/navigation/navigationContext",
        "@/components/ui/RealtimeIndicator",
        "@/components/providers/RealtimeProvider"
      ],
      "exports": [
        "default",
        "NavigationBar",
        "NavigationToolbar"
      ],
      "usedComponents": [
        "Button",
        "Bars3Icon",
        "Link",
        "Icon",
        "Badge",
        "MagnifyingGlassIcon",
        "RealtimeIndicator",
        "BellIcon",
        "Dropdown",
        "DropdownButton",
        "Avatar",
        "ChevronDownIcon",
        "DropdownMenu",
        "DropdownItem",
        "UserCircleIcon",
        "DropdownLabel",
        "Cog8ToothIcon",
        "DropdownDivider",
        "ArrowRightStartOnRectangleIcon"
      ]
    },
    {
      "path": "src/components/notifications/NotificationCard.tsx",
      "name": "NotificationCard",
      "imports": [],
      "exports": [
        "default",
        "NotificationCard"
      ],
      "usedComponents": [
        "ExclamationTriangleSolidIcon",
        "ExclamationCircleIcon",
        "InformationCircleIcon",
        "BellIcon",
        "HeartSolidIcon",
        "CurrencyPoundIcon",
        "CalendarIcon",
        "ClockIcon",
        "CloudIcon",
        "UserGroupIcon",
        "ChatBubbleLeftIcon",
        "GiftIcon",
        "CheckIcon",
        "XMarkIcon",
        "PhoneIcon",
        "MapPinIcon",
        "PriorityIcon",
        "NotificationTypeIcon",
        "WeddingContext",
        "VendorContext",
        "AnimatePresence",
        "ActionButton"
      ]
    },
    {
      "path": "src/components/notifications/NotificationCenter.tsx",
      "name": "NotificationCenter",
      "imports": [
        "@/lib/stores/notificationStore"
      ],
      "exports": [
        "default",
        "NotificationCenter"
      ],
      "usedComponents": [
        "BellAlertIcon",
        "BellIcon",
        "CheckIcon",
        "Cog6ToothIcon",
        "NotificationCategory",
        "PriorityLevel",
        "FunnelIcon",
        "AnimatePresence",
        "NotificationBell",
        "NotificationHeader",
        "NotificationFilters",
        "ExclamationTriangleIcon",
        "XMarkIcon",
        "Suspense",
        "NotificationCenterLoading",
        "EmptyNotificationsState"
      ]
    },
    {
      "path": "src/components/notifications/NotificationDashboard.tsx",
      "name": "NotificationDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/notifications/tracking"
      ],
      "exports": [
        "default",
        "NotificationDashboard"
      ],
      "usedComponents": [
        "DashboardData",
        "Card",
        "Button",
        "Badge"
      ]
    },
    {
      "path": "src/components/notifications/SmartNotificationGroup.tsx",
      "name": "SmartNotificationGroup",
      "imports": [
        "./NotificationCard"
      ],
      "exports": [
        "default",
        "SmartNotificationGroup"
      ],
      "usedComponents": [
        "HeartIcon",
        "UserGroupIcon",
        "ExclamationTriangleIcon",
        "SparklesIcon",
        "ChatBubbleLeftIcon",
        "ChevronRightIcon",
        "AnimatePresence",
        "GroupActionButton",
        "CheckIcon",
        "EyeIcon",
        "XMarkIcon",
        "Set",
        "GroupHeader",
        "NotificationCard"
      ]
    },
    {
      "path": "src/components/notifications/SwipeableNotificationCard.tsx",
      "name": "SwipeableNotificationCard",
      "imports": [
        "./NotificationCard"
      ],
      "exports": [
        "default",
        "SwipeableNotificationCard",
        "MobileNotificationInterface",
        "useMobileNotificationGestures"
      ],
      "usedComponents": [
        "XMarkIcon",
        "ArchiveBoxIcon",
        "ClockIcon",
        "BellSlashIcon",
        "SwipeIndicator",
        "NotificationCard",
        "Set",
        "SwipeableNotificationCard",
        "CheckIcon"
      ]
    },
    {
      "path": "src/components/notifications/WeddingDayNotificationOverlay.tsx",
      "name": "WeddingDayNotificationOverlay",
      "imports": [],
      "exports": [
        "default",
        "WeddingDayNotificationOverlay"
      ],
      "usedComponents": [
        "ClockIcon",
        "ExclamationTriangleSolidIcon",
        "CloudIcon",
        "BellAlertIcon",
        "HeartSolidIcon",
        "MapPinIcon",
        "XMarkIcon",
        "PhoneIcon",
        "ChatBubbleLeftIcon",
        "CloudRainIcon",
        "WindIcon",
        "SunIcon",
        "CheckIcon",
        "Notification",
        "WeatherNotification",
        "WeddingCountdown",
        "QuickActionButton",
        "AnimatePresence",
        "CriticalAlertCard",
        "WeatherAlertCard"
      ]
    },
    {
      "path": "src/components/offline/ConflictBreadcrumb.tsx",
      "name": "ConflictBreadcrumb",
      "imports": [
        "@/components/ui/breadcrumb",
        "@/components/ui/badge"
      ],
      "exports": [
        "ConflictBreadcrumb"
      ],
      "usedComponents": [
        "Breadcrumb",
        "BreadcrumbList",
        "BreadcrumbItem",
        "BreadcrumbLink",
        "Home",
        "BreadcrumbSeparator",
        "ChevronRight",
        "Database",
        "BreadcrumbPage",
        "AlertTriangle",
        "WifiOff",
        "Badge",
        "Wifi"
      ]
    },
    {
      "path": "src/components/offline/ConflictList.tsx",
      "name": "ConflictList",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/dropdown-menu",
        "@/components/ui/table",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "@/components/ui/alert"
      ],
      "exports": [
        "ConflictList"
      ],
      "usedComponents": [
        "AlertTriangle",
        "Clock",
        "CheckCircle",
        "TableRow",
        "TableCell",
        "Checkbox",
        "Badge",
        "User",
        "Calendar",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Button",
        "MoreHorizontal",
        "DropdownMenuContent",
        "DropdownMenuLabel",
        "DropdownMenuItem",
        "FileText",
        "DropdownMenuSeparator",
        "Set",
        "SortField",
        "SortDirection",
        "ConflictFilters",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Filter",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Alert",
        "AlertDescription",
        "Table",
        "TableHeader",
        "TableHead",
        "ArrowUpDown",
        "TableBody",
        "ConflictTableRow"
      ]
    },
    {
      "path": "src/components/offline/ConflictResolutionDialog.tsx",
      "name": "ConflictResolutionDialog",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/form",
        "@/components/ui/select",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/textarea",
        "@/components/ui/separator",
        "@/components/ui/scroll-area",
        "@/components/ui/alert"
      ],
      "exports": [
        "ConflictResolutionDialog"
      ],
      "usedComponents": [
        "ResolutionResult",
        "ConflictResolutionFormData",
        "AlertTriangle",
        "Clock",
        "CheckCircle",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Badge",
        "DialogDescription",
        "ScrollArea",
        "Card",
        "CardHeader",
        "CardTitle",
        "FileText",
        "CardContent",
        "Separator",
        "User",
        "Calendar",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "ConflictFieldComparision",
        "Form",
        "FormField",
        "FormItem",
        "FormLabel",
        "Select",
        "FormControl",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "FormDescription",
        "FormMessage",
        "Textarea",
        "DialogFooter",
        "Button"
      ]
    },
    {
      "path": "src/components/offline/ErrorRecoveryPanel.tsx",
      "name": "ErrorRecoveryPanel",
      "imports": [
        "@/hooks/useErrorRecovery",
        "@/lib/offline/offline-error-handler"
      ],
      "exports": [
        "default",
        "ErrorRecoveryPanel"
      ],
      "usedComponents": [
        "ErrorRecoveryPanelProps",
        "AlertTriangle",
        "AlertCircle",
        "WifiOff",
        "Wifi",
        "Loader2",
        "X",
        "RefreshCw",
        "ChevronUp",
        "ChevronDown",
        "Calendar",
        "CheckCircle",
        "Zap",
        "ExternalLink",
        "MessageSquare",
        "HelpCircle"
      ]
    },
    {
      "path": "src/components/offline/OfflineForm.tsx",
      "name": "OfflineForm",
      "imports": [
        "@/lib/offline/sync-manager",
        "@/lib/offline/offline-database",
        "@/lib/utils/debounce"
      ],
      "exports": [
        "default",
        "OfflineForm"
      ],
      "usedComponents": [
        "OfflineFormProps",
        "Record",
        "Date",
        "NodeJS",
        "Loader2",
        "AlertCircle",
        "CheckCircle",
        "Clock",
        "WifiOff",
        "Wifi",
        "Save",
        "Upload"
      ]
    },
    {
      "path": "src/components/offline/OfflineIndicator.tsx",
      "name": "OfflineIndicator",
      "imports": [
        "@/lib/offline/sync-manager",
        "@/lib/offline/offline-database"
      ],
      "exports": [
        "default",
        "OfflineIndicator"
      ],
      "usedComponents": [
        "OfflineIndicatorProps",
        "SyncStatus",
        "Date",
        "RefreshCw",
        "AlertTriangle",
        "WifiOff",
        "Signal",
        "Upload",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/offline/SyncDashboard.tsx",
      "name": "SyncDashboard",
      "imports": [
        "@/lib/offline/sync-manager",
        "./SyncStatusIndicator",
        "./SyncToastProvider"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SyncDashboardProps",
        "SyncStatus",
        "QueueItem",
        "Set",
        "FileText",
        "AlertTriangle",
        "Calendar",
        "Shield",
        "SyncStatusIndicator",
        "RefreshCw",
        "Zap",
        "Trash2",
        "Pause",
        "Play",
        "Wifi",
        "WifiOff"
      ]
    },
    {
      "path": "src/components/offline/SyncStatusIndicator.tsx",
      "name": "SyncStatusIndicator",
      "imports": [
        "@/lib/offline/sync-manager"
      ],
      "exports": [
        "default",
        "SyncStatusIndicator"
      ],
      "usedComponents": [
        "SyncStatusIndicatorProps",
        "SyncStatus",
        "Date",
        "Loader2",
        "RefreshCw",
        "WifiOff",
        "AlertTriangle",
        "AlertCircle",
        "Upload",
        "CheckCircle",
        "Zap",
        "Clock",
        "FileText",
        "Calendar",
        "Shield",
        "Signal"
      ]
    },
    {
      "path": "src/components/offline/SyncToastProvider.tsx",
      "name": "SyncToastProvider",
      "imports": [
        "@/lib/offline/sync-manager"
      ],
      "exports": [
        "default",
        "useSyncToasts",
        "SyncToastProvider",
        "useCreateSyncToast"
      ],
      "usedComponents": [
        "Toast",
        "SyncToastContextType",
        "SyncToastProviderProps",
        "SyncStatus",
        "CheckCircle",
        "AlertCircle",
        "AlertTriangle",
        "RefreshCw",
        "Zap",
        "Calendar",
        "X",
        "SyncToastContext",
        "ToastComponent",
        "Pick"
      ]
    },
    {
      "path": "src/components/offline/__tests__/OfflineIndicator.enhanced.test.tsx",
      "name": "OfflineIndicator.enhanced.test",
      "imports": [
        "../OfflineIndicator",
        "@/lib/offline/sync-manager",
        "@/lib/offline/offline-database"
      ],
      "exports": [],
      "usedComponents": [
        "OfflineIndicator",
        "TestComponent"
      ]
    },
    {
      "path": "src/components/offline/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/onboarding/GuestCountSelector.tsx",
      "name": "GuestCountSelector",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/alert"
      ],
      "exports": [
        "GuestCountSelector"
      ],
      "usedComponents": [
        "HTMLInputElement",
        "Label",
        "Button",
        "Card",
        "CardContent",
        "Minus",
        "Input",
        "Plus",
        "Users",
        "Alert",
        "Info",
        "AlertDescription",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/onboarding/KeyboardShortcuts.tsx",
      "name": "KeyboardShortcuts",
      "imports": [
        "@/components/ui/button",
        "@/types/onboarding"
      ],
      "exports": [
        "KeyboardShortcuts"
      ],
      "usedComponents": [
        "Transition",
        "Dialog",
        "Button",
        "XMarkIcon",
        "Fragment"
      ]
    },
    {
      "path": "src/components/onboarding/OnboardingTour.tsx",
      "name": "OnboardingTour",
      "imports": [
        "@/types/onboarding"
      ],
      "exports": [
        "OnboardingTour"
      ],
      "usedComponents": [
        "Shepherd"
      ]
    },
    {
      "path": "src/components/onboarding/ProgressTracker.tsx",
      "name": "ProgressTracker",
      "imports": [
        "@/types/onboarding"
      ],
      "exports": [
        "ProgressTracker"
      ],
      "usedComponents": [
        "CheckCircleIcon",
        "ClockIcon"
      ]
    },
    {
      "path": "src/components/onboarding/VenueAutocomplete.tsx",
      "name": "VenueAutocomplete",
      "imports": [
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/lib/validations/wedding-basics",
        "@/types/venue"
      ],
      "exports": [
        "VenueAutocomplete"
      ],
      "usedComponents": [
        "CachedVenue",
        "HTMLInputElement",
        "HTMLDivElement",
        "NodeJS",
        "MapPin",
        "Input",
        "Loader2",
        "Button",
        "Search",
        "AlertCircle",
        "Badge",
        "Card",
        "CardContent",
        "Building2",
        "Star",
        "Phone",
        "Globe",
        "Navigation"
      ]
    },
    {
      "path": "src/components/onboarding/WeddingBasicsForm.tsx",
      "name": "WeddingBasicsForm",
      "imports": [
        "@/lib/validations/wedding-basics",
        "./VenueAutocomplete",
        "./GuestCountSelector",
        "./WeddingStyleSelector",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/components/ui/badge"
      ],
      "exports": [
        "WeddingBasicsForm"
      ],
      "usedComponents": [
        "WeddingBasicsRequest",
        "Clock",
        "CheckCircle2",
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardDescription",
        "CardContent",
        "Label",
        "Input",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "MapPin",
        "VenueAutocomplete",
        "Checkbox",
        "Users",
        "GuestCountSelector",
        "Info",
        "Palette",
        "WeddingStyleSelector",
        "Badge",
        "Button",
        "Save",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/onboarding/WeddingStyleSelector.tsx",
      "name": "WeddingStyleSelector",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "WeddingStyleSelector"
      ],
      "usedComponents": [
        "Search",
        "Input",
        "Label",
        "Badge",
        "Button",
        "X",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Icon",
        "TabsContent",
        "Card",
        "CardContent",
        "Alert",
        "Info",
        "AlertDescription",
        "Sparkles"
      ]
    },
    {
      "path": "src/components/onboarding/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/payments/MarkAsPaidModal.tsx",
      "name": "MarkAsPaidModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/calendar",
        "@/components/ui/popover",
        "@/components/ui/alert",
        "@/components/ui/badge",
        "@/lib/utils",
        "./PaymentStatusIndicator"
      ],
      "exports": [
        "default",
        "MarkAsPaidModal"
      ],
      "usedComponents": [
        "Date",
        "File",
        "FormErrors",
        "HTMLInputElement",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "CheckCircle",
        "DialogDescription",
        "PaymentStatusIndicator",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Label",
        "Popover",
        "PopoverTrigger",
        "Button",
        "CalendarIcon",
        "PopoverContent",
        "Calendar",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "IconComponent",
        "Input",
        "DollarSign",
        "Badge",
        "X",
        "Upload",
        "Textarea",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/payments/PaymentCalendar.tsx",
      "name": "PaymentCalendar",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/lib/utils",
        "./PaymentStatusIndicator"
      ],
      "exports": [
        "default",
        "PaymentCalendar"
      ],
      "usedComponents": [
        "FilterOptions",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Card",
        "CardHeader",
        "Button",
        "ChevronLeft",
        "CardTitle",
        "ChevronRight",
        "CalendarIcon",
        "CardContent",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Filter",
        "PaymentStatusIndicator"
      ]
    },
    {
      "path": "src/components/payments/PaymentStatusIndicator.tsx",
      "name": "PaymentStatusIndicator",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "PaymentStatusIndicator",
        "PaymentStatusUtils"
      ],
      "usedComponents": [
        "IconComponent"
      ]
    },
    {
      "path": "src/components/payments/UpcomingPaymentsList.tsx",
      "name": "UpcomingPaymentsList",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/alert",
        "@/lib/utils",
        "./PaymentStatusIndicator"
      ],
      "exports": [
        "default",
        "UpcomingPaymentsList"
      ],
      "usedComponents": [
        "FilterOption",
        "SortOption",
        "Set",
        "Card",
        "CardHeader",
        "CardContent",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "CardTitle",
        "CalendarIcon",
        "Badge",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "ArrowUpDown",
        "Filter",
        "PaymentStatusIndicator",
        "Clock",
        "CreditCard",
        "DollarSign",
        "ExternalLink",
        "Phone",
        "Building2",
        "Calendar",
        "FileText"
      ]
    },
    {
      "path": "src/components/payments/__tests__/MarkAsPaidModal.test.tsx",
      "name": "MarkAsPaidModal.test",
      "imports": [
        "../MarkAsPaidModal"
      ],
      "exports": [],
      "usedComponents": [
        "MarkAsPaidModal"
      ]
    },
    {
      "path": "src/components/payments/__tests__/PaymentStatusIndicator.test.tsx",
      "name": "PaymentStatusIndicator.test",
      "imports": [
        "../PaymentStatusIndicator"
      ],
      "exports": [],
      "usedComponents": [
        "PaymentStatusIndicator"
      ]
    },
    {
      "path": "src/components/pdf/FieldMappingInterface.tsx",
      "name": "FieldMappingInterface",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/heading"
      ],
      "exports": [
        "FieldMappingInterface"
      ],
      "usedComponents": [
        "DetectedField",
        "CoreFieldMapping",
        "Check",
        "AlertTriangle",
        "X",
        "Heading",
        "Text",
        "Select",
        "Checkbox",
        "Target",
        "Badge",
        "ArrowRight",
        "FileText",
        "Input",
        "Button",
        "Edit3",
        "Trash2",
        "Plus"
      ]
    },
    {
      "path": "src/components/pdf/PDFProcessingProgress.tsx",
      "name": "PDFProcessingProgress",
      "imports": [],
      "exports": [
        "PDFProcessingProgress"
      ],
      "usedComponents": [
        "ProcessingStep",
        "CheckCircleIcon",
        "SparklesIcon",
        "ExclamationTriangleIcon",
        "DocumentTextIcon"
      ]
    },
    {
      "path": "src/components/pdf/PDFUploader.tsx",
      "name": "PDFUploader",
      "imports": [
        "@/components/ui/button"
      ],
      "exports": [
        "PDFUploader"
      ],
      "usedComponents": [
        "UploadProgress",
        "Map",
        "CheckCircle",
        "AlertCircle",
        "Clock",
        "Upload",
        "FileText",
        "Button",
        "Eye",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/pdf/SmartFieldMappingInterface.tsx",
      "name": "SmartFieldMappingInterface",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/heading",
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "SmartFieldMappingInterface"
      ],
      "usedComponents": [
        "SmartMapping",
        "MappingSuggestion",
        "Record",
        "Set",
        "Card",
        "CardHeader",
        "Brain",
        "CardTitle",
        "Sparkles",
        "Progress",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Zap",
        "FileText",
        "Target",
        "Settings",
        "TabsContent",
        "Button",
        "RefreshCw",
        "EyeOff",
        "Eye",
        "Input",
        "CardContent",
        "Badge",
        "ArrowRight",
        "ThumbsUp",
        "ThumbsDown",
        "Check",
        "HelpCircle",
        "Star",
        "X",
        "Save"
      ]
    },
    {
      "path": "src/components/performance/AdvancedPerformanceDashboard.tsx",
      "name": "AdvancedPerformanceDashboard",
      "imports": [
        "../../hooks/usePerformanceOptimization",
        "./IntelligentCacheProvider",
        "./OptimisticUpdateProvider",
        "./RealtimeProvider"
      ],
      "exports": [
        "default",
        "AdvancedPerformanceDashboard"
      ],
      "usedComponents": [
        "NodeJS",
        "PerformanceObserver",
        "Map",
        "PerformanceDashboardState"
      ]
    },
    {
      "path": "src/components/performance/AdvancedPerformanceProfiler.tsx",
      "name": "AdvancedPerformanceProfiler",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "AdvancedPerformanceProfiler"
      ],
      "usedComponents": [
        "ProfilerProps",
        "PerformanceMetrics",
        "PerformanceAlert",
        "PerformanceObserver",
        "NodeJS",
        "CheckCircleIcon",
        "XCircleIcon",
        "ExclamationTriangleIcon",
        "Button",
        "ChartBarIcon",
        "Badge",
        "StopIcon",
        "PlayIcon",
        "DocumentArrowDownIcon"
      ]
    },
    {
      "path": "src/components/performance/AlertsOverview.tsx",
      "name": "AlertsOverview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "AlertsOverview"
      ],
      "usedComponents": [
        "Badge",
        "AlertTriangle",
        "CheckCircle2",
        "Bell",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Clock",
        "CardDescription"
      ]
    },
    {
      "path": "src/components/performance/AutoScalingDashboard.tsx",
      "name": "AutoScalingDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "AutoScalingDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Server",
        "CardContent",
        "Activity",
        "Progress",
        "TrendingUp",
        "Zap",
        "CardDescription",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "Badge"
      ]
    },
    {
      "path": "src/components/performance/CacheMetrics.tsx",
      "name": "CacheMetrics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "CacheMetrics"
      ],
      "usedComponents": [
        "CacheHitData",
        "CacheLayerMetrics",
        "CacheOptimization",
        "Card",
        "CardHeader",
        "CardTitle",
        "Database",
        "CardContent",
        "Progress",
        "Zap",
        "Badge",
        "HardDrive",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Bar",
        "AlertCircle",
        "Clock"
      ]
    },
    {
      "path": "src/components/performance/ChannelPerformance.tsx",
      "name": "ChannelPerformance",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "ChannelPerformance"
      ],
      "usedComponents": [
        "Progress",
        "ResponsiveContainer",
        "LineChart",
        "Line",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Card",
        "CardHeader",
        "CardTitle",
        "Clock",
        "CardContent",
        "Target",
        "CheckCircle2",
        "Zap",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "TrendingDown",
        "CardDescription",
        "CartesianGrid",
        "Legend",
        "Badge",
        "BarChart",
        "Bar",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/performance/ConcurrentGuestLoader.tsx",
      "name": "ConcurrentGuestLoader",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "ConcurrentGuestLoader"
      ],
      "usedComponents": [
        "Loader2Icon",
        "FilterIcon",
        "UsersIcon",
        "Badge",
        "SearchIcon",
        "Input",
        "ConcurrentGuestLoaderProps",
        "Suspense",
        "GuestStatistics",
        "SearchLoadingFallback",
        "SearchAndFilters",
        "DataLoadingFallback",
        "FilterLoadingFallback",
        "ConcurrentGuestList"
      ]
    },
    {
      "path": "src/components/performance/GeographicPerformanceDashboard.tsx",
      "name": "GeographicPerformanceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/performance/cdn-optimizer",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Map",
        "NetworkPerformanceData",
        "VenuePerformanceData",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge"
      ]
    },
    {
      "path": "src/components/performance/MemoizedDataGrid.tsx",
      "name": "MemoizedDataGrid",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/checkbox",
        "@/lib/utils",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "MemoizedDataGrid"
      ],
      "usedComponents": [
        "T",
        "Checkbox",
        "ChevronUpIcon",
        "ChevronDownIcon",
        "DataGridProps",
        "Grid",
        "MemoizedHeader",
        "MemoizedCell",
        "Button"
      ]
    },
    {
      "path": "src/components/performance/MemoizedGuestDataGrid.tsx",
      "name": "MemoizedGuestDataGrid",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/utils",
        "./MemoizedDataGrid"
      ],
      "exports": [
        "MemoizedGuestDataGrid"
      ],
      "usedComponents": [
        "MemoizedGuestDataGridProps",
        "GuestSearchResult",
        "UserIcon",
        "Badge",
        "Button",
        "PencilIcon",
        "EllipsisHorizontalIcon",
        "MemoizedDataGrid"
      ]
    },
    {
      "path": "src/components/performance/PerformanceBreadcrumbNavigation.tsx",
      "name": "PerformanceBreadcrumbNavigation",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "PerformanceBreadcrumb",
        "useBreadcrumbNavigation",
        "NavigationIntegration"
      ],
      "usedComponents": [
        "HomeIcon",
        "UsersIcon",
        "CalendarIcon",
        "ChartBarIcon",
        "CogIcon",
        "PerformanceBreadcrumbProps",
        "Badge",
        "Link",
        "React",
        "ChevronRightIcon",
        "Button",
        "ArrowLeftIcon",
        "BreadcrumbItem",
        "NavigationIntegrationProps",
        "PerformanceBreadcrumb",
        "DevicePhoneMobileIcon",
        "ComputerDesktopIcon"
      ]
    },
    {
      "path": "src/components/performance/PerformanceDashboard.tsx",
      "name": "PerformanceDashboard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/lib/utils",
        "./AdvancedPerformanceProfiler"
      ],
      "exports": [
        "PerformanceDashboard"
      ],
      "usedComponents": [
        "PerformanceTest",
        "LoadTestConfig",
        "Button",
        "ArrowPathIcon",
        "DocumentChartBarIcon",
        "StopIcon",
        "PlayIcon",
        "ChartBarIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "CpuChipIcon",
        "Input",
        "Badge",
        "AdvancedPerformanceProfiler"
      ]
    },
    {
      "path": "src/components/performance/PerformanceExport.tsx",
      "name": "PerformanceExport",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "PerformanceExport"
      ],
      "usedComponents": [
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Button",
        "Download",
        "DropdownMenuContent",
        "DropdownMenuLabel",
        "DropdownMenuSeparator",
        "DropdownMenuItem",
        "FileText",
        "Table",
        "BarChart3"
      ]
    },
    {
      "path": "src/components/performance/PerformanceIntegrationProvider.tsx",
      "name": "PerformanceIntegrationProvider",
      "imports": [
        "@/lib/performance/cdn-optimizer",
        "@/lib/performance/asset-preloader",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "default",
        "PerformanceIntegrationProvider",
        "usePerformanceIntegration"
      ],
      "usedComponents": [
        "PerformanceContextType",
        "PerformanceMetrics",
        "IntegrationStatus",
        "PerformanceContext"
      ]
    },
    {
      "path": "src/components/performance/PerformantGuestSearchTable.tsx",
      "name": "PerformantGuestSearchTable",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/input",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/hooks/useWebWorkerSearch",
        "./VirtualizedGuestTable",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "PerformantGuestSearchTable"
      ],
      "usedComponents": [
        "GuestListSort",
        "FilterState",
        "Button",
        "Badge",
        "ClockIcon",
        "CpuChipIcon",
        "MagnifyingGlassIcon",
        "Input",
        "XMarkIcon",
        "FunnelIcon",
        "VirtualizedGuestTable"
      ]
    },
    {
      "path": "src/components/performance/ProductionPerformanceDashboard.tsx",
      "name": "ProductionPerformanceDashboard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/lib/utils",
        "@/lib/performance/performance-budget-enforcer"
      ],
      "exports": [
        "ProductionPerformanceDashboard"
      ],
      "usedComponents": [
        "Date",
        "DevicePhoneMobileIcon",
        "WifiIcon",
        "Button",
        "ArrowPathIcon",
        "Card",
        "CardHeader",
        "CardTitle",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "XCircleIcon",
        "Badge",
        "CardContent",
        "ClockIcon",
        "Progress",
        "CpuChipIcon",
        "SignalIcon",
        "CloudArrowUpIcon",
        "ChartBarIcon",
        "BellIcon"
      ]
    },
    {
      "path": "src/components/performance/ProductionReadinessValidator.tsx",
      "name": "ProductionReadinessValidator",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/alert",
        "./PerformanceIntegrationProvider",
        "@/lib/performance/cdn-optimizer",
        "@/lib/performance/asset-preloader"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ProductionReadinessReport",
        "Date",
        "Button",
        "Card",
        "CardContent",
        "Alert",
        "AlertDescription",
        "CardHeader",
        "CardTitle",
        "Badge"
      ]
    },
    {
      "path": "src/components/performance/ProgressiveImage.tsx",
      "name": "ProgressiveImage",
      "imports": [
        "@/hooks/useIntersectionObserver",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "default",
        "ProgressiveImage",
        "MemoizedProgressiveImage"
      ],
      "usedComponents": [
        "ProgressiveImageProps",
        "LoadingState",
        "HTMLImageElement"
      ]
    },
    {
      "path": "src/components/performance/React19PerformanceProvider.tsx",
      "name": "React19PerformanceProvider",
      "imports": [
        "@/types/guest-management",
        "@/hooks/useConcurrentPerformance",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "useReact19Performance",
        "React19PerformanceProvider",
        "withConcurrentPerformance"
      ],
      "usedComponents": [
        "React19PerformanceContextType",
        "Button",
        "CpuChipIcon",
        "Loader2Icon",
        "RocketLaunchIcon",
        "ClockIcon",
        "ChartBarIcon",
        "React19PerformanceContext",
        "Suspense",
        "ConcurrentFallback",
        "PerformanceMonitor",
        "OptimisticUpdateDemo",
        "Badge",
        "P",
        "Component"
      ]
    },
    {
      "path": "src/components/performance/RealtimeProvider.tsx",
      "name": "RealtimeProvider",
      "imports": [
        "../../hooks/usePerformanceOptimization",
        "./IntelligentCacheProvider",
        "./OptimisticUpdateProvider"
      ],
      "exports": [
        "default",
        "useRealtime",
        "RealtimeProvider"
      ],
      "usedComponents": [
        "UserPresence",
        "RealtimeContextValue",
        "RealtimeConfig",
        "RealtimeProviderProps",
        "WebSocket",
        "RealtimeEvent",
        "NodeJS",
        "RealtimeState",
        "RealtimeContext"
      ]
    },
    {
      "path": "src/components/performance/TeamBIntegrationDashboard.tsx",
      "name": "TeamBIntegrationDashboard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/lib/integrations/team-b-performance-integration"
      ],
      "exports": [
        "TeamBIntegrationDashboard"
      ],
      "usedComponents": [
        "Button",
        "CloudArrowUpIcon",
        "ArrowPathIcon",
        "Badge",
        "ExclamationTriangleIcon",
        "ClockIcon",
        "ChartBarIcon",
        "CpuChipIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/performance/VirtualPhotoGrid.tsx",
      "name": "VirtualPhotoGrid",
      "imports": [
        "./ProgressiveImage",
        "@/hooks/usePerformanceOptimization",
        "@/hooks/useIntersectionObserver"
      ],
      "exports": [
        "default",
        "VirtualPhotoGrid"
      ],
      "usedComponents": [
        "CheckCircle",
        "Square",
        "MemoizedProgressiveImage",
        "Eye",
        "Download",
        "MoreHorizontal",
        "Share2",
        "VirtualPhotoGridProps",
        "HTMLDivElement",
        "BulkSelectionToolbar",
        "PhotoGridItem",
        "InfiniteScrollTrigger"
      ]
    },
    {
      "path": "src/components/performance/VirtualizedClientList.tsx",
      "name": "VirtualizedClientList",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/badge",
        "./VirtualizedList",
        "@/components/clients/ClientListViews"
      ],
      "exports": [
        "default",
        "VirtualizedClientList"
      ],
      "usedComponents": [
        "CheckCircle",
        "Square",
        "Mail",
        "Phone",
        "Badge",
        "StatusIcon",
        "LinkIcon",
        "Link",
        "Button",
        "MoreHorizontal",
        "Search",
        "Input",
        "ArrowUpDown",
        "VirtualizedClientListProps",
        "NodeJS",
        "ClientRow",
        "QuickActions",
        "TableHeader",
        "VirtualizedList"
      ]
    },
    {
      "path": "src/components/performance/VirtualizedGuestRow.tsx",
      "name": "VirtualizedGuestRow",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/lib/utils"
      ],
      "exports": [
        "VirtualizedGuestRow"
      ],
      "usedComponents": [
        "VirtualizedGuestRowProps",
        "UserIcon",
        "Badge",
        "Button",
        "PencilIcon",
        "EllipsisHorizontalIcon",
        "Checkbox"
      ]
    },
    {
      "path": "src/components/performance/VirtualizedGuestTable.tsx",
      "name": "VirtualizedGuestTable",
      "imports": [
        "@/types/guest-management",
        "@/components/ui/button",
        "@/components/ui/checkbox",
        "@/lib/utils",
        "./VirtualizedGuestRow",
        "@/hooks/useVirtualScrollOptimization",
        "@/hooks/usePerformanceOptimization"
      ],
      "exports": [
        "VirtualizedGuestTable"
      ],
      "usedComponents": [
        "List",
        "VirtualizedGuestRow",
        "ChevronUpIcon",
        "ChevronDownIcon",
        "Checkbox",
        "Button"
      ]
    },
    {
      "path": "src/components/performance/VirtualizedList.tsx",
      "name": "VirtualizedList",
      "imports": [
        "@/hooks/useIntersectionObserver"
      ],
      "exports": [
        "default",
        "VirtualizedList",
        "MemoizedVirtualizedList",
        "useVirtualization"
      ],
      "usedComponents": [
        "T",
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/performance/WebSocketMetrics.tsx",
      "name": "WebSocketMetrics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/hooks/useWebSocketPerformance"
      ],
      "exports": [
        "WebSocketMetrics"
      ],
      "usedComponents": [
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Line",
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Progress",
        "CheckCircle",
        "Badge",
        "Clock",
        "Activity",
        "CardDescription",
        "AreaChart",
        "linearGradient",
        "Legend",
        "Area",
        "Wifi",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/performance/WeddingSeasonAnalytics.tsx",
      "name": "WeddingSeasonAnalytics",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "WeddingSeasonAnalytics"
      ],
      "usedComponents": [
        "Badge",
        "ResponsiveContainer",
        "LineChart",
        "Line",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardContent",
        "TrendingUp",
        "Users",
        "CardDescription",
        "BarChart",
        "CartesianGrid",
        "Bar",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/performance/dynamic/DynamicCustomerHealthDashboard.tsx",
      "name": "DynamicCustomerHealthDashboard",
      "imports": [
        "@/components/performance"
      ],
      "exports": [
        "default",
        "DynamicCustomerHealthDashboard"
      ],
      "usedComponents": [
        "LoadingSkeleton",
        "DynamicCustomerHealthDashboardProps",
        "LoadingOptimizer",
        "CustomerHealthDashboard"
      ]
    },
    {
      "path": "src/components/performance/dynamic/DynamicPhotoGroupsManager.tsx",
      "name": "DynamicPhotoGroupsManager",
      "imports": [
        "@/components/performance"
      ],
      "exports": [
        "default",
        "DynamicPhotoGroupsManager"
      ],
      "usedComponents": [
        "LoadingSkeleton",
        "DynamicPhotoGroupsManagerProps",
        "LoadingOptimizer",
        "PhotoGroupsManager"
      ]
    },
    {
      "path": "src/components/performance/dynamic/DynamicReviewAnalyticsDashboard.tsx",
      "name": "DynamicReviewAnalyticsDashboard",
      "imports": [
        "@/components/performance"
      ],
      "exports": [
        "default",
        "DynamicReviewAnalyticsDashboard"
      ],
      "usedComponents": [
        "LoadingSkeleton",
        "DynamicReviewAnalyticsDashboardProps",
        "LoadingOptimizer",
        "ReviewAnalyticsDashboard"
      ]
    },
    {
      "path": "src/components/performance/dynamic/DynamicSeatingArrangement.tsx",
      "name": "DynamicSeatingArrangement",
      "imports": [
        "@/components/performance"
      ],
      "exports": [
        "default",
        "DynamicSeatingArrangement"
      ],
      "usedComponents": [
        "LoadingSkeleton",
        "DynamicSeatingArrangementProps",
        "LoadingOptimizer",
        "SeatingArrangement"
      ]
    },
    {
      "path": "src/components/performance/dynamic/DynamicTrialConversionFlow.tsx",
      "name": "DynamicTrialConversionFlow",
      "imports": [
        "@/components/performance"
      ],
      "exports": [
        "default",
        "DynamicTrialConversionFlow"
      ],
      "usedComponents": [
        "LoadingSkeleton",
        "DynamicTrialConversionFlowProps",
        "LoadingOptimizer",
        "TrialConversionFlow"
      ]
    },
    {
      "path": "src/components/performance/dynamic/index.ts",
      "name": "index",
      "imports": [],
      "exports": [
        "DYNAMIC_COMPONENT_CHUNKS",
        "COMPONENT_LOAD_PRIORITIES",
        "WEDDING_PHASE_COMPONENTS"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/performance/testing/PerformanceTestSuite.ts",
      "name": "PerformanceTestSuite",
      "imports": [],
      "exports": [
        "default",
        "WS173_PERFORMANCE_TARGETS",
        "WEDDING_TEST_SCENARIOS",
        "WS173PerformanceTestSuite"
      ],
      "usedComponents": [
        "PerformanceTestResult"
      ]
    },
    {
      "path": "src/components/photography/.!26246!StyleMatchingGallery.tsx",
      "name": ".!26246!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26259!StyleMatchingGallery.tsx",
      "name": ".!26259!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26265!StyleMatchingGallery.tsx",
      "name": ".!26265!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26275!StyleMatchingGallery.tsx",
      "name": ".!26275!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26285!StyleMatchingGallery.tsx",
      "name": ".!26285!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26295!StyleMatchingGallery.tsx",
      "name": ".!26295!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26303!StyleMatchingGallery.tsx",
      "name": ".!26303!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26343!StyleMatchingGallery.tsx",
      "name": ".!26343!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!26349!StyleMatchingGallery.tsx",
      "name": ".!26349!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!67562!StyleMatchingGallery.tsx",
      "name": ".!67562!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!90247!StyleMatchingGallery.tsx",
      "name": ".!90247!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!90260!StyleMatchingGallery.tsx",
      "name": ".!90260!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!90279!StyleMatchingGallery.tsx",
      "name": ".!90279!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!90909!StyleMatchingGallery.tsx",
      "name": ".!90909!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!92342!StyleMatchingGallery.tsx",
      "name": ".!92342!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/.!93425!StyleMatchingGallery.tsx",
      "name": ".!93425!StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge"
      ]
    },
    {
      "path": "src/components/photography/AIMoodBoardGenerator.tsx",
      "name": "AIMoodBoardGenerator",
      "imports": [
        "@/lib/ai/photography/color-harmony-analyzer",
        "@/lib/ai/photography/mood-board-service"
      ],
      "exports": [
        "default",
        "AIMoodBoardGenerator"
      ],
      "usedComponents": [
        "AIMoodBoardGeneratorProps",
        "MoodBoardPhoto",
        "MoodBoardTheme",
        "HTMLDivElement",
        "HTMLInputElement",
        "Grid",
        "Layout",
        "Shuffle",
        "Plus",
        "Download",
        "Share2",
        "Save",
        "Upload",
        "Trash2",
        "Palette"
      ]
    },
    {
      "path": "src/components/photography/AIPhotoAnalysisOverlay.tsx",
      "name": "AIPhotoAnalysisOverlay",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/components/ui/card",
        "@/components/ui/progress"
      ],
      "exports": [
        "AIPhotoAnalysisOverlay"
      ],
      "usedComponents": [
        "AnalysisSection",
        "Award",
        "TrendingUp",
        "Eye",
        "Lightbulb",
        "Palette",
        "Camera",
        "Heart",
        "Brain",
        "Button",
        "X",
        "Icon",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Progress",
        "Badge",
        "Layers",
        "Target"
      ]
    },
    {
      "path": "src/components/photography/EnhancedSearchFilters.tsx",
      "name": "EnhancedSearchFilters",
      "imports": [
        "@/lib/ai/photography/color-harmony-analyzer",
        "@/lib/ml/photographer-matching-algorithm"
      ],
      "exports": [
        "default",
        "EnhancedSearchFilters"
      ],
      "usedComponents": [
        "SearchFilters",
        "EnhancedSearchFiltersProps",
        "K",
        "HTMLInputElement",
        "Search",
        "Filter",
        "ChevronDown",
        "MapPin",
        "Palette",
        "DollarSign",
        "Star",
        "Calendar",
        "Sliders",
        "X"
      ]
    },
    {
      "path": "src/components/photography/ErrorBoundary.tsx",
      "name": "ErrorBoundary",
      "imports": [
        "../../lib/ai/photography/error-handler"
      ],
      "exports": [
        "AiPhotographyErrorBoundary",
        "AiPhotographyErrorFallback",
        "ColorAnalysisErrorBoundary",
        "MoodBoardErrorBoundary",
        "StyleMatchingErrorBoundary",
        "withAiPhotographyErrorBoundary"
      ],
      "usedComponents": [
        "ErrorBoundaryState",
        "AiPhotographyErrorFallback",
        "ErrorFallbackProps",
        "AlertTriangle",
        "RefreshCw",
        "MessageCircle",
        "AiPhotographyErrorBoundary",
        "ColorAnalysisFallbackUI",
        "MoodBoardFallbackUI",
        "StyleMatchingFallbackUI",
        "Settings",
        "P",
        "Component"
      ]
    },
    {
      "path": "src/components/photography/IntegratedMoodBoardGenerator.tsx",
      "name": "IntegratedMoodBoardGenerator",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "IntegrationPreferences",
        "IntegratedPhotoAnalysis",
        "FeatureAccessResult",
        "AlertCircle",
        "Camera",
        "Image",
        "Zap",
        "Icon",
        "PhotographyResults",
        "MusicCoordinationResults",
        "FloralCoordinationResults",
        "IntegrationResults",
        "CheckCircle",
        "Music",
        "Flower"
      ]
    },
    {
      "path": "src/components/photography/PhotographerPortfolioGallery.tsx",
      "name": "PhotographerPortfolioGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/dialog",
        "@/components/portfolio/PortfolioGallery"
      ],
      "exports": [
        "PhotographerPortfolioGallery"
      ],
      "usedComponents": [
        "ViewMode",
        "PortfolioGalleryData",
        "PortfolioPhoto",
        "PhotographerProfile",
        "PhotographyStyle",
        "AnalysisMode",
        "Camera",
        "Palette",
        "Layers",
        "Sparkles",
        "Button",
        "ExternalLink",
        "Card",
        "CardContent",
        "MapPin",
        "Calendar",
        "Star",
        "Badge",
        "Image",
        "Eye",
        "Filter"
      ]
    },
    {
      "path": "src/components/photography/PhotographyStyleFilter.tsx",
      "name": "PhotographyStyleFilter",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider",
        "@/components/ui/input",
        "@/components/ui/checkbox",
        "@/components/ui/radio-group",
        "@/components/ui/label"
      ],
      "exports": [
        "PhotographyStyleFilter"
      ],
      "usedComponents": [
        "FilterCriteria",
        "Set",
        "Card",
        "CardHeader",
        "CardTitle",
        "Icon",
        "ChevronUp",
        "ChevronDown",
        "CardContent",
        "Filter",
        "Badge",
        "Button",
        "Settings",
        "Save",
        "RotateCcw",
        "FilterSection",
        "Input",
        "Label",
        "TrendingUp",
        "X",
        "Slider",
        "Star",
        "RefreshCw",
        "Eye"
      ]
    },
    {
      "path": "src/components/photography/StyleMatchingGallery.tsx",
      "name": "StyleMatchingGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/slider"
      ],
      "exports": [
        "StyleMatchingGallery"
      ],
      "usedComponents": [
        "StyleMatch",
        "PhotographyStyle",
        "SortMode",
        "ViewMode",
        "Palette",
        "Button",
        "Sparkles",
        "Target",
        "Badge",
        "Sliders",
        "ChevronDown",
        "ChevronRight",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Slider",
        "Grid",
        "List",
        "Image",
        "Star",
        "Filter"
      ]
    },
    {
      "path": "src/components/photos/CreateAlbumModal.tsx",
      "name": "CreateAlbumModal",
      "imports": [
        "@/types/photos",
        "@/lib/services/photoService"
      ],
      "exports": [
        "CreateAlbumModal"
      ],
      "usedComponents": [
        "CheckCircle2",
        "FolderPlus",
        "X",
        "Calendar",
        "MapPin",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/photos/GalleryManager.tsx",
      "name": "GalleryManager",
      "imports": [],
      "exports": [
        "GalleryManager"
      ],
      "usedComponents": [
        "Gallery",
        "Photo",
        "PhotoFilters",
        "Set",
        "Plus",
        "Folder",
        "Eye",
        "Lock",
        "Calendar",
        "Share2",
        "Settings",
        "Search",
        "Filter",
        "ChevronDown",
        "Download",
        "Grid3x3",
        "List",
        "ImageIcon"
      ]
    },
    {
      "path": "src/components/photos/OptimizedImage.tsx",
      "name": "OptimizedImage",
      "imports": [
        "@/types/photos",
        "@/lib/utils/image-optimization"
      ],
      "exports": [
        "OptimizedImage"
      ],
      "usedComponents": [
        "ImageProps",
        "Image"
      ]
    },
    {
      "path": "src/components/photos/PhotoAlbumCard.tsx",
      "name": "PhotoAlbumCard",
      "imports": [
        "@/types/photos",
        "./OptimizedImage"
      ],
      "exports": [
        "PhotoAlbumCard"
      ],
      "usedComponents": [
        "FolderOpen",
        "ImageIcon",
        "Calendar",
        "MapPin"
      ]
    },
    {
      "path": "src/components/photos/PhotoCard.tsx",
      "name": "PhotoCard",
      "imports": [
        "@/types/photos",
        "./OptimizedImage"
      ],
      "exports": [
        "PhotoCard"
      ],
      "usedComponents": [
        "Check",
        "OptimizedImage",
        "Eye",
        "Download",
        "Share2",
        "Calendar",
        "User",
        "MapPin"
      ]
    },
    {
      "path": "src/components/photos/PhotoGallery.tsx",
      "name": "PhotoGallery",
      "imports": [
        "@/types/photos",
        "@/lib/services/photoService",
        "./PhotoUpload",
        "./PhotoAlbumCard",
        "./PhotoCard",
        "./VendorSharingModal",
        "./CreateAlbumModal"
      ],
      "exports": [
        "PhotoGallery"
      ],
      "usedComponents": [
        "ViewMode",
        "LayoutMode",
        "PhotoAlbum",
        "Photo",
        "FolderPlus",
        "Upload",
        "Filter",
        "Share2",
        "Download",
        "Grid",
        "List",
        "PhotoAlbumCard",
        "PhotoCard",
        "PhotoUpload",
        "VendorSharingModal",
        "CreateAlbumModal"
      ]
    },
    {
      "path": "src/components/photos/PhotoUpload.tsx",
      "name": "PhotoUpload",
      "imports": [
        "@/lib/services/photoService",
        "@/types/photos"
      ],
      "exports": [
        "PhotoUpload"
      ],
      "usedComponents": [
        "File",
        "BatchUploadSession",
        "HTMLInputElement",
        "X",
        "Upload",
        "ImageIcon",
        "CheckCircle2",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/photos/PhotoUploader.tsx",
      "name": "PhotoUploader",
      "imports": [],
      "exports": [
        "PhotoUploader"
      ],
      "usedComponents": [
        "BatchUploadSession",
        "File",
        "HTMLInputElement",
        "AbortController",
        "Upload",
        "X",
        "CheckCircle",
        "AlertCircle",
        "Loader2",
        "Image"
      ]
    },
    {
      "path": "src/components/photos/PhotoViewer.tsx",
      "name": "PhotoViewer",
      "imports": [],
      "exports": [
        "PhotoViewer"
      ],
      "usedComponents": [
        "ZoomOut",
        "ZoomIn",
        "RotateCw",
        "Maximize2",
        "Download",
        "Share2",
        "Info",
        "X",
        "ChevronLeft",
        "ChevronRight",
        "Heart",
        "MessageCircle",
        "Camera",
        "Tag"
      ]
    },
    {
      "path": "src/components/photos/VendorSharingModal.tsx",
      "name": "VendorSharingModal",
      "imports": [
        "@/types/photos",
        "@/lib/services/photoService"
      ],
      "exports": [
        "VendorSharingModal"
      ],
      "usedComponents": [
        "VendorType",
        "CheckCircle2",
        "Share2",
        "X",
        "Users",
        "Lock",
        "Calendar",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/places/GooglePlacesAutocomplete.tsx",
      "name": "GooglePlacesAutocomplete",
      "imports": [
        "@/hooks/useGooglePlaces"
      ],
      "exports": [
        "default",
        "GooglePlacesAutocomplete"
      ],
      "usedComponents": [
        "HTMLInputElement",
        "HTMLDivElement",
        "HTMLUListElement",
        "Search",
        "X",
        "ChevronDown",
        "Clock",
        "MapPin"
      ]
    },
    {
      "path": "src/components/places/LocationPicker.tsx",
      "name": "LocationPicker",
      "imports": [
        "@/hooks/useGeolocation",
        "@/hooks/useGooglePlaces",
        "./GooglePlacesAutocomplete"
      ],
      "exports": [
        "default",
        "LocationPicker"
      ],
      "usedComponents": [
        "MapPin",
        "ZoomIn",
        "ZoomOut",
        "Loader2",
        "Navigation",
        "RotateCcw",
        "LocationCoordinates",
        "PlaceDetails",
        "HTMLDivElement",
        "GooglePlacesAutocomplete",
        "Search",
        "Crosshair",
        "VenueMarker",
        "MapControls"
      ]
    },
    {
      "path": "src/components/places/NearbyPlacesSearch.tsx",
      "name": "NearbyPlacesSearch",
      "imports": [
        "@/hooks/useGooglePlaces",
        "@/hooks/useGeolocation"
      ],
      "exports": [
        "default",
        "NearbyPlacesSearch"
      ],
      "usedComponents": [
        "MapPin",
        "Heart",
        "Star",
        "Navigation",
        "DollarSign",
        "Clock",
        "ExternalLink",
        "GooglePlace",
        "VendorType",
        "Set",
        "Filter",
        "Grid",
        "List",
        "FilterControls",
        "Loader2",
        "AlertCircle",
        "Search",
        "VendorCard"
      ]
    },
    {
      "path": "src/components/places/PlaceDetails.tsx",
      "name": "PlaceDetails",
      "imports": [],
      "exports": [
        "default",
        "PlaceDetails"
      ],
      "usedComponents": [
        "MapPin",
        "ChevronLeft",
        "ChevronRight",
        "Star",
        "Clock",
        "PhotoGallery",
        "Share",
        "Heart",
        "RatingDisplay",
        "DollarSign",
        "Phone",
        "Globe",
        "ExternalLink",
        "OperatingHours",
        "Users",
        "Calendar"
      ]
    },
    {
      "path": "src/components/places/__tests__/GooglePlacesAutocomplete.test.tsx",
      "name": "GooglePlacesAutocomplete.test",
      "imports": [
        "../GooglePlacesAutocomplete",
        "@/hooks/useGooglePlaces"
      ],
      "exports": [],
      "usedComponents": [
        "GooglePlacesAutocomplete"
      ]
    },
    {
      "path": "src/components/planning/BudgetTracker.tsx",
      "name": "BudgetTracker",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "BudgetTracker"
      ],
      "usedComponents": [
        "BudgetCategory",
        "RefreshCw",
        "Download",
        "Icon"
      ]
    },
    {
      "path": "src/components/portfolio/MediaUploadModal.tsx",
      "name": "MediaUploadModal",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/dialog",
        "@/components/ui/progress"
      ],
      "exports": [
        "MediaUploadModal"
      ],
      "usedComponents": [
        "FileWithPreview",
        "Image",
        "Video",
        "FileText",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "AlertCircle",
        "Upload",
        "Button",
        "Progress",
        "X",
        "Input",
        "Textarea",
        "Tag",
        "Badge",
        "Star",
        "Switch"
      ]
    },
    {
      "path": "src/components/portfolio/PortfolioGallery.tsx",
      "name": "PortfolioGallery",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/dialog"
      ],
      "exports": [
        "PortfolioGallery"
      ],
      "usedComponents": [
        "PortfolioMedia",
        "Dialog",
        "DialogContent",
        "Button",
        "Grid",
        "Share2",
        "Download",
        "X",
        "Pause",
        "Play",
        "VolumeX",
        "Volume2",
        "ChevronLeft",
        "ChevronRight",
        "ZoomIn",
        "RotateCcw",
        "ZoomOut",
        "Badge"
      ]
    },
    {
      "path": "src/components/portfolio/PortfolioManager.tsx",
      "name": "PortfolioManager",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "./PortfolioProjectModal",
        "./MediaUploadModal",
        "./PortfolioGallery"
      ],
      "exports": [
        "PortfolioManager"
      ],
      "usedComponents": [
        "PortfolioProject",
        "PortfolioFilters",
        "Badge",
        "Button",
        "Upload",
        "Plus",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Grid",
        "List",
        "ProjectCard",
        "PortfolioProjectModal",
        "MediaUploadModal",
        "PortfolioGallery",
        "Star",
        "Calendar",
        "MapPin",
        "Eye",
        "Edit",
        "Trash2"
      ]
    },
    {
      "path": "src/components/portfolio/PortfolioProjectModal.tsx",
      "name": "PortfolioProjectModal",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/dialog"
      ],
      "exports": [
        "PortfolioProjectModal"
      ],
      "usedComponents": [
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Calendar",
        "User",
        "MapPin",
        "Tag",
        "Badge",
        "X",
        "Star",
        "Switch",
        "Button",
        "Save"
      ]
    },
    {
      "path": "src/components/portfolio/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/presence/ActivityTracker.tsx",
      "name": "ActivityTracker",
      "imports": [
        "@/hooks/usePresence",
        "@/hooks/useAuth"
      ],
      "exports": [
        "default",
        "ActivityTracker",
        "WeddingActivityTracker",
        "PhotographerActivityTracker"
      ],
      "usedComponents": [
        "ActivityState",
        "NodeJS",
        "PresenceStatus",
        "ActivityTrackerProps",
        "ActivityTracker"
      ]
    },
    {
      "path": "src/components/presence/PresenceIndicator.tsx",
      "name": "PresenceIndicator",
      "imports": [
        "@/lib/utils",
        "@/components/ui/avatar",
        "@/components/ui/badge",
        "@/components/ui/tooltip",
        "@/hooks/usePresence"
      ],
      "exports": [
        "default",
        "PresenceIndicator",
        "ConnectedPresenceIndicator"
      ],
      "usedComponents": [
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Avatar",
        "Badge",
        "TooltipContent",
        "ExtendedPresenceIndicatorProps",
        "PresenceIndicator"
      ]
    },
    {
      "path": "src/components/presence/PresenceList.tsx",
      "name": "PresenceList",
      "imports": [
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/button",
        "./PresenceIndicator",
        "@/hooks/usePresence"
      ],
      "exports": [
        "default",
        "PresenceList",
        "WeddingPresenceList",
        "OrganizationPresenceList"
      ],
      "usedComponents": [
        "PresenceStatus",
        "HTMLInputElement",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Users",
        "Badge",
        "Button",
        "Eye",
        "EyeOff",
        "Search",
        "Input",
        "Filter",
        "ConnectedPresenceIndicator",
        "PresenceListComponentProps",
        "PresenceList"
      ]
    },
    {
      "path": "src/components/presence/PresenceSettings.tsx",
      "name": "PresenceSettings",
      "imports": [
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/select",
        "@/components/ui/separator",
        "@/lib/supabase/client",
        "@/hooks/useAuth"
      ],
      "exports": [
        "default",
        "PresenceSettings"
      ],
      "usedComponents": [
        "PresenceSettings",
        "K",
        "Card",
        "CardContent",
        "CardHeader",
        "CardTitle",
        "Settings",
        "CardDescription",
        "Alert",
        "Info",
        "Shield",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "IconComponent",
        "Separator",
        "EyeOff",
        "Switch",
        "Clock",
        "Eye",
        "MessageSquare",
        "Button",
        "Input",
        "UserX",
        "Plus",
        "Badge",
        "Trash2",
        "X",
        "Save"
      ]
    },
    {
      "path": "src/components/presence/__tests__/ActivityTracker.test.tsx",
      "name": "ActivityTracker.test",
      "imports": [
        "../ActivityTracker",
        "@/hooks/useAuth"
      ],
      "exports": [],
      "usedComponents": [
        "ActivityTracker",
        "WeddingActivityTracker",
        "PhotographerActivityTracker"
      ]
    },
    {
      "path": "src/components/presence/__tests__/PresenceIndicator.test.tsx",
      "name": "PresenceIndicator.test",
      "imports": [
        "../PresenceIndicator",
        "@/hooks/usePresence"
      ],
      "exports": [],
      "usedComponents": [
        "PresenceState",
        "PresenceIndicator",
        "ConnectedPresenceIndicator"
      ]
    },
    {
      "path": "src/components/presence/__tests__/usePresence.test.ts",
      "name": "usePresence.test",
      "imports": [
        "@/hooks/usePresence",
        "@/lib/supabase/client",
        "@/hooks/useAuth"
      ],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/presence/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/privacy/ComplianceReportingDashboard.tsx",
      "name": "ComplianceReportingDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/table"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ComplianceMetrics",
        "PrivacyRequest",
        "AuditEvent",
        "Badge",
        "Button",
        "RefreshCw",
        "Download",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardContent",
        "Progress",
        "FileText",
        "Clock",
        "CheckCircle",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "AlertCircle",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/privacy/ConsentManager.tsx",
      "name": "ConsentManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/switch",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/label"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Record",
        "Card",
        "CardContent",
        "CardHeader",
        "Shield",
        "CardTitle",
        "CardDescription",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button",
        "Label",
        "Info",
        "Switch",
        "Check"
      ]
    },
    {
      "path": "src/components/privacy/CookieConsentBanner.tsx",
      "name": "CookieConsentBanner",
      "imports": [
        "@/components/ui/button",
        "@/lib/utils",
        "@/lib/privacy/consent-manager",
        "@/lib/analytics/providers"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ConsentPreferences",
        "AnimatePresence",
        "Cookie",
        "X",
        "Button",
        "Settings",
        "Link",
        "Shield",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/privacy/PrivacyDashboard.tsx",
      "name": "PrivacyDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "./ConsentManager",
        "@/components/ui/alert-dialog",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PrivacyRequest",
        "DataExport",
        "FileText",
        "Trash2",
        "Download",
        "RefreshCw",
        "Lock",
        "Info",
        "Badge",
        "Shield",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "CheckCircle",
        "Clock",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "ConsentManager",
        "CardDescription",
        "FileDown",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "AlertTriangle",
        "AlertDialog",
        "AlertDialogTrigger",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "Input",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction"
      ]
    },
    {
      "path": "src/components/providers/MonitoringProvider.tsx",
      "name": "MonitoringProvider",
      "imports": [
        "@/lib/monitoring/performance"
      ],
      "exports": [
        "MonitoringProvider"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/providers/RealtimeProvider.tsx",
      "name": "RealtimeProvider",
      "imports": [
        "@/types/realtime"
      ],
      "exports": [
        "RealtimeProvider",
        "useRealtime",
        "useWeddingRealtime"
      ],
      "usedComponents": [
        "UIRealtimeContextValue",
        "UIRealtimeProviderConfig",
        "UIRealtimeConnectionState",
        "ReturnType",
        "Map",
        "UIQueuedOperation",
        "NodeJS",
        "RealtimeContext"
      ]
    },
    {
      "path": "src/components/providers.tsx",
      "name": "providers",
      "imports": [],
      "exports": [
        "Providers"
      ],
      "usedComponents": [
        "QueryClientProvider",
        "ThemeProvider",
        "Toaster",
        "ReactQueryDevtools"
      ]
    },
    {
      "path": "src/components/public/GuestBook.tsx",
      "name": "GuestBook",
      "imports": [
        "@/lib/supabase/client",
        "@/lib/website/analytics-integration"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GuestBookMessage",
        "MessageCircle",
        "User",
        "Heart",
        "Share2",
        "Trash2"
      ]
    },
    {
      "path": "src/components/pwa/InstallButton.tsx",
      "name": "InstallButton",
      "imports": [
        "@/hooks/usePWAInstall",
        "@/lib/utils"
      ],
      "exports": [
        "InstallButton"
      ],
      "usedComponents": [
        "Icon",
        "IOSInstallModal",
        "Smartphone",
        "X",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/pwa/InstallInstructionsModal.tsx",
      "name": "InstallInstructionsModal",
      "imports": [
        "@/hooks/usePWAInstall"
      ],
      "exports": [
        "InstallInstructionsModal"
      ],
      "usedComponents": [
        "AnimatePresence",
        "IOSInstructions",
        "AndroidInstructions",
        "DesktopInstructions",
        "UnsupportedInstructions",
        "Smartphone",
        "X",
        "Share",
        "Plus",
        "CheckCircle",
        "Download",
        "Monitor"
      ]
    },
    {
      "path": "src/components/pwa/InstallPrompt.tsx",
      "name": "InstallPrompt",
      "imports": [
        "@/components/ui/button"
      ],
      "exports": [
        "InstallPrompt"
      ],
      "usedComponents": [
        "BeforeInstallPromptEvent",
        "AnimatePresence",
        "Smartphone",
        "X",
        "CheckCircle",
        "Button",
        "Download"
      ]
    },
    {
      "path": "src/components/pwa/InstallSuccessMessage.tsx",
      "name": "InstallSuccessMessage",
      "imports": [
        "@/hooks/usePWAInstall",
        "@/lib/utils"
      ],
      "exports": [
        "InstallSuccessMessage"
      ],
      "usedComponents": [
        "AnimatePresence",
        "ToastVariant",
        "ModalVariant",
        "BannerVariant",
        "Sparkles",
        "X",
        "Heart",
        "CheckCircle",
        "Smartphone",
        "Clock"
      ]
    },
    {
      "path": "src/components/pwa/PWARegistration.tsx",
      "name": "PWARegistration",
      "imports": [
        "@/lib/pwa/sw-registration",
        "@/lib/pwa/analytics",
        "@/lib/logger",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "PWARegistration",
        "usePWAAnalytics"
      ],
      "usedComponents": [
        "ServiceWorkerRegistration",
        "Card",
        "CardContent",
        "WifiOff",
        "Button",
        "X",
        "Wifi",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CheckCircle",
        "Download"
      ]
    },
    {
      "path": "src/components/pwa/ServiceWorkerRegistration.tsx",
      "name": "ServiceWorkerRegistration",
      "imports": [
        "@/components/ui/button"
      ],
      "exports": [
        "ServiceWorkerRegistration"
      ],
      "usedComponents": [
        "ServiceWorkerRegistration",
        "NotificationPermission",
        "Button",
        "RefreshCw",
        "BellOff",
        "Bell"
      ]
    },
    {
      "path": "src/components/pwa/__tests__/InstallButton.test.tsx",
      "name": "InstallButton.test",
      "imports": [
        "../InstallButton",
        "@/hooks/usePWAInstall"
      ],
      "exports": [],
      "usedComponents": [
        "InstallButton"
      ]
    },
    {
      "path": "src/components/pwa/category-management/PWACategoryManager.tsx",
      "name": "PWACategoryManager",
      "imports": [
        "@/types/task-categories",
        "@/lib/offline/category-sync/CategoryOfflineSync",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TaskCategory",
        "CategorySyncStatus",
        "ConnectionStatus",
        "CategoryOfflineSync",
        "ServiceWorkerRegistration",
        "XCircleIcon",
        "ArrowPathIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "WifiIcon",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/qa/TestResultsDashboard.tsx",
      "name": "TestResultsDashboard",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TestResultsDashboard"
      ],
      "usedComponents": [
        "TestResult",
        "QualityMetrics",
        "Date",
        "BarChart3",
        "TrendingUp",
        "PieChart",
        "CheckCircle",
        "Shield",
        "AlertTriangle",
        "Download",
        "RefreshCw",
        "Clock",
        "Search"
      ]
    },
    {
      "path": "src/components/rate-limiting/EndpointUsageChart.tsx",
      "name": "EndpointUsageChart",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/select",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HeartIcon",
        "CalendarIcon",
        "CameraIcon",
        "MapPinIcon",
        "ShieldIcon",
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart3Icon",
        "CardDescription",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CardContent",
        "Badge",
        "Progress",
        "AlertTriangleIcon",
        "ClockIcon",
        "ZapIcon",
        "ActivityIcon",
        "TrendingUpIcon"
      ]
    },
    {
      "path": "src/components/rate-limiting/RateLimitGauge.tsx",
      "name": "RateLimitGauge",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CheckCircleIcon",
        "ActivityIcon",
        "AlertTriangleIcon",
        "TrendingUpIcon",
        "TrendingDownIcon",
        "Card",
        "CardHeader",
        "GaugeIcon",
        "CardTitle",
        "CardDescription",
        "Badge",
        "CardContent",
        "Progress",
        "ZapIcon",
        "ClockIcon"
      ]
    },
    {
      "path": "src/components/rate-limiting/TierComparisonTable.tsx",
      "name": "TierComparisonTable",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GiftIcon",
        "StarIcon",
        "ShieldIcon",
        "ZapIcon",
        "CrownIcon",
        "Card",
        "Badge",
        "CardContent",
        "Button",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "HeartIcon",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CheckCircleIcon",
        "XCircleIcon",
        "ArrowUpIcon",
        "TrendingUpIcon",
        "InfoIcon"
      ]
    },
    {
      "path": "src/components/rate-limiting/UpgradeRecommendation.tsx",
      "name": "UpgradeRecommendation",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GiftIcon",
        "StarIcon",
        "ShieldIcon",
        "ZapIcon",
        "CrownIcon",
        "Card",
        "CardHeader",
        "ArrowUpIcon",
        "CardTitle",
        "CardDescription",
        "Badge",
        "HeartIcon",
        "ClockIcon",
        "Alert",
        "AlertTriangleIcon",
        "AlertDescription",
        "CardContent",
        "TrendingUpIcon",
        "DollarSignIcon",
        "Progress",
        "CheckCircleIcon",
        "Button",
        "CalendarIcon"
      ]
    },
    {
      "path": "src/components/rate-limiting/UsageMonitorCard.tsx",
      "name": "UsageMonitorCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/button",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TrendingUpIcon",
        "TrendingDownIcon",
        "CheckCircleIcon",
        "ActivityIcon",
        "AlertTriangleIcon",
        "Card",
        "CardContent",
        "Progress",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Badge",
        "ZapIcon",
        "InfoIcon",
        "ClockIcon",
        "Button"
      ]
    },
    {
      "path": "src/components/rate-limiting/__tests__/UsageMonitorCard.test.tsx",
      "name": "UsageMonitorCard.test",
      "imports": [
        "../UsageMonitorCard",
        "@/types/rate-limiting"
      ],
      "exports": [],
      "usedComponents": [
        "UsageMonitorCard"
      ]
    },
    {
      "path": "src/components/rate-limiting/user/RateLimitExceededDialog.tsx",
      "name": "RateLimitExceededDialog",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ClockIcon",
        "ZapIcon",
        "CalendarIcon",
        "AlertTriangleIcon",
        "ShieldIcon",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Alert",
        "HeartIcon",
        "AlertDescription",
        "Progress",
        "CheckCircleIcon",
        "ArrowUpIcon",
        "Button",
        "RefreshCwIcon",
        "InfoIcon"
      ]
    },
    {
      "path": "src/components/rate-limiting/user/UpgradePrompt.tsx",
      "name": "UpgradePrompt",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GiftIcon",
        "StarIcon",
        "ShieldIcon",
        "ZapIcon",
        "CrownIcon",
        "Card",
        "CardHeader",
        "ArrowUpIcon",
        "CardTitle",
        "CardDescription",
        "Badge",
        "SparklesIcon",
        "HeartIcon",
        "Button",
        "XIcon",
        "Alert",
        "ClockIcon",
        "AlertDescription",
        "CardContent",
        "TrendingUpIcon",
        "DollarSignIcon",
        "CheckCircleIcon",
        "CalendarIcon"
      ]
    },
    {
      "path": "src/components/rate-limiting/user/UsageQuotaDisplay.tsx",
      "name": "UsageQuotaDisplay",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/alert",
        "@/types/rate-limiting"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Date",
        "CheckCircleIcon",
        "BarChart3Icon",
        "AlertTriangleIcon",
        "Card",
        "CardContent",
        "Badge",
        "Progress",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Button",
        "RefreshCwIcon",
        "Alert",
        "HeartIcon",
        "AlertDescription",
        "TrendingUpIcon",
        "TrendingDownIcon",
        "ClockIcon",
        "ArrowUpIcon",
        "ZapIcon",
        "InfoIcon"
      ]
    },
    {
      "path": "src/components/rate-limiting/user/__tests__/RateLimitExceededDialog.test.tsx",
      "name": "RateLimitExceededDialog.test",
      "imports": [
        "../RateLimitExceededDialog",
        "@/types/rate-limiting"
      ],
      "exports": [],
      "usedComponents": [
        "RateLimitExceededDialog"
      ]
    },
    {
      "path": "src/components/realtime/RealtimeAccessibility.tsx",
      "name": "RealtimeAccessibility",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "useAccessibility",
        "RealtimeAccessibilityProvider",
        "RealtimeStatusAnnouncer",
        "useFocusManagement",
        "useRealtimeKeyboardNavigation",
        "useHighContrastColors",
        "AccessibleRealtimeToast",
        "AccessibleRealtimeIndicator",
        "RealtimeSkipNavigation",
        "AccessibleRealtimeSettings",
        "RealtimeAriaLiveRegion"
      ],
      "usedComponents": [
        "AccessibilityContextType",
        "AccessibilityContext",
        "HTMLElement"
      ]
    },
    {
      "path": "src/components/realtime/RealtimeMobileOptimizations.tsx",
      "name": "RealtimeMobileOptimizations",
      "imports": [
        "@/lib/utils",
        "@/components/ui/RealtimeIndicator",
        "@/components/realtime/RealtimeToast",
        "@/components/realtime/RealtimeStatusPanel",
        "@/components/providers/RealtimeProvider"
      ],
      "exports": [
        "default",
        "useResponsiveBreakpoint",
        "MobileRealtimeIndicator",
        "MobileRealtimeToasts",
        "MobileRealtimeStatusPanel",
        "MobileRealtimeControls",
        "WeddingDayMobileBanner",
        "ResponsiveRealtimeWrapper",
        "realtimeResponsiveStyles"
      ],
      "usedComponents": [
        "RealtimeIndicator",
        "RealtimeToastContainer",
        "RealtimeStatusPanel",
        "MobileRealtimeControls",
        "WeddingDayMobileBanner"
      ]
    },
    {
      "path": "src/components/realtime/RealtimeStatusPanel.tsx",
      "name": "RealtimeStatusPanel",
      "imports": [
        "@/lib/utils",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/separator",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/providers/RealtimeProvider",
        "@/components/ui/RealtimeIndicator",
        "@/components/realtime/RealtimeToast",
        "@/types/realtime"
      ],
      "exports": [
        "RealtimeStatusPanel",
        "WeddingRealtimeStatusPanel"
      ],
      "usedComponents": [
        "RealtimeStatusPanelState",
        "UIRealtimeActivity",
        "UIRealtimeToastProps",
        "Icon",
        "Badge",
        "Heart",
        "Card",
        "Progress",
        "RealtimeIndicator",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Button",
        "Minimize2",
        "Maximize2",
        "RefreshCw",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ScrollArea",
        "AnimatePresence",
        "Activity",
        "Info",
        "Switch",
        "Separator",
        "RealtimeToastContainer",
        "UIRealtimeStatusPanelProps",
        "RealtimeStatusPanel"
      ]
    },
    {
      "path": "src/components/realtime/RealtimeToast.tsx",
      "name": "RealtimeToast",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/types/realtime"
      ],
      "exports": [
        "RealtimeToast",
        "RealtimeToastContainer",
        "WeddingRealtimeToast"
      ],
      "usedComponents": [
        "AnimatePresence",
        "Icon",
        "Badge",
        "Button",
        "ExternalLink",
        "Heart",
        "X",
        "RealtimeToast"
      ]
    },
    {
      "path": "src/components/referrals/LeaderboardView.tsx",
      "name": "LeaderboardView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/avatar",
        "@/lib/utils",
        "@/types/supplier-referrals"
      ],
      "exports": [
        "default",
        "LeaderboardView"
      ],
      "usedComponents": [
        "LeaderboardViewProps",
        "LeaderboardType",
        "LeaderboardEntry",
        "Crown",
        "Medal",
        "Award",
        "Star",
        "ChevronUp",
        "ChevronDown",
        "Trophy",
        "Icon",
        "Card",
        "Button",
        "Filter",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "Sparkles",
        "MapPin"
      ]
    },
    {
      "path": "src/components/referrals/QRCodeGenerator.tsx",
      "name": "QRCodeGenerator",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/types/supplier-referrals",
        "@/lib/toast-helper"
      ],
      "exports": [
        "default",
        "QRCodeGenerator"
      ],
      "usedComponents": [
        "QRCodeGeneratorProps",
        "QRCodeSize",
        "QRCodeFormat",
        "HTMLCanvasElement",
        "QrCode",
        "Card",
        "Settings",
        "Label",
        "Heart",
        "Input",
        "Button",
        "Copy",
        "Palette",
        "Loader2",
        "Badge",
        "Download",
        "CheckCircle2",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/referrals/ReferralCenter.tsx",
      "name": "ReferralCenter",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/types/supplier-referrals",
        "./ReferralStats",
        "@/lib/toast-helper",
        "@/components/magicui/shimmer-button"
      ],
      "exports": [
        "default",
        "ReferralCenter"
      ],
      "usedComponents": [
        "ReferralCenterProps",
        "Users",
        "Card",
        "UserPlus",
        "ShimmerButton",
        "Plus",
        "Link2",
        "Button",
        "Copy",
        "Gift",
        "Award",
        "Label",
        "Input",
        "Textarea",
        "Mail",
        "ReferralStats",
        "Clock",
        "Badge",
        "StatusIcon",
        "Target",
        "Sparkles"
      ]
    },
    {
      "path": "src/components/referrals/ReferralStats.tsx",
      "name": "ReferralStats",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/lib/utils",
        "@/types/supplier-referrals",
        "@/components/magicui/shimmer-button"
      ],
      "exports": [
        "default",
        "ReferralStats"
      ],
      "usedComponents": [
        "ReferralStatsProps",
        "ShimmerButton",
        "RefreshCcw",
        "Card",
        "TrendIcon",
        "Award",
        "Badge",
        "Progress",
        "TrendingUp",
        "Icon",
        "Target"
      ]
    },
    {
      "path": "src/components/reminders/CreateReminderModal.tsx",
      "name": "CreateReminderModal",
      "imports": [],
      "exports": [
        "CreateReminderModal"
      ],
      "usedComponents": [
        "ReminderTemplate",
        "X",
        "Mail",
        "Phone",
        "Bell"
      ]
    },
    {
      "path": "src/components/reporting/__tests__/ReportingEngine.test.tsx",
      "name": "ReportingEngine.test",
      "imports": [
        "../ReportingEngine",
        "../types"
      ],
      "exports": [],
      "usedComponents": [
        "ReportingEngine"
      ]
    },
    {
      "path": "src/components/reporting/charts/ClientSatisfactionRadar.tsx",
      "name": "ClientSatisfactionRadar",
      "imports": [
        "./types"
      ],
      "exports": [
        "default",
        "ClientSatisfactionRadar"
      ],
      "usedComponents": [
        "SatisfactionCategory",
        "IconComponent",
        "Star",
        "TrendingUp",
        "TrendingDown",
        "MessageCircle",
        "Target",
        "SatisfactionSummary",
        "ResponsiveContainer",
        "RadarChart",
        "PolarGrid",
        "PolarAngleAxis",
        "PolarRadiusAxis",
        "Tooltip",
        "CustomRadarTooltip",
        "Radar",
        "Legend",
        "CategoryScoreCard",
        "ReviewBreakdownChart"
      ]
    },
    {
      "path": "src/components/reporting/charts/SeasonalTrendsChart.tsx",
      "name": "SeasonalTrendsChart",
      "imports": [
        "./types"
      ],
      "exports": [
        "default",
        "SeasonalTrendsChart"
      ],
      "usedComponents": [
        "WeddingSeason",
        "Calendar",
        "TrendingUp",
        "TrendingDown",
        "IconComponent",
        "Eye",
        "SeasonalTrendsChartProps",
        "SeasonSummaryCard",
        "ForecastSummary",
        "ResponsiveContainer",
        "ComposedChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "Line",
        "Area",
        "Bar",
        "ReferenceLine",
        "Heart",
        "Users",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/reporting/charts/VendorComparisonChart.tsx",
      "name": "VendorComparisonChart",
      "imports": [
        "../types",
        "../utils"
      ],
      "exports": [
        "default",
        "VendorComparisonChart"
      ],
      "usedComponents": [
        "Star",
        "Icon",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "Bar",
        "Cell",
        "ScatterChart",
        "Scatter",
        "Download",
        "MetricCard",
        "Filter"
      ]
    },
    {
      "path": "src/components/reporting/charts/WeddingTimelineChart.tsx",
      "name": "WeddingTimelineChart",
      "imports": [
        "./types"
      ],
      "exports": [
        "default",
        "WeddingTimelineChart"
      ],
      "usedComponents": [
        "WeddingPhase",
        "Calendar",
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "TrendingUp",
        "WeddingTimelineChartProps",
        "PhaseIndicator",
        "AnimatePresence",
        "TimelineMetricsCard",
        "ResponsiveContainer",
        "ComposedChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "ReferenceLine",
        "Line",
        "Bar"
      ]
    },
    {
      "path": "src/components/reporting/charts/__tests__/WeddingRevenueChart.test.tsx",
      "name": "WeddingRevenueChart.test",
      "imports": [
        "../WeddingRevenueChart"
      ],
      "exports": [],
      "usedComponents": [
        "WeddingRevenueChart"
      ]
    },
    {
      "path": "src/components/reporting/export/ExportManager.tsx",
      "name": "ExportManager",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "ExportManager"
      ],
      "usedComponents": [
        "ExportFormat",
        "ExportStatus",
        "FormatIcon",
        "User",
        "Calendar",
        "Database",
        "Clock",
        "StatusIcon",
        "MoreVertical",
        "AlertCircle",
        "AnimatePresence",
        "Download",
        "Share2",
        "RefreshCw",
        "Eye",
        "Copy",
        "Trash2",
        "FileText",
        "Check",
        "ExportManagerProps",
        "CloudDownload",
        "ExportStats",
        "Search",
        "Filter",
        "SortAsc",
        "SortDesc",
        "ExportCard"
      ]
    },
    {
      "path": "src/components/reporting/export/ReportExporter.tsx",
      "name": "ReportExporter",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "ReportExporter"
      ],
      "usedComponents": [
        "ExportJob",
        "ExportFormat",
        "ExportOptions",
        "IconComponent",
        "Check",
        "X",
        "Settings",
        "StatusIcon",
        "Download",
        "Share2",
        "ReportExporterProps",
        "FormatCard",
        "ExportProgress",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/reporting/export/exportUtils.ts",
      "name": "exportUtils",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "ExportProcessor",
        "exportProcessor",
        "generateFileName",
        "validateExportOptions"
      ],
      "usedComponents": [
        "ExportJob",
        "ExportFormat",
        "Blob"
      ]
    },
    {
      "path": "src/components/reporting/mobile/__tests__/MobileReportBuilder.test.tsx",
      "name": "MobileReportBuilder.test",
      "imports": [
        "../MobileReportBuilder",
        "../../types"
      ],
      "exports": [],
      "usedComponents": [
        "MobileReportBuilder",
        "ErrorBoundary"
      ]
    },
    {
      "path": "src/components/reporting/mobile/__tests__/TouchableReportCards.test.tsx",
      "name": "TouchableReportCards.test",
      "imports": [
        "../TouchableReportCards",
        "../../types"
      ],
      "exports": [],
      "usedComponents": [
        "TouchableReportCards"
      ]
    },
    {
      "path": "src/components/reporting/performance/__tests__/ReportDataCache.test.tsx",
      "name": "ReportDataCache.test",
      "imports": [
        "../ReportDataCache",
        "../../types"
      ],
      "exports": [],
      "usedComponents": [
        "ReportDataCache"
      ]
    },
    {
      "path": "src/components/reporting/performance/__tests__/VirtualReportList.test.tsx",
      "name": "VirtualReportList.test",
      "imports": [
        "../VirtualReportList",
        "../../types"
      ],
      "exports": [],
      "usedComponents": [
        "VirtualReportList"
      ]
    },
    {
      "path": "src/components/reporting/realtime/RealtimeJobManager.tsx",
      "name": "RealtimeJobManager",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "RealtimeJobManager"
      ],
      "usedComponents": [
        "ReportGenerationStatus",
        "StatusIcon",
        "User",
        "Calendar",
        "Clock",
        "MoreVertical",
        "Activity",
        "AlertCircle",
        "AnimatePresence",
        "Pause",
        "Play",
        "Square",
        "Eye",
        "Download",
        "Trash2",
        "RealtimeJobManagerProps",
        "CheckCircle",
        "Zap",
        "Server",
        "Database",
        "RefreshCw",
        "SystemStatusCard",
        "Search",
        "Filter",
        "JobCard",
        "BarChart3"
      ]
    },
    {
      "path": "src/components/reporting/realtime/RealtimeReportGenerator.tsx",
      "name": "RealtimeReportGenerator",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "RealtimeReportGenerator"
      ],
      "usedComponents": [
        "StatusIcon",
        "Wifi",
        "WifiOff",
        "CheckCircle",
        "RefreshCw",
        "Activity",
        "Clock",
        "TrendingUp",
        "Zap",
        "ReportProgress",
        "WebSocket",
        "StatusIndicator",
        "AlertCircle",
        "AnimatePresence",
        "Bell",
        "BarChart3",
        "Play",
        "ProgressBar",
        "ReportMetrics",
        "StepProgress",
        "Eye",
        "Download",
        "Pause",
        "Square"
      ]
    },
    {
      "path": "src/components/reporting/realtime/__tests__/RealtimeReportGenerator.test.tsx",
      "name": "RealtimeReportGenerator.test",
      "imports": [
        "../RealtimeReportGenerator",
        "../../types"
      ],
      "exports": [],
      "usedComponents": [
        "RealtimeReportGenerator"
      ]
    },
    {
      "path": "src/components/reporting/realtime/useWebSocket.ts",
      "name": "useWebSocket",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "useWebSocket",
        "useReportWebSocket"
      ],
      "usedComponents": [
        "WebSocketMessage",
        "WebSocket",
        "NodeJS"
      ]
    },
    {
      "path": "src/components/reporting/templates/ReportCustomizer.tsx",
      "name": "ReportCustomizer",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "ReportCustomizer"
      ],
      "usedComponents": [
        "TemplateSection",
        "IconComponent",
        "Settings",
        "AnimatePresence",
        "ChartIcon",
        "FilterIcon",
        "ReportTemplate",
        "ReportCustomizerProps",
        "RotateCcw",
        "Save",
        "Eye",
        "TabIcon",
        "SectionCustomizer",
        "GlobalFilters",
        "StyleCustomizer",
        "RefreshCw",
        "Calendar",
        "Filter",
        "BarChart3"
      ]
    },
    {
      "path": "src/components/reporting/templates/ReportTemplateBuilder.tsx",
      "name": "ReportTemplateBuilder",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "ReportTemplateBuilder"
      ],
      "usedComponents": [
        "ChartType",
        "ReportTemplate",
        "GripVertical",
        "IconComponent",
        "Settings",
        "Trash2",
        "TrendingUp",
        "Filter",
        "ReportTemplateBuilderProps",
        "TemplateSection",
        "Save",
        "Eye",
        "TemplateSettings",
        "SectionPalette",
        "DndContext",
        "SortableContext",
        "SortableSection",
        "DragOverlay",
        "BarChart3",
        "Plus"
      ]
    },
    {
      "path": "src/components/reporting/templates/TemplateLibrary.tsx",
      "name": "TemplateLibrary",
      "imports": [
        "../types"
      ],
      "exports": [
        "default",
        "TemplateLibrary"
      ],
      "usedComponents": [
        "WeddingVendorType",
        "CategoryIcon",
        "Star",
        "Globe",
        "Lock",
        "Tag",
        "User",
        "Calendar",
        "Download",
        "AnimatePresence",
        "Copy",
        "Edit3",
        "Trash2",
        "Share2",
        "IconComponent",
        "TemplateLibraryProps",
        "Plus",
        "Search",
        "SortAsc",
        "SortDesc",
        "Grid3X3",
        "List",
        "CategoryFilter",
        "TemplateCard"
      ]
    },
    {
      "path": "src/components/reporting/templates/__tests__/ReportTemplateBuilder.test.tsx",
      "name": "ReportTemplateBuilder.test",
      "imports": [
        "../ReportTemplateBuilder",
        "../../types"
      ],
      "exports": [],
      "usedComponents": [
        "ReportTemplateBuilder"
      ]
    },
    {
      "path": "src/components/reviews/CampaignPreview.tsx",
      "name": "CampaignPreview",
      "imports": [
        "@/lib/validations/review-schemas"
      ],
      "exports": [
        "CampaignPreview"
      ],
      "usedComponents": [
        "ReviewCampaignFormData",
        "SmartphoneIcon",
        "MailIcon",
        "ClockIcon",
        "CalendarIcon",
        "GiftIcon",
        "ExternalLinkIcon",
        "MessageSquareIcon",
        "StarIcon"
      ]
    },
    {
      "path": "src/components/reviews/MessageTemplateEditor.tsx",
      "name": "MessageTemplateEditor",
      "imports": [],
      "exports": [
        "MessageTemplateEditor"
      ],
      "usedComponents": [
        "HTMLTextAreaElement",
        "SparklesIcon"
      ]
    },
    {
      "path": "src/components/reviews/PlatformToggle.tsx",
      "name": "PlatformToggle",
      "imports": [],
      "exports": [
        "PlatformToggle"
      ],
      "usedComponents": [
        "CheckIcon"
      ]
    },
    {
      "path": "src/components/reviews/ReviewCampaignBuilder.tsx",
      "name": "ReviewCampaignBuilder",
      "imports": [
        "@/lib/validations/review-schemas",
        "@/app/api/reviews/campaigns/create/action",
        "./MessageTemplateEditor",
        "./CampaignPreview",
        "./PlatformToggle"
      ],
      "exports": [
        "ReviewCampaignBuilder"
      ],
      "usedComponents": [
        "ReviewCampaignFormData",
        "EyeIcon",
        "PlatformToggle",
        "MessageTemplateEditor",
        "ChevronRightIcon",
        "CampaignPreview"
      ]
    },
    {
      "path": "src/components/reviews/ReviewCampaignCard.tsx",
      "name": "ReviewCampaignCard",
      "imports": [],
      "exports": [
        "ReviewCampaignCard"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "MoreVerticalIcon",
        "EyeIcon",
        "EditIcon",
        "PauseIcon",
        "PlayIcon",
        "TrashIcon",
        "TrendingUpIcon",
        "CalendarIcon",
        "ClockIcon"
      ]
    },
    {
      "path": "src/components/reviews/ReviewDashboard.tsx",
      "name": "ReviewDashboard",
      "imports": [
        "./ReviewMetrics",
        "./ReviewCampaignCard"
      ],
      "exports": [
        "ReviewDashboard"
      ],
      "usedComponents": [
        "DashboardStats",
        "Campaign",
        "RecentReview",
        "Link",
        "PlusIcon",
        "MessageSquareIcon",
        "TrendingUpIcon",
        "StarIcon",
        "UsersIcon",
        "ChevronRightIcon",
        "ReviewCampaignCard",
        "ExternalLinkIcon",
        "CalendarIcon",
        "MapPinIcon",
        "ReviewMetrics"
      ]
    },
    {
      "path": "src/components/reviews/ReviewMetrics.tsx",
      "name": "ReviewMetrics",
      "imports": [],
      "exports": [
        "ReviewMetrics"
      ],
      "usedComponents": [
        "MetricsData",
        "TrendingUpIcon",
        "TrendingDownIcon",
        "BarChartIcon",
        "StarIcon"
      ]
    },
    {
      "path": "src/components/reviews/ReviewPlatformIntegrations.tsx",
      "name": "ReviewPlatformIntegrations",
      "imports": [],
      "exports": [
        "ReviewPlatformIntegrations"
      ],
      "usedComponents": [
        "Platform",
        "CheckCircleIcon",
        "XCircleIcon",
        "AlertCircleIcon",
        "ShieldCheckIcon",
        "GlobeIcon",
        "RefreshIcon",
        "ExternalLinkIcon",
        "SettingsIcon",
        "PlusIcon",
        "KeyIcon"
      ]
    },
    {
      "path": "src/components/reviews/analytics/ReviewAnalyticsDashboard.tsx",
      "name": "ReviewAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/skeleton",
        "./ReviewMetricsCards",
        "./ReviewPerformanceCharts",
        "@/lib/database/analytics-queries",
        "@/lib/performance/analytics-monitor",
        "@/lib/caching/analytics-cache",
        "@/hooks/useSupabaseRealtime"
      ],
      "exports": [
        "default",
        "ReviewAnalyticsDashboard"
      ],
      "usedComponents": [
        "ReviewAnalyticsData",
        "ReviewAnalyticsDashboardProps",
        "Date",
        "DashboardSkeleton",
        "Card",
        "CardContent",
        "AlertCircle",
        "Button",
        "RefreshCw",
        "Badge",
        "CheckCircle",
        "Download",
        "ReviewMetricsCards",
        "ReviewPerformanceCharts",
        "CardHeader",
        "CardTitle",
        "Users",
        "Skeleton"
      ]
    },
    {
      "path": "src/components/reviews/analytics/ReviewMetricsCards.tsx",
      "name": "ReviewMetricsCards",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/skeleton"
      ],
      "exports": [
        "default",
        "ReviewMetricsCards"
      ],
      "usedComponents": [
        "ReviewMetricsCardsProps",
        "MetricsSkeleton",
        "MetricCard",
        "Card",
        "CardContent",
        "Badge",
        "TrendIcon",
        "Icon",
        "Skeleton"
      ]
    },
    {
      "path": "src/components/reviews/analytics/ReviewPerformanceCharts.tsx",
      "name": "ReviewPerformanceCharts",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/skeleton",
        "@/components/ui/badge",
        "@/lib/performance/analytics-monitor"
      ],
      "exports": [
        "default",
        "ReviewPerformanceCharts"
      ],
      "usedComponents": [
        "ReviewPerformanceChartsProps",
        "ChartsSkeleton",
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "Badge",
        "CardContent",
        "TrendsChart",
        "BarChart3",
        "DistributionChart",
        "PieChart",
        "SourcesChart",
        "Calendar",
        "PerformanceSummary",
        "HTMLCanvasElement",
        "Skeleton"
      ]
    },
    {
      "path": "src/components/reviews/analytics/__tests__/ReviewAnalyticsDashboard.test.tsx",
      "name": "ReviewAnalyticsDashboard.test",
      "imports": [
        "../ReviewAnalyticsDashboard",
        "@/hooks/useSupabaseRealtime"
      ],
      "exports": [],
      "usedComponents": [
        "ReviewAnalyticsDashboard"
      ]
    },
    {
      "path": "src/components/reviews/analytics/__tests__/ReviewMetricsCards.test.tsx",
      "name": "ReviewMetricsCards.test",
      "imports": [
        "../ReviewMetricsCards"
      ],
      "exports": [],
      "usedComponents": [
        "ReviewMetricsCards"
      ]
    },
    {
      "path": "src/components/reviews/wedme/ReviewDashboardSection.tsx",
      "name": "ReviewDashboardSection",
      "imports": [
        "./ReviewWidget"
      ],
      "exports": [
        "default",
        "ReviewDashboardSection"
      ],
      "usedComponents": [
        "ReviewDashboardSectionProps",
        "MessageCircle",
        "Award",
        "Star",
        "TrendingUp",
        "WedMeReviewWidget",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/reviews/wedme/ReviewWidget.tsx",
      "name": "ReviewWidget",
      "imports": [
        "../mobile/MobileStarRating"
      ],
      "exports": [
        "default",
        "WedMeReviewWidget"
      ],
      "usedComponents": [
        "WedMeReviewWidgetProps",
        "ReviewStatus",
        "MessageCircle",
        "Share",
        "ExternalLink",
        "CheckCircle2",
        "Star"
      ]
    },
    {
      "path": "src/components/rsvp/RSVPDashboard.tsx",
      "name": "RSVPDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "RSVPEvent",
        "Button",
        "Plus",
        "Calendar",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "BarChart3",
        "Progress",
        "CheckCircle",
        "Clock",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Download",
        "UserPlus",
        "Upload",
        "Send"
      ]
    },
    {
      "path": "src/components/scalability/AlertsAndNotifications.tsx",
      "name": "AlertsAndNotifications",
      "imports": [
        "@/types/scalability",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "default",
        "AlertsAndNotifications"
      ],
      "usedComponents": [
        "AlertsAndNotificationsProps",
        "Button",
        "Bell",
        "Badge",
        "Card",
        "BellOff",
        "ArrowUp",
        "X",
        "CheckCircle",
        "AlertItem",
        "Zap",
        "AlertTriangle",
        "AlertCircle",
        "Info",
        "Clock"
      ]
    },
    {
      "path": "src/components/scalability/CapacityPlanningWidget.tsx",
      "name": "CapacityPlanningWidget",
      "imports": [
        "@/types/scalability",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "default",
        "CapacityPlanningWidget"
      ],
      "usedComponents": [
        "CapacityPlanningWidgetProps",
        "TrendingUp",
        "Calendar",
        "Zap",
        "Target",
        "Card",
        "Button",
        "BarChart3",
        "DollarSign",
        "Activity",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Area",
        "Line",
        "BarChart",
        "Bar",
        "LineChart",
        "CheckCircle",
        "Badge",
        "Clock"
      ]
    },
    {
      "path": "src/components/scalability/DashboardHeader.tsx",
      "name": "DashboardHeader",
      "imports": [
        "@/types/scalability",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/card"
      ],
      "exports": [
        "default",
        "DashboardHeader"
      ],
      "usedComponents": [
        "DashboardHeaderProps",
        "Activity",
        "TrendingUp",
        "TrendingDown",
        "AlertTriangle",
        "Card",
        "Badge",
        "Wifi",
        "WifiOff",
        "Clock",
        "Database",
        "Button"
      ]
    },
    {
      "path": "src/components/scalability/MetricsOverviewPanel.tsx",
      "name": "MetricsOverviewPanel",
      "imports": [
        "@/types/scalability",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "default",
        "MetricsOverviewPanel"
      ],
      "usedComponents": [
        "MetricsOverviewPanelProps",
        "ChartView",
        "TrendingUp",
        "TrendingDown",
        "Minus",
        "Card",
        "Button",
        "LineChart",
        "BarChart3",
        "Map",
        "Cpu",
        "MemoryStick",
        "Network",
        "Clock",
        "MetricCard",
        "TimeSeriesChart",
        "ServiceHeatmap",
        "InfrastructureTopology",
        "ResponsiveContainer",
        "AreaChart",
        "Area",
        "RechartsLineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "CheckCircle",
        "AlertCircle",
        "Badge",
        "Activity"
      ]
    },
    {
      "path": "src/components/scalability/ScalabilityInfrastructureDashboard.tsx",
      "name": "ScalabilityInfrastructureDashboard",
      "imports": [
        "@/types/scalability",
        "./DashboardHeader",
        "./MetricsOverviewPanel",
        "./ScalingEventsTimeline",
        "./ServiceHealthMatrix",
        "./CapacityPlanningWidget",
        "./ScalingPoliciesManager",
        "./WeddingAwareScaling",
        "./AlertsAndNotifications"
      ],
      "exports": [
        "default",
        "ScalabilityInfrastructureDashboard"
      ],
      "usedComponents": [
        "ScalingMetrics",
        "ScalingAlert",
        "ScalingEvent",
        "Date",
        "DashboardHeader",
        "MetricsOverviewPanel",
        "ScalingEventsTimeline",
        "ServiceHealthMatrix",
        "CapacityPlanningWidget",
        "ScalingPoliciesManager",
        "WeddingAwareScaling",
        "AlertsAndNotifications"
      ]
    },
    {
      "path": "src/components/scalability/ScalingEventsTimeline.tsx",
      "name": "ScalingEventsTimeline",
      "imports": [
        "@/types/scalability",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "default",
        "ScalingEventsTimeline"
      ],
      "usedComponents": [
        "ScalingEventsTimelineProps",
        "TrendingUp",
        "TrendingDown",
        "User",
        "Zap",
        "Activity",
        "Card",
        "Button",
        "Badge",
        "EventItem",
        "Clock",
        "CheckCircle",
        "AlertTriangle",
        "MoreHorizontal"
      ]
    },
    {
      "path": "src/components/scalability/ScalingPoliciesManager.tsx",
      "name": "ScalingPoliciesManager",
      "imports": [
        "@/types/scalability",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui"
      ],
      "exports": [
        "default",
        "ScalingPoliciesManager"
      ],
      "usedComponents": [
        "ScalingPoliciesManagerProps",
        "ScalingPolicy",
        "PolicyGroup",
        "Card",
        "Heart",
        "AlertTriangle",
        "Button",
        "Badge",
        "Plus",
        "Settings",
        "PolicyCard",
        "PolicyCreateModal",
        "PolicyEditModal",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogFooter",
        "Trash2",
        "Zap",
        "Switch",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Edit",
        "Copy",
        "Clock",
        "Target",
        "TrendingUp",
        "TrendingDown",
        "CheckCircle",
        "Calendar"
      ]
    },
    {
      "path": "src/components/scalability/ServiceHealthMatrix.tsx",
      "name": "ServiceHealthMatrix",
      "imports": [
        "@/types/scalability",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "default",
        "ServiceHealthMatrix"
      ],
      "usedComponents": [
        "ServiceHealthMatrixProps",
        "Globe",
        "Server",
        "Cog",
        "Database",
        "Activity",
        "Card",
        "Button",
        "Badge",
        "ServiceHealthCard",
        "TrendingUp",
        "TrendingDown",
        "CheckCircle",
        "AlertTriangle",
        "Cpu",
        "MemoryStick",
        "Network",
        "Clock",
        "Users"
      ]
    },
    {
      "path": "src/components/scalability/WeddingAwareScaling.tsx",
      "name": "WeddingAwareScaling",
      "imports": [
        "@/types/scalability",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui"
      ],
      "exports": [
        "default",
        "WeddingAwareScaling"
      ],
      "usedComponents": [
        "WeddingAwareScalingProps",
        "TimeframeType",
        "WeddingEvent",
        "Heart",
        "Users",
        "Crown",
        "MapPin",
        "Card",
        "Badge",
        "SegmentedControl",
        "Button",
        "Settings",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "WeddingTimeline",
        "CapacityPlanningView",
        "RealTimeMonitoring",
        "WeddingScalePrepModal",
        "ScalingPreferencesModal",
        "Calendar",
        "WeddingScaleEvent",
        "Activity",
        "Timer",
        "Camera",
        "Building",
        "Zap",
        "Target",
        "CheckCircle",
        "BarChart3",
        "DollarSign",
        "Clock",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/scalability/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/scheduling/AvailabilityCalendar.tsx",
      "name": "AvailabilityCalendar",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "View",
        "TimeSlot",
        "Button",
        "ChevronLeft",
        "ChevronRight",
        "Select",
        "SelectTrigger",
        "Filter",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Globe",
        "Card",
        "RefreshCw",
        "CalendarIcon",
        "CheckCircle",
        "X",
        "Calendar"
      ]
    },
    {
      "path": "src/components/scheduling/BookingPageBuilder.tsx",
      "name": "BookingPageBuilder",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MeetingType",
        "BookingPage",
        "AvailabilitySchedule",
        "Record",
        "Button",
        "Eye",
        "Copy",
        "Save",
        "Card",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Settings",
        "Users",
        "Clock",
        "Palette",
        "Bell",
        "TabsContent",
        "Input",
        "Globe",
        "Switch",
        "Plus",
        "Badge",
        "Trash2",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/scheduling/ClientBookingForm.tsx",
      "name": "ClientBookingForm",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/select",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ExistingClient",
        "BookingFormData",
        "Record",
        "Card",
        "CheckCircle",
        "Alert",
        "Mail",
        "AlertDescription",
        "Button",
        "Calendar",
        "Clock",
        "MapPin",
        "Badge",
        "Shield",
        "Lock",
        "Input",
        "User",
        "Phone",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "MessageSquare",
        "AlertTriangle",
        "ArrowLeft",
        "ArrowRight",
        "Send"
      ]
    },
    {
      "path": "src/components/search/AdvancedSearchInterface.tsx",
      "name": "AdvancedSearchInterface",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/separator",
        "@/lib/utils",
        "./SearchFilters",
        "./SearchSuggestions",
        "./SearchResults",
        "./SavedSearches",
        "./VendorCategoryFilter",
        "./LocationSearchFilter",
        "./PriceRangeFilter",
        "./AvailabilityFilter",
        "./ReviewScoreFilter"
      ],
      "exports": [
        "default",
        "AdvancedSearchInterface"
      ],
      "usedComponents": [
        "SearchFiltersState",
        "SearchResult",
        "Card",
        "CardContent",
        "Search",
        "Input",
        "SearchSuggestions",
        "Button",
        "Filter",
        "Badge",
        "ChevronUp",
        "ChevronDown",
        "X",
        "RotateCcw",
        "CardHeader",
        "CardTitle",
        "Save",
        "SearchFilters",
        "VendorCategoryFilter",
        "LocationSearchFilter",
        "PriceRangeFilter",
        "AvailabilityFilter",
        "ReviewScoreFilter",
        "SavedSearches",
        "SearchResults"
      ]
    },
    {
      "path": "src/components/search/AvailabilityFilter.tsx",
      "name": "AvailabilityFilter",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "AvailabilityFilter"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "Badge",
        "Button",
        "X",
        "CardContent",
        "Label",
        "Input",
        "Switch",
        "Separator",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CalendarCheck",
        "CalendarDays",
        "Sun",
        "Clock",
        "Info",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/search/GlobalSearch.tsx",
      "name": "GlobalSearch",
      "imports": [
        "@/hooks/useAdvancedSearch",
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/dialog",
        "@/lib/utils"
      ],
      "exports": [
        "GlobalSearch"
      ],
      "usedComponents": [
        "Users",
        "MapPin",
        "Calendar",
        "Star",
        "Search",
        "Card",
        "CardContent",
        "Badge",
        "ArrowRight",
        "CardHeader",
        "CardTitle",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "X",
        "Save",
        "HTMLInputElement",
        "Input",
        "Sparkles",
        "History",
        "TrendingUp",
        "Filter",
        "Dialog",
        "DialogTrigger",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Download",
        "SearchFilters",
        "SavedSearches",
        "SearchResultCard"
      ]
    },
    {
      "path": "src/components/search/LocationSearchFilter.tsx",
      "name": "LocationSearchFilter",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "LocationSearchFilter"
      ],
      "usedComponents": [
        "Car",
        "Navigation",
        "Train",
        "LocationSuggestion",
        "HTMLInputElement",
        "Card",
        "CardHeader",
        "CardTitle",
        "MapPin",
        "Badge",
        "CardContent",
        "Input",
        "Button",
        "X",
        "Building",
        "Globe",
        "Home",
        "Locate",
        "Label",
        "Separator",
        "Slider",
        "ChevronUp",
        "ChevronDown",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Map"
      ]
    },
    {
      "path": "src/components/search/PriceRangeFilter.tsx",
      "name": "PriceRangeFilter",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "PriceRangeFilter"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "PoundSterling",
        "Badge",
        "Button",
        "X",
        "CardContent",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Separator",
        "Slider",
        "Input",
        "Switch",
        "BarChart3",
        "Info",
        "CheckCircle2",
        "TrendingDown",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/search/ReviewScoreFilter.tsx",
      "name": "ReviewScoreFilter",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ReviewScoreFilter"
      ],
      "usedComponents": [
        "Star",
        "MessageSquare",
        "Calendar",
        "Users",
        "Award",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Button",
        "X",
        "CardContent",
        "Label",
        "Slider",
        "Separator",
        "Input",
        "Switch",
        "Verified",
        "Camera",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "BarChart3",
        "TrendingUp",
        "Info"
      ]
    },
    {
      "path": "src/components/search/SavedSearches.tsx",
      "name": "SavedSearches",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/dialog",
        "@/components/ui/alert-dialog",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "SavedSearches"
      ],
      "usedComponents": [
        "SavedSearch",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Label",
        "Input",
        "Button",
        "Card",
        "CardContent",
        "Pin",
        "Bell",
        "Badge",
        "PinOff",
        "Edit3",
        "AlertDialog",
        "AlertDialogTrigger",
        "Trash2",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction",
        "Play",
        "BellOff",
        "Bookmark",
        "DialogTrigger",
        "Save",
        "SearchCard",
        "SaveSearchDialog"
      ]
    },
    {
      "path": "src/components/search/SearchFilters.tsx",
      "name": "SearchFilters",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/separator",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "SearchFilters"
      ],
      "usedComponents": [
        "Set",
        "Button",
        "Badge",
        "ChevronUp",
        "ChevronDown",
        "FilterSection",
        "Filter",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Switch",
        "Verified",
        "Sparkles",
        "Tag",
        "Checkbox",
        "X",
        "DollarSign",
        "Separator",
        "Input",
        "Star",
        "Slider",
        "Calendar",
        "Settings"
      ]
    },
    {
      "path": "src/components/search/SearchResults.tsx",
      "name": "SearchResults",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "SearchResults"
      ],
      "usedComponents": [
        "Camera",
        "Building",
        "Utensils",
        "Flower",
        "Music",
        "Car",
        "Users",
        "Star",
        "TrendingUp",
        "SortAsc",
        "SortDesc",
        "MapPin",
        "Clock",
        "Set",
        "Card",
        "CardContent",
        "Verified",
        "Badge",
        "Sparkles",
        "Calendar",
        "Button",
        "Heart",
        "Share2",
        "Eye",
        "Phone",
        "Mail",
        "MessageSquare",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Grid",
        "List",
        "Search",
        "ResultCard",
        "ListItem"
      ]
    },
    {
      "path": "src/components/search/SearchSuggestions.tsx",
      "name": "SearchSuggestions",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "SearchSuggestions"
      ],
      "usedComponents": [
        "Camera",
        "Building",
        "Music",
        "Flower",
        "Utensils",
        "Car",
        "Users",
        "Search",
        "MapPin",
        "HTMLDivElement",
        "Clock",
        "TrendingUp",
        "Badge",
        "ChevronRight",
        "Card",
        "CardContent",
        "SuggestionItem",
        "Separator",
        "ArrowUpRight"
      ]
    },
    {
      "path": "src/components/search/VendorCategoryFilter.tsx",
      "name": "VendorCategoryFilter",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/checkbox",
        "@/components/ui/label",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "VendorCategoryFilter"
      ],
      "usedComponents": [
        "Camera",
        "Building",
        "Utensils",
        "Flower",
        "Music",
        "Heart",
        "Crown",
        "Shirt",
        "Sparkles",
        "Car",
        "Users",
        "Set",
        "Card",
        "CardContent",
        "Checkbox",
        "Badge",
        "TrendingUp",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "X",
        "Search",
        "Input",
        "Label",
        "Star",
        "CategoryCard"
      ]
    },
    {
      "path": "src/components/seating/AccessibleSeatingManager.tsx",
      "name": "AccessibleSeatingManager",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "AccessibleSeatingManager"
      ],
      "usedComponents": [
        "AccessibilitySettings",
        "HTMLDivElement",
        "Button",
        "Accessibility",
        "Contrast",
        "Type",
        "Volume2",
        "VolumeX",
        "Badge",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent"
      ]
    },
    {
      "path": "src/components/seating/BulkAssignmentTools.tsx",
      "name": "BulkAssignmentTools",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/checkbox",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/input",
        "@/components/ui/tabs",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "BulkAssignmentTools"
      ],
      "usedComponents": [
        "BulkAssignmentRule",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Users",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "Search",
        "Input",
        "Filter",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CheckCircle",
        "Checkbox",
        "AlertCircle",
        "UserPlus",
        "Target"
      ]
    },
    {
      "path": "src/components/seating/ConflictAlert.tsx",
      "name": "ConflictAlert",
      "imports": [
        "@/types/seating",
        "@/components/ui/alert",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/collapsible",
        "@/lib/utils"
      ],
      "exports": [
        "ConflictAlert",
        "createConflictDetails"
      ],
      "usedComponents": [
        "Alert",
        "ConflictIcon",
        "AlertTitle",
        "Badge",
        "Button",
        "X",
        "AlertDescription",
        "Collapsible",
        "CollapsibleTrigger",
        "ChevronDown",
        "ChevronRight",
        "Lightbulb",
        "CollapsibleContent",
        "ArrowRight",
        "AlertTriangle",
        "ConflictItem"
      ]
    },
    {
      "path": "src/components/seating/ConflictHeatMapVisualization.tsx",
      "name": "ConflictHeatMapVisualization",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tooltip",
        "@/lib/utils"
      ],
      "exports": [
        "ConflictHeatMapVisualization"
      ],
      "usedComponents": [
        "TooltipProvider",
        "Badge",
        "Button",
        "EyeOff",
        "Eye",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "CardContent",
        "Tooltip",
        "TooltipTrigger",
        "IconComponent",
        "TooltipContent"
      ]
    },
    {
      "path": "src/components/seating/EnhancedSeatingArrangementManager.tsx",
      "name": "EnhancedSeatingArrangementManager",
      "imports": [
        "@/lib/utils",
        "@/hooks/use-toast",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs"
      ],
      "exports": [
        "EnhancedSeatingArrangementManager"
      ],
      "usedComponents": [
        "Table",
        "ConflictHeatMap",
        "HistoryState",
        "Button",
        "Undo",
        "Redo",
        "Card",
        "CardHeader",
        "CardTitle",
        "Sparkles",
        "CardContent",
        "Badge",
        "Layout",
        "TrendingUp",
        "Progress",
        "Lightbulb",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "List",
        "Download",
        "Share",
        "TabsContent",
        "Users"
      ]
    },
    {
      "path": "src/components/seating/GuestChip.tsx",
      "name": "GuestChip",
      "imports": [
        "@/types/seating",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tooltip",
        "@/lib/utils"
      ],
      "exports": [
        "GuestChip"
      ],
      "usedComponents": [
        "PriorityIcon",
        "Utensils",
        "Wheelchair",
        "AlertTriangle",
        "Button",
        "X",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "TooltipContent"
      ]
    },
    {
      "path": "src/components/seating/GuestList.tsx",
      "name": "GuestList",
      "imports": [
        "@/types/seating",
        "./GuestChip",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/collapsible",
        "@/lib/utils"
      ],
      "exports": [
        "GuestList"
      ],
      "usedComponents": [
        "SortOption",
        "FilterOption",
        "GroupOption",
        "Set",
        "UserCheck",
        "UserX",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "SortAsc",
        "SortDesc",
        "Badge",
        "Crown",
        "Utensils",
        "Wheelchair",
        "AlertTriangle",
        "Users",
        "Collapsible",
        "CollapsibleTrigger",
        "ChevronDown",
        "ChevronRight",
        "CollapsibleContent",
        "GuestChip"
      ]
    },
    {
      "path": "src/components/seating/MobileSeatingInterface.tsx",
      "name": "MobileSeatingInterface",
      "imports": [
        "@/types/seating",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/lib/utils"
      ],
      "exports": [
        "MobileSeatingInterface"
      ],
      "usedComponents": [
        "ViewMode",
        "statusInfo",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "PriorityIcon",
        "Utensils",
        "Wheelchair",
        "AlertTriangle",
        "Badge",
        "Button",
        "Minus",
        "Plus",
        "Users",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "ArrowRight",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/seating/ProductionSeatingInterface.tsx",
      "name": "ProductionSeatingInterface",
      "imports": [
        "@/lib/utils",
        "@/hooks/use-toast",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/separator"
      ],
      "exports": [
        "ProductionSeatingInterface"
      ],
      "usedComponents": [
        "Guest",
        "DndContext",
        "Sparkles",
        "Heart",
        "Card",
        "Users",
        "Progress",
        "Layout",
        "Crown",
        "TrendingUp",
        "Button",
        "AnimatePresence",
        "Zap",
        "ArrowRight",
        "Badge",
        "Star",
        "Award",
        "Info",
        "CheckCircle2",
        "Palette",
        "AlertTriangle",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/seating/ProgressiveSeatingLoader.tsx",
      "name": "ProgressiveSeatingLoader",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/skeleton",
        "@/components/ui/alert",
        "@/lib/services/mobile-performance-optimizer",
        "@/hooks/useSeatingOffline"
      ],
      "exports": [
        "default",
        "ProgressiveSeatingLoader"
      ],
      "usedComponents": [
        "ProgressiveLoadingState",
        "WifiOff",
        "Wifi",
        "Card",
        "Skeleton",
        "Progress",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "LoadingProgressBar",
        "Users",
        "SkeletonStats",
        "IconComponent",
        "SkeletonActions"
      ]
    },
    {
      "path": "src/components/seating/RealtimeCollaborationManager.tsx",
      "name": "RealtimeCollaborationManager",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/card",
        "@/components/ui/avatar",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "RealtimeCollaborationManager"
      ],
      "usedComponents": [
        "SeatingAction",
        "ConflictResolution",
        "RealtimeChannel",
        "Wifi",
        "WifiOff",
        "Badge",
        "Users",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Eye",
        "Clock",
        "UserMinus",
        "AnimatePresence",
        "AlertCircle",
        "Button"
      ]
    },
    {
      "path": "src/components/seating/SeatingAnimations.tsx",
      "name": "SeatingAnimations",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "fadeInUp",
        "slideInFromRight",
        "scaleIn",
        "staggerChildren",
        "pulseGlow",
        "AnimatedCard",
        "AnimatedButton",
        "AnimatedBadge",
        "GuestDragOverlay",
        "TableHoverEffect",
        "ConflictAlert",
        "LoadingSpinner",
        "PulsingDots",
        "AnimatedProgress",
        "SuccessCheckmark",
        "FloatingActionButton",
        "CounterAnimation",
        "AnimatedList",
        "ToastNotification",
        "OptimizationLoadingAnimation"
      ],
      "usedComponents": [
        "AnimatePresence",
        "HTMLSpanElement",
        "PulsingDots"
      ]
    },
    {
      "path": "src/components/seating/SeatingArrangementManager.tsx",
      "name": "SeatingArrangementManager",
      "imports": [
        "@/lib/utils",
        "@/hooks/use-toast",
        "./TableLayout",
        "./GuestList",
        "./SeatingControls",
        "./ConflictAlert"
      ],
      "exports": [
        "SeatingArrangementManager"
      ],
      "usedComponents": [
        "Guest",
        "DndContext",
        "SeatingControls",
        "ConflictAlert",
        "GuestList",
        "TableLayout",
        "SeatingListView",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/seating/SeatingArrangementResponsive.tsx",
      "name": "SeatingArrangementResponsive",
      "imports": [
        "@/types/seating",
        "./TableLayout",
        "./GuestList",
        "./TableToolbar",
        "./SeatingControls",
        "./ConflictAlert",
        "./MobileSeatingInterface",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "SeatingArrangementResponsive"
      ],
      "usedComponents": [
        "ConflictDetails",
        "ViewMode",
        "Table",
        "MobileSeatingInterface",
        "ConflictAlert",
        "DndContext",
        "GuestList",
        "SeatingControls",
        "TableToolbar",
        "TableLayout"
      ]
    },
    {
      "path": "src/components/seating/SeatingControls.tsx",
      "name": "SeatingControls",
      "imports": [
        "@/types/seating",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/progress",
        "@/components/ui/dialog",
        "@/components/ui/popover",
        "@/lib/utils"
      ],
      "exports": [
        "SeatingControls"
      ],
      "usedComponents": [
        "Badge",
        "Users",
        "Progress",
        "AlertTriangle",
        "CheckCircle",
        "Clock",
        "Button",
        "Undo2",
        "Redo2",
        "RotateCcw",
        "EyeOff",
        "Eye",
        "Pause",
        "Play",
        "Popover",
        "PopoverTrigger",
        "PopoverContent",
        "XCircle",
        "Dialog",
        "DialogTrigger",
        "Save",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/seating/SeatingExportManager.tsx",
      "name": "SeatingExportManager",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/badge",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "SeatingExportManager",
        "generatePDF",
        "generateCSV",
        "generateJSON",
        "handleExport"
      ],
      "usedComponents": [
        "ExportOptions",
        "VendorShareOptions",
        "HTMLDivElement",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Download",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Card",
        "CardHeader",
        "CardTitle",
        "FileText",
        "CardContent",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Checkbox",
        "Input",
        "Share2",
        "Textarea",
        "Copy",
        "Eye",
        "Badge"
      ]
    },
    {
      "path": "src/components/seating/SecureSeatingArrangement.tsx",
      "name": "SecureSeatingArrangement",
      "imports": [
        "./SeatingArrangementResponsive",
        "@/lib/security/seating-security-middleware",
        "@/lib/security/enhanced-csrf-protection",
        "@/hooks/use-toast",
        "@/components/ui/alert",
        "@/components/ui/button"
      ],
      "exports": [
        "SecureSeatingArrangement"
      ],
      "usedComponents": [
        "SecurityAlert",
        "Date",
        "Table",
        "Shield",
        "Loader2",
        "Alert",
        "AlertTriangle",
        "AlertTitle",
        "AlertDescription",
        "Button",
        "SeatingArrangementResponsive"
      ]
    },
    {
      "path": "src/components/seating/TableCard.tsx",
      "name": "TableCard",
      "imports": [
        "@/types/seating",
        "./GuestChip",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/dropdown-menu",
        "@/lib/utils"
      ],
      "exports": [
        "TableCard"
      ],
      "usedComponents": [
        "Table",
        "HTMLDivElement",
        "Badge",
        "AlertTriangle",
        "Users",
        "Input",
        "Button",
        "Check",
        "X",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreHorizontal",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Edit3",
        "Settings",
        "DropdownMenuSeparator",
        "Trash2",
        "GuestChip"
      ]
    },
    {
      "path": "src/components/seating/TableLayout.tsx",
      "name": "TableLayout",
      "imports": [
        "./TableCard",
        "@/types/seating",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "TableLayout"
      ],
      "usedComponents": [
        "Table",
        "HTMLDivElement",
        "Button",
        "ZoomOut",
        "ZoomIn",
        "RotateCcw",
        "Grid3X3",
        "TableCard"
      ]
    },
    {
      "path": "src/components/seating/TableToolbar.tsx",
      "name": "TableToolbar",
      "imports": [
        "@/types/seating",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/popover",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "TableToolbar"
      ],
      "usedComponents": [
        "Table",
        "HTMLInputElement",
        "Badge",
        "Square",
        "Users",
        "Button",
        "ShapeIcon",
        "Dialog",
        "DialogTrigger",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "DialogFooter",
        "Copy",
        "Trash2",
        "Wand2",
        "Popover",
        "PopoverTrigger",
        "Settings",
        "PopoverContent",
        "Save",
        "Upload",
        "Download",
        "RotateCcw"
      ]
    },
    {
      "path": "src/components/security/AdvancedSecurityDashboard.tsx",
      "name": "AdvancedSecurityDashboard",
      "imports": [
        "../ui/card",
        "../ui/badge",
        "../ui/button",
        "../ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SecurityMetrics",
        "UserRiskData",
        "SecurityAlert",
        "BehaviorAnalysis",
        "Card",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Badge",
        "Button"
      ]
    },
    {
      "path": "src/components/security/AutomatedMonitoringDashboard.tsx",
      "name": "AutomatedMonitoringDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "default",
        "AutomatedMonitoringDashboard"
      ],
      "usedComponents": [
        "MonitoringStatus",
        "SecurityIncident",
        "WeddingTrigger",
        "Date",
        "NodeJS",
        "Mail",
        "MessageSquare",
        "Phone",
        "Bell",
        "Activity",
        "Button",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "Switch",
        "CardDescription",
        "CardContent",
        "Target",
        "Heart",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Users",
        "CheckCircle",
        "ScrollArea",
        "Badge",
        "Progress",
        "Calendar",
        "Icon",
        "AlertTitle"
      ]
    },
    {
      "path": "src/components/security/CSRFProtectedForm.tsx",
      "name": "CSRFProtectedForm",
      "imports": [
        "@/hooks/useCSRF",
        "@/components/ui/alert",
        "@/components/ui/button"
      ],
      "exports": [
        "CSRFProtectedForm",
        "useCSRFToken"
      ],
      "usedComponents": [
        "HTMLFormElement",
        "RefreshCw",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Button"
      ]
    },
    {
      "path": "src/components/security/MFASettings.tsx",
      "name": "MFASettings",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/switch",
        "@/components/ui/dialog",
        "@/lib/auth/mfa",
        "./MFASetup",
        "./MFAVerification"
      ],
      "exports": [
        "MFASettings"
      ],
      "usedComponents": [
        "MFAFactor",
        "QrCode",
        "Smartphone",
        "Key",
        "Card",
        "CardContent",
        "MFASetup",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardDescription",
        "Badge",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Switch",
        "Button",
        "Plus",
        "CheckCircle",
        "Trash2",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/security/MFASetup.tsx",
      "name": "MFASetup",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/lib/auth/mfa"
      ],
      "exports": [
        "MFASetup"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardDescription",
        "CardContent",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "QrCode",
        "Smartphone",
        "TabsContent",
        "Button",
        "Input",
        "Key",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/security/MFAVerification.tsx",
      "name": "MFAVerification",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/card",
        "@/components/ui/alert",
        "@/lib/auth/mfa"
      ],
      "exports": [
        "MFAVerification"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardDescription",
        "CardContent",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Input",
        "Button",
        "RefreshCw",
        "Key",
        "CardFooter"
      ]
    },
    {
      "path": "src/components/security/MultiJurisdictionComplianceDashboard.tsx",
      "name": "MultiJurisdictionComplianceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/lib/types/multi-jurisdiction-compliance"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ComplianceMonitoringMetrics",
        "ComplianceJurisdiction",
        "Card",
        "CardContent",
        "AlertTriangle",
        "Button",
        "Globe",
        "Plus",
        "FileText",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Progress",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "TrendingUp",
        "Badge",
        "CheckCircle",
        "Clock",
        "Filter",
        "Eye",
        "Shield"
      ]
    },
    {
      "path": "src/components/security/SecurityDashboard.tsx",
      "name": "SecurityDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/lib/security/SecurityMonitoringService",
        "@/lib/security/SecurityMetrics",
        "@/lib/security/AlertingService",
        "@/lib/security/SecurityLayerInterface"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ThreatLevel",
        "SecurityDashboardProps",
        "SecurityMetrics",
        "MonitoringAlert",
        "CheckCircle",
        "AlertTriangle",
        "AlertCircle",
        "Activity",
        "Button",
        "Badge",
        "Star",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Shield",
        "Users",
        "Clock"
      ]
    },
    {
      "path": "src/components/security/SecurityReports.tsx",
      "name": "SecurityReports",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/date-picker-with-range",
        "@/lib/security/SecurityMetrics",
        "@/lib/security/AlertingService",
        "@/lib/security/SecurityLayerInterface"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SecuritySeverity",
        "SecurityReportsProps",
        "SecurityScore",
        "SecurityReport",
        "AlertStatistics",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardContent",
        "Star",
        "AlertTriangle",
        "BarChart3",
        "Badge",
        "Clock",
        "PieChart",
        "FileText",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Download",
        "CheckCircle",
        "TrendingUp",
        "Calendar",
        "DatePickerWithRange",
        "Icon"
      ]
    },
    {
      "path": "src/components/security/TouchInputValidator.tsx",
      "name": "TouchInputValidator",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TouchPoint",
        "TouchValidationResult",
        "HTMLCanvasElement",
        "NodeJS",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardDescription",
        "CardContent",
        "Button",
        "RotateCcw",
        "Alert",
        "CheckCircle",
        "XCircle",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/security/incident/ContainmentActions.tsx",
      "name": "ContainmentActions",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ContainmentActionsProps",
        "AlertTriangle",
        "Icon",
        "CategoryIcon",
        "Clock",
        "StatusIcon",
        "RotateCcw"
      ]
    },
    {
      "path": "src/components/security/incident/EvidencePreservation.tsx",
      "name": "EvidencePreservation",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EvidencePreservationProps",
        "Archive",
        "Download",
        "Upload",
        "Shield",
        "Icon",
        "Clock",
        "Hash",
        "CheckCircle",
        "Eye"
      ]
    },
    {
      "path": "src/components/security/incident/IncidentCard.tsx",
      "name": "IncidentCard",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "IncidentCardProps",
        "AlertTriangle",
        "SeverityIcon",
        "StatusIcon",
        "Eye",
        "MapPin",
        "User",
        "Clock"
      ]
    },
    {
      "path": "src/components/security/incident/NotificationCenter.tsx",
      "name": "NotificationCenter",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Notification",
        "NotificationCenterProps",
        "Heart",
        "ChannelIcon",
        "Clock",
        "Bell",
        "Eye",
        "EyeOff",
        "Send"
      ]
    },
    {
      "path": "src/components/security/incident/SeverityIndicator.tsx",
      "name": "SeverityIndicator",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SeverityIndicatorProps",
        "Icon",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/security/incident/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/security/monitoring/RequestMetricsChart.tsx",
      "name": "RequestMetricsChart",
      "imports": [],
      "exports": [
        "RequestMetricsChart"
      ],
      "usedComponents": [
        "MetricDataPoint",
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "ExclamationTriangleIcon",
        "InformationCircleIcon"
      ]
    },
    {
      "path": "src/components/security/monitoring/ThreatAlertCard.tsx",
      "name": "ThreatAlertCard",
      "imports": [],
      "exports": [
        "ThreatAlertCard"
      ],
      "usedComponents": [
        "ShieldExclamationIcon",
        "ExclamationTriangleIcon",
        "ClockIcon",
        "GlobeAltIcon",
        "ChevronUpIcon",
        "ChevronDownIcon",
        "XMarkIcon",
        "UserIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/security/monitoring/UserBehaviorAnalyzer.tsx",
      "name": "UserBehaviorAnalyzer",
      "imports": [],
      "exports": [
        "UserBehaviorAnalyzer"
      ],
      "usedComponents": [
        "BehaviorMetrics",
        "DevicePhoneMobileIcon",
        "ComputerDesktopIcon",
        "EyeIcon",
        "CheckCircleIcon",
        "UserIcon",
        "ClockIcon",
        "MapPinIcon"
      ]
    },
    {
      "path": "src/components/settings/NotificationPreferences.tsx",
      "name": "NotificationPreferences",
      "imports": [
        "@/lib/utils",
        "@/lib/supabase/client",
        "@/lib/services/push-notification-system",
        "@/components/ui/switch"
      ],
      "exports": [
        "NotificationPreferences"
      ],
      "usedComponents": [
        "UserNotificationPreferences",
        "NotificationPermission",
        "MessageSquare",
        "Calendar",
        "Clock",
        "AlertCircle",
        "Users",
        "Info",
        "Bell",
        "Switch",
        "Smartphone",
        "Mail",
        "Phone",
        "Moon",
        "Volume2",
        "Vibrate",
        "ChevronRight",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/sms/SMSConfigurationWizard.tsx",
      "name": "SMSConfigurationWizard",
      "imports": [],
      "exports": [
        "SMSConfigurationWizard"
      ],
      "usedComponents": [
        "Loader2",
        "Icon",
        "AlertTriangle",
        "Record",
        "SMSConfiguration",
        "Settings",
        "Alert",
        "MessageSquare",
        "Input",
        "EyeOff",
        "Eye",
        "DollarSign",
        "Shield",
        "Toggle",
        "CheckCircle",
        "Card",
        "Button"
      ]
    },
    {
      "path": "src/components/sms/SMSPerformanceDashboard.tsx",
      "name": "SMSPerformanceDashboard",
      "imports": [],
      "exports": [
        "SMSPerformanceDashboard"
      ],
      "usedComponents": [
        "SMSMetrics",
        "Date",
        "CheckCircle",
        "TrendingUp",
        "AlertCircle",
        "Activity",
        "Alert",
        "Button",
        "Card",
        "Badge",
        "Zap",
        "Progress",
        "Timer",
        "MessageSquare",
        "DollarSign",
        "Wifi"
      ]
    },
    {
      "path": "src/components/supplier/mobile/QuickActions.tsx",
      "name": "QuickActions",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "QuickActions"
      ],
      "usedComponents": [
        "Card",
        "Button",
        "Icon",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/supplier/mobile/ScheduleFilters.tsx",
      "name": "ScheduleFilters",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge"
      ],
      "exports": [
        "ScheduleFilters"
      ],
      "usedComponents": [
        "Badge",
        "X",
        "Button",
        "Card",
        "Icon"
      ]
    },
    {
      "path": "src/components/supplier/mobile/ScheduleOverview.tsx",
      "name": "ScheduleOverview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/types/supplier"
      ],
      "exports": [
        "SupplierScheduleOverview"
      ],
      "usedComponents": [
        "Card",
        "Button",
        "ChevronLeft",
        "ChevronRight",
        "Badge",
        "Clock"
      ]
    },
    {
      "path": "src/components/supplier/mobile/StatusSummary.tsx",
      "name": "StatusSummary",
      "imports": [
        "@/components/ui/card",
        "@/lib/utils"
      ],
      "exports": [
        "StatusSummary"
      ],
      "usedComponents": [
        "Card",
        "Icon"
      ]
    },
    {
      "path": "src/components/supplier/mobile/SupplierHeader.tsx",
      "name": "SupplierHeader",
      "imports": [
        "@/lib/utils",
        "@/types/supplier",
        "@/hooks/useSupplierNotifications",
        "@/hooks/useAuth",
        "@/components/ui/button",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "SupplierHeader"
      ],
      "usedComponents": [
        "User",
        "WifiOff",
        "Wifi",
        "Button",
        "RefreshCw",
        "Bell",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Menu",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Settings",
        "DropdownMenuSeparator",
        "LogOut"
      ]
    },
    {
      "path": "src/components/supplier/mobile/SupplierNavigation.tsx",
      "name": "SupplierNavigation",
      "imports": [
        "@/lib/utils",
        "@/hooks/useSupplierNotifications"
      ],
      "exports": [
        "SupplierMobileNavigation",
        "SupplierQuickActionButton"
      ],
      "usedComponents": [
        "Icon",
        "Bell"
      ]
    },
    {
      "path": "src/components/supplier/mobile/TodayEvents.tsx",
      "name": "TodayEvents",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/types/supplier",
        "@/hooks/useSupplierSchedule"
      ],
      "exports": [
        "TodayEvents"
      ],
      "usedComponents": [
        "Card",
        "Clock",
        "Button",
        "Badge",
        "MapPin",
        "CheckCircle",
        "Navigation",
        "Phone",
        "Camera",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/supplier/mobile/UpcomingBookings.tsx",
      "name": "UpcomingBookings",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/types/supplier"
      ],
      "exports": [
        "UpcomingBookings"
      ],
      "usedComponents": [
        "Card",
        "Users",
        "Button",
        "Calendar",
        "Badge",
        "FileText",
        "Clock",
        "MapPin",
        "Phone",
        "Mail"
      ]
    },
    {
      "path": "src/components/supplier/portfolio/AITaggingInterface.tsx",
      "name": "AITaggingInterface",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/progress"
      ],
      "exports": [
        "AITaggingInterface"
      ],
      "usedComponents": [
        "Set",
        "ProcessingState",
        "Sparkles",
        "Badge",
        "Brain",
        "Button",
        "Wand2",
        "X",
        "Progress",
        "Search",
        "Input",
        "BatchTagModal",
        "BatchCategoryModal",
        "ImageTaggingCard",
        "Check",
        "AlertCircle",
        "Clock",
        "ChevronDown",
        "ChevronRight",
        "TrendingUp",
        "Plus",
        "Tag",
        "Target"
      ]
    },
    {
      "path": "src/components/supplier/portfolio/FeaturedWorkEditor.tsx",
      "name": "FeaturedWorkEditor",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/progress"
      ],
      "exports": [
        "FeaturedWorkEditor"
      ],
      "usedComponents": [
        "FilterOption",
        "SortOption",
        "Star",
        "Button",
        "Zap",
        "BarChart3",
        "X",
        "TrendingUp",
        "Award",
        "Progress",
        "Eye",
        "Users",
        "Search",
        "Input",
        "LibraryImageCard",
        "Badge",
        "Plus",
        "FeaturedImageCard",
        "Heart",
        "ArrowUp",
        "ArrowDown"
      ]
    },
    {
      "path": "src/components/supplier/portfolio/ImageUploader.tsx",
      "name": "ImageUploader",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "ImageUploader"
      ],
      "usedComponents": [
        "FileUploadState",
        "HTMLInputElement",
        "Badge",
        "Sparkles",
        "Button",
        "X",
        "Upload",
        "FileImage",
        "Progress",
        "FileUploadCard",
        "ImageIcon",
        "Loader2",
        "Check",
        "AlertCircle",
        "RotateCcw",
        "Trash2"
      ]
    },
    {
      "path": "src/components/supplier/portfolio/PortfolioManager.tsx",
      "name": "PortfolioManager",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "@/components/ui/input",
        "./ImageUploader",
        "./AITaggingInterface",
        "./FeaturedWorkEditor"
      ],
      "exports": [
        "PortfolioManager"
      ],
      "usedComponents": [
        "GalleryImage",
        "Set",
        "PortfolioFilters",
        "Button",
        "Upload",
        "Tag",
        "Star",
        "Search",
        "Input",
        "Filter",
        "Grid",
        "List",
        "Trash2",
        "ImageIcon",
        "ImageCard",
        "ImageUploader",
        "AITaggingInterface",
        "FeaturedWorkEditor",
        "Badge",
        "Eye",
        "Settings",
        "MoreHorizontal"
      ]
    },
    {
      "path": "src/components/supplier/schedule/MobileScheduleView.tsx",
      "name": "MobileScheduleView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "MobileScheduleView"
      ],
      "usedComponents": [
        "Card",
        "Calendar",
        "EventIcon",
        "Badge",
        "Clock",
        "Users",
        "MapPin",
        "Button",
        "Phone",
        "Mail",
        "Navigation"
      ]
    },
    {
      "path": "src/components/suppliers/GeographicSearchResults.tsx",
      "name": "GeographicSearchResults",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/avatar",
        "@/components/ui/separator",
        "@/lib/services/geographic-search-service"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Star",
        "Card",
        "CardHeader",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "Shield",
        "CardContent",
        "MapPin",
        "Navigation",
        "Clock",
        "DollarSign",
        "AlertCircle",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "Separator",
        "SupplierCard"
      ]
    },
    {
      "path": "src/components/suppliers/LocationSearchFilter.tsx",
      "name": "LocationSearchFilter",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/lib/services/geographic-search-service"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "LocationSearchParams",
        "NodeJS",
        "Card",
        "CardHeader",
        "CardTitle",
        "MapPin",
        "CardContent",
        "Label",
        "Search",
        "Input",
        "Button",
        "X",
        "Navigation",
        "Badge",
        "Slider",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Sliders",
        "Checkbox"
      ]
    },
    {
      "path": "src/components/suppliers/ProfileCreationWizard.tsx",
      "name": "ProfileCreationWizard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/hooks/use-toast"
      ],
      "exports": [
        "ProfileCreationWizard"
      ],
      "usedComponents": [
        "Building2",
        "MapPin",
        "DollarSign",
        "Users",
        "FileText",
        "Award",
        "ProfileData",
        "Record",
        "BusinessInformationStep",
        "ServiceAreasStep",
        "PricingPackagesStep",
        "TeamContactStep",
        "MediaGalleryStep",
        "VerificationStep",
        "Badge",
        "Progress",
        "Check",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Button",
        "ArrowLeft",
        "ArrowRight",
        "Label",
        "Input",
        "AlertCircle",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Checkbox",
        "Plus",
        "X",
        "Textarea",
        "HTMLInputElement",
        "Upload"
      ]
    },
    {
      "path": "src/components/suppliers/ProfileCreationWizardLazy.tsx",
      "name": "ProfileCreationWizardLazy",
      "imports": [
        "@/components/ui/skeleton"
      ],
      "exports": [
        "default",
        "ProfileCreationWizardLazy"
      ],
      "usedComponents": [
        "Skeleton",
        "Suspense",
        "ProfileCreationWizardDynamic"
      ]
    },
    {
      "path": "src/components/suppliers/ProfileManagementDashboard.tsx",
      "name": "ProfileManagementDashboard",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/alert-dialog",
        "@/hooks/use-toast"
      ],
      "exports": [
        "ProfileManagementDashboard"
      ],
      "usedComponents": [
        "ProfileData",
        "Badge",
        "Shield",
        "Button",
        "Eye",
        "ExternalLink",
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "CardContent",
        "Progress",
        "Award",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ProfileOverview",
        "BusinessInformationTab",
        "ServicesTab",
        "MediaTab",
        "SettingsTab",
        "AnalyticsTab",
        "CardDescription",
        "Calendar",
        "DollarSign",
        "Image",
        "Edit",
        "Label",
        "Input",
        "Save",
        "X",
        "Mail",
        "Phone",
        "HTMLInputElement",
        "Upload",
        "Textarea"
      ]
    },
    {
      "path": "src/components/suppliers/SEOOptimization.tsx",
      "name": "SEOOptimization",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/hooks/use-toast"
      ],
      "exports": [
        "SEOOptimization"
      ],
      "usedComponents": [
        "SEOData",
        "SEOAnalysis",
        "Badge",
        "Button",
        "RefreshCw",
        "Save",
        "Card",
        "CardHeader",
        "CardTitle",
        "CheckCircle",
        "AlertCircle",
        "CardDescription",
        "Progress",
        "CardContent",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "BasicSEOSection",
        "SocialMediaSEOSection",
        "TechnicalSEOSection",
        "SEOPreviewSection",
        "Label",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Copy",
        "X"
      ]
    },
    {
      "path": "src/components/suppliers/ServiceAreaManager.tsx",
      "name": "ServiceAreaManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/components/ui/switch",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/lib/services/service-radius-calculator"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ServiceAreaConfig",
        "ServiceAreaAnalysis",
        "LocationTest",
        "Card",
        "CardHeader",
        "CardTitle",
        "Target",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Alert",
        "AlertCircle",
        "AlertDescription",
        "Check",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Slider",
        "Switch",
        "Textarea",
        "Button",
        "Save",
        "RotateCcw",
        "Badge",
        "X",
        "Eye",
        "Globe"
      ]
    },
    {
      "path": "src/components/suppliers/SupplierPortal.tsx",
      "name": "SupplierPortal",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/components/ui/avatar",
        "@/components/ui/input",
        "@/lib/utils",
        "./schedule-views"
      ],
      "exports": [
        "SupplierPortal"
      ],
      "usedComponents": [
        "ScheduleItem",
        "IconComponent",
        "Button",
        "SupplierScheduleViewSelector",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Download",
        "Bell",
        "Badge",
        "Settings",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardContent",
        "Calendar",
        "AlertCircle",
        "CheckCircle",
        "Clock",
        "CardHeader",
        "CardTitle",
        "Alert",
        "AlertDescription",
        "Search",
        "Input",
        "User"
      ]
    },
    {
      "path": "src/components/suppliers/VerificationWorkflow.tsx",
      "name": "VerificationWorkflow",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/alert-dialog",
        "@/components/ui/tabs",
        "@/hooks/use-toast"
      ],
      "exports": [
        "VerificationWorkflow"
      ],
      "usedComponents": [
        "VerificationData",
        "VerificationPendingView",
        "VerificationCompletedView",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardDescription",
        "Badge",
        "Progress",
        "CardContent",
        "Award",
        "CheckCircle",
        "Building",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "FileText",
        "Check",
        "TabsContent",
        "DocumentUploadSection",
        "BusinessInformationSection",
        "ReviewSubmissionSection",
        "Button",
        "HTMLInputElement",
        "Eye",
        "X",
        "Upload",
        "Label",
        "Input",
        "Mail",
        "Phone",
        "Textarea",
        "AlertCircle",
        "Clock",
        "Edit"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/CatererScheduleView.tsx",
      "name": "CatererScheduleView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "./types"
      ],
      "exports": [
        "CatererScheduleView"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Utensils",
        "CardContent",
        "Button",
        "CheckCircle2",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ScrollArea",
        "Badge",
        "AlertTriangle",
        "ChefHat",
        "Clock"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/CoordinatorScheduleView.tsx",
      "name": "CoordinatorScheduleView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "./types"
      ],
      "exports": [
        "CoordinatorScheduleView"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Button",
        "CheckCircle2"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/DJScheduleView.tsx",
      "name": "DJScheduleView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/scroll-area",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/slider",
        "@/lib/utils",
        "./types"
      ],
      "exports": [
        "DJScheduleView"
      ],
      "usedComponents": [
        "Record",
        "Card",
        "CardHeader",
        "CardTitle",
        "Music",
        "CardContent",
        "Button",
        "CheckCircle2",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ScrollArea",
        "Play",
        "Badge",
        "Settings",
        "Mic",
        "Volume2",
        "Progress",
        "Clock",
        "MapPin",
        "Textarea"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/FloristScheduleView.tsx",
      "name": "FloristScheduleView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "./types"
      ],
      "exports": [
        "FloristScheduleView"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Flower",
        "CardContent",
        "Button",
        "CheckCircle2"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/PhotographerScheduleView.tsx",
      "name": "PhotographerScheduleView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/scroll-area",
        "@/components/ui/tabs",
        "@/components/ui/alert",
        "@/lib/utils",
        "./types"
      ],
      "exports": [
        "PhotographerScheduleView"
      ],
      "usedComponents": [
        "Set",
        "Record",
        "IconComponent",
        "Card",
        "CardHeader",
        "CardTitle",
        "Camera",
        "CardContent",
        "Button",
        "CheckCircle2",
        "FileText",
        "AlertTriangle",
        "Alert",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ScrollArea",
        "Clock",
        "MapPin",
        "Badge",
        "Checkbox",
        "Star",
        "Input",
        "Lightbulb",
        "Textarea"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/SupplierScheduleViewSelector.tsx",
      "name": "SupplierScheduleViewSelector",
      "imports": [
        "./types",
        "./PhotographerScheduleView",
        "./DJScheduleView",
        "./CatererScheduleView",
        "./FloristScheduleView",
        "./CoordinatorScheduleView",
        "./TransportScheduleView",
        "@/components/ui/card",
        "@/components/ui/alert"
      ],
      "exports": [
        "SupplierScheduleViewSelector",
        "getVendorTypeFromSupplier"
      ],
      "usedComponents": [
        "PhotographerScheduleView",
        "DJScheduleView",
        "CatererScheduleView",
        "FloristScheduleView",
        "CoordinatorScheduleView",
        "TransportScheduleView",
        "Card",
        "CardContent",
        "Alert",
        "AlertTriangle",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/TransportScheduleView.tsx",
      "name": "TransportScheduleView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "./types"
      ],
      "exports": [
        "TransportScheduleView"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Truck",
        "CardContent",
        "Button",
        "CheckCircle2"
      ]
    },
    {
      "path": "src/components/suppliers/schedule-views/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/suppliers/schedule-views/types.ts",
      "name": "types",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/support/MetricsDashboard.tsx",
      "name": "MetricsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/select",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AgentMetrics",
        "SystemMetrics",
        "TrendData",
        "Date",
        "Card",
        "CardContent",
        "Badge",
        "Award",
        "CardHeader",
        "CardTitle",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "RefreshCw",
        "Download",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription"
      ]
    },
    {
      "path": "src/components/support/ResponseManager.tsx",
      "name": "ResponseManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/alert",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/label",
        "@/lib/support/response-manager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CannedResponse",
        "ResponseSuggestion",
        "Record",
        "Card",
        "CardHeader",
        "Badge",
        "Sparkles",
        "Heart",
        "Star",
        "CardTitle",
        "TrendingUp",
        "Wand2",
        "Clock",
        "Button",
        "MessageSquare",
        "HTMLInputElement",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Input",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Dialog",
        "DialogTrigger",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "ScrollArea",
        "CheckCircle",
        "CardContent",
        "Search",
        "Separator"
      ]
    },
    {
      "path": "src/components/support/TemplateSelector.tsx",
      "name": "TemplateSelector",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/card",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Template",
        "Record",
        "ProcessedTemplate",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Badge",
        "Sparkles",
        "CardContent",
        "User",
        "Clock",
        "Star",
        "Label",
        "Input",
        "Textarea",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Copy",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Search",
        "Eye",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/support/TicketDashboard.tsx",
      "name": "TicketDashboard",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/dropdown-menu",
        "@/components/ui/checkbox",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Ticket",
        "DashboardFilters",
        "Set",
        "DashboardStats",
        "RealtimeChannel",
        "Button",
        "Card",
        "CardHeader",
        "CardTitle",
        "MessageSquare",
        "CardContent",
        "Heart",
        "AlertTriangle",
        "User",
        "Filter",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "XCircle",
        "Checkbox",
        "Badge",
        "Tag",
        "Clock",
        "Progress",
        "Eye",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuLabel",
        "DropdownMenuSeparator",
        "DropdownMenuItem",
        "Zap",
        "CheckCircle",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/support/TicketDetailView.tsx",
      "name": "TicketDetailView",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/card",
        "@/components/ui/dropdown-menu",
        "@/components/ui/progress",
        "@/components/ui/separator",
        "@/components/ui/input",
        "@/components/ui/label"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TicketDetail",
        "CannedResponse",
        "File",
        "RealtimeChannel",
        "HTMLDivElement",
        "HTMLInputElement",
        "Card",
        "CardContent",
        "XCircle",
        "Badge",
        "Heart",
        "Button",
        "EyeOff",
        "Eye",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuLabel",
        "DropdownMenuSeparator",
        "DropdownMenuItem",
        "Zap",
        "CheckCircle",
        "TrendingUp",
        "CardHeader",
        "User",
        "CardTitle",
        "MessageSquare",
        "Shield",
        "FileText",
        "Download",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Label",
        "Textarea",
        "Paperclip",
        "Send",
        "Separator",
        "Mail",
        "Phone",
        "Building",
        "Calendar",
        "Clock",
        "Progress",
        "AlertTriangle",
        "Tag"
      ]
    },
    {
      "path": "src/components/support/TicketQueue.tsx",
      "name": "TicketQueue",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/dialog",
        "@/components/ui/alert",
        "@/components/ui/scroll-area",
        "@/components/ui/separator"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SupportTicket",
        "QueueFilters",
        "Card",
        "CardHeader",
        "Badge",
        "Heart",
        "AlertTriangle",
        "Zap",
        "CardTitle",
        "User",
        "Mail",
        "Clock",
        "Calendar",
        "Timer",
        "MessageSquare",
        "CardContent",
        "UserCheck",
        "Button",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Alert",
        "AlertDescription",
        "RefreshCw",
        "Volume2",
        "VolumeX",
        "Dialog",
        "DialogTrigger",
        "Settings",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Input",
        "Search",
        "SortAsc",
        "SortDesc",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Separator",
        "ScrollArea"
      ]
    },
    {
      "path": "src/components/support/mobile/AttachmentUploader.tsx",
      "name": "AttachmentUploader",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "AttachmentUploader"
      ],
      "usedComponents": [
        "AttachmentUploaderProps",
        "FilePreview",
        "HTMLInputElement",
        "ImageIcon",
        "Video",
        "FileText",
        "Card",
        "CardContent",
        "Paperclip",
        "Badge",
        "Upload",
        "Button",
        "Camera",
        "X",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/support/mobile/NotificationManager.tsx",
      "name": "NotificationManager",
      "imports": [],
      "exports": [
        "NotificationManager"
      ],
      "usedComponents": [
        "NotificationPermissionState",
        "NotificationSettings",
        "AlertTriangle",
        "Bell",
        "Phone",
        "BellOff"
      ]
    },
    {
      "path": "src/components/support/mobile/OfflineQueueManager.tsx",
      "name": "OfflineQueueManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "OfflineQueueManager",
        "useOfflineQueue"
      ],
      "usedComponents": [
        "OfflineQueueManagerProps",
        "QueuedAction",
        "AlertCircle",
        "MessageSquare",
        "RefreshCw",
        "Upload",
        "Clock",
        "Wifi",
        "WifiOff",
        "Badge",
        "Button",
        "X",
        "Progress",
        "Card",
        "CardContent",
        "Zap",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/support/mobile/QuickActionsPanel.tsx",
      "name": "QuickActionsPanel",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/alert"
      ],
      "exports": [
        "QuickActionsPanel"
      ],
      "usedComponents": [
        "QuickActionsPanelProps",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "X",
        "CardContent",
        "AlertTriangle",
        "Phone",
        "Zap",
        "ArrowUp",
        "Star",
        "Share2",
        "Alert",
        "AlertDescription",
        "Textarea",
        "Timer",
        "ThumbsUp"
      ]
    },
    {
      "path": "src/components/support/mobile/SupportDashboard.tsx",
      "name": "SupportDashboard",
      "imports": [
        "@/hooks/useRealtimeTickets",
        "./NotificationManager",
        "./TicketListView",
        "./TicketSubmissionForm",
        "./OfflineQueueManager"
      ],
      "exports": [
        "SupportDashboard"
      ],
      "usedComponents": [
        "Wifi",
        "WifiOff",
        "Bell",
        "NotificationManager",
        "Search",
        "TicketListView",
        "TicketSubmissionForm",
        "OfflineQueueManager",
        "Filter",
        "Plus"
      ]
    },
    {
      "path": "src/components/support/mobile/TicketDetailView.tsx",
      "name": "TicketDetailView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/textarea",
        "@/components/ui/scroll-area",
        "@/components/ui/skeleton",
        "@/components/ui/alert",
        "./QuickActionsPanel",
        "./VoiceNoteRecorder"
      ],
      "exports": [
        "TicketDetailView"
      ],
      "usedComponents": [
        "TicketDetailViewProps",
        "SupportTicket",
        "Blob",
        "HTMLDivElement",
        "Skeleton",
        "Card",
        "CardHeader",
        "CardContent",
        "Button",
        "ArrowLeft",
        "RefreshCw",
        "MoreVertical",
        "CardTitle",
        "Zap",
        "StatusIcon",
        "Badge",
        "MapPin",
        "Calendar",
        "Paperclip",
        "Download",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "MessageSquare",
        "ScrollArea",
        "User",
        "Eye",
        "Textarea",
        "VoiceNoteRecorder",
        "Timer",
        "Send",
        "QuickActionsPanel"
      ]
    },
    {
      "path": "src/components/support/mobile/TicketListView.tsx",
      "name": "TicketListView",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/skeleton"
      ],
      "exports": [
        "TicketListView"
      ],
      "usedComponents": [
        "TicketListViewProps",
        "SupportTicket",
        "Skeleton",
        "Card",
        "CardContent",
        "Button",
        "RefreshCw",
        "Plus",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "ArrowUpDown",
        "MessageSquare",
        "Badge",
        "Zap",
        "ChevronRight",
        "MapPin",
        "Calendar",
        "StatusIcon"
      ]
    },
    {
      "path": "src/components/support/mobile/TicketSubmissionForm.tsx",
      "name": "TicketSubmissionForm",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/input",
        "@/components/ui/alert",
        "@/components/ui/badge",
        "./VoiceNoteRecorder",
        "./AttachmentUploader"
      ],
      "exports": [
        "TicketSubmissionForm"
      ],
      "usedComponents": [
        "TicketSubmissionFormProps",
        "File",
        "Blob",
        "GeolocationCoordinates",
        "TicketFormData",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "Badge",
        "CardContent",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Textarea",
        "Button",
        "MapPin",
        "VoiceNoteRecorder",
        "AttachmentUploader",
        "Alert",
        "AlertDescription",
        "Clock",
        "Send"
      ]
    },
    {
      "path": "src/components/support/mobile/VoiceNoteRecorder.tsx",
      "name": "VoiceNoteRecorder",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/progress"
      ],
      "exports": [
        "VoiceNoteRecorder"
      ],
      "usedComponents": [
        "VoiceNoteRecorderProps",
        "Blob",
        "MediaRecorder",
        "HTMLAudioElement",
        "MediaStream",
        "NodeJS",
        "Card",
        "CardContent",
        "MicOff",
        "Button",
        "Volume2",
        "Progress",
        "Square",
        "Mic",
        "Pause",
        "Play",
        "Trash2"
      ]
    },
    {
      "path": "src/components/sync/EnhancedSyncStatus.tsx",
      "name": "EnhancedSyncStatus",
      "imports": [
        "@/lib/utils",
        "@/lib/sync/comprehensive-sync-manager",
        "@/lib/sync/sync-status-monitor"
      ],
      "exports": [
        "EnhancedSyncStatus"
      ],
      "usedComponents": [
        "SyncManagerStatus",
        "ConflictAlert",
        "StatusIcon",
        "Clock",
        "AlertCircle",
        "AlertTriangle",
        "Activity",
        "Gauge",
        "Calendar",
        "RefreshCw",
        "Wifi",
        "WifiOff",
        "EyeOff",
        "Eye",
        "X"
      ]
    },
    {
      "path": "src/components/sync/SyncSystemDemo.tsx",
      "name": "SyncSystemDemo",
      "imports": [
        "@/hooks/useComprehensiveSync",
        "./EnhancedSyncStatus"
      ],
      "exports": [
        "SyncSystemDemo"
      ],
      "usedComponents": [
        "DemoScenario",
        "Settings",
        "IconComponent",
        "activeScenario",
        "Users",
        "Calendar",
        "Clock",
        "Activity",
        "EnhancedSyncStatus",
        "Zap",
        "Play",
        "Pause",
        "RefreshCw",
        "AlertTriangle",
        "X"
      ]
    },
    {
      "path": "src/components/tags/TagAnalytics.tsx",
      "name": "TagAnalytics",
      "imports": [
        "@/components/ui/card-untitled",
        "@/components/ui/button-untitled",
        "@/components/ui/badge",
        "./TagManager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TagAnalytics",
        "TagCategory",
        "TagColor",
        "Button",
        "Download",
        "Card",
        "TagIcon",
        "Users",
        "TrendingUp",
        "TrendingDown",
        "Badge",
        "ChevronUp",
        "ChevronDown",
        "BarChart3",
        "Hash"
      ]
    },
    {
      "path": "src/components/tags/TagFilter.tsx",
      "name": "TagFilter",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "./TagManager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Tag",
        "TagCategory",
        "HTMLDivElement",
        "TagColor",
        "Button",
        "Filter",
        "Badge",
        "ChevronDown",
        "X",
        "TagIcon",
        "Search",
        "Input",
        "Check"
      ]
    },
    {
      "path": "src/components/tags/TagInput.tsx",
      "name": "TagInput",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/input-untitled",
        "@/components/ui/button-untitled",
        "./TagManager"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Tag",
        "HTMLInputElement",
        "HTMLDivElement",
        "TagColor",
        "Badge",
        "X",
        "Search",
        "Sparkles"
      ]
    },
    {
      "path": "src/components/tags/TagManager.tsx",
      "name": "TagManager",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/badge",
        "@/components/ui/card-untitled"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Tag",
        "TagCategory",
        "TagIcon",
        "Button",
        "X",
        "Search",
        "Input",
        "Plus",
        "Card",
        "Badge",
        "Users",
        "Edit",
        "Trash2"
      ]
    },
    {
      "path": "src/components/tasks/AutomatedAssignmentManager.tsx",
      "name": "AutomatedAssignmentManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AssignmentAnalytics",
        "Card",
        "CardHeader",
        "CardTitle",
        "Bot",
        "CardContent",
        "Progress",
        "Target",
        "Brain",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Loader2",
        "Play",
        "RefreshCw",
        "Badge",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "Zap",
        "Settings"
      ]
    },
    {
      "path": "src/components/tasks/BulkTaskOperations.tsx",
      "name": "BulkTaskOperations",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/checkbox",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/dialog",
        "@/components/ui/alert-dialog",
        "@/components/ui/dropdown-menu",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FilterOptions",
        "BulkOperation",
        "Badge",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Button",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "CheckCircle",
        "Play",
        "DropdownMenuSeparator",
        "Flag",
        "Copy",
        "Archive",
        "Dialog",
        "DialogTrigger",
        "Edit",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Loader2",
        "AlertDialog",
        "AlertDialogTrigger",
        "Trash2",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Search",
        "RefreshCw",
        "Download",
        "Upload",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "Checkbox",
        "TableBody",
        "TableCell",
        "Users",
        "Clock",
        "MoreHorizontal"
      ]
    },
    {
      "path": "src/components/tasks/CalendarIntegrationManager.tsx",
      "name": "CalendarIntegrationManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/dialog",
        "@/components/ui/alert-dialog",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CalendarSync",
        "CalendarEvent",
        "CalendarHealth",
        "Badge",
        "Button",
        "RefreshCw",
        "AlertDialog",
        "AlertDialogTrigger",
        "Zap",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "Target",
        "Link",
        "CalendarDays",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Unlink",
        "AlertTriangle",
        "ChevronRight",
        "Dialog",
        "DialogTrigger",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Loader2",
        "CheckCircle",
        "Calendar",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "ExternalLink",
        "Switch"
      ]
    },
    {
      "path": "src/components/tasks/ChecklistGenerator.tsx",
      "name": "ChecklistGenerator",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/checkbox",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ChecklistTemplate",
        "ChecklistItem",
        "Set",
        "HTMLInputElement",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Label",
        "Textarea",
        "Progress",
        "DragDropContext",
        "Droppable",
        "ChevronDown",
        "ChevronRight",
        "Draggable",
        "Checkbox",
        "Badge",
        "Trash2",
        "Sparkles",
        "FileText",
        "Calendar",
        "Hash",
        "Upload",
        "Loader2",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "CheckSquare"
      ]
    },
    {
      "path": "src/components/tasks/PhotoEvidenceUpload.tsx",
      "name": "PhotoEvidenceUpload",
      "imports": [
        "@/hooks/use-toast"
      ],
      "exports": [
        "default",
        "PhotoEvidenceUpload"
      ],
      "usedComponents": [
        "PhotoFile",
        "HTMLInputElement",
        "CheckCircle",
        "AlertCircle",
        "FileImage",
        "X",
        "ZoomIn",
        "Trash2",
        "PhotoPreview",
        "Camera",
        "Upload"
      ]
    },
    {
      "path": "src/components/tasks/ProgressAnalyticsDashboard.tsx",
      "name": "ProgressAnalyticsDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingProgressAnalytics",
        "TeamPerformanceMetrics",
        "TaskTrendData",
        "Loader2",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "RefreshCw",
        "Download",
        "Card",
        "CardHeader",
        "CardTitle",
        "BarChart3",
        "CardContent",
        "Progress",
        "AlertTriangle",
        "Badge",
        "Calendar",
        "AlertCircle",
        "Activity",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Bar",
        "PieChart",
        "Pie",
        "Cell",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "CardDescription",
        "AreaChart",
        "Area",
        "LineChart",
        "Line",
        "Clock",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/tasks/PushNotificationManager.tsx",
      "name": "PushNotificationManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/dialog",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "NotificationPreferences",
        "SubscriptionStatus",
        "NotificationAnalytics",
        "NotificationPermission",
        "Globe",
        "Smartphone",
        "Bell",
        "Loader2",
        "Badge",
        "CheckCircle",
        "BellOff",
        "Button",
        "Dialog",
        "DialogTrigger",
        "TestTube",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Send",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Activity",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Switch",
        "AlertTriangle",
        "Users",
        "Settings",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "Target",
        "XCircle",
        "Clock"
      ]
    },
    {
      "path": "src/components/tasks/ReminderSystemManager.tsx",
      "name": "ReminderSystemManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/switch",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ReminderStats",
        "ReminderRule",
        "Card",
        "CardHeader",
        "CardTitle",
        "Bell",
        "CardContent",
        "CheckCircle",
        "Progress",
        "AlertTriangle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Button",
        "Loader2",
        "Play",
        "RefreshCw",
        "TabsContent",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "CardDescription",
        "Badge",
        "Switch",
        "Clock",
        "Timer",
        "IconComponent",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Zap"
      ]
    },
    {
      "path": "src/components/tasks/StatusUpdateForm.tsx",
      "name": "StatusUpdateForm",
      "imports": [],
      "exports": [
        "default",
        "StatusUpdateForm"
      ],
      "usedComponents": [
        "File",
        "HTMLInputElement",
        "StatusUpdateFormData",
        "Icon",
        "Camera",
        "Upload",
        "X",
        "Loader2",
        "selectedStatusOption"
      ]
    },
    {
      "path": "src/components/tasks/TaskComments.tsx",
      "name": "TaskComments",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/avatar",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Comment",
        "TeamMember",
        "HTMLInputElement",
        "File",
        "Attachment",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "Pin",
        "Check",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Button",
        "MoreVertical",
        "DropdownMenuContent",
        "DropdownMenuItem",
        "Edit2",
        "Reply",
        "Textarea",
        "Paperclip",
        "Send",
        "X"
      ]
    },
    {
      "path": "src/components/tasks/TaskCreator.tsx",
      "name": "TaskCreator",
      "imports": [
        "@/types/workflow",
        "@/lib/security/input-validation",
        "@/lib/validation/schemas"
      ],
      "exports": [
        "TaskCreator"
      ],
      "usedComponents": [
        "TaskCreatorProps",
        "Partial",
        "TaskCreateInput",
        "TaskFormValidation",
        "AlertTriangle",
        "Plus",
        "X",
        "Loader2"
      ]
    },
    {
      "path": "src/components/tasks/TaskDependencyManager.tsx",
      "name": "TaskDependencyManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/progress",
        "@/components/ui/select",
        "@/components/ui/table",
        "@/components/ui/dialog",
        "@/components/ui/alert-dialog",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CriticalPath",
        "DependencySuggestion",
        "DependencyValidation",
        "Card",
        "CardHeader",
        "CardTitle",
        "Route",
        "CardContent",
        "AlertTriangle",
        "Badge",
        "Target",
        "Progress",
        "Clock",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "AlertCircle",
        "Lightbulb",
        "Loader2",
        "RefreshCw",
        "TabsContent",
        "CheckCircle",
        "CardDescription",
        "Network",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell"
      ]
    },
    {
      "path": "src/components/tasks/TaskProgressIndicator.tsx",
      "name": "TaskProgressIndicator",
      "imports": [],
      "exports": [
        "default",
        "TaskProgressIndicator",
        "TaskProgressPresets",
        "useTaskProgress",
        "ProgressAnimations"
      ],
      "usedComponents": [
        "StatusIcon",
        "CheckCircle",
        "TaskProgressIndicatorProps",
        "TaskProgressIndicator"
      ]
    },
    {
      "path": "src/components/tasks/TaskStatusCard.tsx",
      "name": "TaskStatusCard",
      "imports": [
        "./TaskProgressIndicator"
      ],
      "exports": [
        "default",
        "TaskStatusCard"
      ],
      "usedComponents": [
        "StatusIcon",
        "TaskProgressIndicator",
        "Camera",
        "User",
        "Calendar",
        "CheckCircle",
        "Clock"
      ]
    },
    {
      "path": "src/components/tasks/TaskTemplateLibrary.tsx",
      "name": "TaskTemplateLibrary",
      "imports": [
        "@/types/workflow",
        "@/lib/security/input-validation"
      ],
      "exports": [
        "TaskTemplateLibrary"
      ],
      "usedComponents": [
        "TaskCategory",
        "TaskTemplateLibraryProps",
        "TaskTemplate",
        "Record",
        "HTMLDivElement",
        "HTMLInputElement",
        "HTMLElement",
        "TaskTemplateItem",
        "X",
        "Search",
        "Star",
        "Trash2",
        "Plus",
        "TrendingUp",
        "CheckCircle",
        "Clock",
        "Play",
        "Edit3"
      ]
    },
    {
      "path": "src/components/tasks/TaskTemplatesManager.tsx",
      "name": "TaskTemplatesManager",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/dialog",
        "@/components/ui/table",
        "@/components/ui/use-toast",
        "@/lib/services/task-automation-service"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TaskTemplate",
        "TemplateTask",
        "WeddingTaskTemplate",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Plus",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Textarea",
        "Loader2",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Heart",
        "FileText",
        "TabsContent",
        "Badge",
        "Card",
        "CardHeader",
        "IconComponent",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "CheckSquare",
        "Clock",
        "Calendar",
        "Zap",
        "ArrowRight",
        "Copy",
        "Trash2",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell"
      ]
    },
    {
      "path": "src/components/tasks/TaskTimingValidator.tsx",
      "name": "TaskTimingValidator",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [
        "TaskTimingValidator"
      ],
      "usedComponents": [
        "TaskCategory",
        "TaskTimingValidatorProps",
        "TimingConflict",
        "ConflictResolution",
        "Date",
        "NodeJS",
        "Timer",
        "Clock",
        "XCircle",
        "AlertTriangle",
        "CheckCircle",
        "Move3D",
        "Split",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/tasks/TaskTrackingDashboard.tsx",
      "name": "TaskTrackingDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/lib/utils"
      ],
      "exports": [
        "TaskTrackingDashboard"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "TrendingUp",
        "CheckCircle2",
        "Clock",
        "AlertTriangle",
        "Calendar",
        "Users",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "Filter",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Plus",
        "TaskTrackingDashboardProps",
        "TaskStatus",
        "TaskPriority",
        "TaskStatsOverview",
        "TaskFiltersAndSearch",
        "StatusIcon",
        "Badge",
        "TaskQuickCard"
      ]
    },
    {
      "path": "src/components/tasks/TimelineTemplateBuilder.tsx",
      "name": "TimelineTemplateBuilder",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimelineTemplate",
        "Milestone",
        "Button",
        "Plus",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Calendar",
        "Target",
        "CheckCircle2",
        "Download",
        "Loader2",
        "Save",
        "DragDropContext",
        "Droppable",
        "Draggable",
        "ChevronDown",
        "ChevronRight",
        "Input",
        "Badge",
        "Trash2",
        "Minus",
        "ScrollArea",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem"
      ]
    },
    {
      "path": "src/components/tasks/categories/CategoryFilter.tsx",
      "name": "CategoryFilter",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/popover",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/lib/utils",
        "@/lib/services/taskCategories"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TaskCategory",
        "FilterState",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Popover",
        "PopoverTrigger",
        "Button",
        "Filter",
        "Badge",
        "PopoverContent",
        "X",
        "Layers",
        "Checkbox",
        "Calendar",
        "Check",
        "Flag"
      ]
    },
    {
      "path": "src/components/tasks/categories/CategoryHelperAssignment.tsx",
      "name": "CategoryHelperAssignment",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/checkbox",
        "@/lib/supabase",
        "@/lib/utils",
        "@/lib/services/taskCategories"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Helper",
        "CategoryWorkload",
        "CategoryAssignment",
        "Card",
        "CardContent",
        "Users",
        "Check",
        "AlertCircle",
        "CardHeader",
        "CardTitle",
        "Button",
        "UserPlus",
        "Progress",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "X",
        "Badge",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Checkbox",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/tasks/categories/CategoryPreferences.tsx",
      "name": "CategoryPreferences",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/badge",
        "@/components/ui/slider",
        "@/lib/services/taskCategories",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TaskCategory",
        "Card",
        "CardHeader",
        "CardTitle",
        "Settings",
        "CardDescription",
        "Button",
        "Save",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardContent",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Copy",
        "Badge",
        "Trash2",
        "Label",
        "Switch",
        "Slider",
        "Input"
      ]
    },
    {
      "path": "src/components/tasks/categories/TaskCategoryManager.tsx",
      "name": "TaskCategoryManager",
      "imports": [
        "@/lib/supabase",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Users",
        "Clock",
        "Badge",
        "Button",
        "Plus",
        "DraggableTask",
        "TaskCategory",
        "WorkflowTask",
        "DndProvider",
        "Card",
        "CardHeader",
        "MapPin",
        "Calendar",
        "CardContent",
        "Search",
        "Input",
        "CategoryColumn"
      ]
    },
    {
      "path": "src/components/tasks/categories/TaskTimeline.tsx",
      "name": "TaskTimeline",
      "imports": [
        "@/lib/supabase",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "TimelineTask",
        "TimelineConfig",
        "DndProvider",
        "Card",
        "Calendar",
        "Button",
        "ZoomOut",
        "ZoomIn",
        "Users",
        "Download",
        "CardContent",
        "TimelineGrid",
        "TimelineTaskBlock",
        "Clock",
        "Badge",
        "MapPin"
      ]
    },
    {
      "path": "src/components/tasks/mobile/TaskTemplateGallery.tsx",
      "name": "TaskTemplateGallery",
      "imports": [
        "@/types/tasks"
      ],
      "exports": [
        "TaskTemplateGallery"
      ],
      "usedComponents": [
        "TaskTemplateGalleryProps",
        "TaskCategory"
      ]
    },
    {
      "path": "src/components/tasks/mobile/TouchTaskCreationForm.tsx",
      "name": "TouchTaskCreationForm",
      "imports": [
        "@/components/touch",
        "@/types/tasks",
        "@/lib/validations/wedding-forms"
      ],
      "exports": [
        "TouchTaskCreationForm"
      ],
      "usedComponents": [
        "TouchTaskCreationFormProps",
        "TaskInput",
        "TouchInput",
        "TouchTextarea",
        "TouchSelect"
      ]
    },
    {
      "path": "src/components/team/TeamManager.tsx",
      "name": "TeamManager",
      "imports": [
        "@/lib/auth/rbac",
        "@/lib/services/teamService",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/separator",
        "@/components/ui/tabs",
        "@/components/ui/alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Team",
        "TeamMember",
        "TeamInvitation",
        "TeamStats",
        "TeamFormData",
        "Card",
        "Alert",
        "XMarkIcon",
        "Button",
        "PlusIcon",
        "SettingsIcon",
        "Select",
        "UserGroupIcon",
        "CheckIcon",
        "ClockIcon",
        "ChartBarIcon",
        "Tabs",
        "Badge",
        "MailIcon",
        "Avatar",
        "TrashIcon",
        "Dialog",
        "Input"
      ]
    },
    {
      "path": "src/components/templates/BrandingCustomizer.tsx",
      "name": "BrandingCustomizer",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BrandingConfig",
        "Button",
        "RotateCcw",
        "Eye",
        "Save",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Palette",
        "Type",
        "Image",
        "Settings",
        "Wand2",
        "TabsContent",
        "Card",
        "RefreshCw",
        "Sparkles",
        "Input",
        "Check",
        "Copy",
        "Trash2",
        "Upload",
        "IconComponent",
        "Monitor",
        "Tablet",
        "Smartphone",
        "Moon",
        "Sun"
      ]
    },
    {
      "path": "src/components/templates/BrandingCustomizerLazy.tsx",
      "name": "BrandingCustomizerLazy",
      "imports": [
        "@/components/ui/skeleton"
      ],
      "exports": [
        "default",
        "BrandingCustomizerLazy"
      ],
      "usedComponents": [
        "Skeleton",
        "Suspense",
        "BrandingCustomizerDynamic"
      ]
    },
    {
      "path": "src/components/templates/BrandingSync.tsx",
      "name": "BrandingSync",
      "imports": [
        "@/lib/supabase/client",
        "@/hooks/useSupabaseUser"
      ],
      "exports": [
        "default",
        "useBrandingSync",
        "BrandingSyncProvider",
        "BrandingSyncStatus"
      ],
      "usedComponents": [
        "BrandConfig",
        "Pick",
        "BrandTheme",
        "BrandAsset",
        "Blob",
        "BrandingSyncContextValue",
        "BrandingSyncState",
        "Set",
        "NodeJS",
        "BrandingSyncContext"
      ]
    },
    {
      "path": "src/components/templates/IntegrationTestExample.tsx",
      "name": "IntegrationTestExample",
      "imports": [
        "./TemplateIntegration",
        "./BrandingSync",
        "./WidgetOrchestrator",
        "@/components/ui/button-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Button",
        "Badge",
        "Record",
        "Loader2",
        "CheckCircle",
        "AlertTriangle",
        "Zap",
        "RefreshCw",
        "Card",
        "Settings",
        "TemplateIntegrationStatus",
        "Palette",
        "BrandingSyncStatus",
        "Grid3x3",
        "WidgetOrchestratorStatus",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "WidgetWrapper",
        "TemplateIntegrationProvider",
        "BrandingSyncProvider",
        "WidgetOrchestratorProvider",
        "IntegrationTestDashboard"
      ]
    },
    {
      "path": "src/components/templates/ResponsivePreview.tsx",
      "name": "ResponsivePreview",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/slider",
        "@/components/ui/tabs",
        "@/components/ui/select",
        "@/components/ui/switch",
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "ResponsivePreview"
      ],
      "usedComponents": [
        "DevicePreset",
        "HTMLDivElement",
        "HTMLIFrameElement",
        "Select",
        "SelectTrigger",
        "selectedDevice",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge",
        "Button",
        "RotateCw",
        "ZoomOut",
        "Slider",
        "ZoomIn",
        "Switch",
        "Refresh",
        "Share2",
        "Download",
        "Minimize2",
        "Maximize2",
        "Clock",
        "Signal",
        "Wifi",
        "Battery"
      ]
    },
    {
      "path": "src/components/templates/TemplateGallery.tsx",
      "name": "TemplateGallery",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/lib/utils"
      ],
      "exports": [
        "TemplateGallery"
      ],
      "usedComponents": [
        "Set",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "Filter",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Button",
        "Heart",
        "CardContent",
        "Eye",
        "Copy"
      ]
    },
    {
      "path": "src/components/templates/TemplateIntegration.tsx",
      "name": "TemplateIntegration",
      "imports": [
        "@/lib/supabase/client",
        "@/hooks/useSupabaseUser",
        "@/lib/services/dashboardTemplateService"
      ],
      "exports": [
        "default",
        "useTemplateIntegration",
        "TemplateIntegrationProvider",
        "TemplateIntegrationStatus"
      ],
      "usedComponents": [
        "DashboardTemplate",
        "PendingOperation",
        "TemplateIntegrationContextValue",
        "TemplateIntegrationState",
        "NodeJS",
        "Set",
        "TemplateIntegrationContext"
      ]
    },
    {
      "path": "src/components/templates/TemplateManagementUI.tsx",
      "name": "TemplateManagementUI",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/dialog",
        "@/components/ui/label",
        "@/components/ui/separator",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "TemplateManagementUI"
      ],
      "usedComponents": [
        "TemplateData",
        "CheckCircle",
        "Edit",
        "Eye",
        "Archive",
        "AlertCircle",
        "Button",
        "Upload",
        "Plus",
        "Search",
        "Input",
        "Filter",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge",
        "Star",
        "Users",
        "TemplateDetails",
        "FolderOpen",
        "Save",
        "Share2",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "TemplateOverview",
        "VersionHistory",
        "CollaboratorManagement",
        "TemplateAnalytics",
        "TemplateSettings",
        "Info",
        "Label",
        "Separator",
        "Tag",
        "Clock",
        "GitBranch",
        "MoreHorizontal",
        "Settings"
      ]
    },
    {
      "path": "src/components/templates/TemplateModal.tsx",
      "name": "TemplateModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/lib/toast-helper",
        "@/lib/utils"
      ],
      "exports": [
        "TemplateModal"
      ],
      "usedComponents": [
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "CategoryIcon",
        "DialogTitle",
        "DialogDescription",
        "Badge",
        "Star",
        "Card",
        "CardContent",
        "Users",
        "Calendar",
        "FileText",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "ScrollArea",
        "Button",
        "Eye",
        "Download",
        "Copy"
      ]
    },
    {
      "path": "src/components/templates/TemplatePreviewSystem.tsx",
      "name": "TemplatePreviewSystem",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/tabs",
        "@/components/ui/separator"
      ],
      "exports": [
        "TemplatePreviewSystem"
      ],
      "usedComponents": [
        "PreviewOptions",
        "HTMLDivElement",
        "K",
        "Badge",
        "Separator",
        "Button",
        "Monitor",
        "Tablet",
        "Smartphone",
        "Sun",
        "Moon",
        "RefreshCw",
        "Minimize2",
        "Maximize2",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Eye",
        "Mail",
        "Printer",
        "Zap",
        "TabsContent",
        "LivePreview",
        "EmailClientPreview",
        "PrintPreview",
        "CodePreview",
        "Download",
        "Share2",
        "TemplateComponentRenderer"
      ]
    },
    {
      "path": "src/components/templates/TouchDragDrop.tsx",
      "name": "TouchDragDrop",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default",
        "TouchDragDrop"
      ],
      "usedComponents": [
        "DragState",
        "Set",
        "HTMLDivElement",
        "Lock",
        "GripVertical",
        "Settings",
        "Copy",
        "Trash2",
        "dragState"
      ]
    },
    {
      "path": "src/components/templates/WedMeIntegration.tsx",
      "name": "WedMeIntegration",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/progress"
      ],
      "exports": [
        "WedMeCreatorDashboard"
      ],
      "usedComponents": [
        "CreatorDashboardData",
        "Button",
        "Eye",
        "Zap",
        "MetricCard",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "OverviewTab",
        "TemplatesTab",
        "AnalyticsTab",
        "EarningsTab",
        "Card",
        "CardContent",
        "Icon",
        "CardHeader",
        "CardTitle",
        "Activity",
        "DollarSign",
        "Star",
        "Download",
        "Badge",
        "Target",
        "Progress",
        "Award",
        "BarChart3",
        "Share2",
        "TrendingUp",
        "Calendar"
      ]
    },
    {
      "path": "src/components/templates/WeddingComponentLibrary.tsx",
      "name": "WeddingComponentLibrary",
      "imports": [],
      "exports": [
        "WEDDING_COMPONENT_LIBRARY",
        "COMPONENT_CATEGORIES",
        "WEDDING_THEMES",
        "getComponentsByCategory",
        "getComponentById",
        "getComponentsByTheme",
        "getComponentsByComplexity",
        "getTotalSetupTime",
        "validateTemplate"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/templates/WidgetLibrary.tsx",
      "name": "WidgetLibrary",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/input-untitled",
        "@/components/ui/card-untitled",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Badge",
        "Input",
        "Search",
        "Grid3x3",
        "List",
        "Switch",
        "Card",
        "IconComponent",
        "Star",
        "Button",
        "Eye",
        "Plus",
        "Settings",
        "Shield"
      ]
    },
    {
      "path": "src/components/templates/WidgetOrchestrator.tsx",
      "name": "WidgetOrchestrator",
      "imports": [
        "@/lib/supabase/client",
        "@/hooks/useSupabaseUser"
      ],
      "exports": [
        "default",
        "useWidgetOrchestrator",
        "WidgetOrchestratorProvider",
        "WidgetOrchestratorStatus",
        "WidgetWrapper"
      ],
      "usedComponents": [
        "WidgetProps",
        "WidgetInstance",
        "Widget",
        "WidgetState",
        "WidgetCommunication",
        "WidgetEvent",
        "WidgetError",
        "WidgetOrchestratorAPI",
        "WidgetOrchestratorState",
        "Map",
        "WidgetOrchestratorContext",
        "WidgetComponent"
      ]
    },
    {
      "path": "src/components/testing/MockServiceStatus.tsx",
      "name": "MockServiceStatus",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/scroll-area",
        "@/components/ui/separator",
        "@/components/ui/alert",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MockConfiguration",
        "MockServiceStatusProps",
        "Partial",
        "ResponseTemplate",
        "Globe",
        "Database",
        "Mail",
        "MessageSquare",
        "CreditCard",
        "Cloud",
        "Settings",
        "Zap",
        "Camera",
        "CheckCircle",
        "XCircle",
        "AlertTriangle",
        "Clock",
        "Badge",
        "Button",
        "Card",
        "CardContent",
        "Wifi",
        "Activity",
        "TrendingUp",
        "CardHeader",
        "CardTitle",
        "Switch",
        "MapPin",
        "Separator",
        "RefreshCw",
        "ScrollArea",
        "WifiOff"
      ]
    },
    {
      "path": "src/components/testing/TestDataFactoryManager.tsx",
      "name": "TestDataFactoryManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FactoryConfiguration",
        "DataFactory",
        "TestDataFactoryManagerProps",
        "DataCategory",
        "Partial",
        "Camera",
        "Heart",
        "Calendar",
        "Users",
        "MapPin",
        "Gift",
        "Music",
        "Database",
        "Flower",
        "ChefHat",
        "Car",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Button",
        "Card",
        "CardContent",
        "CheckCircle",
        "PlayCircle",
        "AlertTriangle",
        "CardHeader",
        "CardTitle",
        "Switch",
        "Badge",
        "Separator",
        "Settings",
        "Download",
        "Trash2",
        "Label",
        "Input",
        "Copy",
        "Textarea"
      ]
    },
    {
      "path": "src/components/testing/TestExecutionCard.tsx",
      "name": "TestExecutionCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TestExecutionCardProps",
        "RefreshCw",
        "Pause",
        "CheckCircle",
        "XCircle",
        "Square",
        "Clock",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "Heart",
        "Button",
        "MoreHorizontal",
        "CardContent",
        "Progress",
        "Play",
        "Eye",
        "Calendar",
        "Users"
      ]
    },
    {
      "path": "src/components/testing/WorkflowStepIndicator.tsx",
      "name": "WorkflowStepIndicator",
      "imports": [
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WorkflowStepIndicatorProps",
        "RefreshCw",
        "CheckCircle",
        "XCircle",
        "AlertTriangle",
        "Pause",
        "Clock",
        "Database",
        "Zap",
        "ArrowRight",
        "Camera",
        "MapPin",
        "Flower",
        "ChefHat",
        "Music",
        "Car",
        "Gift",
        "Smartphone",
        "Globe",
        "Mail",
        "MessageSquare",
        "Users",
        "Badge",
        "Progress",
        "ArrowDown",
        "Heart"
      ]
    },
    {
      "path": "src/components/timeline/ConflictDetector.tsx",
      "name": "ConflictDetector",
      "imports": [
        "@/lib/utils",
        "@/lib/services/autoTimeCalculator"
      ],
      "exports": [
        "ConflictDetector"
      ],
      "usedComponents": [
        "TimelineEvent",
        "TimelineConflict",
        "ConflictFilter",
        "Set",
        "ConflictSeverity",
        "InlineConflictView",
        "AlertTriangle",
        "RefreshCw",
        "ConflictStatsBadge",
        "Zap",
        "ConflictFilters",
        "CheckCircle",
        "ConflictCard",
        "Filter",
        "Icon",
        "ChevronUp",
        "ChevronDown",
        "TypeIcon",
        "ConflictResolution"
      ]
    },
    {
      "path": "src/components/timeline/InteractiveTimelineBuilder.tsx",
      "name": "InteractiveTimelineBuilder",
      "imports": [
        "@/lib/utils",
        "./TimelineEventCard",
        "./TimelineRuler",
        "./TimelineConflictIndicator",
        "./TimelineEventForm",
        "./TimelineVendorPanel",
        "./TimelineRealtimeIndicator",
        "@/hooks/useTimelineRealtime",
        "@/stores/timelineStore"
      ],
      "exports": [
        "InteractiveTimelineBuilder"
      ],
      "usedComponents": [
        "WeddingTimeline",
        "TimelineEvent",
        "TimelineConflict",
        "UniqueIdentifier",
        "Undo",
        "Redo",
        "ZoomOut",
        "ZoomIn",
        "Layers",
        "Grid3x3",
        "Users",
        "Plus",
        "Share2",
        "Download",
        "AlertTriangle",
        "DndContext",
        "TimelineRuler",
        "SortableContext",
        "TimelineEventCard",
        "TimelineRealtimeIndicator",
        "MapPin",
        "DragOverlay",
        "TimelineVendorPanel",
        "TimelineEventForm"
      ]
    },
    {
      "path": "src/components/timeline/LiveEditingIndicators.tsx",
      "name": "LiveEditingIndicators",
      "imports": [
        "./TimelineCollaborationProvider"
      ],
      "exports": [
        "LiveEditingIndicators",
        "LiveActivityIndicator",
        "ConflictIndicator",
        "LiveChangesIndicator",
        "TimelineEventIndicators"
      ],
      "usedComponents": [
        "AnimatePresence",
        "EditingBadge",
        "User",
        "Zap",
        "AlertTriangle",
        "CheckCircle",
        "LiveEditingIndicators",
        "LiveActivityIndicator",
        "ConflictIndicator",
        "LiveChangesIndicator"
      ]
    },
    {
      "path": "src/components/timeline/RealtimeTimelineProvider.tsx",
      "name": "RealtimeTimelineProvider",
      "imports": [
        "../performance/RealtimeProvider",
        "../../hooks/usePerformanceOptimization",
        "../../types/timeline"
      ],
      "exports": [
        "default",
        "useRealtimeTimeline",
        "RealtimeTimelineProvider"
      ],
      "usedComponents": [
        "TimelineEvent",
        "RealtimeTimelineContextValue",
        "NodeJS",
        "Map",
        "RealtimeTimelineState",
        "RealtimeTimelineContext"
      ]
    },
    {
      "path": "src/components/timeline/TimelineCollaborationProvider.tsx",
      "name": "TimelineCollaborationProvider",
      "imports": [
        "@/hooks/useTimelineRealtime"
      ],
      "exports": [
        "useTimelineCollaboration",
        "TimelineCollaborationProvider"
      ],
      "usedComponents": [
        "RealtimeUpdate",
        "CollaborationContextType",
        "Map",
        "TimelineComment",
        "NodeJS",
        "CollaborationContext",
        "CursorOverlay",
        "CollaborationStatusBar",
        "AnimatePresence",
        "User",
        "Users",
        "Edit3"
      ]
    },
    {
      "path": "src/components/timeline/TimelineConflictResolver.tsx",
      "name": "TimelineConflictResolver",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TimelineConflictResolver"
      ],
      "usedComponents": [
        "TimelineEvent",
        "AlertTriangle",
        "Set",
        "RefreshCw",
        "Filter",
        "CheckCircle",
        "Clock",
        "MapPin",
        "Users",
        "Lightbulb"
      ]
    },
    {
      "path": "src/components/timeline/TimelineEventCard.tsx",
      "name": "TimelineEventCard",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TimelineEventCard"
      ],
      "usedComponents": [
        "CheckCircle",
        "XCircle",
        "Clock",
        "Lock",
        "AlertTriangle",
        "Cloud",
        "MapPin",
        "Users",
        "MoreVertical"
      ]
    },
    {
      "path": "src/components/timeline/TimelineEventForm.tsx",
      "name": "TimelineEventForm",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TimelineEventForm"
      ],
      "usedComponents": [
        "TimelineEvent",
        "Record",
        "X",
        "Lock",
        "Clock",
        "Cloud",
        "Trash2",
        "Save"
      ]
    },
    {
      "path": "src/components/timeline/TimelineExportDialog.tsx",
      "name": "TimelineExportDialog",
      "imports": [
        "@/lib/services/timelineExportService"
      ],
      "exports": [
        "TimelineExportDialog"
      ],
      "usedComponents": [
        "TimelineExport",
        "ExportOptions",
        "ExportProgress",
        "ExportResult",
        "K",
        "Icon",
        "CheckCircle",
        "AnimatePresence",
        "X",
        "Settings",
        "Loader2",
        "AlertCircle",
        "Info",
        "Download"
      ]
    },
    {
      "path": "src/components/timeline/TimelineRealtimeIndicator.tsx",
      "name": "TimelineRealtimeIndicator",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TimelineRealtimeIndicator"
      ],
      "usedComponents": [
        "MousePointer2",
        "Edit3"
      ]
    },
    {
      "path": "src/components/timeline/TimelineRuler.tsx",
      "name": "TimelineRuler",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TimelineRuler"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/timeline/TimelineTemplateLibrary.tsx",
      "name": "TimelineTemplateLibrary",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TimelineTemplateLibrary"
      ],
      "usedComponents": [
        "TimelineTemplate",
        "TemplateFilter",
        "TemplateCustomization",
        "X",
        "Search",
        "TemplateCard",
        "TemplatePreview",
        "TemplateDetails",
        "Clock",
        "Star",
        "Eye",
        "Download",
        "Plus"
      ]
    },
    {
      "path": "src/components/timeline/TimelineVendorPanel.tsx",
      "name": "TimelineVendorPanel",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TimelineVendorPanel"
      ],
      "usedComponents": [
        "TimelineEventVendor",
        "AlertCircle",
        "Set",
        "Record",
        "Bell",
        "Settings",
        "Search",
        "Calendar",
        "ChevronDown",
        "ChevronRight",
        "Clock",
        "MapPin"
      ]
    },
    {
      "path": "src/components/timeline/VirtualizedTimeline.tsx",
      "name": "VirtualizedTimeline",
      "imports": [
        "../performance/VirtualizedList",
        "@/hooks/usePerformanceOptimization",
        "@/hooks/useIntersectionObserver",
        "@/types/timeline"
      ],
      "exports": [
        "VirtualizedTimeline"
      ],
      "usedComponents": [
        "TimelineEvent",
        "AlertTriangle",
        "Clock",
        "MapPin",
        "EyeOff",
        "Eye",
        "Edit",
        "Trash2",
        "Users",
        "VirtualizedTimelineProps",
        "HTMLDivElement",
        "TimeSlotSeparator",
        "VirtualizedTimelineEvent",
        "Calendar",
        "VirtualizedList"
      ]
    },
    {
      "path": "src/components/timeline/__tests__/TimelineCollaborationProvider.test.tsx",
      "name": "TimelineCollaborationProvider.test",
      "imports": [
        "../TimelineCollaborationProvider"
      ],
      "exports": [],
      "usedComponents": [
        "TimelineCollaborationProvider",
        "TestComponent"
      ]
    },
    {
      "path": "src/components/timeline/__tests__/TimelineExportDialog.test.tsx",
      "name": "TimelineExportDialog.test",
      "imports": [
        "../TimelineExportDialog",
        "@/lib/services/timelineExportService"
      ],
      "exports": [
        "mockExportInstance"
      ],
      "usedComponents": [
        "TimelineExportDialog"
      ]
    },
    {
      "path": "src/components/touch/PinchZoomImage.tsx",
      "name": "PinchZoomImage",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "PinchZoomImage"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLImageElement",
        "ZoomOut",
        "ZoomIn",
        "RotateCw",
        "X"
      ]
    },
    {
      "path": "src/components/touch/PullToRefresh.tsx",
      "name": "PullToRefresh",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "PullToRefresh"
      ],
      "usedComponents": [
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/touch/SwipeNavigation.tsx",
      "name": "SwipeNavigation",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "SwipeNavigation",
        "WeddingSwipeNavigation",
        "TouchCarousel"
      ],
      "usedComponents": [
        "SwipeNavigationProps",
        "HTMLDivElement",
        "SwipeNavigation"
      ]
    },
    {
      "path": "src/components/touch/SwipeableNav.tsx",
      "name": "SwipeableNav",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "SwipeableNav"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "ChevronLeft",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/touch/ThumbNavigationBar.tsx",
      "name": "ThumbNavigationBar",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "ThumbNavigationBar",
        "useThumbNavigation"
      ],
      "usedComponents": [
        "ThumbNavigationBarProps",
        "Home",
        "Camera",
        "Calendar",
        "Users",
        "MessageCircle",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/touch/TouchButton.tsx",
      "name": "TouchButton",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TouchButton"
      ],
      "usedComponents": [
        "HTMLButtonElement"
      ]
    },
    {
      "path": "src/components/touch/TouchDrawer.tsx",
      "name": "TouchDrawer",
      "imports": [
        "@/lib/utils",
        "@/hooks/useHapticFeedback"
      ],
      "exports": [
        "TouchDrawer",
        "PhotoDrawer",
        "ClientContactDrawer",
        "ScheduleDrawer",
        "EmergencyDrawer",
        "useDrawerState"
      ],
      "usedComponents": [
        "TouchDrawerProps",
        "HTMLDivElement",
        "TouchDrawer"
      ]
    },
    {
      "path": "src/components/touch/TouchGestureHandler.tsx",
      "name": "TouchGestureHandler",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TouchGestureHandler",
        "PhotoGestureHandler",
        "ScheduleGestureHandler"
      ],
      "usedComponents": [
        "TouchGestureHandlerProps",
        "HTMLDivElement",
        "TouchGestureHandler"
      ]
    },
    {
      "path": "src/components/touch/TouchInput.tsx",
      "name": "TouchInput",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TouchInput",
        "TouchTextarea",
        "TouchSelect"
      ],
      "usedComponents": [
        "HTMLInputElement",
        "HTMLTextAreaElement",
        "HTMLSelectElement"
      ]
    },
    {
      "path": "src/components/touch/TouchOptimizedButton.tsx",
      "name": "TouchOptimizedButton",
      "imports": [
        "@/lib/utils",
        "@/hooks/useHapticFeedback"
      ],
      "exports": [
        "TouchOptimizedButton",
        "PhotoCaptureButton",
        "ClientContactButton",
        "ScheduleActionButton",
        "EmergencyButton"
      ],
      "usedComponents": [
        "HTMLButtonElement",
        "TouchOptimizedButtonProps",
        "TouchOptimizedButton"
      ]
    },
    {
      "path": "src/components/touch/TouchOptimizedCalendar.tsx",
      "name": "TouchOptimizedCalendar",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/lib/utils",
        "@/types/supplier"
      ],
      "exports": [
        "TouchOptimizedCalendar"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Card",
        "Button",
        "ChevronLeft",
        "ChevronRight",
        "SelectedDateEvents",
        "Clock",
        "Badge"
      ]
    },
    {
      "path": "src/components/touch/TouchTimeline.tsx",
      "name": "TouchTimeline",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TouchTimeline"
      ],
      "usedComponents": [
        "TimelineEvent",
        "HTMLDivElement",
        "GripVertical",
        "Clock",
        "MapPin",
        "Users",
        "Check",
        "Edit2",
        "Trash2"
      ]
    },
    {
      "path": "src/components/touch/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/travel/LocationInput.tsx",
      "name": "LocationInput",
      "imports": [
        "@/components/untitled-ui",
        "@/types/travel"
      ],
      "exports": [
        "LocationInput"
      ],
      "usedComponents": [
        "PlaceResult",
        "HTMLInputElement",
        "HTMLDivElement",
        "NodeJS",
        "MapPin",
        "Input",
        "Search"
      ]
    },
    {
      "path": "src/components/travel/RouteResults.tsx",
      "name": "RouteResults",
      "imports": [
        "@/components/untitled-ui",
        "@/types/travel"
      ],
      "exports": [
        "RouteResults"
      ],
      "usedComponents": [
        "Card",
        "Route",
        "Button",
        "Share2",
        "Download",
        "Timer",
        "Navigation",
        "Clock",
        "Car",
        "Calendar",
        "Badge",
        "MapPin",
        "AlertCircle",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/travel/TrafficAnalysis.tsx",
      "name": "TrafficAnalysis",
      "imports": [
        "@/components/untitled-ui",
        "@/types/travel"
      ],
      "exports": [
        "TrafficAnalysis"
      ],
      "usedComponents": [
        "AlertTriangle",
        "Clock",
        "Activity",
        "Card",
        "BarChart3",
        "Progress",
        "Badge",
        "Info"
      ]
    },
    {
      "path": "src/components/travel/TravelTimeCalculator.tsx",
      "name": "TravelTimeCalculator",
      "imports": [
        "@/components/untitled-ui",
        "@/types/travel",
        "./LocationInput",
        "./RouteResults",
        "./TrafficAnalysis"
      ],
      "exports": [
        "TravelTimeCalculator"
      ],
      "usedComponents": [
        "RouteStop",
        "TravelRoute",
        "TravelTimeCalculation",
        "Route",
        "Button",
        "Navigation",
        "Timer",
        "Card",
        "Calendar",
        "Label",
        "Input",
        "MapPin",
        "Plus",
        "Trash2",
        "LocationInput",
        "Car",
        "APIProvider",
        "Map",
        "AdvancedMarker",
        "InfoWindow",
        "AlertTriangle",
        "RouteResults",
        "TrafficAnalysis"
      ]
    },
    {
      "path": "src/components/trial/InteractiveTooltips.tsx",
      "name": "InteractiveTooltips",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "./animations/trial-animations"
      ],
      "exports": [
        "InteractiveTooltips",
        "useTrialTooltips"
      ],
      "usedComponents": [
        "Card",
        "CategoryIcon",
        "X",
        "Clock",
        "Button",
        "ArrowRight",
        "ChevronLeft",
        "ChevronRight",
        "TooltipPosition",
        "Element",
        "HTMLDivElement",
        "AnimatePresence",
        "TooltipContent",
        "Lightbulb",
        "TooltipStep"
      ]
    },
    {
      "path": "src/components/trial/MilestoneProgress.tsx",
      "name": "MilestoneProgress",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/progress",
        "@/components/untitled-ui/badge",
        "@/types/trial",
        "@/lib/utils"
      ],
      "exports": [
        "MilestoneProgress"
      ],
      "usedComponents": [
        "TrialMilestone",
        "Users",
        "MapPin",
        "FileText",
        "Calendar",
        "Target",
        "Card",
        "Badge",
        "Progress",
        "CheckCircle2",
        "Clock",
        "Sparkles",
        "ChevronRight",
        "Button"
      ]
    },
    {
      "path": "src/components/trial/ROIDisplay.tsx",
      "name": "ROIDisplay",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/types/trial",
        "@/lib/utils/currency",
        "@/lib/utils"
      ],
      "exports": [
        "ROIDisplay"
      ],
      "usedComponents": [
        "Card",
        "BarChart3",
        "Badge",
        "TrendingUp",
        "Calculator"
      ]
    },
    {
      "path": "src/components/trial/TrialActivityFeed.tsx",
      "name": "TrialActivityFeed",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/types/trial"
      ],
      "exports": [
        "TrialActivityFeed"
      ],
      "usedComponents": [
        "Card",
        "Icon",
        "Badge",
        "CategoryIcon",
        "Clock",
        "Zap",
        "Button",
        "MoreHorizontal",
        "Activity",
        "TrendingUp",
        "Star",
        "Filter",
        "ActivitySummary",
        "AnimatePresence",
        "ActivityCard",
        "ArrowUp"
      ]
    },
    {
      "path": "src/components/trial/TrialBanner.tsx",
      "name": "TrialBanner",
      "imports": [
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/badge",
        "@/types/trial"
      ],
      "exports": [
        "TrialBanner"
      ],
      "usedComponents": [
        "TrialStatusResponse",
        "Crown",
        "Badge",
        "TrendingUp",
        "Button",
        "X",
        "AlertTriangle",
        "DollarSign",
        "Sparkles",
        "Clock",
        "Gift"
      ]
    },
    {
      "path": "src/components/trial/TrialBusinessIntelligenceDashboard.tsx",
      "name": "TrialBusinessIntelligenceDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "TrialBusinessIntelligenceDashboard"
      ],
      "usedComponents": [
        "Card",
        "TrendIcon",
        "Icon",
        "Button",
        "MetricCard",
        "Badge",
        "ResponsiveContainer",
        "FunnelChart",
        "Tooltip",
        "Funnel",
        "LabelList",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Bar",
        "Cell",
        "LineChart",
        "Line",
        "AreaChart",
        "Area",
        "Award",
        "TrendingUp",
        "Activity",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/trial/TrialChecklist.tsx",
      "name": "TrialChecklist",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/progress",
        "@/components/ui/loading-spinner",
        "@/types/trial",
        "@/lib/security/input-validation",
        "@/components/trial/animations/trial-animations",
        "@/components/trial/InteractiveTooltips"
      ],
      "exports": [
        "TrialChecklist"
      ],
      "usedComponents": [
        "ChecklistItem",
        "Heart",
        "Users",
        "FileText",
        "Calendar",
        "MapPin",
        "Mail",
        "HTMLDivElement",
        "Card",
        "Sparkles",
        "Activity",
        "Progress",
        "Button",
        "ChevronDown",
        "AnimatePresence",
        "Trophy",
        "ChevronUp",
        "Badge",
        "CheckCircle",
        "Star",
        "Circle",
        "Clock",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/trial/TrialConversionFlow.tsx",
      "name": "TrialConversionFlow",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/alert-dialog",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "TrialConversionFlow"
      ],
      "usedComponents": [
        "ConversionMetrics",
        "AnimatePresence",
        "Card",
        "Trophy",
        "Clock",
        "Zap",
        "TrendingUp",
        "Sparkles",
        "Shield",
        "Button",
        "ArrowRight",
        "Check",
        "AlertDialog",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction"
      ]
    },
    {
      "path": "src/components/trial/TrialCountdown.tsx",
      "name": "TrialCountdown",
      "imports": [
        "@/components/untitled-ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "TrialCountdown"
      ],
      "usedComponents": [
        "AlertCircle",
        "Zap",
        "Clock",
        "Badge"
      ]
    },
    {
      "path": "src/components/trial/TrialDashboard.tsx",
      "name": "TrialDashboard",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/progress",
        "@/components/ui/loading-spinner",
        "@/types/trial",
        "./TrialCountdown",
        "./MilestoneProgress",
        "./ROIDisplay",
        "./UsageMeter",
        "@/lib/utils/currency"
      ],
      "exports": [
        "TrialDashboard"
      ],
      "usedComponents": [
        "TrialStatusResponse",
        "LoadingSpinner",
        "Card",
        "AlertCircle",
        "Button",
        "Crown",
        "Badge",
        "TrialCountdown",
        "Sparkles",
        "Target",
        "Progress",
        "TrendingUp",
        "CheckCircle",
        "Clock",
        "MilestoneProgress",
        "ROIDisplay",
        "UsageMeter",
        "Circle",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/trial/TrialExtensionModal.tsx",
      "name": "TrialExtensionModal",
      "imports": [
        "@/components/ui/dialog",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/radio-group",
        "@/components/ui/label",
        "@/components/ui/alert",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "TrialExtensionModal"
      ],
      "usedComponents": [
        "TrialExtensionModalProps",
        "ExtensionEligibility",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Calendar",
        "DialogDescription",
        "Card",
        "CheckCircle",
        "AlertCircle",
        "Badge",
        "RadioGroup",
        "Label",
        "RadioGroupItem",
        "Alert",
        "Sparkles",
        "AlertDescription",
        "Zap",
        "Users",
        "DialogFooter",
        "Button"
      ]
    },
    {
      "path": "src/components/trial/TrialMilestones.tsx",
      "name": "TrialMilestones",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/types/trial"
      ],
      "exports": [
        "TrialMilestones"
      ],
      "usedComponents": [
        "ConfettiParticle",
        "AnimatePresence",
        "Icon",
        "Clock",
        "Zap",
        "Button",
        "Sparkles",
        "Card",
        "CheckCircle",
        "Badge",
        "Target",
        "Trophy",
        "PartyPopper",
        "TrialMilestone",
        "Crown",
        "MilestoneCard",
        "Gift",
        "ConfettiEffect",
        "MilestoneCelebration"
      ]
    },
    {
      "path": "src/components/trial/TrialProgressBar.tsx",
      "name": "TrialProgressBar",
      "imports": [
        "@/components/untitled-ui/progress",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/types/trial"
      ],
      "exports": [
        "TrialProgressBar"
      ],
      "usedComponents": [
        "CheckCircle",
        "Target",
        "Circle",
        "Clock",
        "TrialMilestone",
        "Badge",
        "Progress",
        "MilestoneMarker",
        "Sparkles",
        "Button",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/trial/TrialRecommendations.tsx",
      "name": "TrialRecommendations",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/types/trial"
      ],
      "exports": [
        "TrialRecommendations"
      ],
      "usedComponents": [
        "Card",
        "Icon",
        "Badge",
        "CategoryIcon",
        "Clock",
        "TrendingUp",
        "Target",
        "Button",
        "PlayCircle",
        "BookOpen",
        "ArrowRight",
        "AnimatePresence",
        "Recommendation",
        "Compass",
        "RecommendationCard",
        "Gift"
      ]
    },
    {
      "path": "src/components/trial/TrialStatusWidget.tsx",
      "name": "TrialStatusWidget",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/components/untitled-ui/progress",
        "@/components/ui/loading-spinner",
        "@/types/trial",
        "@/lib/security/input-validation",
        "@/components/trial/animations/trial-animations"
      ],
      "exports": [
        "TrialStatusWidget"
      ],
      "usedComponents": [
        "TrialStatusResponse",
        "Card",
        "LoadingSpinner",
        "AlertTriangle",
        "Crown",
        "Badge",
        "Target",
        "Activity",
        "TrendingUp",
        "Button",
        "Sparkles",
        "Zap",
        "Progress",
        "Clock"
      ]
    },
    {
      "path": "src/components/trial/TrialSummaryReport.tsx",
      "name": "TrialSummaryReport",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "TrialSummaryReport"
      ],
      "usedComponents": [
        "TrialSummaryData",
        "HTMLDivElement",
        "Button",
        "Share2",
        "Download",
        "Card",
        "BarChart3",
        "Clock",
        "Zap",
        "Calendar",
        "Users",
        "DollarSign",
        "Badge",
        "Target",
        "Progress",
        "Award",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/trial/TrialTips.tsx",
      "name": "TrialTips",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/badge",
        "@/components/untitled-ui/button",
        "@/types/trial"
      ],
      "exports": [
        "TrialTips"
      ],
      "usedComponents": [
        "Card",
        "Icon",
        "Badge",
        "X",
        "Clock",
        "Lightbulb",
        "Button",
        "ArrowRight",
        "TrialTip",
        "AnimatePresence",
        "TipCard",
        "BookOpen"
      ]
    },
    {
      "path": "src/components/trial/UsageMeter.tsx",
      "name": "UsageMeter",
      "imports": [
        "@/components/untitled-ui/card",
        "@/components/untitled-ui/progress",
        "@/components/untitled-ui/badge",
        "@/types/trial",
        "@/lib/utils"
      ],
      "exports": [
        "UsageMeter"
      ],
      "usedComponents": [
        "Users",
        "Mail",
        "FileText",
        "Calendar",
        "Settings",
        "Activity",
        "Card",
        "BarChart2",
        "ChevronUp",
        "ChevronDown",
        "Badge",
        "Progress",
        "Clock",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/trial/animations/trial-animations.ts",
      "name": "trial-animations",
      "imports": [],
      "exports": [
        "staggerContainer",
        "staggerItem",
        "slideInFromRight",
        "slideInFromLeft",
        "slideInFromBottom",
        "scaleOnHover",
        "scaleOnTap",
        "fadeIn",
        "fadeInUp",
        "progressFill",
        "pulse",
        "bounceIn",
        "float",
        "rotate",
        "shake",
        "cardHover",
        "milestoneAchieved",
        "notificationSlide",
        "tipReveal",
        "activityEnter",
        "springTransition",
        "easeTransition",
        "fastTransition",
        "backdropFade",
        "loadingPulse",
        "successCheck",
        "buttonPress",
        "tooltipAnimation"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/tutorial/TutorialCelebration.tsx",
      "name": "TutorialCelebration",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TutorialCelebration"
      ],
      "usedComponents": [
        "AnimatePresence",
        "PartyPopper",
        "Trophy",
        "Gift",
        "ArrowRight",
        "Sparkles"
      ]
    },
    {
      "path": "src/components/tutorial/TutorialManager.tsx",
      "name": "TutorialManager",
      "imports": [],
      "exports": [
        "default",
        "TutorialManager",
        "useTutorialManager"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/ColorPicker.tsx",
      "name": "ColorPicker",
      "imports": [
        "./button",
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLInputElement",
        "Button"
      ]
    },
    {
      "path": "src/components/ui/EmptyState.tsx",
      "name": "EmptyState",
      "imports": [
        "@/components/ui/button"
      ],
      "exports": [
        "EmptyState",
        "NoFormsEmptyState",
        "NoClientsEmptyState",
        "NoEventsEmptyState",
        "NoResultsEmptyState",
        "InboxEmptyState",
        "NoFilesEmptyState",
        "IllustratedEmptyState"
      ],
      "usedComponents": [
        "Button",
        "EmptyState",
        "FileText",
        "Plus",
        "Users",
        "Calendar",
        "Search",
        "Inbox",
        "FolderOpen",
        "Upload"
      ]
    },
    {
      "path": "src/components/ui/ErrorBoundary.tsx",
      "name": "ErrorBoundary",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/card",
        "@/lib/monitoring/error-tracking"
      ],
      "exports": [
        "ErrorBoundary",
        "withErrorBoundary",
        "ErrorFallback"
      ],
      "usedComponents": [
        "Props",
        "State",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "CardContent",
        "Button",
        "RefreshCw",
        "MessageCircle",
        "Home",
        "P",
        "ErrorBoundary",
        "Component"
      ]
    },
    {
      "path": "src/components/ui/LoadingSkeleton.tsx",
      "name": "LoadingSkeleton",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "Skeleton",
        "FormSkeleton",
        "TableSkeleton",
        "CardSkeleton",
        "DashboardSkeleton"
      ],
      "usedComponents": [
        "Skeleton",
        "TableSkeleton"
      ]
    },
    {
      "path": "src/components/ui/LoadingStates.tsx",
      "name": "LoadingStates",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "Spinner",
        "PageLoading",
        "SectionLoading",
        "InlineLoading",
        "SkeletonText",
        "SkeletonCard",
        "SkeletonTable",
        "LoadingButton",
        "ProgressBar",
        "EmptyState",
        "LoadingProvider",
        "useLoading"
      ],
      "usedComponents": [
        "Loader2",
        "Spinner",
        "SkeletonText",
        "Icon",
        "LoadingState",
        "LoadingContext"
      ]
    },
    {
      "path": "src/components/ui/MagicAnimations.tsx",
      "name": "MagicAnimations",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "FloatingParticles",
        "SuccessCelebration",
        "ShimmerLoader",
        "MagicButton",
        "PageTransition",
        "StaggeredList",
        "FloatingActionButton",
        "AnimatedProgress"
      ],
      "usedComponents": [
        "AnimatePresence",
        "Icon",
        "Zap"
      ]
    },
    {
      "path": "src/components/ui/MobileNav.tsx",
      "name": "MobileNav",
      "imports": [
        "@/components/ui/button",
        "@/lib/utils"
      ],
      "exports": [
        "MobileNav",
        "BottomNav"
      ],
      "usedComponents": [
        "X",
        "Menu",
        "Link",
        "Icon",
        "Plus",
        "FileText",
        "Button",
        "LogOut"
      ]
    },
    {
      "path": "src/components/ui/OnboardingFlow.tsx",
      "name": "OnboardingFlow",
      "imports": [
        "@/components/ui/button",
        "./MagicAnimations",
        "@/lib/utils"
      ],
      "exports": [
        "OnboardingFlow",
        "TourTooltip"
      ],
      "usedComponents": [
        "Sparkles",
        "FileText",
        "Users",
        "Calendar",
        "Check",
        "AnimatePresence",
        "X",
        "Button",
        "ArrowLeft",
        "MagicButton",
        "ArrowRight",
        "SuccessCelebration",
        "HTMLElement"
      ]
    },
    {
      "path": "src/components/ui/ProgressIndicator.tsx",
      "name": "ProgressIndicator",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "ProgressIndicator",
        "ProgressBar",
        "FormProgress"
      ],
      "usedComponents": [
        "Check",
        "ProgressIndicator"
      ]
    },
    {
      "path": "src/components/ui/RealtimeIndicator.tsx",
      "name": "RealtimeIndicator",
      "imports": [
        "@/lib/utils",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/tooltip",
        "@/types/realtime"
      ],
      "exports": [
        "RealtimeIndicator",
        "WeddingRealtimeIndicator"
      ],
      "usedComponents": [
        "Badge",
        "AlertTriangle",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "TooltipContent",
        "Icon",
        "Clock",
        "Heart",
        "Button",
        "RefreshCw",
        "UIRealtimeIndicatorProps",
        "RealtimeIndicator"
      ]
    },
    {
      "path": "src/components/ui/Toast.tsx",
      "name": "Toast",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "ToastPrimitives",
        "X"
      ]
    },
    {
      "path": "src/components/ui/alert-dialog.tsx",
      "name": "alert-dialog",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/alert.tsx",
      "name": "alert",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLHeadingElement",
        "HTMLParagraphElement"
      ]
    },
    {
      "path": "src/components/ui/avatar.tsx",
      "name": "avatar",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "Avatar"
      ],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/badge.tsx",
      "name": "badge",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/button-untitled.tsx",
      "name": "button-untitled",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "WeddingButton",
        "ElegantButton",
        "VendorButton"
      ],
      "usedComponents": [
        "HTMLButtonElement",
        "LoadingSpinner",
        "ButtonProps",
        "Button"
      ]
    },
    {
      "path": "src/components/ui/button.tsx",
      "name": "button",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLButtonElement",
        "Comp"
      ]
    },
    {
      "path": "src/components/ui/calendar.tsx",
      "name": "calendar",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button"
      ],
      "exports": [
        "Calendar"
      ],
      "usedComponents": [
        "ChevronLeft",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/ui/card-untitled.tsx",
      "name": "card-untitled",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "WeddingCard",
        "ElegantCard",
        "LuxuryCard",
        "VendorCard"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLHeadingElement",
        "Comp",
        "HTMLParagraphElement",
        "CardProps",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent"
      ]
    },
    {
      "path": "src/components/ui/card.tsx",
      "name": "card",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLHeadingElement",
        "HTMLParagraphElement"
      ]
    },
    {
      "path": "src/components/ui/checkbox.tsx",
      "name": "checkbox",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLButtonElement",
        "MinusIcon",
        "CheckIcon"
      ]
    },
    {
      "path": "src/components/ui/collapsible.tsx",
      "name": "collapsible",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/dashboard-header.tsx",
      "name": "dashboard-header",
      "imports": [],
      "exports": [
        "DashboardHeader"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/dashboard-shell.tsx",
      "name": "dashboard-shell",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "DashboardShell"
      ],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/description-list.tsx",
      "name": "description-list",
      "imports": [],
      "exports": [
        "DescriptionList",
        "DescriptionTerm",
        "DescriptionDetails"
      ],
      "usedComponents": [
        "HTMLDListElement",
        "HTMLElement"
      ]
    },
    {
      "path": "src/components/ui/dialog.tsx",
      "name": "dialog",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "DialogPrimitive",
        "DialogPortal",
        "DialogOverlay",
        "X",
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/dropdown-menu.tsx",
      "name": "dropdown-menu",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "DropdownMenuPrimitive",
        "ChevronRight",
        "Check",
        "Circle",
        "HTMLSpanElement"
      ]
    },
    {
      "path": "src/components/ui/dropdown.tsx",
      "name": "dropdown",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "Dropdown",
        "DropdownButton",
        "DropdownMenu",
        "DropdownItem",
        "DropdownLabel",
        "DropdownDivider"
      ],
      "usedComponents": [
        "Menu",
        "ChevronDownIcon",
        "Transition",
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/form.tsx",
      "name": "form",
      "imports": [
        "@/lib/utils",
        "@/components/ui/label"
      ],
      "exports": [],
      "usedComponents": [
        "TFieldValues",
        "FormFieldContextValue",
        "FormFieldContext",
        "Controller",
        "FormField",
        "FormItemContextValue",
        "HTMLDivElement",
        "FormItemContext",
        "Label",
        "Slot",
        "HTMLParagraphElement"
      ]
    },
    {
      "path": "src/components/ui/heading.tsx",
      "name": "heading",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "Heading"
      ],
      "usedComponents": [
        "HTMLHeadingElement",
        "Component"
      ]
    },
    {
      "path": "src/components/ui/input-group.tsx",
      "name": "input-group",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "InputGroup"
      ],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/input-untitled.tsx",
      "name": "input-untitled",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "WeddingInput",
        "ElegantInput"
      ],
      "usedComponents": [
        "HTMLParagraphElement",
        "HTMLLabelElement",
        "React",
        "HTMLInputElement",
        "Label",
        "HelperText",
        "InputProps",
        "Input"
      ]
    },
    {
      "path": "src/components/ui/input.tsx",
      "name": "input",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLInputElement"
      ]
    },
    {
      "path": "src/components/ui/label.tsx",
      "name": "label",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "LabelPrimitive"
      ]
    },
    {
      "path": "src/components/ui/loading-spinner.tsx",
      "name": "loading-spinner",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/migration-adapter.tsx",
      "name": "migration-adapter",
      "imports": [
        "./button",
        "./input",
        "./card",
        "./button-untitled",
        "./input-untitled",
        "./card-untitled"
      ],
      "exports": [
        "Button",
        "Input",
        "Card",
        "MigrationTester"
      ],
      "usedComponents": [
        "T",
        "UntitledButton",
        "OriginalButton",
        "UntitledInput",
        "OriginalInput",
        "UntitledCard",
        "OriginalCard"
      ]
    },
    {
      "path": "src/components/ui/popover.tsx",
      "name": "popover",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "PopoverPrimitive"
      ]
    },
    {
      "path": "src/components/ui/progress.tsx",
      "name": "progress",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "ProgressPrimitive"
      ]
    },
    {
      "path": "src/components/ui/radio-group.tsx",
      "name": "radio-group",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "RadioGroupPrimitive",
        "Circle"
      ]
    },
    {
      "path": "src/components/ui/screen-reader-only.tsx",
      "name": "screen-reader-only",
      "imports": [],
      "exports": [
        "ScreenReaderOnly"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/scroll-area.tsx",
      "name": "scroll-area",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/select.tsx",
      "name": "select",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "SelectPrimitive",
        "ChevronDown",
        "ChevronUp",
        "SelectScrollUpButton",
        "SelectScrollDownButton",
        "Check"
      ]
    },
    {
      "path": "src/components/ui/separator.tsx",
      "name": "separator",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/sidebar.tsx",
      "name": "sidebar",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "SidebarSection",
        "SidebarLabel",
        "SidebarItem"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLAnchorElement"
      ]
    },
    {
      "path": "src/components/ui/skeleton.tsx",
      "name": "skeleton",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/ui/skip-link.tsx",
      "name": "skip-link",
      "imports": [],
      "exports": [
        "SkipLink"
      ],
      "usedComponents": []
    },
    {
      "path": "src/components/ui/slider.tsx",
      "name": "slider",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "SliderPrimitive"
      ]
    },
    {
      "path": "src/components/ui/switch.tsx",
      "name": "switch",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "SwitchPrimitives"
      ]
    },
    {
      "path": "src/components/ui/table.tsx",
      "name": "table",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLTableElement",
        "HTMLTableSectionElement",
        "HTMLTableRowElement",
        "HTMLTableCellElement",
        "HTMLTableCaptionElement"
      ]
    },
    {
      "path": "src/components/ui/tabs.tsx",
      "name": "tabs",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "TabsPrimitive"
      ]
    },
    {
      "path": "src/components/ui/textarea.tsx",
      "name": "textarea",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLTextAreaElement"
      ]
    },
    {
      "path": "src/components/ui/toast-custom-backup.tsx",
      "name": "toast-custom-backup",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "ToastPrimitives",
        "X"
      ]
    },
    {
      "path": "src/components/ui/toaster.tsx",
      "name": "toaster",
      "imports": [
        "@/components/ui/use-toast",
        "@/components/ui/toast"
      ],
      "exports": [
        "Toaster"
      ],
      "usedComponents": [
        "ToastProvider",
        "Toast",
        "ToastTitle",
        "ToastDescription",
        "ToastClose",
        "ToastViewport"
      ]
    },
    {
      "path": "src/components/ui/tooltip.tsx",
      "name": "tooltip",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "TooltipPrimitive"
      ]
    },
    {
      "path": "src/components/ui/use-toast.ts",
      "name": "use-toast",
      "imports": [],
      "exports": [
        "reducer"
      ],
      "usedComponents": [
        "ToasterToast",
        "State"
      ]
    },
    {
      "path": "src/components/ui/weddingcard.tsx",
      "name": "weddingcard",
      "imports": [],
      "exports": [
        "default",
        "WeddingCard"
      ],
      "usedComponents": [
        "WeddingCardProps"
      ]
    },
    {
      "path": "src/components/untitled-ui/badge.tsx",
      "name": "badge",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/untitled-ui/button.tsx",
      "name": "button",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLButtonElement"
      ]
    },
    {
      "path": "src/components/untitled-ui/card.tsx",
      "name": "card",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement",
        "HTMLHeadingElement",
        "HTMLParagraphElement"
      ]
    },
    {
      "path": "src/components/untitled-ui/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/untitled-ui/input.tsx",
      "name": "input",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLInputElement"
      ]
    },
    {
      "path": "src/components/untitled-ui/label.tsx",
      "name": "label",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLLabelElement"
      ]
    },
    {
      "path": "src/components/untitled-ui/progress.tsx",
      "name": "progress",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [],
      "usedComponents": [
        "HTMLDivElement"
      ]
    },
    {
      "path": "src/components/vendor-networking/ConnectionRequestCard.tsx",
      "name": "ConnectionRequestCard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "CardContent",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Badge",
        "Clock",
        "MapPin",
        "Briefcase",
        "Button",
        "ChevronUp",
        "ChevronDown",
        "Star",
        "MessageSquare",
        "X",
        "Check",
        "Users"
      ]
    },
    {
      "path": "src/components/vendor-networking/VendorDiscovery.tsx",
      "name": "VendorDiscovery",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/input",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "DiscoveredVendor",
        "DiscoveryFilters",
        "Search",
        "Input",
        "Button",
        "Card",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "MapPin",
        "Briefcase",
        "Users",
        "Award",
        "Badge",
        "UserPlus",
        "Star",
        "MessageSquare"
      ]
    },
    {
      "path": "src/components/vendor-networking/VendorNetworkingHub.tsx",
      "name": "VendorNetworkingHub",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorConnection",
        "NetworkingStats",
        "Button",
        "Bell",
        "Badge",
        "Settings",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "Users",
        "TrendingUp",
        "Handshake",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Search",
        "MessageSquare",
        "ArrowRight",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "MapPin",
        "Clock",
        "Star",
        "UserPlus"
      ]
    },
    {
      "path": "src/components/vendor-reviews/PostWeddingReviewForm.tsx",
      "name": "PostWeddingReviewForm",
      "imports": [
        "@/components/magicui/shimmer-button"
      ],
      "exports": [
        "PostWeddingReviewForm"
      ],
      "usedComponents": [
        "VendorData",
        "ReviewCategory",
        "ReviewFormData",
        "HTMLInputElement",
        "Controller",
        "Star",
        "AlertCircle",
        "Check",
        "RatingInput",
        "Camera",
        "ChevronRight",
        "ShimmerButton"
      ]
    },
    {
      "path": "src/components/vendor-reviews/ReviewModerationDashboard.tsx",
      "name": "ReviewModerationDashboard",
      "imports": [],
      "exports": [
        "ReviewModerationDashboard"
      ],
      "usedComponents": [
        "Review",
        "Clock",
        "Check",
        "X",
        "Flag",
        "Star",
        "Search",
        "ChevronDown",
        "MessageSquare",
        "StatusBadge",
        "RatingDisplay",
        "User",
        "Calendar",
        "AlertTriangle",
        "Eye"
      ]
    },
    {
      "path": "src/components/vendor-reviews/VendorReviewAnalytics.tsx",
      "name": "VendorReviewAnalytics",
      "imports": [],
      "exports": [
        "VendorReviewAnalytics"
      ],
      "usedComponents": [
        "VendorMetrics",
        "ReviewTrend",
        "CategoryBreakdown",
        "RefreshCw",
        "Download",
        "MessageSquare",
        "Star",
        "TrendingUp",
        "Users",
        "ResponsiveContainer",
        "AreaChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Area",
        "Line",
        "PieChart",
        "Pie",
        "Cell",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/vendor-reviews/VendorReviewDisplay.tsx",
      "name": "VendorReviewDisplay",
      "imports": [],
      "exports": [
        "VendorReviewDisplay"
      ],
      "usedComponents": [
        "VendorReview",
        "Record",
        "ReviewFilters",
        "Star",
        "CheckCircle",
        "RatingStars",
        "Calendar",
        "Flag",
        "ImageIcon",
        "Heart",
        "ThumbsUp",
        "ThumbsDown",
        "MessageSquare",
        "Filter",
        "ChevronDown",
        "Search",
        "ReviewCard"
      ]
    },
    {
      "path": "src/components/vendors/AssignedWeddings.tsx",
      "name": "AssignedWeddings",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/tabs"
      ],
      "exports": [
        "AssignedWeddings"
      ],
      "usedComponents": [
        "DetailedWedding",
        "Badge",
        "Button",
        "Card",
        "PhoneIcon",
        "EnvelopeIcon",
        "ChatBubbleBottomCenterTextIcon",
        "CheckCircleIcon",
        "ClockIcon",
        "CalendarDaysIcon",
        "ExclamationTriangleIcon",
        "DocumentTextIcon",
        "MagnifyingGlassIcon",
        "Input",
        "MapPinIcon",
        "EyeIcon"
      ]
    },
    {
      "path": "src/components/vendors/CollaborationTools.tsx",
      "name": "CollaborationTools",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/dialog"
      ],
      "exports": [
        "CollaborationTools"
      ],
      "usedComponents": [
        "CollaborativeProject",
        "SharedTask",
        "SharedDocument",
        "Badge",
        "BriefcaseIcon",
        "Button",
        "PlusIcon",
        "Card",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CalendarIcon",
        "CurrencyPoundIcon",
        "UsersIcon",
        "CheckIcon",
        "DocumentIcon",
        "HandshakeIcon",
        "Input",
        "PaperAirplaneIcon",
        "FolderOpenIcon",
        "LinkIcon"
      ]
    },
    {
      "path": "src/components/vendors/NetworkingInterface.tsx",
      "name": "NetworkingInterface",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/dialog"
      ],
      "exports": [
        "NetworkingInterface"
      ],
      "usedComponents": [
        "NetworkingEvent",
        "VendorProfile",
        "Badge",
        "ArrowTrendingUpIcon",
        "TrophyIcon",
        "Card",
        "UsersIcon",
        "HeartIcon",
        "MapPinIcon",
        "StarIconSolid",
        "Dialog",
        "DialogTrigger",
        "Button",
        "EyeIcon",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "CheckBadgeIcon",
        "ShareIcon",
        "HandRaisedIcon",
        "CalendarIcon",
        "CheckIcon",
        "ChartBarIcon",
        "LightBulbIcon"
      ]
    },
    {
      "path": "src/components/vendors/PerformanceScoring.tsx",
      "name": "PerformanceScoring",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress"
      ],
      "exports": [
        "PerformanceScoring"
      ],
      "usedComponents": [
        "PerformanceMetrics",
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "ChartBarIcon",
        "StarIcon",
        "ClockIcon",
        "TrophyIcon",
        "CheckCircleIcon",
        "ExclamationTriangleIcon",
        "Card",
        "Progress",
        "UserGroupIcon",
        "Button"
      ]
    },
    {
      "path": "src/components/vendors/VendorCategoryBrowser.tsx",
      "name": "VendorCategoryBrowser",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input"
      ],
      "exports": [
        "VendorCategoryBrowser"
      ],
      "usedComponents": [
        "VendorCategory",
        "Set",
        "Card",
        "Badge",
        "ChevronDownIcon",
        "ChevronRightIcon",
        "MagnifyingGlassIcon",
        "Input",
        "Button",
        "XMarkIcon",
        "FunnelIcon"
      ]
    },
    {
      "path": "src/components/vendors/VendorCommunications.tsx",
      "name": "VendorCommunications",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/tabs",
        "@/lib/notifications/engine"
      ],
      "exports": [
        "VendorCommunications"
      ],
      "usedComponents": [
        "VendorCommunication",
        "VendorContact",
        "CheckCircleIcon",
        "ChatBubbleBottomCenterTextIcon",
        "ClockIcon",
        "Badge",
        "Button",
        "PaperAirplaneIcon",
        "MagnifyingGlassIcon",
        "Input",
        "Card",
        "UserGroupIcon",
        "PhoneIcon",
        "EnvelopeIcon",
        "BellIcon"
      ]
    },
    {
      "path": "src/components/vendors/VendorConnectionHub.tsx",
      "name": "VendorConnectionHub",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/select"
      ],
      "exports": [
        "VendorConnectionHub"
      ],
      "usedComponents": [
        "VendorConnection",
        "Badge",
        "UsersIcon",
        "ClockIcon",
        "Card",
        "MagnifyingGlassIcon",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "CheckIcon",
        "MapPinIcon",
        "StarIcon",
        "Button",
        "UserPlusIcon",
        "ChatBubbleLeftRightIcon",
        "XMarkIcon"
      ]
    },
    {
      "path": "src/components/vendors/VendorDashboard.tsx",
      "name": "VendorDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button"
      ],
      "exports": [
        "VendorDashboard"
      ],
      "usedComponents": [
        "ExclamationTriangleIcon",
        "InformationCircleIcon",
        "Card",
        "Button",
        "CalendarDaysIcon",
        "Badge",
        "BellIcon",
        "CheckCircleIcon",
        "XCircleIcon"
      ]
    },
    {
      "path": "src/components/viral/InvitationFlow.tsx",
      "name": "InvitationFlow",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/select",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "InvitationFlow"
      ],
      "usedComponents": [
        "InvitationFormData",
        "InvitationTemplate",
        "Mail",
        "Phone",
        "MessageSquare",
        "Card",
        "CardHeader",
        "Sparkles",
        "CardTitle",
        "Badge",
        "CardDescription",
        "CardContent",
        "Button",
        "Users",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Textarea",
        "CardFooter",
        "Send"
      ]
    },
    {
      "path": "src/components/viral/QRCodeDisplay.tsx",
      "name": "QRCodeDisplay",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "QRCodeDisplay"
      ],
      "usedComponents": [
        "HTMLCanvasElement"
      ]
    },
    {
      "path": "src/components/viral/ReferralTracker.tsx",
      "name": "ReferralTracker",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/button"
      ],
      "exports": [
        "ReferralTracker"
      ],
      "usedComponents": [
        "AttributionMetrics",
        "ReferralChain",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "TrendingUp",
        "Users",
        "Award",
        "Network",
        "CardDescription",
        "Button",
        "Badge",
        "ChevronRight",
        "Calendar",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/viral/ReferralWidget.tsx",
      "name": "ReferralWidget",
      "imports": [
        "@/components/ui/button-untitled",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "ReferralWidget"
      ],
      "usedComponents": [
        "QrCode",
        "Card",
        "CardHeader",
        "CardTitle",
        "Share2",
        "Button",
        "X",
        "CardContent",
        "Badge",
        "Check",
        "Copy",
        "Separator",
        "IconComponent",
        "ExternalLink",
        "Suspense",
        "QRCodeDisplay",
        "Download",
        "Users",
        "Gift",
        "Zap"
      ]
    },
    {
      "path": "src/components/viral/ViralDashboard.tsx",
      "name": "ViralDashboard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/use-toast"
      ],
      "exports": [
        "ViralDashboard"
      ],
      "usedComponents": [
        "ViralMetrics",
        "Button",
        "Activity",
        "Card",
        "CardHeader",
        "CardTitle",
        "TrendingUp",
        "CardContent",
        "Progress",
        "Badge",
        "Target",
        "Award",
        "Users",
        "CardDescription",
        "Share2"
      ]
    },
    {
      "path": "src/components/viral-analytics/ConversionOptimizationDashboard.tsx",
      "name": "ConversionOptimizationDashboard",
      "imports": [
        "@/lib/supabase/client",
        "@/components/ui/Card",
        "@/components/ui/Badge",
        "@/components/ui/Button",
        "@/components/ui/Tabs",
        "@/components/ui/Progress",
        "@/components/ui/Alert"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ConversionTest",
        "FunnelStage",
        "PlayCircleIcon",
        "CheckCircleIcon",
        "PauseCircleIcon",
        "ExclamationTriangleIcon",
        "Button",
        "Card",
        "ArrowTrendingUpIcon",
        "ChartBarIcon",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "LightBulbIcon",
        "Badge",
        "Alert",
        "AlertDescription",
        "ResponsiveContainer",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Bar",
        "Progress"
      ]
    },
    {
      "path": "src/components/weather/MobileWeatherWidget.tsx",
      "name": "MobileWeatherWidget",
      "imports": [
        "@/types/weather",
        "@/components/untitled-ui"
      ],
      "exports": [
        "default",
        "MobileWeatherWidget"
      ],
      "usedComponents": [
        "Sun",
        "Cloud",
        "CloudRain",
        "AlertTriangle",
        "Card",
        "Badge",
        "ChevronUp",
        "ChevronDown",
        "Droplets",
        "Wind",
        "MapPin",
        "Calendar",
        "RefreshCw"
      ]
    },
    {
      "path": "src/components/weather/WeatherAlertsPanel.tsx",
      "name": "WeatherAlertsPanel",
      "imports": [
        "@/types/weather",
        "@/components/untitled-ui"
      ],
      "exports": [
        "WeatherAlertsPanel"
      ],
      "usedComponents": [
        "AlertTriangle",
        "Bell",
        "Mail",
        "MessageSquare",
        "Eye",
        "Badge",
        "Button",
        "Card",
        "Clock",
        "CheckCircle",
        "Alert",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/weather/WeatherCard.tsx",
      "name": "WeatherCard",
      "imports": [
        "@/types/weather",
        "@/components/untitled-ui"
      ],
      "exports": [
        "default",
        "WeatherCard"
      ],
      "usedComponents": [
        "Sun",
        "Cloud",
        "CloudRain",
        "AlertTriangle",
        "Card",
        "Droplets",
        "Wind",
        "Eye",
        "Thermometer"
      ]
    },
    {
      "path": "src/components/weather/WeatherDashboard.tsx",
      "name": "WeatherDashboard",
      "imports": [
        "@/types/weather",
        "@/components/untitled-ui",
        "./WeatherForecastWidget",
        "./WeatherAlertsPanel"
      ],
      "exports": [
        "WeatherDashboard"
      ],
      "usedComponents": [
        "WeddingWeatherData",
        "WeatherAnalytics",
        "WeatherNotification",
        "Sun",
        "Cloud",
        "CloudRain",
        "AlertTriangle",
        "Card",
        "Alert",
        "AlertDescription",
        "Button",
        "MapPin",
        "Calendar",
        "Badge",
        "TabsList",
        "TabsTrigger",
        "Umbrella",
        "Wind",
        "Eye",
        "WeatherForecastWidget",
        "WeatherAlertsPanel"
      ]
    },
    {
      "path": "src/components/weather/WeatherForecastWidget.tsx",
      "name": "WeatherForecastWidget",
      "imports": [
        "@/types/weather",
        "@/components/untitled-ui"
      ],
      "exports": [
        "WeatherForecastWidget"
      ],
      "usedComponents": [
        "Sun",
        "Cloud",
        "CloudRain",
        "TabsList",
        "TabsTrigger",
        "Card",
        "Badge",
        "Wind",
        "Sunrise",
        "Sunset",
        "Droplets",
        "Moon",
        "Thermometer",
        "Eye"
      ]
    },
    {
      "path": "src/components/weather/WeatherTimeline.tsx",
      "name": "WeatherTimeline",
      "imports": [
        "@/types/weather",
        "@/components/untitled-ui"
      ],
      "exports": [
        "default",
        "WeatherTimeline"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Sun",
        "Cloud",
        "CloudRain",
        "Card",
        "Clock",
        "Badge",
        "ChevronLeft",
        "ChevronRight",
        "Wind",
        "Droplets",
        "Calendar"
      ]
    },
    {
      "path": "src/components/weather/__tests__/WeatherAlertsPanel.test.tsx",
      "name": "WeatherAlertsPanel.test",
      "imports": [
        "../WeatherAlertsPanel",
        "@/types/weather"
      ],
      "exports": [],
      "usedComponents": [
        "WeatherAlertsPanel"
      ]
    },
    {
      "path": "src/components/weather/__tests__/WeatherDashboard.test.tsx",
      "name": "WeatherDashboard.test",
      "imports": [
        "../WeatherDashboard",
        "@/types/weather"
      ],
      "exports": [],
      "usedComponents": [
        "WeatherDashboard"
      ]
    },
    {
      "path": "src/components/weather/__tests__/WeatherForecastWidget.test.tsx",
      "name": "WeatherForecastWidget.test",
      "imports": [
        "../WeatherForecastWidget",
        "@/types/weather"
      ],
      "exports": [],
      "usedComponents": [
        "WeatherForecastWidget"
      ]
    },
    {
      "path": "src/components/webhooks/DeliveryMonitor.tsx",
      "name": "DeliveryMonitor",
      "imports": [
        "@/types/webhooks",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/table",
        "@/lib/utils"
      ],
      "exports": [
        "DeliveryMonitor"
      ],
      "usedComponents": [
        "DeliveryFilters",
        "WebhookDelivery",
        "FailedDelivery",
        "CheckCircle",
        "XCircle",
        "Clock",
        "RefreshCw",
        "AlertTriangle",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "Activity",
        "Filter",
        "Download",
        "Badge",
        "RotateCcw",
        "Input",
        "Search",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Table",
        "TableHeader",
        "TableRow",
        "TableHead",
        "TableBody",
        "TableCell",
        "Dialog",
        "DialogTrigger",
        "Eye",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "ChevronLeft",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/webhooks/EndpointConfiguration.tsx",
      "name": "EndpointConfiguration",
      "imports": [
        "@/types/webhooks",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/alert-dialog",
        "@/lib/utils"
      ],
      "exports": [
        "EndpointConfiguration"
      ],
      "usedComponents": [
        "WebhookTestResult",
        "WebhookConfigFormData",
        "Button",
        "ArrowLeft",
        "Card",
        "CardHeader",
        "Shield",
        "CardTitle",
        "CardContent",
        "Globe",
        "Label",
        "Input",
        "Lock",
        "AlertTriangle",
        "Textarea",
        "RefreshCw",
        "TestTube",
        "CheckCircle",
        "XCircle",
        "EyeOff",
        "Eye",
        "Copy",
        "Controller",
        "Switch",
        "Badge",
        "AlertDialog",
        "AlertDialogTrigger",
        "Trash2",
        "AlertDialogContent",
        "AlertDialogHeader",
        "AlertDialogTitle",
        "AlertDialogDescription",
        "AlertDialogFooter",
        "AlertDialogCancel",
        "AlertDialogAction",
        "Save"
      ]
    },
    {
      "path": "src/components/webhooks/EventSubscriptionManager.tsx",
      "name": "EventSubscriptionManager",
      "imports": [
        "@/types/webhooks",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/checkbox",
        "@/components/ui/input",
        "@/components/ui/select",
        "@/components/ui/dialog",
        "@/components/ui/collapsible",
        "@/components/ui/tooltip",
        "@/lib/utils"
      ],
      "exports": [
        "EventSubscriptionManager"
      ],
      "usedComponents": [
        "WebhookEventCategory",
        "EventSubscriptions",
        "WebhookEventType",
        "Card",
        "CardContent",
        "Zap",
        "Button",
        "RotateCcw",
        "Save",
        "CardHeader",
        "CardTitle",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge",
        "Input",
        "Search",
        "Check",
        "X",
        "Collapsible",
        "CollapsibleTrigger",
        "CategoryIcon",
        "Checkbox",
        "ChevronDown",
        "ChevronRight",
        "CollapsibleContent",
        "Volume2",
        "VolumeX",
        "TooltipProvider",
        "Tooltip",
        "TooltipTrigger",
        "Eye",
        "TooltipContent",
        "Info",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "TrendingUp",
        "AlertCircle"
      ]
    },
    {
      "path": "src/components/webhooks/WebhookDashboard.tsx",
      "name": "WebhookDashboard",
      "imports": [
        "@/types/webhooks",
        "./EndpointConfiguration",
        "./DeliveryMonitor",
        "./EventSubscriptionManager",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/lib/utils"
      ],
      "exports": [
        "WebhookDashboard"
      ],
      "usedComponents": [
        "WebhookEndpoint",
        "DeliveryMetrics",
        "WebhookDelivery",
        "Card",
        "CardHeader",
        "AlertCircle",
        "CardTitle",
        "CardContent",
        "Button",
        "RefreshCw",
        "Webhook",
        "Plus",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "BarChart3",
        "Settings",
        "Activity",
        "Zap",
        "TabsContent",
        "CheckCircle",
        "TrendingUp",
        "Clock",
        "Badge",
        "EndpointConfiguration",
        "DeliveryMonitor",
        "EventSubscriptionManager"
      ]
    },
    {
      "path": "src/components/webhooks/__tests__/WebhookDashboard.test.tsx",
      "name": "WebhookDashboard.test",
      "imports": [
        "../WebhookDashboard",
        "@/types/webhooks"
      ],
      "exports": [],
      "usedComponents": [
        "QueryClientProvider",
        "TestWrapper",
        "WebhookDashboard",
        "ThrowError"
      ]
    },
    {
      "path": "src/components/websocket/ChannelIndicator.tsx",
      "name": "ChannelIndicator",
      "imports": [
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "ChannelIndicator"
      ],
      "usedComponents": [
        "Icon",
        "AlertCircle",
        "Badge"
      ]
    },
    {
      "path": "src/components/websocket/ChannelManager.tsx",
      "name": "ChannelManager",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "./ChannelIndicator",
        "./MessageQueue",
        "@/hooks/useChannelSubscription",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "ChannelManager"
      ],
      "usedComponents": [
        "ChannelInfo",
        "Record",
        "Card",
        "CardHeader",
        "CardTitle",
        "MessageSquare",
        "Badge",
        "Wifi",
        "WifiOff",
        "CardContent",
        "MessageQueue",
        "AlertCircle",
        "ChannelIndicator",
        "Alert",
        "AlertTitle",
        "AlertDescription"
      ]
    },
    {
      "path": "src/components/websocket/MessageQueue.tsx",
      "name": "MessageQueue",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/hooks/use-toast",
        "@/lib/utils"
      ],
      "exports": [
        "MessageQueue"
      ],
      "usedComponents": [
        "QueuedMessage",
        "Card",
        "CardHeader",
        "CardTitle",
        "Clock",
        "Badge",
        "Loader2",
        "Button",
        "RefreshCw",
        "X",
        "CardContent",
        "XCircle",
        "QueuedMessageItem",
        "Alert",
        "Wifi",
        "AlertTitle",
        "AlertDescription",
        "AlertCircle",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/wedding-day/CoordinatorPresencePanel.tsx",
      "name": "CoordinatorPresencePanel",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "CoordinatorPresencePanel"
      ],
      "usedComponents": [
        "Users",
        "Wifi",
        "UserX",
        "UserCard",
        "MessageCircle",
        "Phone",
        "RoleIcon",
        "WifiOff",
        "MapPin",
        "MoreVertical"
      ]
    },
    {
      "path": "src/components/wedding-day/IssueTrackingPanel.tsx",
      "name": "IssueTrackingPanel",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "IssueTrackingPanel"
      ],
      "usedComponents": [
        "WeddingDayIssue",
        "AlertTriangle",
        "Plus",
        "Zap",
        "Search",
        "CheckCircle2",
        "IssueCard",
        "CreateIssueModal",
        "IssueDetailModal",
        "SeverityIcon",
        "StatusIcon",
        "Timer",
        "CategoryIcon",
        "Clock",
        "User",
        "UserCheck",
        "MoreVertical"
      ]
    },
    {
      "path": "src/components/wedding-day/OfflineSyncStatus.tsx",
      "name": "OfflineSyncStatus",
      "imports": [
        "@/lib/utils",
        "@/stores/wedding-day-offline"
      ],
      "exports": [
        "OfflineSyncStatus"
      ],
      "usedComponents": [
        "StatusIcon",
        "Clock",
        "AlertCircle",
        "RefreshCw",
        "Wifi",
        "WifiOff",
        "CloudOff",
        "Cloud",
        "AlertTriangle",
        "RotateCcw",
        "X"
      ]
    },
    {
      "path": "src/components/wedding-day/VendorCheckInHub.tsx",
      "name": "VendorCheckInHub",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "VendorCheckInHub"
      ],
      "usedComponents": [
        "VendorCheckIn",
        "Users",
        "Search",
        "VendorCard",
        "CheckInModal",
        "Icon",
        "CheckCircle2",
        "AlertCircle",
        "Clock",
        "Timer",
        "MapPin",
        "UserCheck",
        "Phone",
        "Mail",
        "MessageCircle",
        "MoreVertical",
        "DelayReportModal",
        "UserX",
        "Navigation"
      ]
    },
    {
      "path": "src/components/wedding-day/WeatherWidget.tsx",
      "name": "WeatherWidget",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "WeatherWidget"
      ],
      "usedComponents": [
        "Date",
        "RefreshCw",
        "Cloud",
        "WeatherIcon",
        "MapPin",
        "AlertTriangle",
        "Droplets",
        "Wind",
        "CloudRain",
        "Eye",
        "ForecastIcon"
      ]
    },
    {
      "path": "src/components/wedding-day/WeddingDayDashboard.tsx",
      "name": "WeddingDayDashboard",
      "imports": [
        "@/lib/supabase/client",
        "@/lib/supabase/realtime",
        "@/lib/utils",
        "./WeddingDayTimeline",
        "./VendorCheckInHub",
        "./IssueTrackingPanel",
        "./WeatherWidget",
        "./CoordinatorPresencePanel",
        "./OfflineSyncStatus",
        "@/hooks/useWeddingDayOffline",
        "@/lib/offline/wedding-day-sync-manager"
      ],
      "exports": [
        "WeddingDayDashboard"
      ],
      "usedComponents": [
        "RealtimeUpdate",
        "RefreshCw",
        "AlertTriangle",
        "CalendarDays",
        "OfflineSyncStatus",
        "Settings",
        "Users",
        "Clock",
        "CheckCircle2",
        "WeddingDayTimeline",
        "WeatherWidget",
        "VendorCheckInHub",
        "IssueTrackingPanel",
        "CoordinatorPresencePanel",
        "Bell"
      ]
    },
    {
      "path": "src/components/wedding-day/WeddingDayTimeline.tsx",
      "name": "WeddingDayTimeline",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "WeddingDayTimeline"
      ],
      "usedComponents": [
        "TimelineEvent",
        "Calendar",
        "Clock",
        "TimelineView",
        "ListView",
        "EventDetailModal",
        "Timer",
        "AlertTriangle",
        "Cloud",
        "MapPin",
        "TimelineEventActions",
        "Users",
        "MoreVertical",
        "Play",
        "CheckCircle2",
        "Pause",
        "Edit3"
      ]
    },
    {
      "path": "src/components/wedding-setup/BasicSetupWizard.tsx",
      "name": "BasicSetupWizard",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/form",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "BasicSetupWizard"
      ],
      "usedComponents": [
        "WeddingSetupForm",
        "Set",
        "CheckCircle2",
        "Icon",
        "Card",
        "CardHeader",
        "currentStepData",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Form",
        "FormField",
        "FormItem",
        "FormLabel",
        "FormControl",
        "Input",
        "FormDescription",
        "FormMessage",
        "Textarea",
        "Badge",
        "Button",
        "ArrowLeft",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/wedding-setup/VenueSelector.tsx",
      "name": "VenueSelector",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/form",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "VenueSelector"
      ],
      "usedComponents": [
        "VenueFilters",
        "VenueSelectionForm",
        "Card",
        "CardHeader",
        "CardTitle",
        "Filter",
        "Button",
        "CardContent",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Checkbox",
        "Separator",
        "CheckCircle2",
        "MapPin",
        "Star",
        "Badge",
        "Users",
        "Pound",
        "Phone",
        "Calendar",
        "Form",
        "FormField",
        "FormItem",
        "FormLabel",
        "FormControl",
        "FormDescription",
        "FormMessage",
        "Textarea"
      ]
    },
    {
      "path": "src/components/wedding-setup/WeddingDetailsForm.tsx",
      "name": "WeddingDetailsForm",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/form",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/checkbox",
        "@/components/ui/badge",
        "@/components/ui/separator",
        "@/lib/utils"
      ],
      "exports": [
        "WeddingDetailsForm"
      ],
      "usedComponents": [
        "WeddingDetailsForm",
        "Set",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Icon",
        "Form",
        "FormField",
        "FormItem",
        "FormLabel",
        "FormControl",
        "Input",
        "FormDescription",
        "FormMessage",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "Checkbox",
        "Info",
        "Button"
      ]
    },
    {
      "path": "src/components/wedding-setup/WeddingSetupDemo.tsx",
      "name": "WeddingSetupDemo",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "./BasicSetupWizard",
        "./WeddingDetailsForm",
        "./VenueSelector"
      ],
      "exports": [
        "WeddingSetupDemo"
      ],
      "usedComponents": [
        "Badge",
        "CheckCircle2",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Calendar",
        "Users",
        "MapPin",
        "TabsContent",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "BasicSetupWizard",
        "WeddingDetailsForm",
        "VenueSelector"
      ]
    },
    {
      "path": "src/components/wedding-setup/index.ts",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/wedding-website/CustomDomainSetup.tsx",
      "name": "CustomDomainSetup",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "@/components/ui/tabs"
      ],
      "exports": [
        "CustomDomainSetup"
      ],
      "usedComponents": [
        "DomainConfig",
        "CheckCircle",
        "Clock",
        "XCircle",
        "Badge",
        "Card",
        "CardHeader",
        "CardContent",
        "CardTitle",
        "Globe",
        "Button",
        "RefreshCw",
        "ExternalLink",
        "Alert",
        "AlertTriangle",
        "AlertDescription",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Input",
        "Copy",
        "Shield"
      ]
    },
    {
      "path": "src/components/wedding-website/GuestListSync.tsx",
      "name": "GuestListSync",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs"
      ],
      "exports": [
        "GuestListSync"
      ],
      "usedComponents": [
        "GuestSyncStats",
        "Guest",
        "Card",
        "CardHeader",
        "CardContent",
        "CardTitle",
        "Users",
        "Badge",
        "CheckCircle",
        "Clock",
        "Button",
        "RefreshCw",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent"
      ]
    },
    {
      "path": "src/components/wedding-website/LiveRSVPDisplay.tsx",
      "name": "LiveRSVPDisplay",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/progress"
      ],
      "exports": [
        "LiveRSVPDisplay"
      ],
      "usedComponents": [
        "RSVPStats",
        "Card",
        "CardHeader",
        "CardContent",
        "CardTitle",
        "Badge",
        "Progress"
      ]
    },
    {
      "path": "src/components/wedding-website/PhotoSharing.tsx",
      "name": "PhotoSharing",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/components/ui/dialog"
      ],
      "exports": [
        "PhotoSharing"
      ],
      "usedComponents": [
        "WeddingPhoto",
        "HTMLInputElement",
        "Card",
        "CardHeader",
        "CardTitle",
        "Camera",
        "Dialog",
        "DialogTrigger",
        "Button",
        "Upload",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "List",
        "Grid",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Image",
        "Heart",
        "Badge",
        "ChevronLeft",
        "ChevronRight"
      ]
    },
    {
      "path": "src/components/wedding-website/RegistryLinks.tsx",
      "name": "RegistryLinks",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/dialog",
        "@/types/wedding-website"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GripVertical",
        "Gift",
        "ExternalLink",
        "Button",
        "Edit",
        "Trash2",
        "RegistryLink",
        "Card",
        "CardHeader",
        "CardTitle",
        "Plus",
        "CardContent",
        "DndContext",
        "SortableContext",
        "SortableRegistryItem",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Textarea",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/wedding-website/StoryTimeline.tsx",
      "name": "StoryTimeline",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/dialog",
        "@/types/wedding-website"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "GripVertical",
        "Heart",
        "Calendar",
        "Button",
        "Edit",
        "Trash2",
        "WeddingStory",
        "Card",
        "CardHeader",
        "CardTitle",
        "Plus",
        "CardContent",
        "DndContext",
        "SortableContext",
        "SortableStoryItem",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Textarea",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/wedding-website/TravelInformation.tsx",
      "name": "TravelInformation",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/components/ui/select",
        "@/types/wedding-website"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Icon",
        "TravelInfo",
        "Card",
        "CardHeader",
        "CardTitle",
        "MapPin",
        "Button",
        "Plus",
        "CardContent",
        "Badge",
        "Edit",
        "Trash2",
        "Phone",
        "Globe",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/wedding-website/VendorInformation.tsx",
      "name": "VendorInformation",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/dialog"
      ],
      "exports": [
        "VendorInformation"
      ],
      "usedComponents": [
        "Vendor",
        "VendorStats",
        "Instagram",
        "Facebook",
        "Twitter",
        "Globe",
        "Card",
        "CardHeader",
        "Image",
        "Camera",
        "CardTitle",
        "Verified",
        "Badge",
        "CardContent",
        "Star",
        "Button",
        "Phone",
        "Mail",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "ExternalLink",
        "MapPin"
      ]
    },
    {
      "path": "src/components/wedding-website/WeddingParty.tsx",
      "name": "WeddingParty",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/badge",
        "@/components/ui/dialog",
        "@/components/ui/select",
        "@/types/wedding-website"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingPartyMember",
        "User",
        "Badge",
        "Button",
        "Edit",
        "Trash2",
        "Card",
        "CardHeader",
        "CardTitle",
        "Users",
        "Plus",
        "CardContent",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Textarea",
        "DialogFooter"
      ]
    },
    {
      "path": "src/components/wedme/CreateGroupModal.tsx",
      "name": "CreateGroupModal",
      "imports": [],
      "exports": [
        "CreateGroupModal"
      ],
      "usedComponents": [
        "XMarkIcon"
      ]
    },
    {
      "path": "src/components/wedme/EmergencyPhotoGroups.tsx",
      "name": "EmergencyPhotoGroups",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/alert",
        "@/components/ui/card",
        "@/lib/utils"
      ],
      "exports": [
        "EmergencyPhotoGroups"
      ],
      "usedComponents": [
        "EmergencyMode",
        "PhotoGroup",
        "WifiOff",
        "Button",
        "Download",
        "Card",
        "CardHeader",
        "CardTitle",
        "AlertCircle",
        "CardContent",
        "Alert",
        "AlertDescription",
        "QRCodeCanvas",
        "CheckCircle",
        "Users",
        "Camera",
        "Share2"
      ]
    },
    {
      "path": "src/components/wedme/EmptyState.tsx",
      "name": "EmptyState",
      "imports": [],
      "exports": [
        "EmptyState"
      ],
      "usedComponents": [
        "PhotoIcon",
        "PlusIcon"
      ]
    },
    {
      "path": "src/components/wedme/GroupActionsSheet.tsx",
      "name": "GroupActionsSheet",
      "imports": [],
      "exports": [
        "GroupActionsSheet"
      ],
      "usedComponents": [
        "PhotoGroup",
        "XMarkIcon",
        "TrashIcon"
      ]
    },
    {
      "path": "src/components/wedme/InvitationLanding.tsx",
      "name": "InvitationLanding",
      "imports": [
        "@/lib/utils",
        "@/components/ui/button",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/components/ui/label",
        "./SupplierPreview"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SupplierPreview",
        "Card",
        "IconComponent",
        "Button",
        "Mail",
        "Label",
        "Input",
        "ChevronRight",
        "Shield",
        "Clock",
        "Sparkles"
      ]
    },
    {
      "path": "src/components/wedme/MobileConflictDetection.tsx",
      "name": "MobileConflictDetection",
      "imports": [
        "@/components/ui/use-toast",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "MobileConflictDetection"
      ],
      "usedComponents": [
        "AlertTriangleIcon",
        "AlertCircleIcon",
        "InfoIcon",
        "ClockIcon",
        "MapPinIcon",
        "UsersIcon",
        "CameraIcon",
        "CheckIcon",
        "XMarkIcon",
        "ChevronUpIcon",
        "ChevronDownIcon",
        "Conflict",
        "Set",
        "RefreshCwIcon",
        "EyeOffIcon",
        "ConflictCard"
      ]
    },
    {
      "path": "src/components/wedme/MobileGroupBuilder.tsx",
      "name": "MobileGroupBuilder",
      "imports": [
        "@/components/touch/TouchInput",
        "@/components/ui/use-toast",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "MobileGroupBuilder"
      ],
      "usedComponents": [
        "ArrowLeftIcon",
        "ClockIcon",
        "UsersIcon",
        "CheckIcon",
        "TouchInput",
        "TouchTextarea",
        "TouchSelect",
        "PlusIcon",
        "MinusIcon",
        "MapPinIcon",
        "CameraIcon",
        "AlertTriangleIcon",
        "ArrowRightIcon"
      ]
    },
    {
      "path": "src/components/wedme/MobileGuestAssignment.tsx",
      "name": "MobileGuestAssignment",
      "imports": [
        "@/components/touch/TouchInput",
        "@/components/ui/use-toast",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "MobileGuestAssignment"
      ],
      "usedComponents": [
        "CheckIcon",
        "PlusIcon",
        "CameraIcon",
        "UsersIcon",
        "ClockIcon",
        "TouchInput",
        "SearchIcon",
        "DndContext",
        "PhotoGroupDropZone",
        "SortableContext",
        "DraggableGuestCard",
        "UserGroupIcon",
        "XMarkIcon",
        "DragOverlay"
      ]
    },
    {
      "path": "src/components/wedme/OfflinePhotoGroupEditor.tsx",
      "name": "OfflinePhotoGroupEditor",
      "imports": [
        "@/components/touch/TouchInput",
        "@/components/ui/use-toast",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "OfflinePhotoGroupEditor"
      ],
      "usedComponents": [
        "PhotoGroup",
        "Date",
        "OfflineChange",
        "HistoryState",
        "NodeJS",
        "WifiIcon",
        "WifiOffIcon",
        "UploadCloudIcon",
        "ClockIcon",
        "UndoIcon",
        "RedoIcon",
        "RefreshCwIcon",
        "TouchInput",
        "TouchTextarea",
        "TouchSelect",
        "SaveIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/wedme/PhotoGrid.tsx",
      "name": "PhotoGrid",
      "imports": [
        "./PhotoThumbnail",
        "./PhotoPreviewModal"
      ],
      "exports": [
        "PhotoGrid"
      ],
      "usedComponents": [
        "Photo",
        "PhotoThumbnail",
        "PhotoPreviewModal"
      ]
    },
    {
      "path": "src/components/wedme/PhotoGroup.tsx",
      "name": "PhotoGroup",
      "imports": [
        "./PhotoGrid",
        "./GroupActionsSheet"
      ],
      "exports": [
        "PhotoGroup"
      ],
      "usedComponents": [
        "PhotoGroupType",
        "ChevronDownIcon",
        "ChevronRightIcon",
        "EllipsisHorizontalIcon",
        "PhotoGrid",
        "EyeIcon",
        "GroupActionsSheet"
      ]
    },
    {
      "path": "src/components/wedme/PhotoGroupFAB.tsx",
      "name": "PhotoGroupFAB",
      "imports": [],
      "exports": [
        "PhotoGroupFAB"
      ],
      "usedComponents": [
        "PlusIcon"
      ]
    },
    {
      "path": "src/components/wedme/PhotoGroupsManager.tsx",
      "name": "PhotoGroupsManager",
      "imports": [
        "./PhotoGroup",
        "./PhotoGrid",
        "./CreateGroupModal",
        "./PhotoGroupFAB",
        "./EmptyState",
        "@/components/ui/use-toast",
        "@/hooks/usePhotoGroups"
      ],
      "exports": [
        "PhotoGroupsManager"
      ],
      "usedComponents": [
        "PhotoGroupType",
        "Photo",
        "DndContext",
        "SortableContext",
        "PhotoGroup",
        "PhotoGrid",
        "EmptyState",
        "PhotoGroupFAB",
        "CreateGroupModal"
      ]
    },
    {
      "path": "src/components/wedme/PhotoGroupsMobile.tsx",
      "name": "PhotoGroupsMobile",
      "imports": [
        "./PhotoGroupsManager",
        "@/components/touch/TouchInput",
        "@/components/ui/use-toast",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "PhotoGroupsMobile"
      ],
      "usedComponents": [
        "Set",
        "TouchInput",
        "ChevronDownIcon",
        "ShareIcon",
        "EditIcon",
        "TrashIcon",
        "PlusIcon"
      ]
    },
    {
      "path": "src/components/wedme/PhotoPreviewModal.tsx",
      "name": "PhotoPreviewModal",
      "imports": [],
      "exports": [
        "PhotoPreviewModal"
      ],
      "usedComponents": [
        "XMarkIcon",
        "ShareIcon",
        "Image"
      ]
    },
    {
      "path": "src/components/wedme/PhotoThumbnail.tsx",
      "name": "PhotoThumbnail",
      "imports": [],
      "exports": [
        "PhotoThumbnail"
      ],
      "usedComponents": [
        "Image",
        "PhotoIcon",
        "CheckCircleIcon"
      ]
    },
    {
      "path": "src/components/wedme/QuickShareModal.tsx",
      "name": "QuickShareModal",
      "imports": [
        "@/components/ui/use-toast",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "QuickShareModal"
      ],
      "usedComponents": [
        "HTMLCanvasElement",
        "UserIcon",
        "CheckIcon",
        "ShareData",
        "ShareIcon",
        "XMarkIcon",
        "LinkIcon",
        "QrCodeIcon",
        "CameraIcon",
        "CopyIcon",
        "ContactSelector",
        "PermissionSettings",
        "MailIcon",
        "QRCodeDisplay",
        "ExternalLinkIcon"
      ]
    },
    {
      "path": "src/components/wedme/SupplierPreview.tsx",
      "name": "SupplierPreview",
      "imports": [
        "@/lib/utils",
        "@/components/ui/badge",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Card",
        "IconComponent",
        "Badge",
        "Heart",
        "Calendar",
        "Star",
        "Award"
      ]
    },
    {
      "path": "src/components/wedme/WedMeHeader.tsx",
      "name": "WedMeHeader",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/dropdown-menu"
      ],
      "exports": [
        "WedMeHeader"
      ],
      "usedComponents": [
        "WedMeHeaderProps",
        "Button",
        "ArrowLeft",
        "Share",
        "Bell",
        "Badge",
        "DropdownMenu",
        "DropdownMenuTrigger",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "DropdownMenuContent",
        "Heart",
        "DropdownMenuItem",
        "User",
        "Settings",
        "DropdownMenuSeparator"
      ]
    },
    {
      "path": "src/components/wedme/WedMeNavigation.tsx",
      "name": "WedMeNavigation",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "WedMeNavigation"
      ],
      "usedComponents": [
        "WedMeNavigationProps",
        "Button",
        "Badge",
        "MessageCircle",
        "Heart",
        "Settings"
      ]
    },
    {
      "path": "src/components/wedme/WedMeNavigationProvider.tsx",
      "name": "WedMeNavigationProvider",
      "imports": [
        "@/components/ui/use-toast",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "WedMeNavigationProvider",
        "useWedMeNavigation",
        "MobileNavigationMenu",
        "NavigationHeader"
      ],
      "usedComponents": [
        "CameraIcon",
        "HomeIcon",
        "PlusIcon",
        "UsersIcon",
        "CalendarIcon",
        "ClockIcon",
        "MapPinIcon",
        "AlertTriangleIcon",
        "ShareIcon",
        "SettingsIcon",
        "BreadcrumbItem",
        "QuickAction",
        "WedMeNavigationContext",
        "Set",
        "XMarkIcon",
        "SearchIcon",
        "NavigationItem",
        "QuickActionsPanel",
        "ChevronRightIcon",
        "BackIcon",
        "MenuIcon"
      ]
    },
    {
      "path": "src/components/wedme/WeddingContextChat.tsx",
      "name": "WeddingContextChat",
      "imports": [
        "@/lib/utils",
        "../mobile/chatbot/MobileChatInterface"
      ],
      "exports": [
        "default",
        "WeddingContextChat",
        "generateRoleBasedPrompts"
      ],
      "usedComponents": [
        "WeddingContext",
        "Calendar",
        "DollarSign",
        "Users",
        "Heart",
        "MapPin",
        "MobileChatInterface"
      ]
    },
    {
      "path": "src/components/wedme/WeddingDayMode.tsx",
      "name": "WeddingDayMode",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/components/ui/badge",
        "@/components/ui/alert",
        "./EmergencyPhotoGroups",
        "@/lib/integrations/photographerIntegration",
        "@/lib/offline/advancedPhotoGroupSync"
      ],
      "exports": [
        "WeddingDayMode"
      ],
      "usedComponents": [
        "TimelineEvent",
        "VendorStatus",
        "SystemStatus",
        "Wifi",
        "EmergencyPhotoGroups",
        "Battery",
        "Badge",
        "Button",
        "AlertTriangle",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "MapPin",
        "Users",
        "CheckCircle",
        "MessageSquare",
        "Clock",
        "Phone",
        "Camera"
      ]
    },
    {
      "path": "src/components/wedme/__tests__/WedMeFileSystem.test.tsx",
      "name": "WedMeFileSystem.test",
      "imports": [
        "../timeline/WeddingTimelineExperience",
        "../vendor-discovery/VendorDiscoveryEngine",
        "../sharing/FamilyFriendsSharing",
        "../viral/ViralGrowthDashboard",
        "../mobile/MobileFileHub",
        "../mobile/MobileTimelineView",
        "../mobile/MobileSharingInterface",
        "../mobile/MobileWedMeLayout",
        "@/types/wedme/file-management",
        "@/lib/wedme/performance-optimization"
      ],
      "exports": [
        "createMockFile",
        "createMockCouple",
        "mockResizeObserver",
        "mockIntersectionObserver"
      ],
      "usedComponents": [
        "WeddingTimelineExperience",
        "VendorDiscoveryEngine",
        "FamilyFriendsSharing",
        "ViralGrowthDashboard",
        "MobileFileHub",
        "MobileTimelineView",
        "MobileSharingInterface",
        "MobileWedMeLayout",
        "WeddingFile",
        "CoupleProfile"
      ]
    },
    {
      "path": "src/components/wedme/ai-features/AIFeatureMigrationMobile.tsx",
      "name": "AIFeatureMigrationMobile",
      "imports": [
        "@/hooks/useHapticFeedback"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AIFeatureMigrationMobileProps",
        "ArrowRight",
        "CheckCircle",
        "AlertTriangle",
        "IconComponent",
        "Shield",
        "Zap",
        "Clock",
        "Loader2",
        "X",
        "AnimatePresence",
        "ArrowLeft"
      ]
    },
    {
      "path": "src/components/wedme/ai-features/MobileAIFeatureManager.tsx",
      "name": "MobileAIFeatureManager",
      "imports": [
        "@/hooks/useOfflineSync",
        "@/hooks/useHapticFeedback",
        "@/lib/mobile/auto-population-security",
        "./PlatformVsClientMobileToggle",
        "./MobileAPIKeySetup",
        "./MobileCostMonitor",
        "./AIFeatureMigrationMobile"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MobileAIFeatureManagerProps",
        "PlatformType",
        "ConnectionStatus",
        "PlatformClientComparison",
        "CostMonitorView",
        "BudgetAlert",
        "Wifi",
        "WifiOff",
        "AlertTriangle",
        "Sparkles",
        "MoreVertical",
        "RefreshCw",
        "AnimatePresence",
        "PlatformVsClientMobileToggle",
        "Settings",
        "MobileCostMonitor",
        "MobileAPIKeySetup",
        "AIFeatureMigrationMobile"
      ]
    },
    {
      "path": "src/components/wedme/ai-features/MobileAPIKeySetup.tsx",
      "name": "MobileAPIKeySetup",
      "imports": [
        "@/hooks/useHapticFeedback",
        "@/lib/mobile/auto-population-security"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "MobileAPIKeySetupProps",
        "AIProvider",
        "ValidationResult",
        "ConnectionTest",
        "HTMLInputElement",
        "HTMLDivElement",
        "Key",
        "CheckCircle",
        "Info",
        "Shield",
        "EyeOff",
        "Eye",
        "Check",
        "QrCode",
        "TestTube",
        "Loader2",
        "XCircle",
        "RefreshCw",
        "Fingerprint",
        "Zap",
        "ArrowLeft",
        "AnimatePresence",
        "AlertTriangle",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/wedme/ai-features/MobileCostMonitor.tsx",
      "name": "MobileCostMonitor",
      "imports": [
        "@/hooks/useHapticFeedback",
        "@/hooks/useOfflineSync"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "AIFeatureType",
        "MobileCostMonitorProps",
        "CostMonitorView",
        "Date",
        "AnimatePresence",
        "AlertTriangle",
        "DollarSign",
        "WifiOff",
        "RefreshCw",
        "PieChart",
        "TrendingUp",
        "Heart",
        "ArrowUp",
        "ArrowDown",
        "BarChart3",
        "Timer",
        "CheckCircle",
        "Bell",
        "BellOff"
      ]
    },
    {
      "path": "src/components/wedme/ai-features/PlatformVsClientMobileToggle.tsx",
      "name": "PlatformVsClientMobileToggle",
      "imports": [
        "@/hooks/useHapticFeedback"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PlatformVsClientToggleProps",
        "AIFeatureType",
        "HTMLDivElement",
        "IconComponent",
        "ChevronDown",
        "Check",
        "X",
        "AnimatePresence",
        "DollarSign",
        "Shield",
        "Zap",
        "ArrowRight",
        "Star",
        "TrendingUp",
        "Smartphone"
      ]
    },
    {
      "path": "src/components/wedme/analytics/BudgetOptimizationWidget.tsx",
      "name": "BudgetOptimizationWidget",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TrendingDown",
        "AlertTriangle",
        "PieChart",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/wedme/analytics/PersonalizedInsightsPanels.tsx",
      "name": "PersonalizedInsightsPanels",
      "imports": [],
      "exports": [
        "PersonalizedInsightsPanels"
      ],
      "usedComponents": [
        "InsightCard",
        "RiskFactorsPanel",
        "OpportunitiesPanel",
        "PlanningPhaseIndicator",
        "Icon",
        "ClockIcon",
        "ExclamationTriangleIcon",
        "RiskFactorCard",
        "CheckCircleIcon",
        "SparklesIcon",
        "OpportunityCard",
        "LightBulbIcon",
        "CurrencyPoundIcon"
      ]
    },
    {
      "path": "src/components/wedme/analytics/TimelineProgressTracker.tsx",
      "name": "TimelineProgressTracker",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Circle"
      ]
    },
    {
      "path": "src/components/wedme/analytics/VendorPerformanceInsights.tsx",
      "name": "VendorPerformanceInsights",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TrendingUp",
        "Star",
        "Calendar",
        "Users"
      ]
    },
    {
      "path": "src/components/wedme/analytics/WeddingMomentumMeter.tsx",
      "name": "WeddingMomentumMeter",
      "imports": [],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Activity",
        "TrendingUp",
        "linearGradient",
        "Calendar",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/wedme/budget/AdvancedAnalytics.tsx",
      "name": "AdvancedAnalytics",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "AdvancedAnalytics"
      ],
      "usedComponents": [
        "BudgetAnalytics",
        "ThumbsUp",
        "AlertTriangle",
        "ThumbsDown",
        "Info",
        "ArrowUp",
        "ArrowDown",
        "TrendingUp",
        "Icon",
        "RefreshCw",
        "Filter",
        "Eye",
        "EyeOff",
        "ResponsiveContainer",
        "ComposedChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Bar",
        "Line",
        "ReferenceLine",
        "AreaChart",
        "Area",
        "BarChart",
        "RadialBarChart",
        "RadialBar",
        "PieChart",
        "Pie",
        "Cell",
        "ScatterChart",
        "Scatter"
      ]
    },
    {
      "path": "src/components/wedme/budget/BudgetCharts.tsx",
      "name": "BudgetCharts",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "BudgetCharts"
      ],
      "usedComponents": [
        "BudgetTransaction",
        "SpendingTrend",
        "AlertTriangle",
        "Icon",
        "BarChart3",
        "ResponsiveContainer",
        "PieChart",
        "Pie",
        "Cell",
        "Tooltip",
        "PieTooltip",
        "Legend",
        "BarChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "BarTooltip",
        "Bar",
        "AreaChart",
        "linearGradient",
        "TrendTooltip",
        "Area",
        "Calendar",
        "TrendingUp",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/wedme/budget/BudgetOptimizer.tsx",
      "name": "BudgetOptimizer",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "BudgetOptimizer"
      ],
      "usedComponents": [
        "OptimizationSuggestion",
        "OptimizationCampaign",
        "Icon",
        "Sparkles",
        "AlertCircle",
        "Target",
        "CheckCircle",
        "Zap",
        "TrendingUp",
        "Filter",
        "Lightbulb",
        "Info"
      ]
    },
    {
      "path": "src/components/wedme/budget/BudgetOverview.tsx",
      "name": "BudgetOverview",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "BudgetOverview"
      ],
      "usedComponents": [
        "BudgetCategory",
        "AlertTriangle",
        "Plus",
        "Target",
        "CreditCard",
        "PiggyBank",
        "Receipt"
      ]
    },
    {
      "path": "src/components/wedme/budget/BudgetSharing.tsx",
      "name": "BudgetSharing",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "BudgetSharing"
      ],
      "usedComponents": [
        "SharedUser",
        "ShareInvitation",
        "ShareLink",
        "AuditLogEntry",
        "BudgetPermissions",
        "Crown",
        "Shield",
        "Edit3",
        "Eye",
        "Users",
        "Link",
        "UserPlus",
        "AlertTriangle",
        "UserCard",
        "Mail",
        "InvitationCard",
        "ShareLinkCard",
        "History",
        "AuditLogCard",
        "InviteUserModal",
        "CreateLinkModal",
        "EditPermissionsModal",
        "User",
        "Settings",
        "UserX",
        "Copy",
        "XCircle"
      ]
    },
    {
      "path": "src/components/wedme/budget/BudgetTracker.tsx",
      "name": "BudgetTracker",
      "imports": [
        "./BudgetOverview",
        "./CategoryManager",
        "./TransactionEntry",
        "./BudgetCharts",
        "@/lib/utils"
      ],
      "exports": [
        "BudgetTracker"
      ],
      "usedComponents": [
        "BudgetCategory",
        "RefreshCw",
        "Download",
        "Plus",
        "Icon",
        "BudgetOverview",
        "CategoryManager",
        "TransactionEntry",
        "BudgetCharts"
      ]
    },
    {
      "path": "src/components/wedme/budget/CashFlowProjection.tsx",
      "name": "CashFlowProjection",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "CashFlowProjection"
      ],
      "usedComponents": [
        "CashFlowDataPoint",
        "CashFlowInsight",
        "PaymentEvent",
        "AlertTriangle",
        "TrendingUp",
        "Target",
        "Info",
        "RefreshCw",
        "DollarSign",
        "TrendingDown",
        "Clock",
        "Eye",
        "EyeOff",
        "ResponsiveContainer",
        "ComposedChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "CustomTooltip",
        "Legend",
        "Area",
        "Line",
        "ReferenceLine",
        "LineChart",
        "BarChart",
        "Bar"
      ]
    },
    {
      "path": "src/components/wedme/budget/CategoryManager.tsx",
      "name": "CategoryManager",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "CategoryManager"
      ],
      "usedComponents": [
        "BudgetCategory",
        "CategoryFormData",
        "Record",
        "Plus",
        "AlertTriangle",
        "DollarSign",
        "Pencil",
        "Trash2",
        "Percent"
      ]
    },
    {
      "path": "src/components/wedme/budget/ContractMilestones.tsx",
      "name": "ContractMilestones",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "ContractMilestones"
      ],
      "usedComponents": [
        "Contract",
        "MilestoneStats",
        "Milestone",
        "Set",
        "ContractData",
        "File",
        "HTMLInputElement",
        "CheckCircle",
        "Clock",
        "AlertTriangle",
        "Circle",
        "FileText",
        "Upload",
        "Plus",
        "Target",
        "ContractCard",
        "MilestoneTimeline",
        "MilestoneCalendar",
        "ChevronDown",
        "ChevronRight",
        "MilestoneItem",
        "Calendar",
        "DollarSign",
        "Bell",
        "CheckSquare",
        "Square"
      ]
    },
    {
      "path": "src/components/wedme/budget/CurrencySelector.tsx",
      "name": "CurrencySelector",
      "imports": [
        "@/lib/utils",
        "@/lib/utils/currency"
      ],
      "exports": [
        "CurrencySelector",
        "CurrencyDisplay",
        "CurrencyConverter",
        "ExchangeRateDisplay",
        "MultiCurrencyInput"
      ],
      "usedComponents": [
        "Map",
        "Globe",
        "CheckCircle",
        "RefreshCw",
        "CurrencyConverter",
        "CurrencyConversion",
        "Calculator",
        "ExchangeRate",
        "TrendingUp",
        "TrendingDown",
        "ExchangeRateDisplay"
      ]
    },
    {
      "path": "src/components/wedme/budget/ExpenseCategorizationManager.tsx",
      "name": "ExpenseCategorizationManager",
      "imports": [
        "@/lib/utils",
        "@/lib/services/expense-categorizer"
      ],
      "exports": [
        "ExpenseCategorizationManager"
      ],
      "usedComponents": [
        "CategorizationStats",
        "HTMLInputElement",
        "CheckCircle",
        "AlertTriangle",
        "XCircle",
        "Brain",
        "Settings",
        "Zap",
        "BarChart3",
        "Target",
        "TrendingUp",
        "Lightbulb",
        "Download",
        "Upload",
        "Filter",
        "Search",
        "CategorizationCard",
        "Edit3",
        "ThumbsUp",
        "ThumbsDown"
      ]
    },
    {
      "path": "src/components/wedme/budget/PaymentScheduler.tsx",
      "name": "PaymentScheduler",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "PaymentScheduler"
      ],
      "usedComponents": [
        "PaymentSchedule",
        "VendorContact",
        "CheckCircle",
        "XCircle",
        "AlertTriangle",
        "Clock",
        "Bell",
        "Plus",
        "DollarSign",
        "Search",
        "CalendarDays",
        "Edit3",
        "Trash2"
      ]
    },
    {
      "path": "src/components/wedme/budget/ReceiptUpload.tsx",
      "name": "ReceiptUpload",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "ReceiptUpload"
      ],
      "usedComponents": [
        "ReceiptFile",
        "Set",
        "HTMLInputElement",
        "Image",
        "FileText",
        "Upload",
        "AlertTriangle",
        "Loader2",
        "Check",
        "Trash2",
        "X"
      ]
    },
    {
      "path": "src/components/wedme/budget/TransactionEntry.tsx",
      "name": "TransactionEntry",
      "imports": [
        "@/lib/utils"
      ],
      "exports": [
        "TransactionEntry"
      ],
      "usedComponents": [
        "TransactionFormData",
        "Record",
        "X",
        "Loader2",
        "Check",
        "Calendar",
        "Building2",
        "Upload",
        "FileText",
        "Plus",
        "AlertTriangle"
      ]
    },
    {
      "path": "src/components/wedme/budget/index.tsx",
      "name": "index",
      "imports": [],
      "exports": [],
      "usedComponents": []
    },
    {
      "path": "src/components/wedme/cost-optimization/EmergencyCostStop.tsx",
      "name": "EmergencyCostStop",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "EmergencyState",
        "Card",
        "CardContent",
        "CheckCircle",
        "CardHeader",
        "CardTitle",
        "AlertTriangle",
        "Badge",
        "Progress",
        "StopCircle",
        "Button",
        "XCircle",
        "Phone",
        "MessageCircle",
        "Volume2",
        "VolumeX",
        "Clock"
      ]
    },
    {
      "path": "src/components/wedme/cost-optimization/MobileCostMonitor.tsx",
      "name": "MobileCostMonitor",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "CostMetrics",
        "TrendingUp",
        "TrendingDown",
        "Target",
        "Smartphone",
        "Wifi",
        "WifiOff",
        "Battery",
        "Card",
        "CardHeader",
        "CardTitle",
        "DollarSign",
        "CardContent",
        "Progress",
        "Badge",
        "AlertTriangle",
        "Zap",
        "Button"
      ]
    },
    {
      "path": "src/components/wedme/cost-optimization/MobileOptimizationSettings.tsx",
      "name": "MobileOptimizationSettings",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/switch",
        "@/components/ui/badge",
        "@/components/ui/slider",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "OptimizationSettings",
        "Zap",
        "Target",
        "Shield",
        "Card",
        "CardHeader",
        "CardTitle",
        "Settings",
        "Battery",
        "Bell",
        "CardContent",
        "Switch",
        "Badge",
        "Slider",
        "Smartphone",
        "Moon",
        "Sun",
        "Vibrate",
        "Button",
        "AlertTriangle",
        "RotateCcw",
        "Save"
      ]
    },
    {
      "path": "src/components/wedme/cost-optimization/OfflineCostTracker.tsx",
      "name": "OfflineCostTracker",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/input",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "OfflineCostEntry",
        "Date",
        "Card",
        "CardHeader",
        "CardTitle",
        "Wifi",
        "WifiOff",
        "Badge",
        "Save",
        "CardContent",
        "CloudOff",
        "Button",
        "Upload",
        "Plus",
        "Input",
        "Trash2",
        "Cloud",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/wedme/cost-optimization/TouchBudgetControls.tsx",
      "name": "TouchBudgetControls",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/progress",
        "@/components/ui/slider",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BudgetCategory",
        "Target",
        "Zap",
        "TrendingUp",
        "Shield",
        "Card",
        "CardHeader",
        "CardTitle",
        "Button",
        "Vibrate",
        "CardContent",
        "Badge",
        "AlertCircle",
        "Progress",
        "Slider",
        "Minus",
        "Plus",
        "RotateCcw",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/wedme/cost-optimization/WeddingSeasonProjector.tsx",
      "name": "WeddingSeasonProjector",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/progress",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Flower",
        "Sun",
        "CloudRain",
        "Snowflake",
        "Calendar",
        "TrendingUp",
        "TrendingDown",
        "Target",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge",
        "Progress",
        "Button",
        "Thermometer",
        "DollarSign"
      ]
    },
    {
      "path": "src/components/wedme/integration/WedSyncIntegrationHub.tsx",
      "name": "WedSyncIntegrationHub",
      "imports": [
        "@/types/wedme/file-management",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Link",
        "SyncStatusIndicator",
        "RefreshCw",
        "Sync",
        "StatCard",
        "Icon",
        "AnimatePresence",
        "IntegrationOverview",
        "SupplierConnectionsManager",
        "SyncRulesConfiguration",
        "ConflictResolution",
        "IntegrationSettings",
        "RecentSyncActivity",
        "DataFlowVisualization",
        "QuickActionCard",
        "Activity",
        "CheckCircle",
        "XCircle",
        "Clock",
        "DataFlowItem",
        "ArrowUpDown",
        "SupplierConnectionCard",
        "Users",
        "SyncRuleCard",
        "Settings",
        "ConflictCard",
        "SettingToggle"
      ]
    },
    {
      "path": "src/components/wedme/knowledge-base/ArticleCard.tsx",
      "name": "ArticleCard",
      "imports": [],
      "exports": [
        "ArticleCard"
      ],
      "usedComponents": [
        "Link",
        "WifiOff",
        "Clock",
        "Heart",
        "Tag",
        "Bookmark",
        "Share2",
        "ExternalLink"
      ]
    },
    {
      "path": "src/components/wedme/knowledge-base/CategoryGrid.tsx",
      "name": "CategoryGrid",
      "imports": [],
      "exports": [
        "CategoryGrid"
      ],
      "usedComponents": [
        "Link",
        "IconComponent",
        "Sparkles",
        "Heart"
      ]
    },
    {
      "path": "src/components/wedme/knowledge-base/MobileKnowledgeBase.tsx",
      "name": "MobileKnowledgeBase",
      "imports": [
        "./CategoryGrid",
        "./SearchInterface",
        "./VoiceSearchInterface",
        "./OfflineIndicator",
        "./ArticleCard",
        "@/hooks/useOfflineKnowledge",
        "@/hooks/useVoiceSearch"
      ],
      "exports": [
        "MobileKnowledgeBase"
      ],
      "usedComponents": [
        "OfflineIndicator",
        "Search",
        "Mic",
        "AnimatePresence",
        "SearchInterface",
        "Heart",
        "Calendar",
        "CategoryGrid",
        "Clock",
        "ArticleCard",
        "WifiOff",
        "VoiceSearchInterface"
      ]
    },
    {
      "path": "src/components/wedme/knowledge-base/OfflineIndicator.tsx",
      "name": "OfflineIndicator",
      "imports": [],
      "exports": [
        "OfflineIndicator"
      ],
      "usedComponents": [
        "RefreshCw",
        "WifiOff",
        "Wifi",
        "AnimatePresence",
        "Clock",
        "AlertCircle",
        "Check"
      ]
    },
    {
      "path": "src/components/wedme/knowledge-base/SearchInterface.tsx",
      "name": "SearchInterface",
      "imports": [
        "./ArticleCard"
      ],
      "exports": [
        "SearchInterface"
      ],
      "usedComponents": [
        "SearchResult",
        "SearchSuggestion",
        "Search",
        "X",
        "Tag",
        "WifiOff",
        "AnimatePresence",
        "ArticleCard",
        "Sparkles",
        "Clock"
      ]
    },
    {
      "path": "src/components/wedme/knowledge-base/VoiceSearchInterface.tsx",
      "name": "VoiceSearchInterface",
      "imports": [],
      "exports": [
        "VoiceSearchInterface"
      ],
      "usedComponents": [
        "X",
        "Sparkles",
        "MicOff",
        "Mic",
        "AnimatePresence",
        "Volume2"
      ]
    },
    {
      "path": "src/components/wedme/mobile/MobileFileHub.tsx",
      "name": "MobileFileHub",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/types/wedme/file-management",
        "@/lib/wedme/performance-optimization"
      ],
      "exports": [
        "default",
        "MobileFileHub"
      ],
      "usedComponents": [
        "MobileFileHubProps",
        "WeddingFile",
        "Button",
        "Upload",
        "Search",
        "Input",
        "Icon",
        "Badge",
        "AnimatePresence",
        "MobileFileCard",
        "MobileFileListItem",
        "Camera",
        "Share2",
        "List",
        "Grid",
        "MobileFileCardProps",
        "Card",
        "CardContent",
        "LazyLoader",
        "Star",
        "MobileFileListItemProps"
      ]
    },
    {
      "path": "src/components/wedme/mobile/MobileSharingInterface.tsx",
      "name": "MobileSharingInterface",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/input",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/avatar",
        "@/components/ui/switch",
        "@/components/ui/label",
        "@/components/ui/textarea",
        "@/components/ui/select",
        "@/types/wedme/file-management",
        "@/lib/wedme/performance-optimization"
      ],
      "exports": [
        "default",
        "MobileSharingInterface"
      ],
      "usedComponents": [
        "ViralResult",
        "SharingGroup",
        "MobileSharingInterfaceProps",
        "SocialPlatform",
        "PrivacyLevel",
        "Date",
        "ContentSuggestion",
        "Button",
        "X",
        "React",
        "Icon",
        "Camera",
        "Clock",
        "Users",
        "AnimatePresence",
        "ContentSelectionStep",
        "AudienceSelectionStep",
        "PlatformSelectionStep",
        "ScheduleStep",
        "ReviewStep",
        "Send",
        "ContentSelectionStepProps",
        "LazyLoader",
        "Sparkles",
        "Badge",
        "Zap",
        "Card",
        "CardContent",
        "TrendingUp",
        "Label",
        "Textarea",
        "Switch",
        "AudienceSelectionStepProps",
        "PlatformSelectionStepProps",
        "ScheduleStepProps",
        "ReviewStepProps",
        "Video",
        "FileText",
        "Music"
      ]
    },
    {
      "path": "src/components/wedme/mobile/MobileTimelineView.tsx",
      "name": "MobileTimelineView",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card",
        "@/components/ui/avatar",
        "@/components/ui/progress",
        "@/components/ui/input",
        "@/types/wedme/file-management",
        "@/lib/wedme/performance-optimization"
      ],
      "exports": [
        "default",
        "MobileTimelineView"
      ],
      "usedComponents": [
        "MobileTimelineViewProps",
        "TimelineMoment",
        "HTMLDivElement",
        "Calendar",
        "Button",
        "Pause",
        "Play",
        "Share2",
        "Search",
        "Input",
        "Grid",
        "List",
        "Progress",
        "AnimatePresence",
        "TimelineView",
        "MomentsGridView",
        "ArrowUp",
        "MomentDetailModal",
        "TimelineViewProps",
        "Card",
        "CardContent",
        "Sparkles",
        "Clock",
        "MapPin",
        "Users",
        "Badge",
        "LazyLoader",
        "FileIcon",
        "Heart",
        "MessageCircle",
        "Eye",
        "ExternalLink",
        "MomentsGridViewProps",
        "Camera",
        "MomentDetailModalProps",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Video",
        "Music"
      ]
    },
    {
      "path": "src/components/wedme/mobile/MobileWedMeLayout.tsx",
      "name": "MobileWedMeLayout",
      "imports": [
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/card",
        "@/components/ui/input",
        "@/types/wedme/file-management",
        "@/lib/wedme/performance-optimization",
        "./MobileFileHub",
        "./MobileTimelineView",
        "./MobileSharingInterface"
      ],
      "exports": [
        "default",
        "MobileWedMeLayout"
      ],
      "usedComponents": [
        "MobileWedMeLayoutProps",
        "WeddingFile",
        "Ring",
        "Button",
        "Search",
        "Bell",
        "Badge",
        "X",
        "Menu",
        "AnimatePresence",
        "Input",
        "Upload",
        "Share2",
        "Calendar",
        "Settings",
        "Sparkles",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "HomeView",
        "MobileFileHub",
        "MobileTimelineView",
        "SharingView",
        "ProfileView",
        "Icon",
        "Plus",
        "MobileSharingInterface",
        "HomeViewProps",
        "Card",
        "CardContent",
        "Camera",
        "TrendingUp",
        "getFileIcon",
        "Star",
        "Clock",
        "MapPin",
        "Video",
        "FileText",
        "Music"
      ]
    },
    {
      "path": "src/components/wedme/sharing/ContentCurationSuite.tsx",
      "name": "ContentCurationSuite",
      "imports": [
        "@/types/wedme/file-management",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Set",
        "List",
        "Grid",
        "Icon",
        "AnimatePresence",
        "SmartCurationCard",
        "Search",
        "Share2",
        "FileSelectionCard",
        "ScheduledSharingManager",
        "ContentAnalyticsDashboard",
        "Sparkles",
        "IconComponent",
        "Calendar",
        "Eye",
        "Heart",
        "MessageCircle"
      ]
    },
    {
      "path": "src/components/wedme/sharing/FamilyFriendsSharing.tsx",
      "name": "FamilyFriendsSharing",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/lib/wedme/sharing-engine",
        "./SharingGroupManager",
        "./ContentCurationSuite",
        "./PrivacyControlCenter",
        "./SharingAnalyticsDashboard"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "FamilyFriendsSharingProps",
        "SharingGroup",
        "ActiveShare",
        "PrivacySettings",
        "WeddingFile",
        "Share2",
        "Button",
        "Plus",
        "Badge",
        "Card",
        "Clock",
        "Eye",
        "Download",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Users",
        "Sparkles",
        "Shield",
        "BarChart",
        "TabsContent",
        "SharingGroupManager",
        "ContentCurationSuite",
        "PrivacyControlCenter",
        "SharingAnalyticsDashboard",
        "AnimatePresence"
      ]
    },
    {
      "path": "src/components/wedme/sharing/PrivacyControlCenter.tsx",
      "name": "PrivacyControlCenter",
      "imports": [
        "@/types/wedme/file-management",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Set",
        "PrivacyLevel",
        "Shield",
        "Icon",
        "AnimatePresence",
        "PrivacyStatCard",
        "QuickPrivacySetting",
        "SecurityRecommendations",
        "GroupAccessManager",
        "FilePermissionsManager",
        "RestrictionsManager",
        "AccessAuditLog",
        "Check",
        "AlertTriangle",
        "Users",
        "Settings",
        "Search",
        "Filter",
        "FilePermissionRow",
        "ChevronDown",
        "ChevronRight",
        "PrivacyIcon",
        "RestrictionToggle",
        "Clock",
        "MapPin",
        "Smartphone",
        "Monitor"
      ]
    },
    {
      "path": "src/components/wedme/sharing/SharingAnalyticsDashboard.tsx",
      "name": "SharingAnalyticsDashboard",
      "imports": [
        "@/types/wedme/file-management",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "BarChart3",
        "Icon",
        "AnimatePresence",
        "MetricCard",
        "ViralScoreBreakdown",
        "TopContentCard",
        "ContentPerformanceAnalysis",
        "AudienceInsightsPanel",
        "ViralGrowthAnalysis",
        "TrendsAnalysis",
        "ArrowUpRight",
        "ArrowDownRight",
        "Trophy",
        "Eye",
        "Heart",
        "Share2",
        "MessageCircle",
        "Users",
        "MapPin",
        "Smartphone",
        "Monitor",
        "Zap",
        "TrendingUp",
        "TrendingDown"
      ]
    },
    {
      "path": "src/components/wedme/sharing/SharingGroupManager.tsx",
      "name": "SharingGroupManager",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/label",
        "@/components/ui/avatar",
        "@/components/ui/checkbox",
        "@/components/ui/select",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/ui/textarea"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "SharingGroupManagerProps",
        "SharingGroup",
        "WeddingRole",
        "CoupleContact",
        "GroupPermissions",
        "ContentPreferences",
        "Button",
        "Import",
        "Plus",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Brain",
        "Users",
        "TabsContent",
        "IntelligentGroupCard",
        "CustomGroupCard",
        "AnimatePresence",
        "Label",
        "Input",
        "Textarea",
        "Checkbox",
        "Search",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "ScrollArea",
        "Avatar",
        "AvatarFallback",
        "Badge",
        "IntelligentGroupCardProps",
        "Card",
        "GroupIcon",
        "Sparkles",
        "Eye",
        "Download",
        "MessageCircle",
        "Edit",
        "CustomGroupCardProps",
        "Trash2"
      ]
    },
    {
      "path": "src/components/wedme/tasks/MobileStatusUpdateModal.tsx",
      "name": "MobileStatusUpdateModal",
      "imports": [
        "@/components/touch",
        "@/components/mobile/MobileEnhancedFeatures",
        "@/components/mobile/MobileEnhancedFeatures",
        "./PhotoCaptureInterface",
        "@/components/ui/avatar",
        "@/lib/utils"
      ],
      "exports": [
        "MobileStatusUpdateModal"
      ],
      "usedComponents": [
        "Task",
        "FormData",
        "MediaRecorder",
        "Blob",
        "BottomSheet",
        "XIcon",
        "TouchInput",
        "Icon",
        "TouchTextarea",
        "CalendarIcon",
        "ClockIcon",
        "MapPinIcon",
        "FileTextIcon",
        "ImageIcon",
        "CameraIcon",
        "TrashIcon",
        "MicIcon",
        "StopCircleIcon",
        "PlayIcon",
        "CheckCircleIcon",
        "SaveIcon",
        "PhotoCaptureInterface"
      ]
    },
    {
      "path": "src/components/wedme/tasks/PhotoCaptureInterface.tsx",
      "name": "PhotoCaptureInterface",
      "imports": [
        "@/components/mobile/MobileEnhancedFeatures",
        "@/components/mobile/MobileEnhancedFeatures",
        "@/lib/security/mobile-security",
        "@/lib/utils"
      ],
      "exports": [
        "PhotoCaptureInterface"
      ],
      "usedComponents": [
        "CapturedPhoto",
        "MediaStream",
        "HTMLVideoElement",
        "HTMLCanvasElement",
        "HTMLInputElement",
        "BottomSheet",
        "XIcon",
        "CameraIcon",
        "ImageIcon",
        "FlipHorizontalIcon",
        "FlashIcon",
        "CheckIcon",
        "TrashIcon"
      ]
    },
    {
      "path": "src/components/wedme/tasks/TaskStatusCard.tsx",
      "name": "TaskStatusCard",
      "imports": [
        "@/components/mobile/MobileEnhancedFeatures",
        "@/components/mobile/MobileEnhancedFeatures",
        "@/components/ui/avatar",
        "@/lib/utils"
      ],
      "exports": [
        "TaskStatusCard"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "CheckCircleIcon",
        "ClockIcon",
        "AlertCircleIcon",
        "SwipeableCard",
        "EditIcon",
        "MoreHorizontalIcon",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "UserIcon",
        "CalendarIcon",
        "MapPinIcon",
        "CameraIcon",
        "UserPlusIcon",
        "ShareIcon"
      ]
    },
    {
      "path": "src/components/wedme/tasks/TaskTrackingMobileDashboard.tsx",
      "name": "TaskTrackingMobileDashboard",
      "imports": [
        "../WedMeHeader",
        "./TaskStatusCard",
        "./MobileStatusUpdateModal",
        "@/components/touch/TouchInput",
        "@/components/mobile/MobileEnhancedFeatures",
        "@/hooks/useMobileSecurity",
        "@/hooks/useWeddingDayOffline",
        "@/lib/utils"
      ],
      "exports": [
        "TaskTrackingMobileDashboard"
      ],
      "usedComponents": [
        "Task",
        "WedMeHeader",
        "WifiOffIcon",
        "RefreshCwIcon",
        "TouchInput",
        "PullToRefresh",
        "TaskStatusCard",
        "FilterIcon",
        "CheckCircleIcon",
        "PlusIcon",
        "MobileStatusUpdateModal"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TimelineContent.tsx",
      "name": "TimelineContent",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimelineContentProps",
        "Set",
        "HTMLDivElement",
        "Card",
        "Clock",
        "MapPin",
        "Badge",
        "Sparkles",
        "FilePreview",
        "Users",
        "Avatar",
        "AvatarFallback",
        "AvatarImage",
        "Star",
        "Button",
        "Eye",
        "TrendingUp",
        "Share2",
        "CheckCircle",
        "FilePreviewProps",
        "Play",
        "FileIcon",
        "AnimatePresence",
        "Download"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TimelineExportModal.tsx",
      "name": "TimelineExportModal",
      "imports": [
        "@/lib/utils",
        "@/types/timeline",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TimelineExportModal",
        "handleExport"
      ],
      "usedComponents": [
        "ExportOptions",
        "HTMLDivElement",
        "Calendar",
        "Clock",
        "MapPin",
        "Users",
        "AnimatePresence",
        "X",
        "IconComponent",
        "Eye",
        "Download"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TimelineHeader.tsx",
      "name": "TimelineHeader",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/card"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimelineHeaderProps",
        "Sparkles",
        "Calendar",
        "MapPin",
        "Camera",
        "Heart",
        "Badge",
        "Button",
        "Grid3X3",
        "Share2",
        "Icon",
        "Card",
        "TrendingUp"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TimelineMomentDetails.tsx",
      "name": "TimelineMomentDetails",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/tabs"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimelineMomentDetailsProps",
        "WeddingFile",
        "Clock",
        "MapPin",
        "Button",
        "X",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Badge",
        "TabsContent",
        "Card",
        "Users",
        "Avatar",
        "AvatarFallback",
        "Sparkles",
        "Star",
        "Video",
        "FileIcon",
        "Eye",
        "Download",
        "Camera",
        "Copy",
        "Facebook",
        "Instagram",
        "Twitter",
        "Send",
        "Heart",
        "Share2",
        "MessageCircle"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TimelineNavigation.tsx",
      "name": "TimelineNavigation",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/components/ui/button",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "TimelineNavigationProps",
        "Set",
        "WeddingPhase",
        "Button",
        "ScrollArea",
        "Icon",
        "ChevronUp",
        "ChevronDown",
        "AnimatePresence",
        "MomentIcon",
        "Clock",
        "Badge",
        "Sparkles"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TimelineShareModal.tsx",
      "name": "TimelineShareModal",
      "imports": [
        "@/lib/utils",
        "@/types/timeline",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TimelineShareModal"
      ],
      "usedComponents": [
        "ShareOptions",
        "ShareLink",
        "HTMLCanvasElement",
        "AnimatePresence",
        "X",
        "IconComponent",
        "Check",
        "Copy",
        "Smartphone",
        "Download",
        "Globe",
        "Share2",
        "Mail",
        "MessageSquare",
        "Lock",
        "EyeOff",
        "Eye"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TimelineTemplateSelector.tsx",
      "name": "TimelineTemplateSelector",
      "imports": [
        "@/lib/utils",
        "@/types/timeline",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TimelineTemplateSelector"
      ],
      "usedComponents": [
        "TimelineTemplate",
        "X",
        "Clock",
        "Users",
        "Star",
        "Check",
        "IconComponent",
        "ArrowRight"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TouchConflictResolutionModal.tsx",
      "name": "TouchConflictResolutionModal",
      "imports": [
        "@/lib/utils",
        "@/types/timeline",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TouchConflictResolutionModal"
      ],
      "usedComponents": [
        "TimelineEvent",
        "AnimatePresence",
        "SeverityIcon",
        "X",
        "ConflictIcon",
        "Clock",
        "MapPin",
        "SolutionIcon",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/wedme/timeline/TouchTimePicker.tsx",
      "name": "TouchTimePicker",
      "imports": [
        "@/lib/utils",
        "@/hooks/useTouch"
      ],
      "exports": [
        "TouchTimePicker",
        "TouchDurationPicker"
      ],
      "usedComponents": [
        "HTMLDivElement",
        "Clock",
        "X",
        "Check"
      ]
    },
    {
      "path": "src/components/wedme/timeline/ViralSharingPanel.tsx",
      "name": "ViralSharingPanel",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/switch",
        "@/components/ui/slider",
        "@/components/ui/textarea",
        "@/components/ui/label",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "ViralSharingPanelProps",
        "ViralOptimization",
        "Date",
        "Share2",
        "Button",
        "X",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "ScrollArea",
        "TabsContent",
        "Card",
        "BarChart",
        "Sparkles",
        "Badge",
        "TrendingUp",
        "Label",
        "Textarea",
        "Zap",
        "Switch",
        "Icon",
        "CheckCircle",
        "Calendar",
        "Clock",
        "Eye",
        "Heart"
      ]
    },
    {
      "path": "src/components/wedme/timeline/WedMeMobileTimelineBuilder.tsx",
      "name": "WedMeMobileTimelineBuilder",
      "imports": [
        "@/lib/utils",
        "@/types/timeline",
        "@/hooks/useTouch"
      ],
      "exports": [
        "WedMeMobileTimelineBuilder"
      ],
      "usedComponents": [
        "TimelineEvent",
        "DragInfo",
        "HTMLDivElement",
        "AlertTriangle",
        "Plus",
        "GripVertical",
        "IconComponent",
        "Clock",
        "MapPin",
        "Users",
        "Check",
        "Edit2",
        "Trash2",
        "Heart"
      ]
    },
    {
      "path": "src/components/wedme/timeline/WeddingTimelineExperience.tsx",
      "name": "WeddingTimelineExperience",
      "imports": [
        "@/types/wedme/file-management",
        "./TimelineHeader",
        "./TimelineNavigation",
        "./TimelineContent",
        "./TimelineMomentDetails",
        "./ViralSharingPanel",
        "@/lib/wedme/timeline-engine",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "WeddingTimelineExperienceProps",
        "TimelineView",
        "TimelineMoment",
        "WeddingFile",
        "TimelineHeader",
        "Card",
        "Calendar",
        "TimelineNavigation",
        "TimelineContent",
        "AnimatePresence",
        "TimelineMomentDetails",
        "ViralSharingPanel",
        "Button",
        "Share2",
        "Sparkles",
        "Camera",
        "Badge"
      ]
    },
    {
      "path": "src/components/wedme/vendor-discovery/VendorDiscoveryCard.tsx",
      "name": "VendorDiscoveryCard",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/avatar",
        "@/components/ui/progress"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorDiscoveryCardProps",
        "Badge",
        "Card",
        "Play",
        "Camera",
        "Sparkles",
        "SourceIcon",
        "Heart",
        "Bookmark",
        "Avatar",
        "AvatarImage",
        "AvatarFallback",
        "Zap",
        "Star",
        "MapPin",
        "Progress",
        "DollarSign",
        "Award",
        "Button",
        "Eye",
        "ArrowRight",
        "Mail",
        "Phone",
        "Globe",
        "Instagram",
        "Calendar"
      ]
    },
    {
      "path": "src/components/wedme/vendor-discovery/VendorDiscoveryEngine.tsx",
      "name": "VendorDiscoveryEngine",
      "imports": [
        "@/types/wedme/file-management",
        "@/components/ui/card",
        "@/components/ui/button",
        "@/components/ui/badge",
        "@/components/ui/input",
        "@/components/ui/avatar",
        "@/components/ui/tabs",
        "@/components/ui/scroll-area",
        "@/components/ui/select",
        "@/components/ui/slider",
        "@/lib/wedme/vendor-discovery-engine"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "VendorDiscoveryEngineProps",
        "DiscoveryMode",
        "SortBy",
        "VendorProfile",
        "VendorCategory",
        "Search",
        "Button",
        "Filter",
        "Badge",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "AnimatePresence",
        "Slider",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Sparkles",
        "Heart",
        "TrendingUp",
        "TabsContent",
        "VendorDiscoveryGrid",
        "Users",
        "VendorDiscoveryGridProps",
        "VendorDiscoveryCard"
      ]
    },
    {
      "path": "src/components/wedme/viral/ViralGrowthDashboard.tsx",
      "name": "ViralGrowthDashboard",
      "imports": [
        "@/types/wedme/file-management",
        "@/lib/utils"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "Zap",
        "ArrowUpRight",
        "ArrowDownRight",
        "Icon",
        "AnimatePresence",
        "ViralOverviewSection",
        "ViralContentAnalysis",
        "PlatformPerformanceSection",
        "GrowthPredictionsSection",
        "OptimizationRecommendations",
        "ViralMetricCard",
        "ViralGrowthChart",
        "ViralFactorsBreakdown",
        "InfluencerImpactAnalysis",
        "BarChart3",
        "ViralContentCard",
        "Trophy",
        "Sparkles",
        "PlatformCard",
        "PredictionCard",
        "GrowthTimelineChart",
        "TrendingUp",
        "OptimizationCard"
      ]
    },
    {
      "path": "src/components/wedme/website/PhotoAlbums.tsx",
      "name": "PhotoAlbums",
      "imports": [
        "@/lib/supabase/client"
      ],
      "exports": [
        "default"
      ],
      "usedComponents": [
        "PhotoAlbum",
        "Photo",
        "Image",
        "Grid",
        "List",
        "Upload",
        "Heart",
        "Share2",
        "Download",
        "Eye",
        "X"
      ]
    },
    {
      "path": "src/components/whatsapp/WhatsAppGroupManager.tsx",
      "name": "WhatsAppGroupManager",
      "imports": [],
      "exports": [
        "WhatsAppGroupManager"
      ],
      "usedComponents": [
        "Group",
        "GroupMember",
        "Plus",
        "Users",
        "UserPlus",
        "Send",
        "UserMinus"
      ]
    },
    {
      "path": "src/components/whatsapp/WhatsAppMessageComposer.tsx",
      "name": "WhatsAppMessageComposer",
      "imports": [],
      "exports": [
        "WhatsAppMessageComposer"
      ],
      "usedComponents": [
        "Send",
        "Template",
        "Image",
        "FileText"
      ]
    },
    {
      "path": "src/components/whatsapp/WhatsAppTemplateManager.tsx",
      "name": "WhatsAppTemplateManager",
      "imports": [],
      "exports": [
        "WhatsAppTemplateManager"
      ],
      "usedComponents": [
        "Template",
        "CheckCircle",
        "Clock",
        "XCircle",
        "AlertCircle",
        "Plus",
        "Eye",
        "Trash2"
      ]
    },
    {
      "path": "src/components/widgets/QuickStats.tsx",
      "name": "QuickStats",
      "imports": [
        "@/components/ui/card",
        "@/lib/utils"
      ],
      "exports": [
        "QuickStats",
        "defaultWeddingStats"
      ],
      "usedComponents": [
        "TrendingUp",
        "TrendingDown",
        "Minus",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Users",
        "Calendar",
        "CheckCircle"
      ]
    },
    {
      "path": "src/components/widgets/RecentActivity.tsx",
      "name": "RecentActivity",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/avatar",
        "@/lib/utils"
      ],
      "exports": [
        "RecentActivity",
        "defaultRecentActivities"
      ],
      "usedComponents": [
        "MessageSquare",
        "CheckCircle",
        "Calendar",
        "FileText",
        "Mail",
        "Phone",
        "AlertCircle",
        "Clock",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "User",
        "Avatar"
      ]
    },
    {
      "path": "src/components/widgets/TodaySchedule.tsx",
      "name": "TodaySchedule",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "TodaySchedule"
      ],
      "usedComponents": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Calendar",
        "CardContent",
        "Clock",
        "MapPin",
        "Users",
        "Badge"
      ]
    },
    {
      "path": "src/components/widgets/UrgentTasks.tsx",
      "name": "UrgentTasks",
      "imports": [
        "@/components/ui/card",
        "@/components/ui/badge",
        "@/lib/utils"
      ],
      "exports": [
        "UrgentTasks"
      ],
      "usedComponents": [
        "User",
        "Calendar",
        "Clock",
        "AlertTriangle",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent"
      ]
    },
    {
      "path": "src/components/workflow/deadlines/DeadlineTracker.tsx",
      "name": "DeadlineTracker",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [
        "DeadlineTracker"
      ],
      "usedComponents": [
        "DeadlineTrackerProps",
        "DeadlineStats",
        "AlertTriangle",
        "Clock",
        "Calendar",
        "CheckCircle",
        "StatCard",
        "Bell"
      ]
    },
    {
      "path": "src/components/workflow/status/TaskStatusManager.tsx",
      "name": "TaskStatusManager",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [
        "TaskStatusManager"
      ],
      "usedComponents": [
        "TaskStatusManagerProps",
        "StatusUpdate",
        "TaskStatus",
        "AlertTriangle",
        "CurrentIcon",
        "StatusIcon",
        "FromIcon",
        "ToIcon",
        "User",
        "Calendar",
        "MessageSquare"
      ]
    },
    {
      "path": "src/components/workflow/tasks/DelegationModal.tsx",
      "name": "DelegationModal",
      "imports": [
        "@/types/workflow",
        "@/types/roles"
      ],
      "exports": [
        "DelegationModal"
      ],
      "usedComponents": [
        "Record",
        "X",
        "Icon",
        "CheckCircle",
        "User"
      ]
    },
    {
      "path": "src/components/workflow/tasks/TaskAssignmentModal.tsx",
      "name": "TaskAssignmentModal",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [
        "TaskAssignmentModal"
      ],
      "usedComponents": [
        "X",
        "CheckCircle",
        "User",
        "Star"
      ]
    },
    {
      "path": "src/components/workflow/tasks/TaskBoard.tsx",
      "name": "TaskBoard",
      "imports": [
        "@/types/workflow",
        "./TaskCard"
      ],
      "exports": [
        "TaskBoard"
      ],
      "usedComponents": [
        "TaskStatus",
        "Search",
        "Filter",
        "Plus",
        "DragDropContext",
        "Droppable",
        "Draggable",
        "TaskCard"
      ]
    },
    {
      "path": "src/components/workflow/tasks/TaskCard.tsx",
      "name": "TaskCard",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [
        "TaskCard"
      ],
      "usedComponents": [
        "Calendar",
        "AlertTriangle",
        "User",
        "StatusIcon"
      ]
    },
    {
      "path": "src/components/workflow/tasks/TaskCreateForm.tsx",
      "name": "TaskCreateForm",
      "imports": [
        "@/types/workflow"
      ],
      "exports": [
        "TaskCreateForm"
      ],
      "usedComponents": [
        "Partial",
        "TaskCreateInput",
        "Record",
        "Plus",
        "X"
      ]
    },
    {
      "path": "src/components/workflow/workload/WorkloadDashboard.tsx",
      "name": "WorkloadDashboard",
      "imports": [
        "@/lib/services/workload-tracking-service"
      ],
      "exports": [
        "WorkloadDashboard"
      ],
      "usedComponents": [
        "WorkloadDashboardProps",
        "WorkloadMetrics",
        "CapacityPlan",
        "UserCheck",
        "Clock",
        "AlertTriangle",
        "UserX",
        "Users",
        "BarChart3",
        "CheckCircle",
        "Shuffle",
        "Target"
      ]
    }
  ],
  "routes": [
    {
      "route": "/alerts",
      "file": "src/app/(admin)/alerts/page.tsx",
      "components": [
        "AlertData",
        "AlertStats",
        "Heart",
        "AlertTriangle",
        "Zap",
        "Activity",
        "Button",
        "Card",
        "CardContent",
        "CheckCircle2",
        "Clock",
        "Search",
        "CardHeader",
        "CardTitle",
        "Badge"
      ]
    },
    {
      "route": "/executive",
      "file": "src/app/(admin)/executive/page.tsx",
      "components": [
        "Suspense",
        "DashboardSkeleton",
        "ExecutiveDashboard"
      ]
    },
    {
      "route": "/quick-actions",
      "file": "src/app/(admin)/quick-actions/page.tsx",
      "components": [
        "Suspense",
        "DashboardSkeleton",
        "SystemStatusCards",
        "QuickActionsPanel",
        "SystemToggleControls",
        "EmergencyControlsSection",
        "AdminAuditLog"
      ]
    },
    {
      "route": "/system-health",
      "file": "src/app/(admin)/system-health/page.tsx",
      "components": [
        "EnvironmentHealth",
        "HealthTrend",
        "AlertConfig",
        "HealthDashboard",
        "Suspense",
        "ResponsiveContainer",
        "LineChart",
        "CartesianGrid",
        "XAxis",
        "YAxis",
        "Tooltip",
        "Legend",
        "Line",
        "AreaChart",
        "Area",
        "BarChart",
        "Bar"
      ]
    },
    {
      "route": "/ab-testing",
      "file": "src/app/(dashboard)/ab-testing/page.tsx",
      "components": [
        "ABTest",
        "TestCreationWizard",
        "TestTube",
        "Button",
        "RefreshCw",
        "Plus",
        "Card",
        "ABTestDashboard"
      ]
    },
    {
      "route": "/admin/audit-logs",
      "file": "src/app/(dashboard)/admin/audit-logs/page.tsx",
      "components": [
        "Suspense",
        "SecurityDashboard",
        "AuditLogFilters",
        "SuspiciousActivityAlert",
        "AuditLogViewer"
      ]
    },
    {
      "route": "/admin/customer-health",
      "file": "src/app/(dashboard)/admin/customer-health/page.tsx",
      "components": [
        "SupplierHealthMetrics",
        "Date",
        "DashboardSummary",
        "Card",
        "CardContent",
        "Shield",
        "Link",
        "Button",
        "Activity",
        "Badge",
        "CheckCircle2",
        "RefreshCw",
        "Users",
        "TrendingUp",
        "AlertCircle",
        "CardHeader",
        "CustomerHealthDashboard"
      ]
    },
    {
      "route": "/admin/customer-success",
      "file": "src/app/(dashboard)/admin/customer-success/page.tsx",
      "components": [
        "Suspense",
        "CustomerSuccessLoadingSkeleton",
        "CustomerSuccessDashboard",
        "Skeleton",
        "Card",
        "CardHeader",
        "CardContent"
      ]
    },
    {
      "route": "/admin/errors",
      "file": "src/app/(dashboard)/admin/errors/page.tsx",
      "components": [
        "ErrorEvent",
        "ErrorStats",
        "Zap",
        "AlertTriangle",
        "Button",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "TrendingUp",
        "Users",
        "Calendar",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Badge",
        "Clock",
        "Eye",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "X"
      ]
    },
    {
      "route": "/admin/executive",
      "file": "src/app/(dashboard)/admin/executive/page.tsx",
      "components": [
        "Suspense",
        "RefreshCw",
        "ExecutiveDashboard",
        "AlertTriangle"
      ]
    },
    {
      "route": "/admin/forms/[formId]/analytics",
      "file": "src/app/(dashboard)/admin/forms/[formId]/analytics/page.tsx",
      "components": [
        "Suspense",
        "AnalyticsLoadingSkeleton",
        "ResponseAnalyticsDashboard",
        "Skeleton",
        "Card",
        "CardHeader",
        "CardContent"
      ]
    },
    {
      "route": "/admin/monitoring",
      "file": "src/app/(dashboard)/admin/monitoring/page.tsx",
      "components": [
        "Suspense",
        "AdminMonitoringDashboard"
      ]
    },
    {
      "route": "/admin-dashboard",
      "file": "src/app/(dashboard)/admin-dashboard/page.tsx",
      "components": [
        "ExclamationTriangleIcon",
        "Icon",
        "CheckCircleIcon",
        "ClockIcon",
        "MRRDashboard"
      ]
    },
    {
      "route": "/ai-features",
      "file": "src/app/(dashboard)/ai-features/page.tsx",
      "components": [
        "Suspense",
        "AIFeatureManager"
      ]
    },
    {
      "route": "/ai-optimization",
      "file": "src/app/(dashboard)/ai-optimization/page.tsx",
      "components": [
        "CostOptimizationDashboard"
      ]
    },
    {
      "route": "/analytics",
      "file": "src/app/(dashboard)/analytics/page.tsx",
      "components": [
        "TimeframeSelector",
        "Suspense",
        "OverviewCardsSkeleton",
        "JourneyOverviewCards",
        "ChartSkeleton",
        "PerformanceMetricsChart",
        "ConversionFunnelChart",
        "RevenueAttributionChart",
        "TableSkeleton",
        "ActiveJourneysTable"
      ]
    },
    {
      "route": "/analytics/seo",
      "file": "src/app/(dashboard)/analytics/seo/page.tsx",
      "components": [
        "SEOAnalyticsDashboard"
      ]
    },
    {
      "route": "/analytics/wedding/[id]",
      "file": "src/app/(dashboard)/analytics/wedding/[id]/page.tsx",
      "components": [
        "Card",
        "WeddingMetricsDashboard",
        "Suspense",
        "WeddingAnalyticsLoading",
        "WeddingVerification"
      ]
    },
    {
      "route": "/analytics/wedding/[id]/reports",
      "file": "src/app/(dashboard)/analytics/wedding/[id]/reports/page.tsx",
      "components": [
        "RefreshCw",
        "ReportBuilder",
        "Suspense",
        "ReportBuilderLoading",
        "WeddingReportBuilder"
      ]
    },
    {
      "route": "/api-keys",
      "file": "src/app/(dashboard)/api-keys/page.tsx",
      "components": [
        "Key",
        "Card",
        "CardHeader",
        "CardTitle",
        "Shield",
        "CardContent",
        "Activity",
        "Globe",
        "Settings",
        "Zap",
        "CardDescription",
        "ExternalLink",
        "FileText",
        "APIKeyManager"
      ]
    },
    {
      "route": "/billing",
      "file": "src/app/(dashboard)/billing/page.tsx",
      "components": [
        "BillingData",
        "SubscriptionManager",
        "UsageDisplay",
        "PricingPlans",
        "PaymentHistory"
      ]
    },
    {
      "route": "/budget",
      "file": "src/app/(dashboard)/budget/page.tsx",
      "components": [
        "Suspense",
        "BudgetClient"
      ]
    },
    {
      "route": "/chat",
      "file": "src/app/(dashboard)/chat/page.tsx",
      "components": [
        "VendorChatInterface"
      ]
    },
    {
      "route": "/client-analytics",
      "file": "src/app/(dashboard)/client-analytics/page.tsx",
      "components": [
        "Card",
        "BarChart3",
        "Suspense",
        "Loader2",
        "ErrorBoundary",
        "AnalyticsError",
        "ClientPortalAnalytics"
      ]
    },
    {
      "route": "/clients/[id]/edit",
      "file": "src/app/(dashboard)/clients/[id]/edit/page.tsx",
      "components": [
        "Client",
        "Link",
        "Button",
        "ArrowLeftIcon",
        "UserIcon",
        "Label",
        "Input",
        "CalendarIcon",
        "TagIcon",
        "CurrencyPoundIcon",
        "CheckIcon"
      ]
    },
    {
      "route": "/clients/[id]/guests",
      "file": "src/app/(dashboard)/clients/[id]/guests/page.tsx",
      "components": [
        "Suspense",
        "GuestAnalyticsDashboard",
        "GuestListLoadingSkeleton",
        "GuestListManager"
      ]
    },
    {
      "route": "/clients/[id]",
      "file": "src/app/(dashboard)/clients/[id]/page.tsx",
      "components": [
        "ProfileHeader",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Card",
        "DescriptionList",
        "DescriptionTerm",
        "DescriptionDetails",
        "UsersIcon",
        "CurrencyPoundIcon",
        "Badge",
        "ActivityFeed",
        "DocumentManager",
        "NotesSection",
        "ChartBarIcon"
      ]
    },
    {
      "route": "/clients/import",
      "file": "src/app/(dashboard)/clients/import/page.tsx",
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "ImportWizard"
      ]
    },
    {
      "route": "/clients/new",
      "file": "src/app/(dashboard)/clients/new/page.tsx",
      "components": [
        "Link",
        "Button",
        "ArrowLeftIcon",
        "UserIcon",
        "Label",
        "Input",
        "CalendarIcon",
        "TagIcon",
        "CurrencyPoundIcon"
      ]
    },
    {
      "route": "/clients",
      "file": "src/app/(dashboard)/clients/page.tsx",
      "components": [
        "Link",
        "Button",
        "ArrowUpTrayIcon",
        "PlusIcon",
        "InputGroup",
        "MagnifyingGlassIcon",
        "Input",
        "FunnelIcon",
        "Table",
        "TableHead",
        "TableRow",
        "TableHeader",
        "TableBody",
        "TableCell",
        "UserIcon",
        "EnvelopeIcon",
        "PhoneIcon",
        "Badge",
        "StatusIcon",
        "LinkIcon",
        "Dropdown",
        "DropdownButton",
        "EllipsisHorizontalIcon",
        "DropdownMenu",
        "DropdownItem",
        "ChevronRightIcon",
        "PencilIcon",
        "DocumentTextIcon",
        "TrashIcon"
      ]
    },
    {
      "route": "/communications",
      "file": "src/app/(dashboard)/communications/page.tsx",
      "components": [
        "MessagingLayout"
      ]
    },
    {
      "route": "/customer-success",
      "file": "src/app/(dashboard)/customer-success/page.tsx",
      "components": [
        "Card",
        "Users",
        "TrendingUp",
        "Target",
        "AlertTriangle",
        "Activity",
        "CheckCircle"
      ]
    },
    {
      "route": "/dashboard-templates/[id]/edit",
      "file": "src/app/(dashboard)/dashboard-templates/[id]/edit/page.tsx",
      "components": [
        "DashboardTemplateBuilder"
      ]
    },
    {
      "route": "/dashboard-templates/[id]/preview",
      "file": "src/app/(dashboard)/dashboard-templates/[id]/preview/page.tsx",
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "Edit3",
        "Share2",
        "ClientDashboardRenderer"
      ]
    },
    {
      "route": "/dashboard-templates/new",
      "file": "src/app/(dashboard)/dashboard-templates/new/page.tsx",
      "components": [
        "DashboardTemplateBuilder"
      ]
    },
    {
      "route": "/dashboard-templates",
      "file": "src/app/(dashboard)/dashboard-templates/page.tsx",
      "components": [
        "Card",
        "LayoutDashboard",
        "Badge",
        "Link",
        "Button",
        "Eye",
        "Edit3",
        "Copy",
        "BarChart3",
        "Plus",
        "Users",
        "Sparkles",
        "AlertCircle",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "TemplateCard"
      ]
    },
    {
      "route": "/faq",
      "file": "src/app/(dashboard)/faq/page.tsx",
      "components": [
        "FaqItem",
        "FaqCategory",
        "FaqDashboardOverview",
        "Plus",
        "BookOpen",
        "BarChart3",
        "Search",
        "Icon",
        "Suspense",
        "FAQManager",
        "FAQAnalytics",
        "FAQEditor"
      ]
    },
    {
      "route": "/florist/intelligence",
      "file": "src/app/(dashboard)/florist/intelligence/page.tsx",
      "components": [
        "FloristIntelligence"
      ]
    },
    {
      "route": "/integrations/[integrationId]/field-mapping",
      "file": "src/app/(dashboard)/integrations/[integrationId]/field-mapping/page.tsx",
      "components": [
        "Metadata",
        "DashboardShell",
        "DashboardHeader",
        "Link",
        "Button",
        "ArrowLeft",
        "Suspense",
        "FieldMappingSkeleton",
        "FieldMappingInterface"
      ]
    },
    {
      "route": "/integrations/[integrationId]",
      "file": "src/app/(dashboard)/integrations/[integrationId]/page.tsx",
      "components": [
        "Metadata",
        "DashboardShell",
        "DashboardHeader",
        "IntegrationActions",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "Suspense",
        "OverviewSkeleton",
        "IntegrationOverview",
        "SyncMonitorSkeleton",
        "SyncStatusMonitor",
        "Settings",
        "Button",
        "RefreshCw",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Badge",
        "AlertTriangle"
      ]
    },
    {
      "route": "/integrations",
      "file": "src/app/(dashboard)/integrations/page.tsx",
      "components": [
        "DashboardShell",
        "DashboardHeader",
        "Suspense",
        "IntegrationsDashboardSkeleton",
        "CRMIntegrationDashboard"
      ]
    },
    {
      "route": "/integrations/webhooks",
      "file": "src/app/(dashboard)/integrations/webhooks/page.tsx",
      "components": [
        "Card",
        "CardContent",
        "Webhook",
        "RefreshCw",
        "Suspense",
        "WebhookDashboardSkeleton",
        "WebhookDashboard"
      ]
    },
    {
      "route": "/journey-monitor",
      "file": "src/app/(dashboard)/journey-monitor/page.tsx",
      "components": [
        "JourneyExecutionMonitor"
      ]
    },
    {
      "route": "/journeys/[id]/canvas",
      "file": "src/app/(dashboard)/journeys/[id]/canvas/page.tsx",
      "components": [
        "Link",
        "ArrowLeft",
        "Button",
        "BarChart3",
        "Settings",
        "Pause",
        "Play",
        "LoadingSpinner",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "JourneyCanvasHeader",
        "Suspense",
        "CanvasLoadingFallback",
        "JourneyCanvas"
      ]
    },
    {
      "route": "/journeys/[id]/edit",
      "file": "src/app/(dashboard)/journeys/[id]/edit/page.tsx",
      "components": [
        "JourneyData",
        "Date",
        "AlertCircle",
        "Button",
        "ArrowLeft",
        "Badge",
        "Play",
        "Settings",
        "Download",
        "Trash2",
        "MoreHorizontal",
        "JourneyCanvas"
      ]
    },
    {
      "route": "/journeys/[id]",
      "file": "src/app/(dashboard)/journeys/[id]/page.tsx",
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "Play",
        "Settings",
        "JourneyCanvas"
      ]
    },
    {
      "route": "/journeys/builder",
      "file": "src/app/(dashboard)/journeys/builder/page.tsx",
      "components": [
        "Date",
        "JourneyMetadata",
        "Button",
        "ArrowLeft",
        "Badge",
        "Play",
        "Settings",
        "Download",
        "Upload",
        "MoreHorizontal",
        "JourneyCanvas"
      ]
    },
    {
      "route": "/journeys/new",
      "file": "src/app/(dashboard)/journeys/new/page.tsx",
      "components": [
        "Link",
        "Button",
        "ArrowLeft",
        "JourneyCanvas",
        "Dialog",
        "DialogContent",
        "DialogHeader",
        "DialogTitle",
        "DialogDescription",
        "Label",
        "Input",
        "Textarea",
        "DialogFooter",
        "Save"
      ]
    },
    {
      "route": "/journeys",
      "file": "src/app/(dashboard)/journeys/page.tsx",
      "components": [
        "JourneyCanvas",
        "Link",
        "Button",
        "Plus",
        "Card",
        "CardContent",
        "Calendar",
        "Users",
        "TrendingUp",
        "Play",
        "Search",
        "Filter",
        "CardHeader",
        "CardTitle",
        "Copy",
        "Trash2",
        "Badge",
        "Edit"
      ]
    },
    {
      "route": "/journeys/templates",
      "file": "src/app/(dashboard)/journeys/templates/page.tsx",
      "components": [
        "VendorCategory",
        "Camera",
        "Building",
        "Utensils",
        "Music",
        "Flower",
        "Calendar",
        "Palette",
        "Car",
        "Cake",
        "Users",
        "TemplateTier",
        "TrendingUp",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "CardDescription",
        "Clock",
        "Sparkles",
        "CardFooter",
        "Button",
        "ChevronRight",
        "Search",
        "Input",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "OverflowTemplateCard",
        "TemplatePreviewModal"
      ]
    },
    {
      "route": "/leads",
      "file": "src/app/(dashboard)/leads/page.tsx",
      "components": [
        "ArrowTrendingUpIcon",
        "ArrowTrendingDownIcon",
        "MinusIcon",
        "StarIcon",
        "Button",
        "ChartBarIcon",
        "Link",
        "PlusIcon",
        "InputGroup",
        "MagnifyingGlassIcon",
        "Input",
        "FunnelIcon",
        "Table",
        "TableHead",
        "TableRow",
        "TableHeader",
        "TableBody",
        "TableCell",
        "UserIcon",
        "EnvelopeIcon",
        "PhoneIcon",
        "Badge",
        "CalendarIcon",
        "Dropdown",
        "DropdownButton",
        "EllipsisHorizontalIcon",
        "DropdownMenu",
        "DropdownItem"
      ]
    },
    {
      "route": "/marketplace/creator/analytics",
      "file": "src/app/(dashboard)/marketplace/creator/analytics/page.tsx",
      "components": [
        "CreatorAnalyticsDashboard"
      ]
    },
    {
      "route": "/marketplace/revenue",
      "file": "src/app/(dashboard)/marketplace/revenue/page.tsx",
      "components": [
        "MarketplaceRevenueData",
        "Card",
        "CardHeader",
        "CardContent",
        "Button",
        "RefreshCw",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Download",
        "CardTitle",
        "DollarSign",
        "TrendingUp",
        "Users",
        "PieChart",
        "BarChart3",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "MarketplaceRevenueMetrics",
        "RevenueChartsPanel",
        "CommissionManagementPanel",
        "CreatorEarningsTable",
        "FinancialReportsSection"
      ]
    },
    {
      "route": "/performance",
      "file": "src/app/(dashboard)/performance/page.tsx",
      "components": [
        "PerformanceExport",
        "Card",
        "CardHeader",
        "CardTitle",
        "Activity",
        "CardContent",
        "Zap",
        "Server",
        "TrendingUp",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardDescription",
        "Suspense",
        "WebSocketMetrics",
        "WeddingSeasonAnalytics",
        "ChannelPerformance",
        "AlertsOverview",
        "CacheMetrics",
        "AutoScalingDashboard"
      ]
    },
    {
      "route": "/performance/realtime",
      "file": "src/app/(dashboard)/performance/realtime/page.tsx",
      "components": [
        "RealtimePerformanceMetrics",
        "CachePerformanceMetrics",
        "ConnectionHealthReport",
        "ScalingResult",
        "WeddingSeasonMetrics",
        "PerformanceAlert",
        "WeddingDayMode",
        "Card",
        "CardHeader",
        "CardTitle",
        "Icon",
        "CardContent",
        "Heart",
        "CardDescription",
        "Progress",
        "Badge",
        "Database",
        "TrendingUp",
        "Calendar",
        "AlertTriangle",
        "Shield",
        "Alert",
        "AlertTitle",
        "AlertDescription",
        "Button",
        "Activity",
        "MetricCard",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "ConnectionHealthChart",
        "AlertsPanel",
        "ScalingStatusCard",
        "WeddingDayModeCard",
        "CachePerformanceChart"
      ]
    },
    {
      "route": "/privacy/settings",
      "file": "src/app/(dashboard)/privacy/settings/page.tsx",
      "components": [
        "PrivacyDashboard"
      ]
    },
    {
      "route": "/referrals/mobile",
      "file": "src/app/(dashboard)/referrals/mobile/page.tsx",
      "components": [
        "Heart",
        "Badge",
        "Smartphone",
        "Card",
        "Suspense",
        "MobileReferralShare",
        "CrossPlatformShare",
        "MobileOptimizations",
        "Trophy",
        "Share",
        "QrCode"
      ]
    },
    {
      "route": "/referrals",
      "file": "src/app/(dashboard)/referrals/page.tsx",
      "components": [
        "SupplierReferralStats",
        "LeaderboardFilters",
        "Users",
        "Card",
        "Target",
        "Award",
        "Sparkles",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Icon",
        "Button",
        "RefreshCcw",
        "TabsContent",
        "ReferralCenter",
        "LeaderboardView",
        "QRCodeGenerator",
        "ReferralStats",
        "Trophy"
      ]
    },
    {
      "route": "/reminders",
      "file": "src/app/(dashboard)/reminders/page.tsx",
      "components": [
        "ReminderSchedule",
        "ReminderTemplate",
        "Mail",
        "Phone",
        "Bell",
        "Plus",
        "Search",
        "Calendar",
        "MessageSquare",
        "Filter"
      ]
    },
    {
      "route": "/tasks",
      "file": "src/app/(dashboard)/tasks/page.tsx",
      "components": [
        "TaskPageState",
        "CheckCircle",
        "AlertTriangle",
        "Clock",
        "BookTemplate",
        "Plus",
        "Search",
        "List",
        "Calendar",
        "User",
        "TaskCreator",
        "TaskTemplateLibrary"
      ]
    },
    {
      "route": "/team",
      "file": "src/app/(dashboard)/team/page.tsx",
      "components": [
        "Card",
        "Suspense",
        "TeamPageSkeleton",
        "TeamManagerWrapper",
        "TeamManager"
      ]
    },
    {
      "route": "/templates",
      "file": "src/app/(dashboard)/templates/page.tsx",
      "components": [
        "Template",
        "Button",
        "Plus",
        "Card",
        "CardContent",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "CardHeader",
        "CardTitle",
        "TemplateGallery",
        "Heart",
        "TrendingUp",
        "TemplateModal"
      ]
    },
    {
      "route": "/test-communications",
      "file": "src/app/(dashboard)/test-communications/page.tsx",
      "components": [
        "Button",
        "Input",
        "ActivityFeed"
      ]
    },
    {
      "route": "/trial-intelligence",
      "file": "src/app/(dashboard)/trial-intelligence/page.tsx",
      "components": [
        "TrialBusinessIntelligenceDashboard"
      ]
    },
    {
      "route": "/vendor-portal",
      "file": "src/app/(dashboard)/vendor-portal/page.tsx",
      "components": [
        "VendorProfile",
        "WeddingAssignment",
        "UserGroupIcon",
        "Button",
        "VendorDashboard",
        "AssignedWeddings",
        "PerformanceScoring",
        "VendorCommunications",
        "Badge",
        "CheckBadgeIcon",
        "StarIcon",
        "BellIcon",
        "ClockIcon",
        "Card",
        "CalendarDaysIcon",
        "ChatBubbleBottomCenterTextIcon",
        "Tabs",
        "Icon"
      ]
    },
    {
      "route": "/vendors/[id]/edit",
      "file": "src/app/(dashboard)/vendors/[id]/edit/page.tsx",
      "components": [
        "Vendor",
        "VendorCategory",
        "Button",
        "ArrowLeftIcon",
        "BuildingStorefrontIcon",
        "Label",
        "Input",
        "CurrencyPoundIcon",
        "UserIcon",
        "GlobeAltIcon",
        "SparklesIcon",
        "TagIcon",
        "CheckIcon"
      ]
    },
    {
      "route": "/vendors/[id]",
      "file": "src/app/(dashboard)/vendors/[id]/page.tsx",
      "components": [
        "Badge",
        "Button",
        "ArrowLeftIcon",
        "BuildingStorefrontIcon",
        "CheckBadgeIcon",
        "MapPinIcon",
        "CurrencyPoundIcon",
        "StarIcon",
        "UserGroupIcon",
        "PencilIcon",
        "TrashIcon",
        "CalendarIcon",
        "SparklesIcon",
        "DescriptionList",
        "DescriptionTerm",
        "DescriptionDetails",
        "PhotoIcon",
        "DocumentTextIcon",
        "Link",
        "ChartBarIcon"
      ]
    },
    {
      "route": "/vendors",
      "file": "src/app/(dashboard)/vendors/page.tsx",
      "components": [
        "Button",
        "PlusIcon",
        "InputGroup",
        "MagnifyingGlassIcon",
        "Input",
        "MapPinIcon",
        "FunnelIcon",
        "BuildingStorefrontIcon",
        "CategoryIcon",
        "Badge",
        "CheckBadgeIcon",
        "StarIcon"
      ]
    },
    {
      "route": "/weather",
      "file": "src/app/(dashboard)/weather/page.tsx",
      "components": [
        "Card",
        "AlertTriangle",
        "RefreshCw",
        "MapPin",
        "Calendar",
        "WeatherDashboard",
        "Smartphone",
        "MobileWeatherWidget",
        "Monitor",
        "WeatherCard",
        "WeatherTimeline",
        "Cloud"
      ]
    },
    {
      "route": "/wedding-website",
      "file": "src/app/(dashboard)/wedding-website/page.tsx",
      "components": [
        "Button",
        "Eye",
        "EyeOff",
        "Publish",
        "Card",
        "CardHeader",
        "CardTitle",
        "Badge",
        "CardContent",
        "Label",
        "Lock",
        "Switch",
        "Input",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "Heart",
        "Users",
        "Gift",
        "MapPin",
        "Settings",
        "TabsContent",
        "Textarea",
        "Plus",
        "Edit",
        "Trash2",
        "Code",
        "Save",
        "Languages",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Search"
      ]
    },
    {
      "route": "/wedme/final-payments",
      "file": "src/app/(dashboard)/wedme/final-payments/page.tsx",
      "components": [
        "BudgetSummary",
        "CategoryBreakdown",
        "VendorPayment",
        "WebSocket",
        "RefreshCw",
        "Download",
        "DollarSign",
        "Shield",
        "CreditCard",
        "Clock",
        "TrendingUp",
        "Activity",
        "Zap"
      ]
    },
    {
      "route": "/wedme/marketplace",
      "file": "src/app/(dashboard)/wedme/marketplace/page.tsx",
      "components": [
        "MarketplaceTemplate",
        "Search",
        "Input",
        "Button",
        "ArrowRight",
        "Card",
        "Badge",
        "Crown",
        "Play",
        "CardHeader",
        "CardTitle",
        "Users",
        "CardContent",
        "Star",
        "ShoppingBag",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TrendingUp",
        "TabsContent",
        "Award",
        "ChevronRight",
        "Clock",
        "Zap"
      ]
    },
    {
      "route": "/wedme/photo-groups",
      "file": "src/app/(dashboard)/wedme/photo-groups/page.tsx",
      "components": [
        "WedMeHeader",
        "Suspense",
        "LoadingSpinner",
        "PhotoGroupsManager"
      ]
    },
    {
      "route": "/wedme/seating",
      "file": "src/app/(dashboard)/wedme/seating/page.tsx",
      "components": [
        "CoupleAuthGuard",
        "WedMeHeader",
        "WedMeNavigation",
        "Suspense",
        "LoadingSkeleton",
        "MobileSeatingDashboard",
        "MobileSeatingViewer"
      ]
    },
    {
      "route": "/wedme/templates/builder",
      "file": "src/app/(dashboard)/wedme/templates/builder/page.tsx",
      "components": [
        "DraggableComponent",
        "IconComponent",
        "Separator",
        "Type",
        "FileText",
        "ImageIcon",
        "Layers",
        "Badge",
        "Button",
        "Smartphone",
        "Plus",
        "SortableContext",
        "CanvasComponent",
        "Input",
        "Label",
        "Copy",
        "Trash2",
        "TemplateComponent",
        "Settings",
        "ScrollArea",
        "Tabs",
        "TabsList",
        "TabsTrigger",
        "TabsContent",
        "TemplateData",
        "Monitor",
        "Eye",
        "Save",
        "DndContext",
        "ComponentPalette",
        "CanvasArea",
        "PropertyPanel",
        "DragOverlay",
        "activeComponent"
      ]
    },
    {
      "route": "/wedding-basics",
      "file": "src/app/(onboarding)/wedding-basics/page.tsx",
      "components": [
        "WeddingBasicsRequest",
        "Loader2",
        "Button",
        "ArrowLeft",
        "Progress",
        "CheckCircle2",
        "Icon",
        "Alert",
        "AlertDescription",
        "AlertCircle",
        "Card",
        "CardHeader",
        "CardTitle",
        "Heart",
        "CardDescription",
        "CardContent",
        "MapPin",
        "Users",
        "Palette",
        "Badge",
        "WeddingBasicsForm"
      ]
    },
    {
      "route": "/analytics/budget",
      "file": "src/app/(wedme)/analytics/budget/page.tsx",
      "components": [
        "Link",
        "Suspense",
        "BudgetAnalyticsSkeleton",
        "BudgetAnalyticsContent",
        "BudgetOverviewCard",
        "BudgetHealthIndicator",
        "CategorySpendingBreakdown",
        "SpendingTimelineChart",
        "SeasonalPricingInsights",
        "OptimizationRecommendations",
        "BudgetForecastPanel",
        "SmartSavingsOpportunities",
        "Icon",
        "ExclamationTriangleIcon",
        "CheckCircleIcon",
        "CalendarIcon",
        "LightBulbIcon"
      ]
    },
    {
      "route": "/analytics/dashboard",
      "file": "src/app/(wedme)/analytics/dashboard/page.tsx",
      "components": [
        "Suspense",
        "DashboardSkeleton",
        "AnalyticsDashboardContent",
        "Link",
        "MetricCard",
        "PersonalizedInsightsPanels",
        "QuickActionsPanel",
        "BudgetOptimizationWidget",
        "VendorPerformanceInsights",
        "TimelineProgressTracker",
        "SocialEngagementPanel",
        "WeddingMomentumMeter",
        "MobileExperienceInsights",
        "ArrowUpIcon",
        "ArrowDownIcon"
      ]
    },
    {
      "route": "/analytics/vendor",
      "file": "src/app/(wedme)/analytics/vendor/page.tsx",
      "components": [
        "Link",
        "Suspense",
        "VendorInsightsSkeleton",
        "VendorInsightsContent",
        "VendorOverviewCard",
        "VendorPerformanceOverview",
        "VendorCompatibilityAnalysis",
        "VendorPerformanceMetrics",
        "VendorRiskAssessment",
        "VendorSatisfactionPredictions",
        "DetailedVendorAnalysis",
        "SmartVendorRecommendations",
        "Icon",
        "ExclamationTriangleIcon",
        "CheckCircleIcon",
        "HeartIcon",
        "ClockIcon",
        "StarIcon",
        "ChatBubbleBottomCenterTextIcon",
        "PhotoIcon",
        "TrendingUpIcon",
        "TrendingDownIcon"
      ]
    },
    {
      "route": "/admin/api-management",
      "file": "src/app/admin/api-management/page.tsx",
      "components": [
        "APIManagementDashboard"
      ]
    },
    {
      "route": "/admin/backups",
      "file": "src/app/admin/backups/page.tsx",
      "components": [
        "WS191BackupDashboard"
      ]
    },
    {
      "route": "/admin/dashboard",
      "file": "src/app/admin/dashboard/page.tsx",
      "components": [
        "AdminStats",
        "ServerIcon",
        "ExclamationTriangleIcon",
        "Card",
        "CardContent",
        "Button",
        "DemoBanner",
        "CogIcon",
        "UsersIcon",
        "BuildingOfficeIcon",
        "CurrencyDollarIcon",
        "ChartBarIcon",
        "CardHeader",
        "CardTitle",
        "Badge",
        "ClockIcon"
      ]
    },
    {
      "route": "/admin",
      "file": "src/app/admin/page.tsx",
      "components": [
        "Icon",
        "Link"
      ]
    },
    {
      "route": "/auth/forgot-password",
      "file": "src/app/auth/forgot-password/page.tsx",
      "components": [
        "Card",
        "CardHeader",
        "CardTitle",
        "Link",
        "ArrowLeft",
        "CardDescription",
        "CardContent",
        "Mail",
        "Button",
        "Label",
        "Input",
        "Alert",
        "CheckCircle",
        "AlertCircle",
        "AlertDescription"
      ]
    },
    {
      "route": "/auth/login",
      "file": "src/app/auth/login/page.tsx",
      "components": [
        "HeartIcon",
        "Card",
        "CardContent",
        "Label",
        "Input",
        "Button",
        "Link"
      ]
    },
    {
      "route": "/auth/reset-password",
      "file": "src/app/auth/reset-password/page.tsx",
      "components": [
        "Card",
        "CardContent",
        "AlertCircle",
        "Link",
        "Button",
        "CardHeader",
        "CardTitle",
        "ArrowLeft",
        "CardDescription",
        "CheckCircle",
        "Lock",
        "Label",
        "Input",
        "EyeOff",
        "Eye",
        "Progress",
        "Alert",
        "AlertDescription",
        "Suspense",
        "ResetPasswordForm"
      ]
    },
    {
      "route": "/client/dashboard",
      "file": "src/app/client/dashboard/page.tsx",
      "components": [
        "WeddingData",
        "VendorConnection",
        "Card",
        "CardContent",
        "Button",
        "DemoBanner",
        "HeartIcon",
        "CalendarIcon",
        "UsersIcon",
        "CurrencyDollarIcon",
        "CheckCircleIcon",
        "CardHeader",
        "CardTitle",
        "CameraIcon",
        "Badge",
        "MapPinIcon",
        "ClockIcon"
      ]
    },
    {
      "route": "/dashboard/analytics",
      "file": "src/app/dashboard/analytics/page.tsx",
      "components": [
        "VendorAnalyticsDashboard"
      ]
    },
    {
      "route": "/dashboard/channels",
      "file": "src/app/dashboard/channels/page.tsx",
      "components": [
        "ChannelManager"
      ]
    },
    {
      "route": "/dashboard/music",
      "file": "src/app/dashboard/music/page.tsx",
      "components": [
        "MusicPageStats",
        "MusicTrack",
        "Music",
        "Badge",
        "Sparkles",
        "Button",
        "Settings",
        "Card",
        "CardContent",
        "Heart",
        "Users",
        "Zap",
        "CardHeader",
        "CardTitle",
        "Search",
        "CardDescription",
        "BarChart3",
        "MusicDatabase"
      ]
    },
    {
      "route": "/dashboard",
      "file": "src/app/dashboard/page.tsx",
      "components": [
        "Card",
        "ArrowUp",
        "ArrowDown",
        "Icon",
        "StatCard",
        "Button",
        "BarChart3",
        "Activity",
        "ActivityItem",
        "Link",
        "Users",
        "FileText"
      ]
    },
    {
      "route": "/dashboard/progress",
      "file": "src/app/dashboard/progress/page.tsx",
      "components": [
        "Suspense",
        "ProgressSkeleton",
        "ProgressCharts"
      ]
    },
    {
      "route": "/demo",
      "file": "src/app/demo/page.tsx",
      "components": [
        "PersonaCard"
      ]
    },
    {
      "route": "/demoroot",
      "file": "src/app/demoroot/page.tsx",
      "components": []
    },
    {
      "route": "/forgot-password",
      "file": "src/app/forgot-password/page.tsx",
      "components": [
        "ForgotPasswordForm"
      ]
    },
    {
      "route": "/forms/[slug]",
      "file": "src/app/forms/[slug]/page.tsx",
      "components": [
        "Card",
        "CardHeader",
        "Clock",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Users",
        "Shield",
        "CheckCircle",
        "ClientFormSubmission"
      ]
    },
    {
      "route": "/forms/[slug]/password",
      "file": "src/app/forms/[slug]/password/page.tsx",
      "components": [
        "PasswordProtectedFormAccess"
      ]
    },
    {
      "route": "/forms/[slug]/receipt",
      "file": "src/app/forms/[slug]/receipt/page.tsx",
      "components": [
        "Card",
        "CardHeader",
        "CheckCircle",
        "CardTitle",
        "CardDescription",
        "Calendar",
        "CardContent",
        "Badge",
        "Users",
        "Mail",
        "Phone",
        "MapPin",
        "Clock",
        "Button",
        "Download"
      ]
    },
    {
      "route": "/forms/builder",
      "file": "src/app/forms/builder/page.tsx",
      "components": [
        "Suspense",
        "FormBuilderSkeleton",
        "FormBuilder"
      ]
    },
    {
      "route": "/forms/import",
      "file": "src/app/forms/import/page.tsx",
      "components": [
        "File",
        "UploadProgress",
        "DetectedField",
        "Sparkles",
        "FileUp",
        "Button",
        "Upload",
        "Loader2",
        "FileText",
        "Settings",
        "CheckCircle",
        "Eye",
        "Save",
        "X"
      ]
    },
    {
      "route": "/forms/test-core-fields",
      "file": "src/app/forms/test-core-fields/page.tsx",
      "components": [
        "SparklesIcon",
        "ClockIcon",
        "DocumentTextIcon",
        "InformationCircleIcon",
        "EnhancedFormBuilder"
      ]
    },
    {
      "route": "/invite/[code]",
      "file": "src/app/invite/[code]/page.tsx",
      "components": [
        "Metadata",
        "LoadingSkeleton",
        "Suspense",
        "InvitationPageSkeleton",
        "InvitationLanding"
      ]
    },
    {
      "route": "/journey-demo",
      "file": "src/app/journey-demo/page.tsx",
      "components": [
        "JourneyCanvas"
      ]
    },
    {
      "route": "/login",
      "file": "src/app/login/page.tsx",
      "components": [
        "HeartIcon",
        "Card",
        "CardContent",
        "Label",
        "Input",
        "Button",
        "Link"
      ]
    },
    {
      "route": "/offline",
      "file": "src/app/offline/page.tsx",
      "components": [
        "Date",
        "CheckCircle",
        "WifiOff",
        "AlertCircle",
        "RefreshCw"
      ]
    },
    {
      "route": "/onboarding",
      "file": "src/app/onboarding/page.tsx",
      "components": [
        "CheckCircleIcon",
        "HeartIcon",
        "Progress",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "Button",
        "Suspense",
        "OnboardingContent"
      ]
    },
    {
      "route": "/onboarding-demo",
      "file": "src/app/onboarding-demo/page.tsx",
      "components": [
        "OnboardingDemo"
      ]
    },
    {
      "route": "/",
      "file": "src/app/page.tsx",
      "components": [
        "SparklesIcon",
        "Link",
        "Button",
        "ArrowRightIcon",
        "UsersIcon",
        "CalendarIcon",
        "CameraIcon",
        "ChartBarIcon"
      ]
    },
    {
      "route": "/payments/calendar",
      "file": "src/app/payments/calendar/page.tsx",
      "components": [
        "PaymentCalendarData",
        "Card",
        "Calendar",
        "Button",
        "Badge",
        "PaymentCalendar",
        "UpcomingPaymentsList",
        "WeddingContextBar",
        "MarkAsPaidModal"
      ]
    },
    {
      "route": "/pdf/[id]/mapping",
      "file": "src/app/pdf/[id]/mapping/page.tsx",
      "components": [
        "PDFImport",
        "Badge",
        "FileText",
        "Button",
        "ArrowLeft",
        "RefreshCw",
        "Download",
        "FieldMappingInterface"
      ]
    },
    {
      "route": "/pdf/import",
      "file": "src/app/pdf/import/page.tsx",
      "components": [
        "PDFImport",
        "Wand2",
        "Clock",
        "Target",
        "Shield",
        "FileText",
        "Sparkles",
        "CheckCircle",
        "TrendingUp",
        "Badge",
        "PDFUploader"
      ]
    },
    {
      "route": "/privacy/data-request",
      "file": "src/app/privacy/data-request/page.tsx",
      "components": [
        "Shield",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Label",
        "Icon",
        "Input",
        "Textarea",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Alert",
        "AlertDescription",
        "Button"
      ]
    },
    {
      "route": "/privacy",
      "file": "src/app/privacy/page.tsx",
      "components": [
        "Shield",
        "Link",
        "FileText",
        "Globe",
        "Users",
        "Lock",
        "AlertCircle",
        "Calendar",
        "Mail"
      ]
    },
    {
      "route": "/reset-password",
      "file": "src/app/reset-password/page.tsx",
      "components": [
        "ResetPasswordForm",
        "Suspense",
        "ResetPasswordContent"
      ]
    },
    {
      "route": "/rsvp/[code]",
      "file": "src/app/rsvp/[code]/page.tsx",
      "components": [
        "EventDetails",
        "GuestDetail",
        "Card",
        "CardContent",
        "AlertCircle",
        "CheckCircle",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "Calendar",
        "MapPin",
        "Label",
        "Select",
        "SelectTrigger",
        "SelectValue",
        "SelectContent",
        "SelectItem",
        "Input",
        "Checkbox",
        "Music",
        "RadioGroup",
        "RadioGroupItem",
        "Textarea",
        "Button"
      ]
    },
    {
      "route": "/security-demo",
      "file": "src/app/security-demo/page.tsx",
      "components": [
        "ShieldCheckIcon",
        "ShieldExclamationIcon",
        "Badge",
        "LockClosedIcon",
        "Card",
        "Button",
        "DocumentTextIcon",
        "FormPreview",
        "CodeBracketIcon",
        "EyeIcon"
      ]
    },
    {
      "route": "/settings/branding",
      "file": "src/app/settings/branding/page.tsx",
      "components": [
        "BrandingPageLoading",
        "Button",
        "ArrowLeftIcon",
        "SwatchIcon",
        "ExclamationTriangleIcon",
        "CloudArrowUpIcon",
        "Card",
        "CheckCircleIcon",
        "LogoUploader",
        "Badge",
        "CSSEditor",
        "Suspense",
        "BrandingSettingsContent"
      ]
    },
    {
      "route": "/settings/calendar-integration/apple",
      "file": "src/app/settings/calendar-integration/apple/page.tsx",
      "components": [
        "Link",
        "ArrowLeftIcon",
        "DevicePhoneMobileIcon",
        "ComputerDesktopIcon",
        "WatchIcon",
        "ShieldCheckIcon",
        "InformationCircleIcon",
        "AppleCalendarSync"
      ]
    },
    {
      "route": "/settings/calendar-integration",
      "file": "src/app/settings/calendar-integration/page.tsx",
      "components": [
        "CheckCircleIcon",
        "ClockIcon",
        "ExclamationTriangleIcon",
        "Link",
        "CalendarIcon",
        "PlusIcon"
      ]
    },
    {
      "route": "/settings",
      "file": "src/app/settings/page.tsx",
      "components": [
        "Cog8ToothIcon",
        "Link",
        "SwatchIcon",
        "CalendarIcon",
        "BellIcon",
        "ShieldCheckIcon",
        "CreditCardIcon",
        "Icon",
        "GlobeAltIcon"
      ]
    },
    {
      "route": "/signup",
      "file": "src/app/signup/page.tsx",
      "components": [
        "HeartIcon",
        "Alert",
        "AlertDescription",
        "CoupleSignupForm",
        "Link",
        "Suspense",
        "SignupContent"
      ]
    },
    {
      "route": "/supplier-portal",
      "file": "src/app/supplier-portal/page.tsx",
      "components": [
        "Card",
        "CardContent",
        "CalendarIcon",
        "UsersIcon",
        "CardHeader",
        "CardTitle",
        "Button",
        "CameraIcon",
        "ClockIcon"
      ]
    },
    {
      "route": "/supplier-portal/qr-scanner",
      "file": "src/app/supplier-portal/qr-scanner/page.tsx",
      "components": [
        "HTMLVideoElement",
        "HTMLCanvasElement",
        "HTMLInputElement",
        "MediaStream",
        "Card",
        "AlertCircle",
        "Button",
        "Upload",
        "CheckCircle",
        "X",
        "QrCode",
        "Camera",
        "Flashlight",
        "RotateCcw",
        "ImageIcon"
      ]
    },
    {
      "route": "/supplier-portal/schedule/confirm",
      "file": "src/app/supplier-portal/schedule/confirm/page.tsx",
      "components": [
        "Record",
        "Card",
        "CheckCircle",
        "Button",
        "Switch",
        "Badge",
        "Calendar",
        "Clock",
        "MapPin",
        "Textarea",
        "Navigation",
        "Phone",
        "AlertCircle"
      ]
    },
    {
      "route": "/supplier-portal/schedule/conflicts/new",
      "file": "src/app/supplier-portal/schedule/conflicts/new/page.tsx",
      "components": [
        "File",
        "Card",
        "Button",
        "ArrowLeft",
        "AlertTriangle",
        "Clock",
        "MapPin",
        "Badge",
        "RadioGroup",
        "RadioGroupItem",
        "Label",
        "Textarea",
        "Switch",
        "X",
        "Camera",
        "Send"
      ]
    },
    {
      "route": "/supplier-portal/schedule",
      "file": "src/app/supplier-portal/schedule/page.tsx",
      "components": [
        "PullToRefresh",
        "Card",
        "Icon",
        "Button",
        "Settings",
        "ScheduleFilters",
        "TouchOptimizedCalendar",
        "MobileScheduleView"
      ]
    },
    {
      "route": "/tasks/create",
      "file": "src/app/tasks/create/page.tsx",
      "components": [
        "TouchInputSecurityValidator",
        "TouchTaskCreationForm",
        "TaskTemplateGallery"
      ]
    },
    {
      "route": "/test",
      "file": "src/app/test/page.tsx",
      "components": []
    },
    {
      "route": "/test/personalization",
      "file": "src/app/test/personalization/page.tsx",
      "components": [
        "MobilePersonalizationEditor"
      ]
    },
    {
      "route": "/test-referral-widget",
      "file": "src/app/test-referral-widget/page.tsx",
      "components": [
        "Card",
        "CardHeader",
        "CardTitle",
        "CardContent",
        "ReferralWidget"
      ]
    },
    {
      "route": "/test-simple",
      "file": "src/app/test-simple/page.tsx",
      "components": []
    },
    {
      "route": "/test-sms",
      "file": "src/app/test-sms/page.tsx",
      "components": [
        "SMSConfigurationWizard",
        "SMSPerformanceDashboard"
      ]
    },
    {
      "route": "/travel-calculator",
      "file": "src/app/travel-calculator/page.tsx",
      "components": [
        "TravelTimeCalculator"
      ]
    },
    {
      "route": "/ui-showcase",
      "file": "src/app/ui-showcase/page.tsx",
      "components": [
        "Record",
        "Card",
        "CardHeader",
        "CardTitle",
        "CardDescription",
        "CardContent",
        "Button",
        "WeddingButton",
        "ElegantButton",
        "VendorButton",
        "WeddingInput",
        "Input",
        "ElegantInput",
        "CardFooter",
        "WeddingCard",
        "VendorCard"
      ]
    },
    {
      "route": "/working",
      "file": "src/app/working/page.tsx",
      "components": []
    }
  ],
  "graph": {
    "nodes": [
      {
        "id": "page-0",
        "label": "/alerts",
        "type": "page",
        "file": "src/app/(admin)/alerts/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1",
        "label": "/executive",
        "type": "page",
        "file": "src/app/(admin)/executive/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-2",
        "label": "/quick-actions",
        "type": "page",
        "file": "src/app/(admin)/quick-actions/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-3",
        "label": "/system-health",
        "type": "page",
        "file": "src/app/(admin)/system-health/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-4",
        "label": "/ab-testing",
        "type": "page",
        "file": "src/app/(dashboard)/ab-testing/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-5",
        "label": "/admin/audit-logs",
        "type": "page",
        "file": "src/app/(dashboard)/admin/audit-logs/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-6",
        "label": "/admin/customer-health",
        "type": "page",
        "file": "src/app/(dashboard)/admin/customer-health/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-7",
        "label": "/admin/customer-success",
        "type": "page",
        "file": "src/app/(dashboard)/admin/customer-success/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-8",
        "label": "/admin/errors",
        "type": "page",
        "file": "src/app/(dashboard)/admin/errors/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-9",
        "label": "/admin/executive",
        "type": "page",
        "file": "src/app/(dashboard)/admin/executive/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-10",
        "label": "/admin/forms/[formId]/analytics",
        "type": "page",
        "file": "src/app/(dashboard)/admin/forms/[formId]/analytics/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-11",
        "label": "/admin/monitoring",
        "type": "page",
        "file": "src/app/(dashboard)/admin/monitoring/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-12",
        "label": "/admin-dashboard",
        "type": "page",
        "file": "src/app/(dashboard)/admin-dashboard/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-13",
        "label": "/ai-features",
        "type": "page",
        "file": "src/app/(dashboard)/ai-features/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-14",
        "label": "/ai-optimization",
        "type": "page",
        "file": "src/app/(dashboard)/ai-optimization/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-15",
        "label": "/analytics",
        "type": "page",
        "file": "src/app/(dashboard)/analytics/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-16",
        "label": "/analytics/seo",
        "type": "page",
        "file": "src/app/(dashboard)/analytics/seo/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-17",
        "label": "/analytics/wedding/[id]",
        "type": "page",
        "file": "src/app/(dashboard)/analytics/wedding/[id]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-18",
        "label": "/analytics/wedding/[id]/reports",
        "type": "page",
        "file": "src/app/(dashboard)/analytics/wedding/[id]/reports/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-19",
        "label": "/api-keys",
        "type": "page",
        "file": "src/app/(dashboard)/api-keys/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-20",
        "label": "/billing",
        "type": "page",
        "file": "src/app/(dashboard)/billing/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-21",
        "label": "/budget",
        "type": "page",
        "file": "src/app/(dashboard)/budget/budget-client.tsx",
        "pageType": "component"
      },
      {
        "id": "page-22",
        "label": "/budget",
        "type": "page",
        "file": "src/app/(dashboard)/budget/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-23",
        "label": "/chat",
        "type": "page",
        "file": "src/app/(dashboard)/chat/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-24",
        "label": "/client-analytics",
        "type": "page",
        "file": "src/app/(dashboard)/client-analytics/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-25",
        "label": "/clients/[id]/edit",
        "type": "page",
        "file": "src/app/(dashboard)/clients/[id]/edit/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-26",
        "label": "/clients/[id]/guests",
        "type": "page",
        "file": "src/app/(dashboard)/clients/[id]/guests/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-27",
        "label": "/clients/[id]",
        "type": "page",
        "file": "src/app/(dashboard)/clients/[id]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-28",
        "label": "/clients/import",
        "type": "page",
        "file": "src/app/(dashboard)/clients/import/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-29",
        "label": "/clients/new",
        "type": "page",
        "file": "src/app/(dashboard)/clients/new/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-30",
        "label": "/clients",
        "type": "page",
        "file": "src/app/(dashboard)/clients/page-new.tsx",
        "pageType": "component"
      },
      {
        "id": "page-31",
        "label": "/clients",
        "type": "page",
        "file": "src/app/(dashboard)/clients/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-32",
        "label": "/communications",
        "type": "page",
        "file": "src/app/(dashboard)/communications/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-33",
        "label": "/customer-success",
        "type": "page",
        "file": "src/app/(dashboard)/customer-success/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-34",
        "label": "/dashboard-templates/[id]/edit",
        "type": "page",
        "file": "src/app/(dashboard)/dashboard-templates/[id]/edit/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-35",
        "label": "/dashboard-templates/[id]/preview",
        "type": "page",
        "file": "src/app/(dashboard)/dashboard-templates/[id]/preview/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-36",
        "label": "/dashboard-templates/new",
        "type": "page",
        "file": "src/app/(dashboard)/dashboard-templates/new/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-37",
        "label": "/dashboard-templates",
        "type": "page",
        "file": "src/app/(dashboard)/dashboard-templates/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-38",
        "label": "/faq",
        "type": "page",
        "file": "src/app/(dashboard)/faq/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-39",
        "label": "/florist/intelligence",
        "type": "page",
        "file": "src/app/(dashboard)/florist/intelligence/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-40",
        "label": "/integrations/[integrationId]/field-mapping",
        "type": "page",
        "file": "src/app/(dashboard)/integrations/[integrationId]/field-mapping/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-41",
        "label": "/integrations/[integrationId]",
        "type": "page",
        "file": "src/app/(dashboard)/integrations/[integrationId]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-42",
        "label": "/integrations",
        "type": "page",
        "file": "src/app/(dashboard)/integrations/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-43",
        "label": "/integrations/webhooks",
        "type": "page",
        "file": "src/app/(dashboard)/integrations/webhooks/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-44",
        "label": "/journey-monitor",
        "type": "page",
        "file": "src/app/(dashboard)/journey-monitor/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-45",
        "label": "/journeys/[id]/canvas",
        "type": "page",
        "file": "src/app/(dashboard)/journeys/[id]/canvas/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-46",
        "label": "/journeys/[id]/edit",
        "type": "page",
        "file": "src/app/(dashboard)/journeys/[id]/edit/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-47",
        "label": "/journeys/[id]",
        "type": "page",
        "file": "src/app/(dashboard)/journeys/[id]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-48",
        "label": "/journeys/builder",
        "type": "page",
        "file": "src/app/(dashboard)/journeys/builder/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-49",
        "label": "/journeys/new",
        "type": "page",
        "file": "src/app/(dashboard)/journeys/new/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-50",
        "label": "/journeys",
        "type": "page",
        "file": "src/app/(dashboard)/journeys/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-51",
        "label": "/journeys/templates",
        "type": "page",
        "file": "src/app/(dashboard)/journeys/templates/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-52",
        "label": "/leads",
        "type": "page",
        "file": "src/app/(dashboard)/leads/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-53",
        "label": "/marketplace/creator/analytics",
        "type": "page",
        "file": "src/app/(dashboard)/marketplace/creator/analytics/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-54",
        "label": "/marketplace/revenue",
        "type": "page",
        "file": "src/app/(dashboard)/marketplace/revenue/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-55",
        "label": "/performance",
        "type": "page",
        "file": "src/app/(dashboard)/performance/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-56",
        "label": "/performance/realtime",
        "type": "page",
        "file": "src/app/(dashboard)/performance/realtime/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-57",
        "label": "/privacy/settings",
        "type": "page",
        "file": "src/app/(dashboard)/privacy/settings/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-58",
        "label": "/referrals/mobile",
        "type": "page",
        "file": "src/app/(dashboard)/referrals/mobile/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-59",
        "label": "/referrals",
        "type": "page",
        "file": "src/app/(dashboard)/referrals/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-60",
        "label": "/reminders",
        "type": "page",
        "file": "src/app/(dashboard)/reminders/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-61",
        "label": "/tasks",
        "type": "page",
        "file": "src/app/(dashboard)/tasks/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-62",
        "label": "/team",
        "type": "page",
        "file": "src/app/(dashboard)/team/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-63",
        "label": "/templates",
        "type": "page",
        "file": "src/app/(dashboard)/templates/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-64",
        "label": "/test-communications",
        "type": "page",
        "file": "src/app/(dashboard)/test-communications/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-65",
        "label": "/trial-intelligence",
        "type": "page",
        "file": "src/app/(dashboard)/trial-intelligence/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-66",
        "label": "/vendor-portal",
        "type": "page",
        "file": "src/app/(dashboard)/vendor-portal/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-67",
        "label": "/vendors/[id]/edit",
        "type": "page",
        "file": "src/app/(dashboard)/vendors/[id]/edit/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-68",
        "label": "/vendors/[id]",
        "type": "page",
        "file": "src/app/(dashboard)/vendors/[id]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-69",
        "label": "/vendors",
        "type": "page",
        "file": "src/app/(dashboard)/vendors/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-70",
        "label": "/weather",
        "type": "page",
        "file": "src/app/(dashboard)/weather/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-71",
        "label": "/wedding-website",
        "type": "page",
        "file": "src/app/(dashboard)/wedding-website/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-72",
        "label": "/wedme/final-payments",
        "type": "page",
        "file": "src/app/(dashboard)/wedme/final-payments/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-73",
        "label": "/wedme/marketplace",
        "type": "page",
        "file": "src/app/(dashboard)/wedme/marketplace/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-74",
        "label": "/wedme/photo-groups",
        "type": "page",
        "file": "src/app/(dashboard)/wedme/photo-groups/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-75",
        "label": "/wedme/seating",
        "type": "page",
        "file": "src/app/(dashboard)/wedme/seating/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-76",
        "label": "/wedme/templates/builder",
        "type": "page",
        "file": "src/app/(dashboard)/wedme/templates/builder/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-77",
        "label": "/wedding-basics",
        "type": "page",
        "file": "src/app/(onboarding)/wedding-basics/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-78",
        "label": "/analytics/budget",
        "type": "page",
        "file": "src/app/(wedme)/analytics/budget/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-79",
        "label": "/analytics/dashboard",
        "type": "page",
        "file": "src/app/(wedme)/analytics/dashboard/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-80",
        "label": "/analytics/vendor",
        "type": "page",
        "file": "src/app/(wedme)/analytics/vendor/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-81",
        "label": "/actions/__tests__",
        "type": "page",
        "file": "src/app/actions/__tests__/email-templates.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-82",
        "label": "/actions",
        "type": "page",
        "file": "src/app/actions/email-templates.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-83",
        "label": "/actions",
        "type": "page",
        "file": "src/app/actions/sms-templates.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-84",
        "label": "/admin/api-management",
        "type": "page",
        "file": "src/app/admin/api-management/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-85",
        "label": "/admin/backups",
        "type": "page",
        "file": "src/app/admin/backups/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-86",
        "label": "/admin/dashboard",
        "type": "page",
        "file": "src/app/admin/dashboard/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-87",
        "label": "/admin",
        "type": "page",
        "file": "src/app/admin/layout.tsx",
        "pageType": "layout"
      },
      {
        "id": "page-88",
        "label": "/admin",
        "type": "page",
        "file": "src/app/admin/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-89",
        "label": "/api/__tests__",
        "type": "page",
        "file": "src/app/api/__tests__/places-details.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-90",
        "label": "/api/__tests__",
        "type": "page",
        "file": "src/app/api/__tests__/places-nearby.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-91",
        "label": "/api/__tests__",
        "type": "page",
        "file": "src/app/api/__tests__/places-search.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-92",
        "label": "/api/__tests__",
        "type": "page",
        "file": "src/app/api/__tests__/wedding-places.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-93",
        "label": "/api/ab-testing/tests/[id]/actions",
        "type": "page",
        "file": "src/app/api/ab-testing/tests/[id]/actions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-94",
        "label": "/api/ab-testing/tests",
        "type": "page",
        "file": "src/app/api/ab-testing/tests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-95",
        "label": "/api/activation/alerts",
        "type": "page",
        "file": "src/app/api/activation/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-96",
        "label": "/api/activation/analytics",
        "type": "page",
        "file": "src/app/api/activation/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-97",
        "label": "/api/activation/events",
        "type": "page",
        "file": "src/app/api/activation/events/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-98",
        "label": "/api/activation/status/[userId]",
        "type": "page",
        "file": "src/app/api/activation/status/[userId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-99",
        "label": "/api/admin/activation-metrics",
        "type": "page",
        "file": "src/app/api/admin/activation-metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-100",
        "label": "/api/admin/alerts/monitoring",
        "type": "page",
        "file": "src/app/api/admin/alerts/monitoring/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-101",
        "label": "/api/admin/api-analytics/realtime",
        "type": "page",
        "file": "src/app/api/admin/api-analytics/realtime/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-102",
        "label": "/api/admin/api-analytics",
        "type": "page",
        "file": "src/app/api/admin/api-analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-103",
        "label": "/api/admin/api-usage/export",
        "type": "page",
        "file": "src/app/api/admin/api-usage/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-104",
        "label": "/api/admin/api-usage/metrics",
        "type": "page",
        "file": "src/app/api/admin/api-usage/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-105",
        "label": "/api/admin/audit-log",
        "type": "page",
        "file": "src/app/api/admin/audit-log/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-106",
        "label": "/api/admin/backup",
        "type": "page",
        "file": "src/app/api/admin/backup/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-107",
        "label": "/api/admin/backup/trigger",
        "type": "page",
        "file": "src/app/api/admin/backup/trigger/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-108",
        "label": "/api/admin/database/health",
        "type": "page",
        "file": "src/app/api/admin/database/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-109",
        "label": "/api/admin/database/maintenance/history",
        "type": "page",
        "file": "src/app/api/admin/database/maintenance/history/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-110",
        "label": "/api/admin/database/optimize",
        "type": "page",
        "file": "src/app/api/admin/database/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-111",
        "label": "/api/admin/deployment/rollback",
        "type": "page",
        "file": "src/app/api/admin/deployment/rollback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-112",
        "label": "/api/admin/environment/features",
        "type": "page",
        "file": "src/app/api/admin/environment/features/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-113",
        "label": "/api/admin/environment/health",
        "type": "page",
        "file": "src/app/api/admin/environment/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-114",
        "label": "/api/admin/environment/secrets",
        "type": "page",
        "file": "src/app/api/admin/environment/secrets/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-115",
        "label": "/api/admin/environment/validate",
        "type": "page",
        "file": "src/app/api/admin/environment/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-116",
        "label": "/api/admin/health/__tests__",
        "type": "page",
        "file": "src/app/api/admin/health/__tests__/route.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-117",
        "label": "/api/admin/health",
        "type": "page",
        "file": "src/app/api/admin/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-118",
        "label": "/api/admin/metrics",
        "type": "page",
        "file": "src/app/api/admin/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-119",
        "label": "/api/admin/ml/predictions",
        "type": "page",
        "file": "src/app/api/admin/ml/predictions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-120",
        "label": "/api/admin/notifications/preferences",
        "type": "page",
        "file": "src/app/api/admin/notifications/preferences/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-121",
        "label": "/api/admin/notifications/send",
        "type": "page",
        "file": "src/app/api/admin/notifications/send/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-122",
        "label": "/api/admin/performance",
        "type": "page",
        "file": "src/app/api/admin/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-123",
        "label": "/api/admin/photography/performance/stats",
        "type": "page",
        "file": "src/app/api/admin/photography/performance/stats/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-124",
        "label": "/api/admin/quick-actions",
        "type": "page",
        "file": "src/app/api/admin/quick-actions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-125",
        "label": "/api/admin/rate-limits/analytics",
        "type": "page",
        "file": "src/app/api/admin/rate-limits/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-126",
        "label": "/api/admin/rate-limits",
        "type": "page",
        "file": "src/app/api/admin/rate-limits/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-127",
        "label": "/api/admin/security/metrics",
        "type": "page",
        "file": "src/app/api/admin/security/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-128",
        "label": "/api/admin/system-features",
        "type": "page",
        "file": "src/app/api/admin/system-features/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-129",
        "label": "/api/admin/system-features/toggle",
        "type": "page",
        "file": "src/app/api/admin/system-features/toggle/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-130",
        "label": "/api/admin/versions/status",
        "type": "page",
        "file": "src/app/api/admin/versions/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-131",
        "label": "/api/admin/viral-metrics/__tests__",
        "type": "page",
        "file": "src/app/api/admin/viral-metrics/__tests__/integration.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-132",
        "label": "/api/admin/viral-metrics/bottlenecks",
        "type": "page",
        "file": "src/app/api/admin/viral-metrics/bottlenecks/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-133",
        "label": "/api/admin/viral-metrics",
        "type": "page",
        "file": "src/app/api/admin/viral-metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-134",
        "label": "/api/admin/viral-metrics/simulate",
        "type": "page",
        "file": "src/app/api/admin/viral-metrics/simulate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-135",
        "label": "/api/admin/webhooks/process",
        "type": "page",
        "file": "src/app/api/admin/webhooks/process/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-136",
        "label": "/api/ai/cache/clear",
        "type": "page",
        "file": "src/app/api/ai/cache/clear/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-137",
        "label": "/api/ai/cache/config",
        "type": "page",
        "file": "src/app/api/ai/cache/config/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-138",
        "label": "/api/ai/cache/performance",
        "type": "page",
        "file": "src/app/api/ai/cache/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-139",
        "label": "/api/ai/cache/seasonal",
        "type": "page",
        "file": "src/app/api/ai/cache/seasonal/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-140",
        "label": "/api/ai/cache/stats",
        "type": "page",
        "file": "src/app/api/ai/cache/stats/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-141",
        "label": "/api/ai/cache/warm",
        "type": "page",
        "file": "src/app/api/ai/cache/warm/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-142",
        "label": "/api/ai/email-templates/generate",
        "type": "page",
        "file": "src/app/api/ai/email-templates/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-143",
        "label": "/api/ai/email-templates/library",
        "type": "page",
        "file": "src/app/api/ai/email-templates/library/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-144",
        "label": "/api/ai/email-templates/personalize",
        "type": "page",
        "file": "src/app/api/ai/email-templates/personalize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-145",
        "label": "/api/ai/feature-requests/analyze",
        "type": "page",
        "file": "src/app/api/ai/feature-requests/analyze/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-146",
        "label": "/api/ai/feature-requests",
        "type": "page",
        "file": "src/app/api/ai/feature-requests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-147",
        "label": "/api/ai/generate-email-templates",
        "type": "page",
        "file": "src/app/api/ai/generate-email-templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-148",
        "label": "/api/ai/insights/predictions",
        "type": "page",
        "file": "src/app/api/ai/insights/predictions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-149",
        "label": "/api/ai/journey/optimize",
        "type": "page",
        "file": "src/app/api/ai/journey/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-150",
        "label": "/api/ai/journey/patterns",
        "type": "page",
        "file": "src/app/api/ai/journey/patterns/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-151",
        "label": "/api/ai/journey/suggest",
        "type": "page",
        "file": "src/app/api/ai/journey/suggest/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-152",
        "label": "/api/ai/knowledge/categories",
        "type": "page",
        "file": "src/app/api/ai/knowledge/categories/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-153",
        "label": "/api/ai/knowledge",
        "type": "page",
        "file": "src/app/api/ai/knowledge/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-154",
        "label": "/api/ai/knowledge/stats",
        "type": "page",
        "file": "src/app/api/ai/knowledge/stats/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-155",
        "label": "/api/ai/optimize",
        "type": "page",
        "file": "src/app/api/ai/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-156",
        "label": "/api/ai/personalize/batch",
        "type": "page",
        "file": "src/app/api/ai/personalize/batch/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-157",
        "label": "/api/ai/personalize",
        "type": "page",
        "file": "src/app/api/ai/personalize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-158",
        "label": "/api/ai/personalize/variables",
        "type": "page",
        "file": "src/app/api/ai/personalize/variables/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-159",
        "label": "/api/ai/personalize-email",
        "type": "page",
        "file": "src/app/api/ai/personalize-email/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-160",
        "label": "/api/ai/photography/error-handler",
        "type": "page",
        "file": "src/app/api/ai/photography/error-handler/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-161",
        "label": "/api/ai/recommendations",
        "type": "page",
        "file": "src/app/api/ai/recommendations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-162",
        "label": "/api/ai-cache/invalidate",
        "type": "page",
        "file": "src/app/api/ai-cache/invalidate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-163",
        "label": "/api/ai-cache/metrics",
        "type": "page",
        "file": "src/app/api/ai-cache/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-164",
        "label": "/api/ai-cache/optimize",
        "type": "page",
        "file": "src/app/api/ai-cache/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-165",
        "label": "/api/ai-cache/predict",
        "type": "page",
        "file": "src/app/api/ai-cache/predict/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-166",
        "label": "/api/ai-cache/preload",
        "type": "page",
        "file": "src/app/api/ai-cache/preload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-167",
        "label": "/api/ai-cache/query",
        "type": "page",
        "file": "src/app/api/ai-cache/query/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-168",
        "label": "/api/ai-cache/seasonal-scaling",
        "type": "page",
        "file": "src/app/api/ai-cache/seasonal-scaling/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-169",
        "label": "/api/ai-cache/security",
        "type": "page",
        "file": "src/app/api/ai-cache/security/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-170",
        "label": "/api/ai-cache/statistics",
        "type": "page",
        "file": "src/app/api/ai-cache/statistics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-171",
        "label": "/api/ai-email-templates",
        "type": "page",
        "file": "src/app/api/ai-email-templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-172",
        "label": "/api/ai-features/billing",
        "type": "page",
        "file": "src/app/api/ai-features/billing/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-173",
        "label": "/api/ai-features/chat",
        "type": "page",
        "file": "src/app/api/ai-features/chat/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-174",
        "label": "/api/ai-features/config",
        "type": "page",
        "file": "src/app/api/ai-features/config/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-175",
        "label": "/api/ai-features/execute",
        "type": "page",
        "file": "src/app/api/ai-features/execute/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-176",
        "label": "/api/ai-features/limits",
        "type": "page",
        "file": "src/app/api/ai-features/limits/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-177",
        "label": "/api/ai-features/migrate",
        "type": "page",
        "file": "src/app/api/ai-features/migrate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-178",
        "label": "/api/ai-features/test-key",
        "type": "page",
        "file": "src/app/api/ai-features/test-key/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-179",
        "label": "/api/ai-features/usage",
        "type": "page",
        "file": "src/app/api/ai-features/usage/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-180",
        "label": "/api/ai-optimization/batch-schedule",
        "type": "page",
        "file": "src/app/api/ai-optimization/batch-schedule/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-181",
        "label": "/api/ai-optimization/budget/status",
        "type": "page",
        "file": "src/app/api/ai-optimization/budget/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-182",
        "label": "/api/ai-optimization/cache-analytics",
        "type": "page",
        "file": "src/app/api/ai-optimization/cache-analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-183",
        "label": "/api/ai-optimization/config",
        "type": "page",
        "file": "src/app/api/ai-optimization/config/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-184",
        "label": "/api/ai-optimization/dashboard",
        "type": "page",
        "file": "src/app/api/ai-optimization/dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-185",
        "label": "/api/ai-optimization/emergency-disable",
        "type": "page",
        "file": "src/app/api/ai-optimization/emergency-disable/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-186",
        "label": "/api/ai-optimization/optimize",
        "type": "page",
        "file": "src/app/api/ai-optimization/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-187",
        "label": "/api/ai-optimization/projections",
        "type": "page",
        "file": "src/app/api/ai-optimization/projections/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-188",
        "label": "/api/ai-optimization/savings",
        "type": "page",
        "file": "src/app/api/ai-optimization/savings/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-189",
        "label": "/api/ai-pdf-analysis/analyze",
        "type": "page",
        "file": "src/app/api/ai-pdf-analysis/analyze/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-190",
        "label": "/api/ai-pdf-analysis/corrections",
        "type": "page",
        "file": "src/app/api/ai-pdf-analysis/corrections/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-191",
        "label": "/api/alerts/performance",
        "type": "page",
        "file": "src/app/api/alerts/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-192",
        "label": "/api/alerts",
        "type": "page",
        "file": "src/app/api/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-193",
        "label": "/api/alerts/ws",
        "type": "page",
        "file": "src/app/api/alerts/ws/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-194",
        "label": "/api/analytics/alerts",
        "type": "page",
        "file": "src/app/api/analytics/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-195",
        "label": "/api/analytics/cac/channels",
        "type": "page",
        "file": "src/app/api/analytics/cac/channels/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-196",
        "label": "/api/analytics/client-dashboard",
        "type": "page",
        "file": "src/app/api/analytics/client-dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-197",
        "label": "/api/analytics/cohorts",
        "type": "page",
        "file": "src/app/api/analytics/cohorts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-198",
        "label": "/api/analytics/custom-metrics",
        "type": "page",
        "file": "src/app/api/analytics/custom-metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-199",
        "label": "/api/analytics/dashboard/behavior",
        "type": "page",
        "file": "src/app/api/analytics/dashboard/behavior/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-200",
        "label": "/api/analytics/dashboard/features",
        "type": "page",
        "file": "src/app/api/analytics/dashboard/features/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-201",
        "label": "/api/analytics/dashboard/metrics",
        "type": "page",
        "file": "src/app/api/analytics/dashboard/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-202",
        "label": "/api/analytics/dashboard",
        "type": "page",
        "file": "src/app/api/analytics/dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-203",
        "label": "/api/analytics/engagement/alerts",
        "type": "page",
        "file": "src/app/api/analytics/engagement/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-204",
        "label": "/api/analytics/engagement/dashboard",
        "type": "page",
        "file": "src/app/api/analytics/engagement/dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-205",
        "label": "/api/analytics/engagement/track",
        "type": "page",
        "file": "src/app/api/analytics/engagement/track/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-206",
        "label": "/api/analytics/executive",
        "type": "page",
        "file": "src/app/api/analytics/executive/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-207",
        "label": "/api/analytics/export",
        "type": "page",
        "file": "src/app/api/analytics/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-208",
        "label": "/api/analytics/journeys/[id]",
        "type": "page",
        "file": "src/app/api/analytics/journeys/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-209",
        "label": "/api/analytics/ltv/batch",
        "type": "page",
        "file": "src/app/api/analytics/ltv/batch/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-210",
        "label": "/api/analytics/ltv/predict",
        "type": "page",
        "file": "src/app/api/analytics/ltv/predict/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-211",
        "label": "/api/analytics/metrics",
        "type": "page",
        "file": "src/app/api/analytics/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-212",
        "label": "/api/analytics/mrr",
        "type": "page",
        "file": "src/app/api/analytics/mrr/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-213",
        "label": "/api/analytics/performance",
        "type": "page",
        "file": "src/app/api/analytics/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-214",
        "label": "/api/analytics/performance/session",
        "type": "page",
        "file": "src/app/api/analytics/performance/session/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-215",
        "label": "/api/analytics/progress",
        "type": "page",
        "file": "src/app/api/analytics/progress/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-216",
        "label": "/api/analytics/realtime",
        "type": "page",
        "file": "src/app/api/analytics/realtime/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-217",
        "label": "/api/analytics/responses",
        "type": "page",
        "file": "src/app/api/analytics/responses/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-218",
        "label": "/api/analytics/reviews/campaigns/[campaignId]",
        "type": "page",
        "file": "src/app/api/analytics/reviews/campaigns/[campaignId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-219",
        "label": "/api/analytics/reviews/export",
        "type": "page",
        "file": "src/app/api/analytics/reviews/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-220",
        "label": "/api/analytics/reviews/overview/[supplierId]",
        "type": "page",
        "file": "src/app/api/analytics/reviews/overview/[supplierId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-221",
        "label": "/api/analytics/rum",
        "type": "page",
        "file": "src/app/api/analytics/rum/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-222",
        "label": "/api/analytics/seo",
        "type": "page",
        "file": "src/app/api/analytics/seo/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-223",
        "label": "/api/analytics/seo/sync",
        "type": "page",
        "file": "src/app/api/analytics/seo/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-224",
        "label": "/api/analytics/test",
        "type": "page",
        "file": "src/app/api/analytics/test/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-225",
        "label": "/api/analytics/track",
        "type": "page",
        "file": "src/app/api/analytics/track/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-226",
        "label": "/api/analytics/vitals",
        "type": "page",
        "file": "src/app/api/analytics/vitals/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-227",
        "label": "/api/analytics/web-vitals",
        "type": "page",
        "file": "src/app/api/analytics/web-vitals/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-228",
        "label": "/api/analytics/wedding/[id]/export",
        "type": "page",
        "file": "src/app/api/analytics/wedding/[id]/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-229",
        "label": "/api/analytics/wedding/[id]",
        "type": "page",
        "file": "src/app/api/analytics/wedding/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-230",
        "label": "/api/analytics/wedding-insights",
        "type": "page",
        "file": "src/app/api/analytics/wedding-insights/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-231",
        "label": "/api/api-keys/[id]/rotate",
        "type": "page",
        "file": "src/app/api/api-keys/[id]/rotate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-232",
        "label": "/api/api-keys/[id]",
        "type": "page",
        "file": "src/app/api/api-keys/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-233",
        "label": "/api/api-keys",
        "type": "page",
        "file": "src/app/api/api-keys/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-234",
        "label": "/api/api-keys/scopes",
        "type": "page",
        "file": "src/app/api/api-keys/scopes/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-235",
        "label": "/api/app-store/analytics",
        "type": "page",
        "file": "src/app/api/app-store/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-236",
        "label": "/api/app-store/generate",
        "type": "page",
        "file": "src/app/api/app-store/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-237",
        "label": "/api/app-store/submit",
        "type": "page",
        "file": "src/app/api/app-store/submit/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-238",
        "label": "/api/app-store/webhooks",
        "type": "page",
        "file": "src/app/api/app-store/webhooks/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-239",
        "label": "/api/audit/analytics",
        "type": "page",
        "file": "src/app/api/audit/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-240",
        "label": "/api/audit/compliance/reports",
        "type": "page",
        "file": "src/app/api/audit/compliance/reports/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-241",
        "label": "/api/audit/events",
        "type": "page",
        "file": "src/app/api/audit/events/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-242",
        "label": "/api/audit/investigation/patterns",
        "type": "page",
        "file": "src/app/api/audit/investigation/patterns/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-243",
        "label": "/api/audit/investigation/trace",
        "type": "page",
        "file": "src/app/api/audit/investigation/trace/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-244",
        "label": "/api/audit/logs",
        "type": "page",
        "file": "src/app/api/audit/logs/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-245",
        "label": "/api/audit/monitoring/metrics",
        "type": "page",
        "file": "src/app/api/audit/monitoring/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-246",
        "label": "/api/audit/reports",
        "type": "page",
        "file": "src/app/api/audit/reports/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-247",
        "label": "/api/audit/storage",
        "type": "page",
        "file": "src/app/api/audit/storage/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-248",
        "label": "/api/auth/[...nextauth]",
        "type": "page",
        "file": "src/app/api/auth/[...nextauth]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-249",
        "label": "/api/auth/forgot-password",
        "type": "page",
        "file": "src/app/api/auth/forgot-password/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-250",
        "label": "/api/auth/logout",
        "type": "page",
        "file": "src/app/api/auth/logout/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-251",
        "label": "/api/auth/mfa/challenge",
        "type": "page",
        "file": "src/app/api/auth/mfa/challenge/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-252",
        "label": "/api/auth/mfa/enroll",
        "type": "page",
        "file": "src/app/api/auth/mfa/enroll/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-253",
        "label": "/api/auth/mfa/unenroll",
        "type": "page",
        "file": "src/app/api/auth/mfa/unenroll/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-254",
        "label": "/api/auth/mfa/verify",
        "type": "page",
        "file": "src/app/api/auth/mfa/verify/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-255",
        "label": "/api/auth/refresh",
        "type": "page",
        "file": "src/app/api/auth/refresh/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-256",
        "label": "/api/auth/reset-password",
        "type": "page",
        "file": "src/app/api/auth/reset-password/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-257",
        "label": "/api/auth/session",
        "type": "page",
        "file": "src/app/api/auth/session/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-258",
        "label": "/api/auth/signup",
        "type": "page",
        "file": "src/app/api/auth/signup/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-259",
        "label": "/api/auto-population/mappings/auto-detect",
        "type": "page",
        "file": "src/app/api/auto-population/mappings/auto-detect/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-260",
        "label": "/api/auto-population/mappings",
        "type": "page",
        "file": "src/app/api/auto-population/mappings/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-261",
        "label": "/api/auto-population/populate",
        "type": "page",
        "file": "src/app/api/auto-population/populate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-262",
        "label": "/api/auto-population/session/[sessionId]",
        "type": "page",
        "file": "src/app/api/auto-population/session/[sessionId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-263",
        "label": "/api/backup/automated",
        "type": "page",
        "file": "src/app/api/backup/automated/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-264",
        "label": "/api/backup/configurations/[id]",
        "type": "page",
        "file": "src/app/api/backup/configurations/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-265",
        "label": "/api/backup/configurations",
        "type": "page",
        "file": "src/app/api/backup/configurations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-266",
        "label": "/api/backup/emergency-restore",
        "type": "page",
        "file": "src/app/api/backup/emergency-restore/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-267",
        "label": "/api/backup/execute",
        "type": "page",
        "file": "src/app/api/backup/execute/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-268",
        "label": "/api/backup/manual",
        "type": "page",
        "file": "src/app/api/backup/manual/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-269",
        "label": "/api/backup/status",
        "type": "page",
        "file": "src/app/api/backup/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-270",
        "label": "/api/backup/validation",
        "type": "page",
        "file": "src/app/api/backup/validation/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-271",
        "label": "/api/backups/create",
        "type": "page",
        "file": "src/app/api/backups/create/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-272",
        "label": "/api/backups/recovery-points",
        "type": "page",
        "file": "src/app/api/backups/recovery-points/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-273",
        "label": "/api/backups/status",
        "type": "page",
        "file": "src/app/api/backups/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-274",
        "label": "/api/batch",
        "type": "page",
        "file": "src/app/api/batch/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-275",
        "label": "/api/billing/monitoring",
        "type": "page",
        "file": "src/app/api/billing/monitoring/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-276",
        "label": "/api/billing/payment-recovery",
        "type": "page",
        "file": "src/app/api/billing/payment-recovery/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-277",
        "label": "/api/billing/subscription/downgrade",
        "type": "page",
        "file": "src/app/api/billing/subscription/downgrade/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-278",
        "label": "/api/billing/subscription",
        "type": "page",
        "file": "src/app/api/billing/subscription/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-279",
        "label": "/api/billing/subscription/upgrade",
        "type": "page",
        "file": "src/app/api/billing/subscription/upgrade/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-280",
        "label": "/api/billing/tiers",
        "type": "page",
        "file": "src/app/api/billing/tiers/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-281",
        "label": "/api/billing/usage/ai",
        "type": "page",
        "file": "src/app/api/billing/usage/ai/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-282",
        "label": "/api/billing/usage",
        "type": "page",
        "file": "src/app/api/billing/usage/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-283",
        "label": "/api/booking/[id]/preparation",
        "type": "page",
        "file": "src/app/api/booking/[id]/preparation/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-284",
        "label": "/api/booking/confirm",
        "type": "page",
        "file": "src/app/api/booking/confirm/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-285",
        "label": "/api/booking/reminders",
        "type": "page",
        "file": "src/app/api/booking/reminders/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-286",
        "label": "/api/booking/tasks/remind",
        "type": "page",
        "file": "src/app/api/booking/tasks/remind/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-287",
        "label": "/api/branding",
        "type": "page",
        "file": "src/app/api/branding/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-288",
        "label": "/api/branding/upload",
        "type": "page",
        "file": "src/app/api/branding/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-289",
        "label": "/api/broadcast/acknowledge",
        "type": "page",
        "file": "src/app/api/broadcast/acknowledge/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-290",
        "label": "/api/broadcast/inbox",
        "type": "page",
        "file": "src/app/api/broadcast/inbox/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-291",
        "label": "/api/broadcast/preferences",
        "type": "page",
        "file": "src/app/api/broadcast/preferences/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-292",
        "label": "/api/broadcast/send",
        "type": "page",
        "file": "src/app/api/broadcast/send/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-293",
        "label": "/api/budget/categories",
        "type": "page",
        "file": "src/app/api/budget/categories/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-294",
        "label": "/api/budget/categories/wedding",
        "type": "page",
        "file": "src/app/api/budget/categories/wedding/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-295",
        "label": "/api/budget/market-pricing",
        "type": "page",
        "file": "src/app/api/budget/market-pricing/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-296",
        "label": "/api/budget/optimize",
        "type": "page",
        "file": "src/app/api/budget/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-297",
        "label": "/api/budget/transactions",
        "type": "page",
        "file": "src/app/api/budget/transactions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-298",
        "label": "/api/budgets/[weddingId]/analytics",
        "type": "page",
        "file": "src/app/api/budgets/[weddingId]/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-299",
        "label": "/api/budgets/[weddingId]/export",
        "type": "page",
        "file": "src/app/api/budgets/[weddingId]/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-300",
        "label": "/api/budgets/[weddingId]/forecast",
        "type": "page",
        "file": "src/app/api/budgets/[weddingId]/forecast/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-301",
        "label": "/api/budgets/[weddingId]",
        "type": "page",
        "file": "src/app/api/budgets/[weddingId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-302",
        "label": "/api/calendar/oauth/[provider]/authorize",
        "type": "page",
        "file": "src/app/api/calendar/oauth/[provider]/authorize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-303",
        "label": "/api/calendar/outlook/auth",
        "type": "page",
        "file": "src/app/api/calendar/outlook/auth/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-304",
        "label": "/api/calendar/outlook/sync",
        "type": "page",
        "file": "src/app/api/calendar/outlook/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-305",
        "label": "/api/calendar/outlook/webhook",
        "type": "page",
        "file": "src/app/api/calendar/outlook/webhook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-306",
        "label": "/api/calendar/sync",
        "type": "page",
        "file": "src/app/api/calendar/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-307",
        "label": "/api/calendar/webhooks/[provider]",
        "type": "page",
        "file": "src/app/api/calendar/webhooks/[provider]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-308",
        "label": "/api/catering/dietary/analysis",
        "type": "page",
        "file": "src/app/api/catering/dietary/analysis/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-309",
        "label": "/api/catering/dietary/menu",
        "type": "page",
        "file": "src/app/api/catering/dietary/menu/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-310",
        "label": "/api/catering/dietary/requirements/[id]",
        "type": "page",
        "file": "src/app/api/catering/dietary/requirements/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-311",
        "label": "/api/catering/dietary/requirements",
        "type": "page",
        "file": "src/app/api/catering/dietary/requirements/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-312",
        "label": "/api/catering/dietary",
        "type": "page",
        "file": "src/app/api/catering/dietary/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-313",
        "label": "/api/catering/dietary/summary/[wedding_id]",
        "type": "page",
        "file": "src/app/api/catering/dietary/summary/[wedding_id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-314",
        "label": "/api/catering/guests/sync",
        "type": "page",
        "file": "src/app/api/catering/guests/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-315",
        "label": "/api/catering/menu/generate",
        "type": "page",
        "file": "src/app/api/catering/menu/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-316",
        "label": "/api/catering/menu/validate",
        "type": "page",
        "file": "src/app/api/catering/menu/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-317",
        "label": "/api/chat/messages",
        "type": "page",
        "file": "src/app/api/chat/messages/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-318",
        "label": "/api/chat/rooms",
        "type": "page",
        "file": "src/app/api/chat/rooms/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-319",
        "label": "/api/chatbot/conversations/[id]/messages",
        "type": "page",
        "file": "src/app/api/chatbot/conversations/[id]/messages/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-320",
        "label": "/api/chatbot/conversations/[id]",
        "type": "page",
        "file": "src/app/api/chatbot/conversations/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-321",
        "label": "/api/chatbot/conversations",
        "type": "page",
        "file": "src/app/api/chatbot/conversations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-322",
        "label": "/api/chatbot/escalate",
        "type": "page",
        "file": "src/app/api/chatbot/escalate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-323",
        "label": "/api/chatbot/realtime",
        "type": "page",
        "file": "src/app/api/chatbot/realtime/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-324",
        "label": "/api/chatbot",
        "type": "page",
        "file": "src/app/api/chatbot/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-325",
        "label": "/api/churn/predict",
        "type": "page",
        "file": "src/app/api/churn/predict/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-326",
        "label": "/api/ci-cd/performance/status/[buildId]",
        "type": "page",
        "file": "src/app/api/ci-cd/performance/status/[buildId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-327",
        "label": "/api/ci-cd/performance/validate",
        "type": "page",
        "file": "src/app/api/ci-cd/performance/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-328",
        "label": "/api/clients/[id]/activities",
        "type": "page",
        "file": "src/app/api/clients/[id]/activities/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-329",
        "label": "/api/clients/[id]/documents",
        "type": "page",
        "file": "src/app/api/clients/[id]/documents/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-330",
        "label": "/api/clients/[id]/milestones",
        "type": "page",
        "file": "src/app/api/clients/[id]/milestones/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-331",
        "label": "/api/clients/[id]/notes",
        "type": "page",
        "file": "src/app/api/clients/[id]/notes/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-332",
        "label": "/api/clients/[id]",
        "type": "page",
        "file": "src/app/api/clients/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-333",
        "label": "/api/clients/[id]/tags",
        "type": "page",
        "file": "src/app/api/clients/[id]/tags/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-334",
        "label": "/api/clients/analytics/historical",
        "type": "page",
        "file": "src/app/api/clients/analytics/historical/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-335",
        "label": "/api/clients/analytics/performance",
        "type": "page",
        "file": "src/app/api/clients/analytics/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-336",
        "label": "/api/clients/analytics",
        "type": "page",
        "file": "src/app/api/clients/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-337",
        "label": "/api/clients/bulk",
        "type": "page",
        "file": "src/app/api/clients/bulk/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-338",
        "label": "/api/clients/import",
        "type": "page",
        "file": "src/app/api/clients/import/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-339",
        "label": "/api/clients",
        "type": "page",
        "file": "src/app/api/clients/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-340",
        "label": "/api/cloud/providers/[id]/regions",
        "type": "page",
        "file": "src/app/api/cloud/providers/[id]/regions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-341",
        "label": "/api/cloud/providers/[id]",
        "type": "page",
        "file": "src/app/api/cloud/providers/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-342",
        "label": "/api/cloud/providers/[id]/services",
        "type": "page",
        "file": "src/app/api/cloud/providers/[id]/services/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-343",
        "label": "/api/cloud/providers/[id]/sync",
        "type": "page",
        "file": "src/app/api/cloud/providers/[id]/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-344",
        "label": "/api/cloud/providers/[id]/test-connection",
        "type": "page",
        "file": "src/app/api/cloud/providers/[id]/test-connection/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-345",
        "label": "/api/cloud/providers",
        "type": "page",
        "file": "src/app/api/cloud/providers/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-346",
        "label": "/api/collaboration/conflicts",
        "type": "page",
        "file": "src/app/api/collaboration/conflicts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-347",
        "label": "/api/collaboration/documents",
        "type": "page",
        "file": "src/app/api/collaboration/documents/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-348",
        "label": "/api/collaboration/events/[weddingId]",
        "type": "page",
        "file": "src/app/api/collaboration/events/[weddingId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-349",
        "label": "/api/collaboration/join/[weddingId]",
        "type": "page",
        "file": "src/app/api/collaboration/join/[weddingId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-350",
        "label": "/api/collaboration/presence/[weddingId]",
        "type": "page",
        "file": "src/app/api/collaboration/presence/[weddingId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-351",
        "label": "/api/collaboration/save",
        "type": "page",
        "file": "src/app/api/collaboration/save/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-352",
        "label": "/api/collaboration/sessions",
        "type": "page",
        "file": "src/app/api/collaboration/sessions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-353",
        "label": "/api/collaboration/sync/[weddingId]",
        "type": "page",
        "file": "src/app/api/collaboration/sync/[weddingId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-354",
        "label": "/api/collaboration/sync",
        "type": "page",
        "file": "src/app/api/collaboration/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-355",
        "label": "/api/collaboration/websocket",
        "type": "page",
        "file": "src/app/api/collaboration/websocket/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-356",
        "label": "/api/communications/ab-testing",
        "type": "page",
        "file": "src/app/api/communications/ab-testing/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-357",
        "label": "/api/communications/activity-feed",
        "type": "page",
        "file": "src/app/api/communications/activity-feed/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-358",
        "label": "/api/communications/analytics",
        "type": "page",
        "file": "src/app/api/communications/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-359",
        "label": "/api/communications/compliance",
        "type": "page",
        "file": "src/app/api/communications/compliance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-360",
        "label": "/api/communications/conversations",
        "type": "page",
        "file": "src/app/api/communications/conversations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-361",
        "label": "/api/communications/messages/[id]/read",
        "type": "page",
        "file": "src/app/api/communications/messages/[id]/read/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-362",
        "label": "/api/communications/messages",
        "type": "page",
        "file": "src/app/api/communications/messages/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-363",
        "label": "/api/communications/notifications/email",
        "type": "page",
        "file": "src/app/api/communications/notifications/email/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-364",
        "label": "/api/communications/notifications/webhooks/resend",
        "type": "page",
        "file": "src/app/api/communications/notifications/webhooks/resend/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-365",
        "label": "/api/communications/preferences",
        "type": "page",
        "file": "src/app/api/communications/preferences/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-366",
        "label": "/api/communications/schedule",
        "type": "page",
        "file": "src/app/api/communications/schedule/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-367",
        "label": "/api/communications/send",
        "type": "page",
        "file": "src/app/api/communications/send/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-368",
        "label": "/api/communications/status/[id]",
        "type": "page",
        "file": "src/app/api/communications/status/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-369",
        "label": "/api/communications/templates/bulk",
        "type": "page",
        "file": "src/app/api/communications/templates/bulk/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-370",
        "label": "/api/communications/templates",
        "type": "page",
        "file": "src/app/api/communications/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-371",
        "label": "/api/communications/test",
        "type": "page",
        "file": "src/app/api/communications/test/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-372",
        "label": "/api/content/media",
        "type": "page",
        "file": "src/app/api/content/media/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-373",
        "label": "/api/content",
        "type": "page",
        "file": "src/app/api/content/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-374",
        "label": "/api/content/search",
        "type": "page",
        "file": "src/app/api/content/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-375",
        "label": "/api/content/templates",
        "type": "page",
        "file": "src/app/api/content/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-376",
        "label": "/api/content/versions",
        "type": "page",
        "file": "src/app/api/content/versions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-377",
        "label": "/api/contracts/[id]/deliverables",
        "type": "page",
        "file": "src/app/api/contracts/[id]/deliverables/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-378",
        "label": "/api/contracts/[id]/milestones",
        "type": "page",
        "file": "src/app/api/contracts/[id]/milestones/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-379",
        "label": "/api/contracts/[id]/revisions",
        "type": "page",
        "file": "src/app/api/contracts/[id]/revisions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-380",
        "label": "/api/contracts",
        "type": "page",
        "file": "src/app/api/contracts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-381",
        "label": "/api/contracts/upload",
        "type": "page",
        "file": "src/app/api/contracts/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-382",
        "label": "/api/core-fields/extract",
        "type": "page",
        "file": "src/app/api/core-fields/extract/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-383",
        "label": "/api/core-fields/populate",
        "type": "page",
        "file": "src/app/api/core-fields/populate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-384",
        "label": "/api/core-fields",
        "type": "page",
        "file": "src/app/api/core-fields/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-385",
        "label": "/api/couples/notifications/generate-shareable",
        "type": "page",
        "file": "src/app/api/couples/notifications/generate-shareable/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-386",
        "label": "/api/couples/notifications",
        "type": "page",
        "file": "src/app/api/couples/notifications/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-387",
        "label": "/api/couples/notifications/stream",
        "type": "page",
        "file": "src/app/api/couples/notifications/stream/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-388",
        "label": "/api/creators/onboarding/[applicationId]/complete-step",
        "type": "page",
        "file": "src/app/api/creators/onboarding/[applicationId]/complete-step/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-389",
        "label": "/api/creators/onboarding",
        "type": "page",
        "file": "src/app/api/creators/onboarding/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-390",
        "label": "/api/creators/stripe-setup/[applicationId]",
        "type": "page",
        "file": "src/app/api/creators/stripe-setup/[applicationId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-391",
        "label": "/api/crm/integrations/[id]/sync",
        "type": "page",
        "file": "src/app/api/crm/integrations/[id]/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-392",
        "label": "/api/crm/integrations",
        "type": "page",
        "file": "src/app/api/crm/integrations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-393",
        "label": "/api/crm/providers",
        "type": "page",
        "file": "src/app/api/crm/providers/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-394",
        "label": "/api/cron/health-check",
        "type": "page",
        "file": "src/app/api/cron/health-check/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-395",
        "label": "/api/cron/rsvp-reminders",
        "type": "page",
        "file": "src/app/api/cron/rsvp-reminders/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-396",
        "label": "/api/csrf-token",
        "type": "page",
        "file": "src/app/api/csrf-token/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-397",
        "label": "/api/customer-success/health-interventions",
        "type": "page",
        "file": "src/app/api/customer-success/health-interventions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-398",
        "label": "/api/customer-success/health-score",
        "type": "page",
        "file": "src/app/api/customer-success/health-score/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-399",
        "label": "/api/customer-success/health-score-optimized",
        "type": "page",
        "file": "src/app/api/customer-success/health-score-optimized/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-400",
        "label": "/api/customer-success/intervention-workflows",
        "type": "page",
        "file": "src/app/api/customer-success/intervention-workflows/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-401",
        "label": "/api/customer-success/milestones",
        "type": "page",
        "file": "src/app/api/customer-success/milestones/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-402",
        "label": "/api/customer-success/onboarding/analytics",
        "type": "page",
        "file": "src/app/api/customer-success/onboarding/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-403",
        "label": "/api/customer-success/onboarding/automation-rules",
        "type": "page",
        "file": "src/app/api/customer-success/onboarding/automation-rules/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-404",
        "label": "/api/customer-success/onboarding/stages",
        "type": "page",
        "file": "src/app/api/customer-success/onboarding/stages/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-405",
        "label": "/api/customer-success/onboarding/tasks",
        "type": "page",
        "file": "src/app/api/customer-success/onboarding/tasks/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-406",
        "label": "/api/customer-success/onboarding/workflow",
        "type": "page",
        "file": "src/app/api/customer-success/onboarding/workflow/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-407",
        "label": "/api/customer-success/risk-assessment",
        "type": "page",
        "file": "src/app/api/customer-success/risk-assessment/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-408",
        "label": "/api/dashboard/config",
        "type": "page",
        "file": "src/app/api/dashboard/config/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-409",
        "label": "/api/dashboard/customer-success",
        "type": "page",
        "file": "src/app/api/dashboard/customer-success/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-410",
        "label": "/api/dashboard",
        "type": "page",
        "file": "src/app/api/dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-411",
        "label": "/api/dashboard/widgets/[type]",
        "type": "page",
        "file": "src/app/api/dashboard/widgets/[type]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-412",
        "label": "/api/debug/encryption-verify",
        "type": "page",
        "file": "src/app/api/debug/encryption-verify/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-413",
        "label": "/api/dietary/alerts/[couple_id]",
        "type": "page",
        "file": "src/app/api/dietary/alerts/[couple_id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-414",
        "label": "/api/dietary/export/[couple_id]",
        "type": "page",
        "file": "src/app/api/dietary/export/[couple_id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-415",
        "label": "/api/dietary/matrix/[couple_id]",
        "type": "page",
        "file": "src/app/api/dietary/matrix/[couple_id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-416",
        "label": "/api/directory/suppliers/[id]/media",
        "type": "page",
        "file": "src/app/api/directory/suppliers/[id]/media/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-417",
        "label": "/api/directory/suppliers/[id]/public",
        "type": "page",
        "file": "src/app/api/directory/suppliers/[id]/public/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-418",
        "label": "/api/directory/suppliers/[id]/update",
        "type": "page",
        "file": "src/app/api/directory/suppliers/[id]/update/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-419",
        "label": "/api/directory/suppliers/[id]/verify",
        "type": "page",
        "file": "src/app/api/directory/suppliers/[id]/verify/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-420",
        "label": "/api/directory/suppliers/create",
        "type": "page",
        "file": "src/app/api/directory/suppliers/create/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-421",
        "label": "/api/document-processing/mapping/analyze",
        "type": "page",
        "file": "src/app/api/document-processing/mapping/analyze/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-422",
        "label": "/api/document-processing/mapping/apply",
        "type": "page",
        "file": "src/app/api/document-processing/mapping/apply/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-423",
        "label": "/api/document-processing/mapping/correct",
        "type": "page",
        "file": "src/app/api/document-processing/mapping/correct/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-424",
        "label": "/api/document-processing/mapping/save-template",
        "type": "page",
        "file": "src/app/api/document-processing/mapping/save-template/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-425",
        "label": "/api/document-processing/mapping/templates",
        "type": "page",
        "file": "src/app/api/document-processing/mapping/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-426",
        "label": "/api/document-processing/workflow",
        "type": "page",
        "file": "src/app/api/document-processing/workflow/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-427",
        "label": "/api/documents/[id]/download",
        "type": "page",
        "file": "src/app/api/documents/[id]/download/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-428",
        "label": "/api/documents/[id]",
        "type": "page",
        "file": "src/app/api/documents/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-429",
        "label": "/api/documents/[id]/share",
        "type": "page",
        "file": "src/app/api/documents/[id]/share/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-430",
        "label": "/api/documents/compliance",
        "type": "page",
        "file": "src/app/api/documents/compliance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-431",
        "label": "/api/documents",
        "type": "page",
        "file": "src/app/api/documents/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-432",
        "label": "/api/domains",
        "type": "page",
        "file": "src/app/api/domains/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-433",
        "label": "/api/encryption/batch-encrypt",
        "type": "page",
        "file": "src/app/api/encryption/batch-encrypt/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-434",
        "label": "/api/encryption/crypto-shred",
        "type": "page",
        "file": "src/app/api/encryption/crypto-shred/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-435",
        "label": "/api/encryption/decrypt-field",
        "type": "page",
        "file": "src/app/api/encryption/decrypt-field/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-436",
        "label": "/api/encryption/encrypt-field",
        "type": "page",
        "file": "src/app/api/encryption/encrypt-field/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-437",
        "label": "/api/encryption/performance-metrics",
        "type": "page",
        "file": "src/app/api/encryption/performance-metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-438",
        "label": "/api/encryption/progressive-decrypt",
        "type": "page",
        "file": "src/app/api/encryption/progressive-decrypt/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-439",
        "label": "/api/encryption/rotate-keys",
        "type": "page",
        "file": "src/app/api/encryption/rotate-keys/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-440",
        "label": "/api/encryption/search",
        "type": "page",
        "file": "src/app/api/encryption/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-441",
        "label": "/api/encryption/user-keys",
        "type": "page",
        "file": "src/app/api/encryption/user-keys/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-442",
        "label": "/api/environment/deployment/rollback",
        "type": "page",
        "file": "src/app/api/environment/deployment/rollback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-443",
        "label": "/api/environment/deployment/status",
        "type": "page",
        "file": "src/app/api/environment/deployment/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-444",
        "label": "/api/environment/deployment/sync",
        "type": "page",
        "file": "src/app/api/environment/deployment/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-445",
        "label": "/api/environment/deployment/validate",
        "type": "page",
        "file": "src/app/api/environment/deployment/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-446",
        "label": "/api/environment/health/[environment]",
        "type": "page",
        "file": "src/app/api/environment/health/[environment]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-447",
        "label": "/api/environment/health",
        "type": "page",
        "file": "src/app/api/environment/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-448",
        "label": "/api/environment/monitoring/alerts",
        "type": "page",
        "file": "src/app/api/environment/monitoring/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-449",
        "label": "/api/environment/monitoring/metrics",
        "type": "page",
        "file": "src/app/api/environment/monitoring/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-450",
        "label": "/api/environment/wedding-safety/emergency-override",
        "type": "page",
        "file": "src/app/api/environment/wedding-safety/emergency-override/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-451",
        "label": "/api/environment/wedding-safety/emergency-rollback",
        "type": "page",
        "file": "src/app/api/environment/wedding-safety/emergency-rollback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-452",
        "label": "/api/environment/wedding-safety/status",
        "type": "page",
        "file": "src/app/api/environment/wedding-safety/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-453",
        "label": "/api/errors/feedback",
        "type": "page",
        "file": "src/app/api/errors/feedback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-454",
        "label": "/api/executive/metrics",
        "type": "page",
        "file": "src/app/api/executive/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-455",
        "label": "/api/expenses",
        "type": "page",
        "file": "src/app/api/expenses/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-456",
        "label": "/api/faq/[id]",
        "type": "page",
        "file": "src/app/api/faq/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-457",
        "label": "/api/faq/enhance",
        "type": "page",
        "file": "src/app/api/faq/enhance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-458",
        "label": "/api/faq",
        "type": "page",
        "file": "src/app/api/faq/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-459",
        "label": "/api/feature-requests/[id]/vote",
        "type": "page",
        "file": "src/app/api/feature-requests/[id]/vote/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-460",
        "label": "/api/feature-requests/check-duplicates",
        "type": "page",
        "file": "src/app/api/feature-requests/check-duplicates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-461",
        "label": "/api/feature-requests/external-systems/create-issue",
        "type": "page",
        "file": "src/app/api/feature-requests/external-systems/create-issue/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-462",
        "label": "/api/feature-requests/external-systems/sync",
        "type": "page",
        "file": "src/app/api/feature-requests/external-systems/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-463",
        "label": "/api/feature-requests/external-systems/webhooks/github",
        "type": "page",
        "file": "src/app/api/feature-requests/external-systems/webhooks/github/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-464",
        "label": "/api/feature-requests/external-systems/webhooks/jira",
        "type": "page",
        "file": "src/app/api/feature-requests/external-systems/webhooks/jira/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-465",
        "label": "/api/feature-requests/external-systems/webhooks/linear",
        "type": "page",
        "file": "src/app/api/feature-requests/external-systems/webhooks/linear/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-466",
        "label": "/api/feature-requests",
        "type": "page",
        "file": "src/app/api/feature-requests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-467",
        "label": "/api/feedback/[id]/responses",
        "type": "page",
        "file": "src/app/api/feedback/[id]/responses/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-468",
        "label": "/api/feedback/[id]",
        "type": "page",
        "file": "src/app/api/feedback/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-469",
        "label": "/api/feedback/analytics",
        "type": "page",
        "file": "src/app/api/feedback/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-470",
        "label": "/api/feedback/automation/process",
        "type": "page",
        "file": "src/app/api/feedback/automation/process/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-471",
        "label": "/api/feedback/automation",
        "type": "page",
        "file": "src/app/api/feedback/automation/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-472",
        "label": "/api/feedback/categories",
        "type": "page",
        "file": "src/app/api/feedback/categories/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-473",
        "label": "/api/feedback",
        "type": "page",
        "file": "src/app/api/feedback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-474",
        "label": "/api/feedback/session/[sessionId]/complete",
        "type": "page",
        "file": "src/app/api/feedback/session/[sessionId]/complete/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-475",
        "label": "/api/feedback/session/[sessionId]/respond",
        "type": "page",
        "file": "src/app/api/feedback/session/[sessionId]/respond/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-476",
        "label": "/api/feedback/session/start",
        "type": "page",
        "file": "src/app/api/feedback/session/start/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-477",
        "label": "/api/feedback/triggers",
        "type": "page",
        "file": "src/app/api/feedback/triggers/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-478",
        "label": "/api/field-extraction/export",
        "type": "page",
        "file": "src/app/api/field-extraction/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-479",
        "label": "/api/field-extraction/extract",
        "type": "page",
        "file": "src/app/api/field-extraction/extract/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-480",
        "label": "/api/field-extraction/templates/[id]",
        "type": "page",
        "file": "src/app/api/field-extraction/templates/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-481",
        "label": "/api/field-extraction/templates",
        "type": "page",
        "file": "src/app/api/field-extraction/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-482",
        "label": "/api/field-integration",
        "type": "page",
        "file": "src/app/api/field-integration/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-483",
        "label": "/api/fields/analytics",
        "type": "page",
        "file": "src/app/api/fields/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-484",
        "label": "/api/fields",
        "type": "page",
        "file": "src/app/api/fields/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-485",
        "label": "/api/fields/templates/[templateId]",
        "type": "page",
        "file": "src/app/api/fields/templates/[templateId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-486",
        "label": "/api/fields/templates",
        "type": "page",
        "file": "src/app/api/fields/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-487",
        "label": "/api/fields/transform",
        "type": "page",
        "file": "src/app/api/fields/transform/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-488",
        "label": "/api/fields/validate",
        "type": "page",
        "file": "src/app/api/fields/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-489",
        "label": "/api/floral/estimate",
        "type": "page",
        "file": "src/app/api/floral/estimate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-490",
        "label": "/api/floral/feedback",
        "type": "page",
        "file": "src/app/api/floral/feedback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-491",
        "label": "/api/floral/recommendations",
        "type": "page",
        "file": "src/app/api/floral/recommendations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-492",
        "label": "/api/floral",
        "type": "page",
        "file": "src/app/api/floral/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-493",
        "label": "/api/floral/seasonal",
        "type": "page",
        "file": "src/app/api/floral/seasonal/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-494",
        "label": "/api/floral/vendors",
        "type": "page",
        "file": "src/app/api/floral/vendors/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-495",
        "label": "/api/florist/colors/analyze",
        "type": "page",
        "file": "src/app/api/florist/colors/analyze/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-496",
        "label": "/api/florist/external/circuit-status",
        "type": "page",
        "file": "src/app/api/florist/external/circuit-status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-497",
        "label": "/api/florist/external/test-circuit-breaker",
        "type": "page",
        "file": "src/app/api/florist/external/test-circuit-breaker/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-498",
        "label": "/api/florist/palette/generate",
        "type": "page",
        "file": "src/app/api/florist/palette/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-499",
        "label": "/api/florist/search",
        "type": "page",
        "file": "src/app/api/florist/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-500",
        "label": "/api/florist/sustainability/analyze",
        "type": "page",
        "file": "src/app/api/florist/sustainability/analyze/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-501",
        "label": "/api/forms/[id]/logic",
        "type": "page",
        "file": "src/app/api/forms/[id]/logic/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-502",
        "label": "/api/forms/[id]",
        "type": "page",
        "file": "src/app/api/forms/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-503",
        "label": "/api/forms/[id]/submit",
        "type": "page",
        "file": "src/app/api/forms/[id]/submit/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-504",
        "label": "/api/forms/[id]/sync-core-fields",
        "type": "page",
        "file": "src/app/api/forms/[id]/sync-core-fields/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-505",
        "label": "/api/forms/[id]/validate",
        "type": "page",
        "file": "src/app/api/forms/[id]/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-506",
        "label": "/api/forms/create",
        "type": "page",
        "file": "src/app/api/forms/create/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-507",
        "label": "/api/forms/create-from-pdf",
        "type": "page",
        "file": "src/app/api/forms/create-from-pdf/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-508",
        "label": "/api/forms",
        "type": "page",
        "file": "src/app/api/forms/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-509",
        "label": "/api/forms/submit",
        "type": "page",
        "file": "src/app/api/forms/submit/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-510",
        "label": "/api/forms/verify-password",
        "type": "page",
        "file": "src/app/api/forms/verify-password/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-511",
        "label": "/api/gateway/analytics",
        "type": "page",
        "file": "src/app/api/gateway/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-512",
        "label": "/api/gateway/health",
        "type": "page",
        "file": "src/app/api/gateway/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-513",
        "label": "/api/gateway/routing",
        "type": "page",
        "file": "src/app/api/gateway/routing/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-514",
        "label": "/api/gdpr/breach/assess-notification/[id]",
        "type": "page",
        "file": "src/app/api/gdpr/breach/assess-notification/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-515",
        "label": "/api/gdpr/breach/report",
        "type": "page",
        "file": "src/app/api/gdpr/breach/report/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-516",
        "label": "/api/gdpr/consent/current-user",
        "type": "page",
        "file": "src/app/api/gdpr/consent/current-user/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-517",
        "label": "/api/gdpr/consent/record",
        "type": "page",
        "file": "src/app/api/gdpr/consent/record/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-518",
        "label": "/api/gdpr/consent",
        "type": "page",
        "file": "src/app/api/gdpr/consent/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-519",
        "label": "/api/gdpr/consent/withdraw",
        "type": "page",
        "file": "src/app/api/gdpr/consent/withdraw/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-520",
        "label": "/api/gdpr/data-export",
        "type": "page",
        "file": "src/app/api/gdpr/data-export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-521",
        "label": "/api/gdpr/data-request",
        "type": "page",
        "file": "src/app/api/gdpr/data-request/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-522",
        "label": "/api/gdpr/export/data-subject/[id]",
        "type": "page",
        "file": "src/app/api/gdpr/export/data-subject/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-523",
        "label": "/api/gdpr/subject-request/submit",
        "type": "page",
        "file": "src/app/api/gdpr/subject-request/submit/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-524",
        "label": "/api/geocode",
        "type": "page",
        "file": "src/app/api/geocode/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-525",
        "label": "/api/guests/[id]/dietary",
        "type": "page",
        "file": "src/app/api/guests/[id]/dietary/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-526",
        "label": "/api/guests/[id]",
        "type": "page",
        "file": "src/app/api/guests/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-527",
        "label": "/api/guests/bulk",
        "type": "page",
        "file": "src/app/api/guests/bulk/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-528",
        "label": "/api/guests/bulk-import",
        "type": "page",
        "file": "src/app/api/guests/bulk-import/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-529",
        "label": "/api/guests/dietary",
        "type": "page",
        "file": "src/app/api/guests/dietary/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-530",
        "label": "/api/guests/export",
        "type": "page",
        "file": "src/app/api/guests/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-531",
        "label": "/api/guests/import",
        "type": "page",
        "file": "src/app/api/guests/import/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-532",
        "label": "/api/guests/import-enhanced",
        "type": "page",
        "file": "src/app/api/guests/import-enhanced/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-533",
        "label": "/api/guests/import-enhanced/ws151",
        "type": "page",
        "file": "src/app/api/guests/import-enhanced/ws151/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-534",
        "label": "/api/guests/photo-groups",
        "type": "page",
        "file": "src/app/api/guests/photo-groups/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-535",
        "label": "/api/guests/quick-add",
        "type": "page",
        "file": "src/app/api/guests/quick-add/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-536",
        "label": "/api/guests",
        "type": "page",
        "file": "src/app/api/guests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-537",
        "label": "/api/health/alerts",
        "type": "page",
        "file": "src/app/api/health/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-538",
        "label": "/api/health/check",
        "type": "page",
        "file": "src/app/api/health/check/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-539",
        "label": "/api/health/complete",
        "type": "page",
        "file": "src/app/api/health/complete/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-540",
        "label": "/api/health/database",
        "type": "page",
        "file": "src/app/api/health/database/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-541",
        "label": "/api/health/deployment",
        "type": "page",
        "file": "src/app/api/health/deployment/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-542",
        "label": "/api/health/integrations",
        "type": "page",
        "file": "src/app/api/health/integrations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-543",
        "label": "/api/health",
        "type": "page",
        "file": "src/app/api/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-544",
        "label": "/api/health/trends",
        "type": "page",
        "file": "src/app/api/health/trends/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-545",
        "label": "/api/health-monitoring",
        "type": "page",
        "file": "src/app/api/health-monitoring/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-546",
        "label": "/api/helpers/schedules/[id]/reorder",
        "type": "page",
        "file": "src/app/api/helpers/schedules/[id]/reorder/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-547",
        "label": "/api/helpers/schedules",
        "type": "page",
        "file": "src/app/api/helpers/schedules/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-548",
        "label": "/api/helpers/schedules/wedding/export/ics",
        "type": "page",
        "file": "src/app/api/helpers/schedules/wedding/export/ics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-549",
        "label": "/api/helpers/wedding-schedules/[weddingId]/export/ics",
        "type": "page",
        "file": "src/app/api/helpers/wedding-schedules/[weddingId]/export/ics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-550",
        "label": "/api/households",
        "type": "page",
        "file": "src/app/api/households/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-551",
        "label": "/api/i18n/content",
        "type": "page",
        "file": "src/app/api/i18n/content/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-552",
        "label": "/api/i18n/locales",
        "type": "page",
        "file": "src/app/api/i18n/locales/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-553",
        "label": "/api/i18n/translations",
        "type": "page",
        "file": "src/app/api/i18n/translations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-554",
        "label": "/api/import/process",
        "type": "page",
        "file": "src/app/api/import/process/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-555",
        "label": "/api/import/upload",
        "type": "page",
        "file": "src/app/api/import/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-556",
        "label": "/api/integration/health",
        "type": "page",
        "file": "src/app/api/integration/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-557",
        "label": "/api/integrations/ai/webhook",
        "type": "page",
        "file": "src/app/api/integrations/ai/webhook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-558",
        "label": "/api/integrations/analytics/data-sync",
        "type": "page",
        "file": "src/app/api/integrations/analytics/data-sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-559",
        "label": "/api/integrations/analytics/industry-insights",
        "type": "page",
        "file": "src/app/api/integrations/analytics/industry-insights/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-560",
        "label": "/api/integrations/analytics/quality-check",
        "type": "page",
        "file": "src/app/api/integrations/analytics/quality-check/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-561",
        "label": "/api/integrations/calendar",
        "type": "page",
        "file": "src/app/api/integrations/calendar/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-562",
        "label": "/api/integrations/channel-config",
        "type": "page",
        "file": "src/app/api/integrations/channel-config/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-563",
        "label": "/api/integrations/crm",
        "type": "page",
        "file": "src/app/api/integrations/crm/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-564",
        "label": "/api/integrations/health",
        "type": "page",
        "file": "src/app/api/integrations/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-565",
        "label": "/api/integrations/ltv/marketing",
        "type": "page",
        "file": "src/app/api/integrations/ltv/marketing/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-566",
        "label": "/api/integrations/ltv/payments",
        "type": "page",
        "file": "src/app/api/integrations/ltv/payments/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-567",
        "label": "/api/integrations/payment",
        "type": "page",
        "file": "src/app/api/integrations/payment/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-568",
        "label": "/api/integrations/portfolio",
        "type": "page",
        "file": "src/app/api/integrations/portfolio/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-569",
        "label": "/api/integrations/retention/orchestrate",
        "type": "page",
        "file": "src/app/api/integrations/retention/orchestrate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-570",
        "label": "/api/integrations",
        "type": "page",
        "file": "src/app/api/integrations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-571",
        "label": "/api/integrations/social",
        "type": "page",
        "file": "src/app/api/integrations/social/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-572",
        "label": "/api/integrations/sync/[weddingId]",
        "type": "page",
        "file": "src/app/api/integrations/sync/[weddingId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-573",
        "label": "/api/integrations/sync",
        "type": "page",
        "file": "src/app/api/integrations/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-574",
        "label": "/api/integrations/vendor/connect",
        "type": "page",
        "file": "src/app/api/integrations/vendor/connect/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-575",
        "label": "/api/integrations/verification/trigger",
        "type": "page",
        "file": "src/app/api/integrations/verification/trigger/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-576",
        "label": "/api/integrations/verification/webhook",
        "type": "page",
        "file": "src/app/api/integrations/verification/webhook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-577",
        "label": "/api/integrations/webhooks/[provider]",
        "type": "page",
        "file": "src/app/api/integrations/webhooks/[provider]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-578",
        "label": "/api/integrations/webhooks/tave",
        "type": "page",
        "file": "src/app/api/integrations/webhooks/tave/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-579",
        "label": "/api/integrations/wedding-services",
        "type": "page",
        "file": "src/app/api/integrations/wedding-services/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-580",
        "label": "/api/invite/[code]",
        "type": "page",
        "file": "src/app/api/invite/[code]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-581",
        "label": "/api/invoices",
        "type": "page",
        "file": "src/app/api/invoices/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-582",
        "label": "/api/journey-engine/executions",
        "type": "page",
        "file": "src/app/api/journey-engine/executions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-583",
        "label": "/api/journey-engine/instances/[id]/[action]",
        "type": "page",
        "file": "src/app/api/journey-engine/instances/[id]/[action]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-584",
        "label": "/api/journey-engine/instances",
        "type": "page",
        "file": "src/app/api/journey-engine/instances/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-585",
        "label": "/api/journey-engine/metrics",
        "type": "page",
        "file": "src/app/api/journey-engine/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-586",
        "label": "/api/journey-engine/performance",
        "type": "page",
        "file": "src/app/api/journey-engine/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-587",
        "label": "/api/journey-engine/queue",
        "type": "page",
        "file": "src/app/api/journey-engine/queue/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-588",
        "label": "/api/journey-engine/service-health",
        "type": "page",
        "file": "src/app/api/journey-engine/service-health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-589",
        "label": "/api/journey-engine/status",
        "type": "page",
        "file": "src/app/api/journey-engine/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-590",
        "label": "/api/journeys/[id]/activate",
        "type": "page",
        "file": "src/app/api/journeys/[id]/activate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-591",
        "label": "/api/journeys/[id]/canvas",
        "type": "page",
        "file": "src/app/api/journeys/[id]/canvas/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-592",
        "label": "/api/journeys/[id]/execute",
        "type": "page",
        "file": "src/app/api/journeys/[id]/execute/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-593",
        "label": "/api/journeys/[id]/instances",
        "type": "page",
        "file": "src/app/api/journeys/[id]/instances/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-594",
        "label": "/api/journeys/[id]",
        "type": "page",
        "file": "src/app/api/journeys/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-595",
        "label": "/api/journeys/[id]/test",
        "type": "page",
        "file": "src/app/api/journeys/[id]/test/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-596",
        "label": "/api/journeys/[id]/validate",
        "type": "page",
        "file": "src/app/api/journeys/[id]/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-597",
        "label": "/api/journeys",
        "type": "page",
        "file": "src/app/api/journeys/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-598",
        "label": "/api/knowledge-base/analytics",
        "type": "page",
        "file": "src/app/api/knowledge-base/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-599",
        "label": "/api/knowledge-base/articles/[slug]",
        "type": "page",
        "file": "src/app/api/knowledge-base/articles/[slug]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-600",
        "label": "/api/knowledge-base/categories",
        "type": "page",
        "file": "src/app/api/knowledge-base/categories/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-601",
        "label": "/api/knowledge-base/feedback",
        "type": "page",
        "file": "src/app/api/knowledge-base/feedback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-602",
        "label": "/api/knowledge-base/popular",
        "type": "page",
        "file": "src/app/api/knowledge-base/popular/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-603",
        "label": "/api/knowledge-base/search",
        "type": "page",
        "file": "src/app/api/knowledge-base/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-604",
        "label": "/api/knowledge-base/suggested",
        "type": "page",
        "file": "src/app/api/knowledge-base/suggested/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-605",
        "label": "/api/leads/[id]/status",
        "type": "page",
        "file": "src/app/api/leads/[id]/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-606",
        "label": "/api/leads/progression",
        "type": "page",
        "file": "src/app/api/leads/progression/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-607",
        "label": "/api/leads",
        "type": "page",
        "file": "src/app/api/leads/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-608",
        "label": "/api/leads/scoring",
        "type": "page",
        "file": "src/app/api/leads/scoring/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-609",
        "label": "/api/locations/popular",
        "type": "page",
        "file": "src/app/api/locations/popular/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-610",
        "label": "/api/locations/suggestions",
        "type": "page",
        "file": "src/app/api/locations/suggestions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-611",
        "label": "/api/marketing/ai-optimization",
        "type": "page",
        "file": "src/app/api/marketing/ai-optimization/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-612",
        "label": "/api/marketing/attribution",
        "type": "page",
        "file": "src/app/api/marketing/attribution/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-613",
        "label": "/api/marketing/attribution-modeling",
        "type": "page",
        "file": "src/app/api/marketing/attribution-modeling/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-614",
        "label": "/api/marketing/behavioral-segmentation",
        "type": "page",
        "file": "src/app/api/marketing/behavioral-segmentation/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-615",
        "label": "/api/marketing/campaigns/[id]",
        "type": "page",
        "file": "src/app/api/marketing/campaigns/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-616",
        "label": "/api/marketing/campaigns/[id]/steps",
        "type": "page",
        "file": "src/app/api/marketing/campaigns/[id]/steps/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-617",
        "label": "/api/marketing/campaigns",
        "type": "page",
        "file": "src/app/api/marketing/campaigns/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-618",
        "label": "/api/marketing/campaigns/trigger",
        "type": "page",
        "file": "src/app/api/marketing/campaigns/trigger/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-619",
        "label": "/api/marketing/segments",
        "type": "page",
        "file": "src/app/api/marketing/segments/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-620",
        "label": "/api/marketing/viral-invitations",
        "type": "page",
        "file": "src/app/api/marketing/viral-invitations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-621",
        "label": "/api/marketplace/analytics/popular",
        "type": "page",
        "file": "src/app/api/marketplace/analytics/popular/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-622",
        "label": "/api/marketplace/commission/calculate",
        "type": "page",
        "file": "src/app/api/marketplace/commission/calculate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-623",
        "label": "/api/marketplace/commission/creator/[id]",
        "type": "page",
        "file": "src/app/api/marketplace/commission/creator/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-624",
        "label": "/api/marketplace/commission/process-payouts",
        "type": "page",
        "file": "src/app/api/marketplace/commission/process-payouts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-625",
        "label": "/api/marketplace/creator/analytics/ab-tests",
        "type": "page",
        "file": "src/app/api/marketplace/creator/analytics/ab-tests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-626",
        "label": "/api/marketplace/creator/analytics/dashboard",
        "type": "page",
        "file": "src/app/api/marketplace/creator/analytics/dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-627",
        "label": "/api/marketplace/creator/analytics/events",
        "type": "page",
        "file": "src/app/api/marketplace/creator/analytics/events/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-628",
        "label": "/api/marketplace/creator/analytics/export",
        "type": "page",
        "file": "src/app/api/marketplace/creator/analytics/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-629",
        "label": "/api/marketplace/creator/analytics/insights",
        "type": "page",
        "file": "src/app/api/marketplace/creator/analytics/insights/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-630",
        "label": "/api/marketplace/financial/analytics",
        "type": "page",
        "file": "src/app/api/marketplace/financial/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-631",
        "label": "/api/marketplace/financial/creator/[id]/earnings",
        "type": "page",
        "file": "src/app/api/marketplace/financial/creator/[id]/earnings/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-632",
        "label": "/api/marketplace/financial/record-sale",
        "type": "page",
        "file": "src/app/api/marketplace/financial/record-sale/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-633",
        "label": "/api/marketplace/purchase/[id]/install",
        "type": "page",
        "file": "src/app/api/marketplace/purchase/[id]/install/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-634",
        "label": "/api/marketplace/purchase/[id]/receipt",
        "type": "page",
        "file": "src/app/api/marketplace/purchase/[id]/receipt/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-635",
        "label": "/api/marketplace/purchase/complete",
        "type": "page",
        "file": "src/app/api/marketplace/purchase/complete/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-636",
        "label": "/api/marketplace/purchase/confirm",
        "type": "page",
        "file": "src/app/api/marketplace/purchase/confirm/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-637",
        "label": "/api/marketplace/purchase/initiate",
        "type": "page",
        "file": "src/app/api/marketplace/purchase/initiate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-638",
        "label": "/api/marketplace/purchase/refund",
        "type": "page",
        "file": "src/app/api/marketplace/purchase/refund/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-639",
        "label": "/api/marketplace/purchase",
        "type": "page",
        "file": "src/app/api/marketplace/purchase/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-640",
        "label": "/api/marketplace/search/facets",
        "type": "page",
        "file": "src/app/api/marketplace/search/facets/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-641",
        "label": "/api/marketplace/search",
        "type": "page",
        "file": "src/app/api/marketplace/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-642",
        "label": "/api/marketplace/search/save",
        "type": "page",
        "file": "src/app/api/marketplace/search/save/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-643",
        "label": "/api/marketplace/search/suggestions",
        "type": "page",
        "file": "src/app/api/marketplace/search/suggestions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-644",
        "label": "/api/marketplace/templates",
        "type": "page",
        "file": "src/app/api/marketplace/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-645",
        "label": "/api/metrics/business/churn",
        "type": "page",
        "file": "src/app/api/metrics/business/churn/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-646",
        "label": "/api/metrics/business/mrr",
        "type": "page",
        "file": "src/app/api/metrics/business/mrr/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-647",
        "label": "/api/metrics/business/viral-coefficient",
        "type": "page",
        "file": "src/app/api/metrics/business/viral-coefficient/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-648",
        "label": "/api/ml/conflicts",
        "type": "page",
        "file": "src/app/api/ml/conflicts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-649",
        "label": "/api/ml/health",
        "type": "page",
        "file": "src/app/api/ml/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-650",
        "label": "/api/ml",
        "type": "page",
        "file": "src/app/api/ml/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-651",
        "label": "/api/ml/timeline",
        "type": "page",
        "file": "src/app/api/ml/timeline/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-652",
        "label": "/api/ml/vendors",
        "type": "page",
        "file": "src/app/api/ml/vendors/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-653",
        "label": "/api/monitoring/analytics",
        "type": "page",
        "file": "src/app/api/monitoring/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-654",
        "label": "/api/monitoring/dashboard/health",
        "type": "page",
        "file": "src/app/api/monitoring/dashboard/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-655",
        "label": "/api/monitoring/dashboard/refresh",
        "type": "page",
        "file": "src/app/api/monitoring/dashboard/refresh/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-656",
        "label": "/api/monitoring/dashboard",
        "type": "page",
        "file": "src/app/api/monitoring/dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-657",
        "label": "/api/monitoring/health-check",
        "type": "page",
        "file": "src/app/api/monitoring/health-check/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-658",
        "label": "/api/monitoring/performance",
        "type": "page",
        "file": "src/app/api/monitoring/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-659",
        "label": "/api/monitoring/performance-metrics",
        "type": "page",
        "file": "src/app/api/monitoring/performance-metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-660",
        "label": "/api/monitoring",
        "type": "page",
        "file": "src/app/api/monitoring/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-661",
        "label": "/api/monitoring/seating-integrations",
        "type": "page",
        "file": "src/app/api/monitoring/seating-integrations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-662",
        "label": "/api/monitoring/security/scan",
        "type": "page",
        "file": "src/app/api/monitoring/security/scan/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-663",
        "label": "/api/monitoring/sentry/events",
        "type": "page",
        "file": "src/app/api/monitoring/sentry/events/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-664",
        "label": "/api/monitoring/status",
        "type": "page",
        "file": "src/app/api/monitoring/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-665",
        "label": "/api/music/analyze-appropriateness",
        "type": "page",
        "file": "src/app/api/music/analyze-appropriateness/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-666",
        "label": "/api/music/guest-requests",
        "type": "page",
        "file": "src/app/api/music/guest-requests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-667",
        "label": "/api/music/playlist/generate",
        "type": "page",
        "file": "src/app/api/music/playlist/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-668",
        "label": "/api/music/playlists",
        "type": "page",
        "file": "src/app/api/music/playlists/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-669",
        "label": "/api/music/recommendations",
        "type": "page",
        "file": "src/app/api/music/recommendations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-670",
        "label": "/api/music/resolve-request",
        "type": "page",
        "file": "src/app/api/music/resolve-request/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-671",
        "label": "/api/music",
        "type": "page",
        "file": "src/app/api/music/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-672",
        "label": "/api/music/search",
        "type": "page",
        "file": "src/app/api/music/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-673",
        "label": "/api/notes/[id]",
        "type": "page",
        "file": "src/app/api/notes/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-674",
        "label": "/api/notifications/send",
        "type": "page",
        "file": "src/app/api/notifications/send/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-675",
        "label": "/api/ocr",
        "type": "page",
        "file": "src/app/api/ocr/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-676",
        "label": "/api/offline/cache/priority",
        "type": "page",
        "file": "src/app/api/offline/cache/priority/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-677",
        "label": "/api/offline/queue/analytics",
        "type": "page",
        "file": "src/app/api/offline/queue/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-678",
        "label": "/api/offline/status/[userId]",
        "type": "page",
        "file": "src/app/api/offline/status/[userId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-679",
        "label": "/api/offline/sync/resolve",
        "type": "page",
        "file": "src/app/api/offline/sync/resolve/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-680",
        "label": "/api/offline/sync",
        "type": "page",
        "file": "src/app/api/offline/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-681",
        "label": "/api/offline/sync/status/[deviceId]",
        "type": "page",
        "file": "src/app/api/offline/sync/status/[deviceId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-682",
        "label": "/api/onboarding/wedding-basics",
        "type": "page",
        "file": "src/app/api/onboarding/wedding-basics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-683",
        "label": "/api/payment/webhook",
        "type": "page",
        "file": "src/app/api/payment/webhook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-684",
        "label": "/api/payments/schedule",
        "type": "page",
        "file": "src/app/api/payments/schedule/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-685",
        "label": "/api/payments/schedules/[id]",
        "type": "page",
        "file": "src/app/api/payments/schedules/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-686",
        "label": "/api/payments/schedules",
        "type": "page",
        "file": "src/app/api/payments/schedules/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-687",
        "label": "/api/payments/status",
        "type": "page",
        "file": "src/app/api/payments/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-688",
        "label": "/api/pdf/process",
        "type": "page",
        "file": "src/app/api/pdf/process/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-689",
        "label": "/api/pdf/process-and-create",
        "type": "page",
        "file": "src/app/api/pdf/process-and-create/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-690",
        "label": "/api/pdf/upload",
        "type": "page",
        "file": "src/app/api/pdf/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-691",
        "label": "/api/pdf/upload-secure",
        "type": "page",
        "file": "src/app/api/pdf/upload-secure/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-692",
        "label": "/api/pdf/validate",
        "type": "page",
        "file": "src/app/api/pdf/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-693",
        "label": "/api/pdf-analysis/[id]/progress",
        "type": "page",
        "file": "src/app/api/pdf-analysis/[id]/progress/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-694",
        "label": "/api/pdf-analysis/[id]",
        "type": "page",
        "file": "src/app/api/pdf-analysis/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-695",
        "label": "/api/pdf-analysis/analytics",
        "type": "page",
        "file": "src/app/api/pdf-analysis/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-696",
        "label": "/api/pdf-analysis/jobs/[id]/fields",
        "type": "page",
        "file": "src/app/api/pdf-analysis/jobs/[id]/fields/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-697",
        "label": "/api/pdf-analysis/jobs/[id]",
        "type": "page",
        "file": "src/app/api/pdf-analysis/jobs/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-698",
        "label": "/api/pdf-analysis/jobs",
        "type": "page",
        "file": "src/app/api/pdf-analysis/jobs/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-699",
        "label": "/api/pdf-analysis/patterns",
        "type": "page",
        "file": "src/app/api/pdf-analysis/patterns/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-700",
        "label": "/api/pdf-analysis/upload",
        "type": "page",
        "file": "src/app/api/pdf-analysis/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-701",
        "label": "/api/performance/health",
        "type": "page",
        "file": "src/app/api/performance/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-702",
        "label": "/api/performance/metrics",
        "type": "page",
        "file": "src/app/api/performance/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-703",
        "label": "/api/performance/realtime/benchmark",
        "type": "page",
        "file": "src/app/api/performance/realtime/benchmark/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-704",
        "label": "/api/performance/realtime/metrics",
        "type": "page",
        "file": "src/app/api/performance/realtime/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-705",
        "label": "/api/performance/realtime",
        "type": "page",
        "file": "src/app/api/performance/realtime/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-706",
        "label": "/api/performance/tests/execute",
        "type": "page",
        "file": "src/app/api/performance/tests/execute/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-707",
        "label": "/api/performance/tests",
        "type": "page",
        "file": "src/app/api/performance/tests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-708",
        "label": "/api/photo-groups/analytics/[coupleId]",
        "type": "page",
        "file": "src/app/api/photo-groups/analytics/[coupleId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-709",
        "label": "/api/photo-groups/batch",
        "type": "page",
        "file": "src/app/api/photo-groups/batch/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-710",
        "label": "/api/photo-groups/calendar/sync",
        "type": "page",
        "file": "src/app/api/photo-groups/calendar/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-711",
        "label": "/api/photo-groups/conflicts/detect",
        "type": "page",
        "file": "src/app/api/photo-groups/conflicts/detect/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-712",
        "label": "/api/photo-groups",
        "type": "page",
        "file": "src/app/api/photo-groups/error-handler.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-713",
        "label": "/api/photo-groups/health",
        "type": "page",
        "file": "src/app/api/photo-groups/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-714",
        "label": "/api/photo-groups/metrics",
        "type": "page",
        "file": "src/app/api/photo-groups/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-715",
        "label": "/api/photo-groups/realtime/[id]",
        "type": "page",
        "file": "src/app/api/photo-groups/realtime/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-716",
        "label": "/api/photo-groups/schedule/optimize",
        "type": "page",
        "file": "src/app/api/photo-groups/schedule/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-717",
        "label": "/api/photography/analyze",
        "type": "page",
        "file": "src/app/api/photography/analyze/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-718",
        "label": "/api/photography/galleries/[id]/photos",
        "type": "page",
        "file": "src/app/api/photography/galleries/[id]/photos/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-719",
        "label": "/api/photography/galleries/featured",
        "type": "page",
        "file": "src/app/api/photography/galleries/featured/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-720",
        "label": "/api/photography/galleries",
        "type": "page",
        "file": "src/app/api/photography/galleries/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-721",
        "label": "/api/photography/mood-board/generate",
        "type": "page",
        "file": "src/app/api/photography/mood-board/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-722",
        "label": "/api/photography/mood-boards",
        "type": "page",
        "file": "src/app/api/photography/mood-boards/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-723",
        "label": "/api/photography/photographer-matching",
        "type": "page",
        "file": "src/app/api/photography/photographer-matching/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-724",
        "label": "/api/photography/photographers/[id]/galleries",
        "type": "page",
        "file": "src/app/api/photography/photographers/[id]/galleries/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-725",
        "label": "/api/photography/photographers",
        "type": "page",
        "file": "src/app/api/photography/photographers/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-726",
        "label": "/api/photography/shot-list/generate",
        "type": "page",
        "file": "src/app/api/photography/shot-list/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-727",
        "label": "/api/photography/shot-lists",
        "type": "page",
        "file": "src/app/api/photography/shot-lists/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-728",
        "label": "/api/photography/style-matches",
        "type": "page",
        "file": "src/app/api/photography/style-matches/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-729",
        "label": "/api/photography/styles",
        "type": "page",
        "file": "src/app/api/photography/styles/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-730",
        "label": "/api/photos/ai/albums/generate",
        "type": "page",
        "file": "src/app/api/photos/ai/albums/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-731",
        "label": "/api/photos/ai/analyze",
        "type": "page",
        "file": "src/app/api/photos/ai/analyze/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-732",
        "label": "/api/photos/ai/enhance",
        "type": "page",
        "file": "src/app/api/photos/ai/enhance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-733",
        "label": "/api/photos/ai/tags",
        "type": "page",
        "file": "src/app/api/photos/ai/tags/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-734",
        "label": "/api/photos/tag",
        "type": "page",
        "file": "src/app/api/photos/tag/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-735",
        "label": "/api/photos/upload",
        "type": "page",
        "file": "src/app/api/photos/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-736",
        "label": "/api/places/details/[placeId]",
        "type": "page",
        "file": "src/app/api/places/details/[placeId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-737",
        "label": "/api/places/details",
        "type": "page",
        "file": "src/app/api/places/details/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-738",
        "label": "/api/places/nearby",
        "type": "page",
        "file": "src/app/api/places/nearby/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-739",
        "label": "/api/places/search",
        "type": "page",
        "file": "src/app/api/places/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-740",
        "label": "/api/places/wedding-places",
        "type": "page",
        "file": "src/app/api/places/wedding-places/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-741",
        "label": "/api/portfolio/[supplierId]",
        "type": "page",
        "file": "src/app/api/portfolio/[supplierId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-742",
        "label": "/api/portfolio/analytics",
        "type": "page",
        "file": "src/app/api/portfolio/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-743",
        "label": "/api/portfolio/media",
        "type": "page",
        "file": "src/app/api/portfolio/media/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-744",
        "label": "/api/portfolio",
        "type": "page",
        "file": "src/app/api/portfolio/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-745",
        "label": "/api/portfolio/upload",
        "type": "page",
        "file": "src/app/api/portfolio/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-746",
        "label": "/api/predictive-analytics",
        "type": "page",
        "file": "src/app/api/predictive-analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-747",
        "label": "/api/presence/__tests__",
        "type": "page",
        "file": "src/app/api/presence/__tests__/api-endpoints.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-748",
        "label": "/api/presence/analytics",
        "type": "page",
        "file": "src/app/api/presence/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-749",
        "label": "/api/presence/settings",
        "type": "page",
        "file": "src/app/api/presence/settings/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-750",
        "label": "/api/presence/track",
        "type": "page",
        "file": "src/app/api/presence/track/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-751",
        "label": "/api/presence/users",
        "type": "page",
        "file": "src/app/api/presence/users/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-752",
        "label": "/api/privacy/client-info",
        "type": "page",
        "file": "src/app/api/privacy/client-info/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-753",
        "label": "/api/privacy/consent",
        "type": "page",
        "file": "src/app/api/privacy/consent/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-754",
        "label": "/api/privacy/export/[id]",
        "type": "page",
        "file": "src/app/api/privacy/export/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-755",
        "label": "/api/privacy/requests",
        "type": "page",
        "file": "src/app/api/privacy/requests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-756",
        "label": "/api/progress/charts",
        "type": "page",
        "file": "src/app/api/progress/charts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-757",
        "label": "/api/progress",
        "type": "page",
        "file": "src/app/api/progress/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-758",
        "label": "/api/push-notifications",
        "type": "page",
        "file": "src/app/api/push-notifications/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-759",
        "label": "/api/push-notifications/subscribe",
        "type": "page",
        "file": "src/app/api/push-notifications/subscribe/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-760",
        "label": "/api/push-notifications/unsubscribe",
        "type": "page",
        "file": "src/app/api/push-notifications/unsubscribe/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-761",
        "label": "/api/push-notifications/vapid-key",
        "type": "page",
        "file": "src/app/api/push-notifications/vapid-key/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-762",
        "label": "/api/pwa/install-complete",
        "type": "page",
        "file": "src/app/api/pwa/install-complete/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-763",
        "label": "/api/pwa/install-prompt",
        "type": "page",
        "file": "src/app/api/pwa/install-prompt/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-764",
        "label": "/api/pwa/usage-metrics",
        "type": "page",
        "file": "src/app/api/pwa/usage-metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-765",
        "label": "/api/quality-dashboard",
        "type": "page",
        "file": "src/app/api/quality-dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-766",
        "label": "/api/realtime/status",
        "type": "page",
        "file": "src/app/api/realtime/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-767",
        "label": "/api/realtime/subscribe",
        "type": "page",
        "file": "src/app/api/realtime/subscribe/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-768",
        "label": "/api/realtime/unsubscribe",
        "type": "page",
        "file": "src/app/api/realtime/unsubscribe/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-769",
        "label": "/api/receipts/scan",
        "type": "page",
        "file": "src/app/api/receipts/scan/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-770",
        "label": "/api/receipts/upload",
        "type": "page",
        "file": "src/app/api/receipts/upload/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-771",
        "label": "/api/recovery/restore",
        "type": "page",
        "file": "src/app/api/recovery/restore/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-772",
        "label": "/api/referrals/[code]",
        "type": "page",
        "file": "src/app/api/referrals/[code]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-773",
        "label": "/api/referrals/analytics/[programId]",
        "type": "page",
        "file": "src/app/api/referrals/analytics/[programId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-774",
        "label": "/api/referrals/analytics",
        "type": "page",
        "file": "src/app/api/referrals/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-775",
        "label": "/api/referrals/convert",
        "type": "page",
        "file": "src/app/api/referrals/convert/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-776",
        "label": "/api/referrals/create",
        "type": "page",
        "file": "src/app/api/referrals/create/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-777",
        "label": "/api/referrals/create-link",
        "type": "page",
        "file": "src/app/api/referrals/create-link/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-778",
        "label": "/api/referrals/generate",
        "type": "page",
        "file": "src/app/api/referrals/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-779",
        "label": "/api/referrals/leaderboard",
        "type": "page",
        "file": "src/app/api/referrals/leaderboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-780",
        "label": "/api/referrals",
        "type": "page",
        "file": "src/app/api/referrals/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-781",
        "label": "/api/referrals/stats",
        "type": "page",
        "file": "src/app/api/referrals/stats/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-782",
        "label": "/api/referrals/track-conversion",
        "type": "page",
        "file": "src/app/api/referrals/track-conversion/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-783",
        "label": "/api/reports/generate",
        "type": "page",
        "file": "src/app/api/reports/generate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-784",
        "label": "/api/reports/schedule",
        "type": "page",
        "file": "src/app/api/reports/schedule/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-785",
        "label": "/api/reviews/analytics/[campaignId]",
        "type": "page",
        "file": "src/app/api/reviews/analytics/[campaignId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-786",
        "label": "/api/reviews/campaigns/[id]",
        "type": "page",
        "file": "src/app/api/reviews/campaigns/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-787",
        "label": "/api/reviews/campaigns/create",
        "type": "page",
        "file": "src/app/api/reviews/campaigns/create/action.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-788",
        "label": "/api/reviews/campaigns",
        "type": "page",
        "file": "src/app/api/reviews/campaigns/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-789",
        "label": "/api/reviews/collect",
        "type": "page",
        "file": "src/app/api/reviews/collect/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-790",
        "label": "/api/reviews/request/[token]",
        "type": "page",
        "file": "src/app/api/reviews/request/[token]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-791",
        "label": "/api/reviews/request/send",
        "type": "page",
        "file": "src/app/api/reviews/request/send/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-792",
        "label": "/api/reviews/status",
        "type": "page",
        "file": "src/app/api/reviews/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-793",
        "label": "/api/reviews/webhooks/email",
        "type": "page",
        "file": "src/app/api/reviews/webhooks/email/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-794",
        "label": "/api/reviews/webhooks/facebook",
        "type": "page",
        "file": "src/app/api/reviews/webhooks/facebook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-795",
        "label": "/api/reviews/webhooks/google",
        "type": "page",
        "file": "src/app/api/reviews/webhooks/google/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-796",
        "label": "/api/reviews/webhooks/platforms",
        "type": "page",
        "file": "src/app/api/reviews/webhooks/platforms/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-797",
        "label": "/api/rsvp/analytics",
        "type": "page",
        "file": "src/app/api/rsvp/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-798",
        "label": "/api/rsvp/custom-questions",
        "type": "page",
        "file": "src/app/api/rsvp/custom-questions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-799",
        "label": "/api/rsvp/events/[id]",
        "type": "page",
        "file": "src/app/api/rsvp/events/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-800",
        "label": "/api/rsvp/events",
        "type": "page",
        "file": "src/app/api/rsvp/events/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-801",
        "label": "/api/rsvp/export",
        "type": "page",
        "file": "src/app/api/rsvp/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-802",
        "label": "/api/rsvp/households",
        "type": "page",
        "file": "src/app/api/rsvp/households/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-803",
        "label": "/api/rsvp/invitations",
        "type": "page",
        "file": "src/app/api/rsvp/invitations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-804",
        "label": "/api/rsvp/plus-ones",
        "type": "page",
        "file": "src/app/api/rsvp/plus-ones/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-805",
        "label": "/api/rsvp/public/[code]",
        "type": "page",
        "file": "src/app/api/rsvp/public/[code]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-806",
        "label": "/api/rsvp/reminders",
        "type": "page",
        "file": "src/app/api/rsvp/reminders/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-807",
        "label": "/api/rsvp/responses",
        "type": "page",
        "file": "src/app/api/rsvp/responses/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-808",
        "label": "/api/rsvp/vendor-report",
        "type": "page",
        "file": "src/app/api/rsvp/vendor-report/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-809",
        "label": "/api/rsvp/waitlist",
        "type": "page",
        "file": "src/app/api/rsvp/waitlist/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-810",
        "label": "/api/scalability/actions/scale",
        "type": "page",
        "file": "src/app/api/scalability/actions/scale/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-811",
        "label": "/api/scalability/metrics/realtime",
        "type": "page",
        "file": "src/app/api/scalability/metrics/realtime/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-812",
        "label": "/api/search/advanced",
        "type": "page",
        "file": "src/app/api/search/advanced/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-813",
        "label": "/api/search/analytics",
        "type": "page",
        "file": "src/app/api/search/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-814",
        "label": "/api/search/facets",
        "type": "page",
        "file": "src/app/api/search/facets/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-815",
        "label": "/api/search/indexing",
        "type": "page",
        "file": "src/app/api/search/indexing/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-816",
        "label": "/api/search",
        "type": "page",
        "file": "src/app/api/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-817",
        "label": "/api/search/suggestions",
        "type": "page",
        "file": "src/app/api/search/suggestions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-818",
        "label": "/api/seating/arrangements/[id]",
        "type": "page",
        "file": "src/app/api/seating/arrangements/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-819",
        "label": "/api/seating/mobile/optimize",
        "type": "page",
        "file": "src/app/api/seating/mobile/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-820",
        "label": "/api/seating/optimize",
        "type": "page",
        "file": "src/app/api/seating/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-821",
        "label": "/api/seating/optimize-v2",
        "type": "page",
        "file": "src/app/api/seating/optimize-v2/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-822",
        "label": "/api/seating/validate",
        "type": "page",
        "file": "src/app/api/seating/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-823",
        "label": "/api/sections/[id]/visibility",
        "type": "page",
        "file": "src/app/api/sections/[id]/visibility/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-824",
        "label": "/api/sections/config",
        "type": "page",
        "file": "src/app/api/sections/config/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-825",
        "label": "/api/sections/permissions",
        "type": "page",
        "file": "src/app/api/sections/permissions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-826",
        "label": "/api/security/alerts",
        "type": "page",
        "file": "src/app/api/security/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-827",
        "label": "/api/security/audit/events",
        "type": "page",
        "file": "src/app/api/security/audit/events/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-828",
        "label": "/api/security/automated-monitoring",
        "type": "page",
        "file": "src/app/api/security/automated-monitoring/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-829",
        "label": "/api/security/celebrity/monitor",
        "type": "page",
        "file": "src/app/api/security/celebrity/monitor/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-830",
        "label": "/api/security/compliance/report",
        "type": "page",
        "file": "src/app/api/security/compliance/report/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-831",
        "label": "/api/security/incidents",
        "type": "page",
        "file": "src/app/api/security/incidents/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-832",
        "label": "/api/security/metrics",
        "type": "page",
        "file": "src/app/api/security/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-833",
        "label": "/api/security/multi-jurisdiction-compliance",
        "type": "page",
        "file": "src/app/api/security/multi-jurisdiction-compliance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-834",
        "label": "/api/security/pci-compliance",
        "type": "page",
        "file": "src/app/api/security/pci-compliance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-835",
        "label": "/api/security/status/real-time",
        "type": "page",
        "file": "src/app/api/security/status/real-time/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-836",
        "label": "/api/security/vendor/validate",
        "type": "page",
        "file": "src/app/api/security/vendor/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-837",
        "label": "/api/share/[token]",
        "type": "page",
        "file": "src/app/api/share/[token]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-838",
        "label": "/api/sms/config",
        "type": "page",
        "file": "src/app/api/sms/config/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-839",
        "label": "/api/sms/inbound",
        "type": "page",
        "file": "src/app/api/sms/inbound/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-840",
        "label": "/api/sms/manage",
        "type": "page",
        "file": "src/app/api/sms/manage/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-841",
        "label": "/api/sms",
        "type": "page",
        "file": "src/app/api/sms/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-842",
        "label": "/api/sms/webhook",
        "type": "page",
        "file": "src/app/api/sms/webhook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-843",
        "label": "/api/stripe/create-checkout-session",
        "type": "page",
        "file": "src/app/api/stripe/create-checkout-session/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-844",
        "label": "/api/stripe/webhook",
        "type": "page",
        "file": "src/app/api/stripe/webhook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-845",
        "label": "/api/supplier/dashboard-stats",
        "type": "page",
        "file": "src/app/api/supplier/dashboard-stats/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-846",
        "label": "/api/supplier/domain",
        "type": "page",
        "file": "src/app/api/supplier/domain/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-847",
        "label": "/api/supplier/domain/ssl-status",
        "type": "page",
        "file": "src/app/api/supplier/domain/ssl-status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-848",
        "label": "/api/supplier/domain/validate",
        "type": "page",
        "file": "src/app/api/supplier/domain/validate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-849",
        "label": "/api/supplier/notifications",
        "type": "page",
        "file": "src/app/api/supplier/notifications/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-850",
        "label": "/api/supplier/profile",
        "type": "page",
        "file": "src/app/api/supplier/profile/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-851",
        "label": "/api/supplier/schedule",
        "type": "page",
        "file": "src/app/api/supplier/schedule/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-852",
        "label": "/api/suppliers/[id]",
        "type": "page",
        "file": "src/app/api/suppliers/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-853",
        "label": "/api/suppliers/[id]/schedule/confirm",
        "type": "page",
        "file": "src/app/api/suppliers/[id]/schedule/confirm/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-854",
        "label": "/api/suppliers/[id]/schedule",
        "type": "page",
        "file": "src/app/api/suppliers/[id]/schedule/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-855",
        "label": "/api/suppliers/[id]/service-area",
        "type": "page",
        "file": "src/app/api/suppliers/[id]/service-area/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-856",
        "label": "/api/suppliers/[id]/service-check",
        "type": "page",
        "file": "src/app/api/suppliers/[id]/service-check/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-857",
        "label": "/api/suppliers/portal",
        "type": "page",
        "file": "src/app/api/suppliers/portal/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-858",
        "label": "/api/suppliers",
        "type": "page",
        "file": "src/app/api/suppliers/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-859",
        "label": "/api/suppliers/schedule/[id]/calendar.ics",
        "type": "page",
        "file": "src/app/api/suppliers/schedule/[id]/calendar.ics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-860",
        "label": "/api/suppliers/schedule/approval",
        "type": "page",
        "file": "src/app/api/suppliers/schedule/approval/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-861",
        "label": "/api/suppliers/schedule/calendar-invites",
        "type": "page",
        "file": "src/app/api/suppliers/schedule/calendar-invites/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-862",
        "label": "/api/suppliers/schedule/feedback",
        "type": "page",
        "file": "src/app/api/suppliers/schedule/feedback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-863",
        "label": "/api/suppliers/schedule/google-calendar",
        "type": "page",
        "file": "src/app/api/suppliers/schedule/google-calendar/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-864",
        "label": "/api/suppliers/schedule/notifications",
        "type": "page",
        "file": "src/app/api/suppliers/schedule/notifications/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-865",
        "label": "/api/suppliers/schedule/sms",
        "type": "page",
        "file": "src/app/api/suppliers/schedule/sms/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-866",
        "label": "/api/suppliers/schedules/[id]/confirm",
        "type": "page",
        "file": "src/app/api/suppliers/schedules/[id]/confirm/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-867",
        "label": "/api/suppliers/search/area",
        "type": "page",
        "file": "src/app/api/suppliers/search/area/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-868",
        "label": "/api/suppliers/search/location",
        "type": "page",
        "file": "src/app/api/suppliers/search/location/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-869",
        "label": "/api/support/ai/categorize",
        "type": "page",
        "file": "src/app/api/support/ai/categorize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-870",
        "label": "/api/support/escalation",
        "type": "page",
        "file": "src/app/api/support/escalation/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-871",
        "label": "/api/support/metrics/agents",
        "type": "page",
        "file": "src/app/api/support/metrics/agents/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-872",
        "label": "/api/support/metrics/system",
        "type": "page",
        "file": "src/app/api/support/metrics/system/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-873",
        "label": "/api/support/metrics/trends",
        "type": "page",
        "file": "src/app/api/support/metrics/trends/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-874",
        "label": "/api/support/tickets/[id]/assign",
        "type": "page",
        "file": "src/app/api/support/tickets/[id]/assign/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-875",
        "label": "/api/support/tickets/[id]/comments",
        "type": "page",
        "file": "src/app/api/support/tickets/[id]/comments/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-876",
        "label": "/api/support/tickets/[id]/messages",
        "type": "page",
        "file": "src/app/api/support/tickets/[id]/messages/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-877",
        "label": "/api/support/tickets/[id]",
        "type": "page",
        "file": "src/app/api/support/tickets/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-878",
        "label": "/api/support/tickets",
        "type": "page",
        "file": "src/app/api/support/tickets/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-879",
        "label": "/api/sync/business-metrics",
        "type": "page",
        "file": "src/app/api/sync/business-metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-880",
        "label": "/api/sync/device-register",
        "type": "page",
        "file": "src/app/api/sync/device-register/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-881",
        "label": "/api/sync/realtime",
        "type": "page",
        "file": "src/app/api/sync/realtime/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-882",
        "label": "/api/sync/status",
        "type": "page",
        "file": "src/app/api/sync/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-883",
        "label": "/api/system/health",
        "type": "page",
        "file": "src/app/api/system/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-884",
        "label": "/api/tags/[id]",
        "type": "page",
        "file": "src/app/api/tags/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-885",
        "label": "/api/tags",
        "type": "page",
        "file": "src/app/api/tags/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-886",
        "label": "/api/tasks/[id]/progress",
        "type": "page",
        "file": "src/app/api/tasks/[id]/progress/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-887",
        "label": "/api/tasks/[id]/status",
        "type": "page",
        "file": "src/app/api/tasks/[id]/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-888",
        "label": "/api/tasks/analytics",
        "type": "page",
        "file": "src/app/api/tasks/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-889",
        "label": "/api/tasks/automation",
        "type": "page",
        "file": "src/app/api/tasks/automation/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-890",
        "label": "/api/tasks/bulk",
        "type": "page",
        "file": "src/app/api/tasks/bulk/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-891",
        "label": "/api/tasks/calendar",
        "type": "page",
        "file": "src/app/api/tasks/calendar/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-892",
        "label": "/api/tasks/categories/bulk",
        "type": "page",
        "file": "src/app/api/tasks/categories/bulk/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-893",
        "label": "/api/tasks/categories/suggest",
        "type": "page",
        "file": "src/app/api/tasks/categories/suggest/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-894",
        "label": "/api/tasks/dependencies",
        "type": "page",
        "file": "src/app/api/tasks/dependencies/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-895",
        "label": "/api/tasks/reminders",
        "type": "page",
        "file": "src/app/api/tasks/reminders/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-896",
        "label": "/api/tasks",
        "type": "page",
        "file": "src/app/api/tasks/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-897",
        "label": "/api/tasks/templates",
        "type": "page",
        "file": "src/app/api/tasks/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-898",
        "label": "/api/team/members",
        "type": "page",
        "file": "src/app/api/team/members/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-899",
        "label": "/api/team",
        "type": "page",
        "file": "src/app/api/team/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-900",
        "label": "/api/templates/[id]/process",
        "type": "page",
        "file": "src/app/api/templates/[id]/process/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-901",
        "label": "/api/templates/[id]",
        "type": "page",
        "file": "src/app/api/templates/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-902",
        "label": "/api/templates/[id]/test",
        "type": "page",
        "file": "src/app/api/templates/[id]/test/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-903",
        "label": "/api/templates/categories",
        "type": "page",
        "file": "src/app/api/templates/categories/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-904",
        "label": "/api/templates/dashboard",
        "type": "page",
        "file": "src/app/api/templates/dashboard/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-905",
        "label": "/api/templates",
        "type": "page",
        "file": "src/app/api/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-906",
        "label": "/api/templates/suggestions",
        "type": "page",
        "file": "src/app/api/templates/suggestions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-907",
        "label": "/api/test/api-monitoring",
        "type": "page",
        "file": "src/app/api/test/api-monitoring/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-908",
        "label": "/api/test/decryption",
        "type": "page",
        "file": "src/app/api/test/decryption/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-909",
        "label": "/api/test/encryption",
        "type": "page",
        "file": "src/app/api/test/encryption/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-910",
        "label": "/api/test-services",
        "type": "page",
        "file": "src/app/api/test-services/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-911",
        "label": "/api/tickets/[id]/messages",
        "type": "page",
        "file": "src/app/api/tickets/[id]/messages/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-912",
        "label": "/api/tickets/[id]",
        "type": "page",
        "file": "src/app/api/tickets/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-913",
        "label": "/api/tickets",
        "type": "page",
        "file": "src/app/api/tickets/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-914",
        "label": "/api/timeline/[id]/auto-schedule",
        "type": "page",
        "file": "src/app/api/timeline/[id]/auto-schedule/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-915",
        "label": "/api/timeline/[id]/conflicts",
        "type": "page",
        "file": "src/app/api/timeline/[id]/conflicts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-916",
        "label": "/api/timeline/[id]/events/__tests__",
        "type": "page",
        "file": "src/app/api/timeline/[id]/events/__tests__/timeline-events.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-917",
        "label": "/api/timeline/[id]/export",
        "type": "page",
        "file": "src/app/api/timeline/[id]/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-918",
        "label": "/api/timeline/[id]",
        "type": "page",
        "file": "src/app/api/timeline/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-919",
        "label": "/api/timeline/[id]/schedule-suggestions",
        "type": "page",
        "file": "src/app/api/timeline/[id]/schedule-suggestions/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-920",
        "label": "/api/timeline/[id]/supplier-schedules",
        "type": "page",
        "file": "src/app/api/timeline/[id]/supplier-schedules/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-921",
        "label": "/api/timeline/__tests__",
        "type": "page",
        "file": "src/app/api/timeline/__tests__/timeline-crud.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-922",
        "label": "/api/timeline",
        "type": "page",
        "file": "src/app/api/timeline/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-923",
        "label": "/api/touch/analytics",
        "type": "page",
        "file": "src/app/api/touch/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-924",
        "label": "/api/touch/performance/benchmark",
        "type": "page",
        "file": "src/app/api/touch/performance/benchmark/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-925",
        "label": "/api/touch/performance",
        "type": "page",
        "file": "src/app/api/touch/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-926",
        "label": "/api/touch/preferences/recommendations",
        "type": "page",
        "file": "src/app/api/touch/preferences/recommendations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-927",
        "label": "/api/touch/preferences",
        "type": "page",
        "file": "src/app/api/touch/preferences/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-928",
        "label": "/api/travel/calculate",
        "type": "page",
        "file": "src/app/api/travel/calculate/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-929",
        "label": "/api/travel/optimize",
        "type": "page",
        "file": "src/app/api/travel/optimize/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-930",
        "label": "/api/travel/time",
        "type": "page",
        "file": "src/app/api/travel/time/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-931",
        "label": "/api/trial/convert",
        "type": "page",
        "file": "src/app/api/trial/convert/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-932",
        "label": "/api/trial/milestones",
        "type": "page",
        "file": "src/app/api/trial/milestones/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-933",
        "label": "/api/trial/start",
        "type": "page",
        "file": "src/app/api/trial/start/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-934",
        "label": "/api/trial/status",
        "type": "page",
        "file": "src/app/api/trial/status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-935",
        "label": "/api/trial/usage",
        "type": "page",
        "file": "src/app/api/trial/usage/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-936",
        "label": "/api/tutorials/progress",
        "type": "page",
        "file": "src/app/api/tutorials/progress/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-937",
        "label": "/api/tutorials/start",
        "type": "page",
        "file": "src/app/api/tutorials/start/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-938",
        "label": "/api/usage-analytics",
        "type": "page",
        "file": "src/app/api/usage-analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-939",
        "label": "/api/vendor-categories/[id]",
        "type": "page",
        "file": "src/app/api/vendor-categories/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-940",
        "label": "/api/vendor-categories",
        "type": "page",
        "file": "src/app/api/vendor-categories/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-941",
        "label": "/api/vendor-portal/communications",
        "type": "page",
        "file": "src/app/api/vendor-portal/communications/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-942",
        "label": "/api/vendor-portal/performance",
        "type": "page",
        "file": "src/app/api/vendor-portal/performance/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-943",
        "label": "/api/vendor-portal/weddings",
        "type": "page",
        "file": "src/app/api/vendor-portal/weddings/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-944",
        "label": "/api/vendors/connections/discover",
        "type": "page",
        "file": "src/app/api/vendors/connections/discover/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-945",
        "label": "/api/vendors/connections/request",
        "type": "page",
        "file": "src/app/api/vendors/connections/request/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-946",
        "label": "/api/vendors/connections/requests",
        "type": "page",
        "file": "src/app/api/vendors/connections/requests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-947",
        "label": "/api/vendors/connections/respond",
        "type": "page",
        "file": "src/app/api/vendors/connections/respond/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-948",
        "label": "/api/venues/search",
        "type": "page",
        "file": "src/app/api/venues/search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-949",
        "label": "/api/versions/migration-plan",
        "type": "page",
        "file": "src/app/api/versions/migration-plan/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-950",
        "label": "/api/viral/ab-testing",
        "type": "page",
        "file": "src/app/api/viral/ab-testing/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-951",
        "label": "/api/viral/ab-testing/select",
        "type": "page",
        "file": "src/app/api/viral/ab-testing/select/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-952",
        "label": "/api/viral/ab-tests/[testId]/results",
        "type": "page",
        "file": "src/app/api/viral/ab-tests/[testId]/results/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-953",
        "label": "/api/viral/ab-tests",
        "type": "page",
        "file": "src/app/api/viral/ab-tests/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-954",
        "label": "/api/viral/alerts",
        "type": "page",
        "file": "src/app/api/viral/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-955",
        "label": "/api/viral/analytics",
        "type": "page",
        "file": "src/app/api/viral/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-956",
        "label": "/api/viral/attribution/[userId]",
        "type": "page",
        "file": "src/app/api/viral/attribution/[userId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-957",
        "label": "/api/viral/attribution",
        "type": "page",
        "file": "src/app/api/viral/attribution/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-958",
        "label": "/api/viral/invitations",
        "type": "page",
        "file": "src/app/api/viral/invitations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-959",
        "label": "/api/viral/invitations/track",
        "type": "page",
        "file": "src/app/api/viral/invitations/track/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-960",
        "label": "/api/viral/invite",
        "type": "page",
        "file": "src/app/api/viral/invite/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-961",
        "label": "/api/viral/metrics",
        "type": "page",
        "file": "src/app/api/viral/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-962",
        "label": "/api/viral/optimization",
        "type": "page",
        "file": "src/app/api/viral/optimization/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-963",
        "label": "/api/viral/reports",
        "type": "page",
        "file": "src/app/api/viral/reports/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-964",
        "label": "/api/viral/rewards",
        "type": "page",
        "file": "src/app/api/viral/rewards/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-965",
        "label": "/api/viral/super-connectors",
        "type": "page",
        "file": "src/app/api/viral/super-connectors/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-966",
        "label": "/api/weather/alerts",
        "type": "page",
        "file": "src/app/api/weather/alerts/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-967",
        "label": "/api/weather",
        "type": "page",
        "file": "src/app/api/weather/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-968",
        "label": "/api/webhooks/analytics",
        "type": "page",
        "file": "src/app/api/webhooks/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-969",
        "label": "/api/webhooks/broadcast/__tests__",
        "type": "page",
        "file": "src/app/api/webhooks/broadcast/__tests__/email-webhook.test.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-970",
        "label": "/api/webhooks/broadcast/email",
        "type": "page",
        "file": "src/app/api/webhooks/broadcast/email/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-971",
        "label": "/api/webhooks/calendar/google",
        "type": "page",
        "file": "src/app/api/webhooks/calendar/google/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-972",
        "label": "/api/webhooks/calendar/outlook",
        "type": "page",
        "file": "src/app/api/webhooks/calendar/outlook/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-973",
        "label": "/api/webhooks/calendar-presence",
        "type": "page",
        "file": "src/app/api/webhooks/calendar-presence/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-974",
        "label": "/api/webhooks/channel-events",
        "type": "page",
        "file": "src/app/api/webhooks/channel-events/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-975",
        "label": "/api/webhooks/deliver",
        "type": "page",
        "file": "src/app/api/webhooks/deliver/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-976",
        "label": "/api/webhooks/email-tracking",
        "type": "page",
        "file": "src/app/api/webhooks/email-tracking/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-977",
        "label": "/api/webhooks/endpoints",
        "type": "page",
        "file": "src/app/api/webhooks/endpoints/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-978",
        "label": "/api/webhooks/faq/extraction-complete",
        "type": "page",
        "file": "src/app/api/webhooks/faq/extraction-complete/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-979",
        "label": "/api/webhooks/faq/health",
        "type": "page",
        "file": "src/app/api/webhooks/faq/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-980",
        "label": "/api/webhooks/faq/processing-status",
        "type": "page",
        "file": "src/app/api/webhooks/faq/processing-status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-981",
        "label": "/api/webhooks/faq/sync-status",
        "type": "page",
        "file": "src/app/api/webhooks/faq/sync-status/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-982",
        "label": "/api/webhooks/ltv/payments",
        "type": "page",
        "file": "src/app/api/webhooks/ltv/payments/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-983",
        "label": "/api/webhooks/places",
        "type": "page",
        "file": "src/app/api/webhooks/places/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-984",
        "label": "/api/webhooks/resend",
        "type": "page",
        "file": "src/app/api/webhooks/resend/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-985",
        "label": "/api/webhooks/retention",
        "type": "page",
        "file": "src/app/api/webhooks/retention/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-986",
        "label": "/api/webhooks",
        "type": "page",
        "file": "src/app/api/webhooks/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-987",
        "label": "/api/webhooks/slack-presence",
        "type": "page",
        "file": "src/app/api/webhooks/slack-presence/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-988",
        "label": "/api/webhooks/sms",
        "type": "page",
        "file": "src/app/api/webhooks/sms/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-989",
        "label": "/api/webhooks/task-updates",
        "type": "page",
        "file": "src/app/api/webhooks/task-updates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-990",
        "label": "/api/webhooks/test-delivery",
        "type": "page",
        "file": "src/app/api/webhooks/test-delivery/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-991",
        "label": "/api/webhooks/twilio",
        "type": "page",
        "file": "src/app/api/webhooks/twilio/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-992",
        "label": "/api/webhooks/vercel",
        "type": "page",
        "file": "src/app/api/webhooks/vercel/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-993",
        "label": "/api/webhooks/whatsapp",
        "type": "page",
        "file": "src/app/api/webhooks/whatsapp/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-994",
        "label": "/api/website/domains",
        "type": "page",
        "file": "src/app/api/website/domains/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-995",
        "label": "/api/website/domains/verify",
        "type": "page",
        "file": "src/app/api/website/domains/verify/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-996",
        "label": "/api/websocket/channels/broadcast",
        "type": "page",
        "file": "src/app/api/websocket/channels/broadcast/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-997",
        "label": "/api/websocket/channels/create",
        "type": "page",
        "file": "src/app/api/websocket/channels/create/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-998",
        "label": "/api/websocket/channels/subscribe",
        "type": "page",
        "file": "src/app/api/websocket/channels/subscribe/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-999",
        "label": "/api/websocket/channels/unsubscribe",
        "type": "page",
        "file": "src/app/api/websocket/channels/unsubscribe/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1000",
        "label": "/api/websocket/health",
        "type": "page",
        "file": "src/app/api/websocket/health/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1001",
        "label": "/api/wedding-website/analytics",
        "type": "page",
        "file": "src/app/api/wedding-website/analytics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1002",
        "label": "/api/wedding-website/cdn",
        "type": "page",
        "file": "src/app/api/wedding-website/cdn/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1003",
        "label": "/api/wedding-website/domain",
        "type": "page",
        "file": "src/app/api/wedding-website/domain/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1004",
        "label": "/api/wedding-website/guests/sync",
        "type": "page",
        "file": "src/app/api/wedding-website/guests/sync/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1005",
        "label": "/api/wedding-website/photos",
        "type": "page",
        "file": "src/app/api/wedding-website/photos/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1006",
        "label": "/api/wedding-website",
        "type": "page",
        "file": "src/app/api/wedding-website/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1007",
        "label": "/api/wedding-website/rsvp/live",
        "type": "page",
        "file": "src/app/api/wedding-website/rsvp/live/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1008",
        "label": "/api/wedding-website/ssl",
        "type": "page",
        "file": "src/app/api/wedding-website/ssl/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1009",
        "label": "/api/wedding-website/translations",
        "type": "page",
        "file": "src/app/api/wedding-website/translations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1010",
        "label": "/api/wedding-website/vendors",
        "type": "page",
        "file": "src/app/api/wedding-website/vendors/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1011",
        "label": "/api/wedding-website/verify-password",
        "type": "page",
        "file": "src/app/api/wedding-website/verify-password/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1012",
        "label": "/api/wedme/budget/export/[exportId]",
        "type": "page",
        "file": "src/app/api/wedme/budget/export/[exportId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1013",
        "label": "/api/wedme/budget/export",
        "type": "page",
        "file": "src/app/api/wedme/budget/export/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1014",
        "label": "/api/wedme/budget/export-status/[exportId]",
        "type": "page",
        "file": "src/app/api/wedme/budget/export-status/[exportId]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1015",
        "label": "/api/wedme/journeys",
        "type": "page",
        "file": "src/app/api/wedme/journeys/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1016",
        "label": "/api/wedme/knowledge/voice-search",
        "type": "page",
        "file": "src/app/api/wedme/knowledge/voice-search/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1017",
        "label": "/api/whatsapp/messages",
        "type": "page",
        "file": "src/app/api/whatsapp/messages/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1018",
        "label": "/api/whatsapp/privacy",
        "type": "page",
        "file": "src/app/api/whatsapp/privacy/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1019",
        "label": "/api/whatsapp",
        "type": "page",
        "file": "src/app/api/whatsapp/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1020",
        "label": "/api/whatsapp/templates",
        "type": "page",
        "file": "src/app/api/whatsapp/templates/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1021",
        "label": "/api/whatsapp/webhooks",
        "type": "page",
        "file": "src/app/api/whatsapp/webhooks/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1022",
        "label": "/api/workflow/delegations",
        "type": "page",
        "file": "src/app/api/workflow/delegations/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1023",
        "label": "/api/workflow/tasks/[id]",
        "type": "page",
        "file": "src/app/api/workflow/tasks/[id]/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1024",
        "label": "/api/workflow/tasks/[id]/status-history",
        "type": "page",
        "file": "src/app/api/workflow/tasks/[id]/status-history/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1025",
        "label": "/api/workflow/tasks",
        "type": "page",
        "file": "src/app/api/workflow/tasks/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1026",
        "label": "/api/workflow/workload/[weddingId]/metrics",
        "type": "page",
        "file": "src/app/api/workflow/workload/[weddingId]/metrics/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1027",
        "label": "/auth/callback",
        "type": "page",
        "file": "src/app/auth/callback/route.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1028",
        "label": "/auth/forgot-password",
        "type": "page",
        "file": "src/app/auth/forgot-password/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1029",
        "label": "/auth/login",
        "type": "page",
        "file": "src/app/auth/login/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1030",
        "label": "/auth/reset-password",
        "type": "page",
        "file": "src/app/auth/reset-password/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1031",
        "label": "/client/dashboard",
        "type": "page",
        "file": "src/app/client/dashboard/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1032",
        "label": "/dashboard/analytics",
        "type": "page",
        "file": "src/app/dashboard/analytics/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1033",
        "label": "/dashboard/channels",
        "type": "page",
        "file": "src/app/dashboard/channels/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1034",
        "label": "/dashboard",
        "type": "page",
        "file": "src/app/dashboard/layout.tsx",
        "pageType": "layout"
      },
      {
        "id": "page-1035",
        "label": "/dashboard/music",
        "type": "page",
        "file": "src/app/dashboard/music/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1036",
        "label": "/dashboard",
        "type": "page",
        "file": "src/app/dashboard/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1037",
        "label": "/dashboard/pdf-analysis/components",
        "type": "page",
        "file": "src/app/dashboard/pdf-analysis/components/AIAnalysisProgress.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1038",
        "label": "/dashboard/pdf-analysis/components",
        "type": "page",
        "file": "src/app/dashboard/pdf-analysis/components/AnalysisResultsDashboard.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1039",
        "label": "/dashboard/pdf-analysis/components",
        "type": "page",
        "file": "src/app/dashboard/pdf-analysis/components/GeneratedFormPreview.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1040",
        "label": "/dashboard/pdf-analysis/components",
        "type": "page",
        "file": "src/app/dashboard/pdf-analysis/components/PDFAnalysisUploader.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1041",
        "label": "/dashboard/pdf-analysis/components",
        "type": "page",
        "file": "src/app/dashboard/pdf-analysis/components/ProgressComponents.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1042",
        "label": "/dashboard/progress",
        "type": "page",
        "file": "src/app/dashboard/progress/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1043",
        "label": "/demo",
        "type": "page",
        "file": "src/app/demo/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1044",
        "label": "/demoroot",
        "type": "page",
        "file": "src/app/demoroot/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1045",
        "label": "/",
        "type": "page",
        "file": "src/app/error.tsx",
        "pageType": "error"
      },
      {
        "id": "page-1046",
        "label": "/forgot-password",
        "type": "page",
        "file": "src/app/forgot-password/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1047",
        "label": "/forms/[slug]",
        "type": "page",
        "file": "src/app/forms/[slug]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1048",
        "label": "/forms/[slug]/password",
        "type": "page",
        "file": "src/app/forms/[slug]/password/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1049",
        "label": "/forms/[slug]/receipt",
        "type": "page",
        "file": "src/app/forms/[slug]/receipt/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1050",
        "label": "/forms/builder",
        "type": "page",
        "file": "src/app/forms/builder/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1051",
        "label": "/forms/import",
        "type": "page",
        "file": "src/app/forms/import/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1052",
        "label": "/forms/test-core-fields",
        "type": "page",
        "file": "src/app/forms/test-core-fields/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1053",
        "label": "/",
        "type": "page",
        "file": "src/app/global-error.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1054",
        "label": "/invite/[code]",
        "type": "page",
        "file": "src/app/invite/[code]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1055",
        "label": "/journey-demo",
        "type": "page",
        "file": "src/app/journey-demo/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1056",
        "label": "/",
        "type": "page",
        "file": "src/app/layout-original.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1057",
        "label": "/",
        "type": "page",
        "file": "src/app/layout.tsx",
        "pageType": "layout"
      },
      {
        "id": "page-1058",
        "label": "/login",
        "type": "page",
        "file": "src/app/login/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1059",
        "label": "/",
        "type": "page",
        "file": "src/app/manifest.ts",
        "pageType": "unknown"
      },
      {
        "id": "page-1060",
        "label": "/",
        "type": "page",
        "file": "src/app/not-found.tsx",
        "pageType": "not-found"
      },
      {
        "id": "page-1061",
        "label": "/offline",
        "type": "page",
        "file": "src/app/offline/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1062",
        "label": "/onboarding",
        "type": "page",
        "file": "src/app/onboarding/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1063",
        "label": "/onboarding-demo",
        "type": "page",
        "file": "src/app/onboarding-demo/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1064",
        "label": "/",
        "type": "page",
        "file": "src/app/page-test-backup.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1065",
        "label": "/",
        "type": "page",
        "file": "src/app/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1066",
        "label": "/payments/calendar/__tests__",
        "type": "page",
        "file": "src/app/payments/calendar/__tests__/page.test.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1067",
        "label": "/payments/calendar",
        "type": "page",
        "file": "src/app/payments/calendar/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1068",
        "label": "/pdf/[id]/mapping",
        "type": "page",
        "file": "src/app/pdf/[id]/mapping/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1069",
        "label": "/pdf/import",
        "type": "page",
        "file": "src/app/pdf/import/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1070",
        "label": "/privacy/data-request",
        "type": "page",
        "file": "src/app/privacy/data-request/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1071",
        "label": "/privacy",
        "type": "page",
        "file": "src/app/privacy/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1072",
        "label": "/",
        "type": "page",
        "file": "src/app/providers.tsx",
        "pageType": "component"
      },
      {
        "id": "page-1073",
        "label": "/reset-password",
        "type": "page",
        "file": "src/app/reset-password/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1074",
        "label": "/rsvp/[code]",
        "type": "page",
        "file": "src/app/rsvp/[code]/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1075",
        "label": "/security-demo",
        "type": "page",
        "file": "src/app/security-demo/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1076",
        "label": "/settings/branding",
        "type": "page",
        "file": "src/app/settings/branding/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1077",
        "label": "/settings/calendar-integration/apple",
        "type": "page",
        "file": "src/app/settings/calendar-integration/apple/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1078",
        "label": "/settings/calendar-integration",
        "type": "page",
        "file": "src/app/settings/calendar-integration/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1079",
        "label": "/settings",
        "type": "page",
        "file": "src/app/settings/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1080",
        "label": "/signup",
        "type": "page",
        "file": "src/app/signup/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1081",
        "label": "/supplier-portal",
        "type": "page",
        "file": "src/app/supplier-portal/layout.tsx",
        "pageType": "layout"
      },
      {
        "id": "page-1082",
        "label": "/supplier-portal",
        "type": "page",
        "file": "src/app/supplier-portal/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1083",
        "label": "/supplier-portal/qr-scanner",
        "type": "page",
        "file": "src/app/supplier-portal/qr-scanner/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1084",
        "label": "/supplier-portal/schedule/confirm",
        "type": "page",
        "file": "src/app/supplier-portal/schedule/confirm/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1085",
        "label": "/supplier-portal/schedule/conflicts/new",
        "type": "page",
        "file": "src/app/supplier-portal/schedule/conflicts/new/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1086",
        "label": "/supplier-portal/schedule",
        "type": "page",
        "file": "src/app/supplier-portal/schedule/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1087",
        "label": "/tasks/create",
        "type": "page",
        "file": "src/app/tasks/create/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1088",
        "label": "/test",
        "type": "page",
        "file": "src/app/test/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1089",
        "label": "/test/personalization",
        "type": "page",
        "file": "src/app/test/personalization/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1090",
        "label": "/test-referral-widget",
        "type": "page",
        "file": "src/app/test-referral-widget/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1091",
        "label": "/test-simple",
        "type": "page",
        "file": "src/app/test-simple/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1092",
        "label": "/test-sms",
        "type": "page",
        "file": "src/app/test-sms/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1093",
        "label": "/travel-calculator",
        "type": "page",
        "file": "src/app/travel-calculator/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1094",
        "label": "/ui-showcase",
        "type": "page",
        "file": "src/app/ui-showcase/page.tsx",
        "pageType": "page"
      },
      {
        "id": "page-1095",
        "label": "/working",
        "type": "page",
        "file": "src/app/working/page.tsx",
        "pageType": "page"
      },
      {
        "id": "comp-0",
        "label": "LazyComponents",
        "type": "component",
        "file": "src/components/LazyComponents.tsx"
      },
      {
        "id": "comp-1",
        "label": "OnboardingDemo",
        "type": "component",
        "file": "src/components/OnboardingDemo.tsx"
      },
      {
        "id": "comp-2",
        "label": "TestCreationWizard",
        "type": "component",
        "file": "src/components/ab-testing/TestCreationWizard.tsx"
      },
      {
        "id": "comp-3",
        "label": "WeddingTestTemplates",
        "type": "component",
        "file": "src/components/ab-testing/WeddingTestTemplates.tsx"
      },
      {
        "id": "comp-4",
        "label": "A11yEnhanced",
        "type": "component",
        "file": "src/components/accessibility/A11yEnhanced.tsx"
      },
      {
        "id": "comp-5",
        "label": "ActivityAnalytics",
        "type": "component",
        "file": "src/components/activity/ActivityAnalytics.tsx"
      },
      {
        "id": "comp-6",
        "label": "ActivityFeed",
        "type": "component",
        "file": "src/components/activity/ActivityFeed.tsx"
      },
      {
        "id": "comp-7",
        "label": "ActivityFilter",
        "type": "component",
        "file": "src/components/activity/ActivityFilter.tsx"
      },
      {
        "id": "comp-8",
        "label": "ActivityItem",
        "type": "component",
        "file": "src/components/activity/ActivityItem.tsx"
      },
      {
        "id": "comp-9",
        "label": "APIAnalyticsDashboard",
        "type": "component",
        "file": "src/components/admin/APIAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-10",
        "label": "APIKeyManager",
        "type": "component",
        "file": "src/components/admin/APIKeyManager.tsx"
      },
      {
        "id": "comp-11",
        "label": "APIUsageAnalyticsDashboard",
        "type": "component",
        "file": "src/components/admin/APIUsageAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-12",
        "label": "APIVersionDashboard",
        "type": "component",
        "file": "src/components/admin/APIVersionDashboard.tsx"
      },
      {
        "id": "comp-13",
        "label": "AdminAuditLog",
        "type": "component",
        "file": "src/components/admin/AdminAuditLog.tsx"
      },
      {
        "id": "comp-14",
        "label": "AuditLogFilters",
        "type": "component",
        "file": "src/components/admin/AuditLogFilters.tsx"
      },
      {
        "id": "comp-15",
        "label": "AuditLogViewer",
        "type": "component",
        "file": "src/components/admin/AuditLogViewer.tsx"
      },
      {
        "id": "comp-16",
        "label": "BackupPerformanceCharts",
        "type": "component",
        "file": "src/components/admin/BackupPerformanceCharts.tsx"
      },
      {
        "id": "comp-17",
        "label": "DatabaseHealthDashboard",
        "type": "component",
        "file": "src/components/admin/DatabaseHealthDashboard.tsx"
      },
      {
        "id": "comp-18",
        "label": "DatabaseMetricsDashboard",
        "type": "component",
        "file": "src/components/admin/DatabaseMetricsDashboard.tsx"
      },
      {
        "id": "comp-19",
        "label": "EmergencyActionModal",
        "type": "component",
        "file": "src/components/admin/EmergencyActionModal.tsx"
      },
      {
        "id": "comp-20",
        "label": "EmergencyControlsSection",
        "type": "component",
        "file": "src/components/admin/EmergencyControlsSection.tsx"
      },
      {
        "id": "comp-21",
        "label": "EnhancedViralDashboard",
        "type": "component",
        "file": "src/components/admin/EnhancedViralDashboard.tsx"
      },
      {
        "id": "comp-22",
        "label": "ExecutiveDashboard",
        "type": "component",
        "file": "src/components/admin/ExecutiveDashboard.tsx"
      },
      {
        "id": "comp-23",
        "label": "NotificationCenter",
        "type": "component",
        "file": "src/components/admin/NotificationCenter.tsx"
      },
      {
        "id": "comp-24",
        "label": "PerformanceChart",
        "type": "component",
        "file": "src/components/admin/PerformanceChart.tsx"
      },
      {
        "id": "comp-25",
        "label": "PerformanceDashboard",
        "type": "component",
        "file": "src/components/admin/PerformanceDashboard.tsx"
      },
      {
        "id": "comp-26",
        "label": "PermissionGuards",
        "type": "component",
        "file": "src/components/admin/PermissionGuards.tsx"
      },
      {
        "id": "comp-27",
        "label": "PhotographyPerformanceDashboard",
        "type": "component",
        "file": "src/components/admin/PhotographyPerformanceDashboard.tsx"
      },
      {
        "id": "comp-28",
        "label": "QueryOptimizationPanel",
        "type": "component",
        "file": "src/components/admin/QueryOptimizationPanel.tsx"
      },
      {
        "id": "comp-29",
        "label": "QuickActionsPanel",
        "type": "component",
        "file": "src/components/admin/QuickActionsPanel.tsx"
      },
      {
        "id": "comp-30",
        "label": "SecurityDashboard",
        "type": "component",
        "file": "src/components/admin/SecurityDashboard.tsx"
      },
      {
        "id": "comp-31",
        "label": "ServiceCard",
        "type": "component",
        "file": "src/components/admin/ServiceCard.tsx"
      },
      {
        "id": "comp-32",
        "label": "SuspiciousActivityAlert",
        "type": "component",
        "file": "src/components/admin/SuspiciousActivityAlert.tsx"
      },
      {
        "id": "comp-33",
        "label": "SystemHealthDashboard",
        "type": "component",
        "file": "src/components/admin/SystemHealthDashboard.tsx"
      },
      {
        "id": "comp-34",
        "label": "SystemStatusCards",
        "type": "component",
        "file": "src/components/admin/SystemStatusCards.tsx"
      },
      {
        "id": "comp-35",
        "label": "SystemToggleControls",
        "type": "component",
        "file": "src/components/admin/SystemToggleControls.tsx"
      },
      {
        "id": "comp-36",
        "label": "TicketManagementDashboard",
        "type": "component",
        "file": "src/components/admin/TicketManagementDashboard.tsx"
      },
      {
        "id": "comp-37",
        "label": "VendorCategoryManagement",
        "type": "component",
        "file": "src/components/admin/VendorCategoryManagement.tsx"
      },
      {
        "id": "comp-38",
        "label": "WS155OperationalDashboard",
        "type": "component",
        "file": "src/components/admin/WS155OperationalDashboard.tsx"
      },
      {
        "id": "comp-39",
        "label": "EnhancedViralDashboard.test",
        "type": "component",
        "file": "src/components/admin/__tests__/EnhancedViralDashboard.test.tsx"
      },
      {
        "id": "comp-40",
        "label": "QuickActionsPanel.test",
        "type": "component",
        "file": "src/components/admin/__tests__/QuickActionsPanel.test.tsx"
      },
      {
        "id": "comp-41",
        "label": "useQuickActions.test",
        "type": "component",
        "file": "src/components/admin/__tests__/useQuickActions.test.ts"
      },
      {
        "id": "comp-42",
        "label": "CohortAnalysisDashboard",
        "type": "component",
        "file": "src/components/admin/analytics/CohortAnalysisDashboard.tsx"
      },
      {
        "id": "comp-43",
        "label": "CohortAnalysisHeatmap",
        "type": "component",
        "file": "src/components/admin/analytics/CohortAnalysisHeatmap.tsx"
      },
      {
        "id": "comp-44",
        "label": "CohortDetailModal",
        "type": "component",
        "file": "src/components/admin/analytics/CohortDetailModal.tsx"
      },
      {
        "id": "comp-45",
        "label": "CohortInsightsPanel",
        "type": "component",
        "file": "src/components/admin/analytics/CohortInsightsPanel.tsx"
      },
      {
        "id": "comp-46",
        "label": "CohortMetricsSelector",
        "type": "component",
        "file": "src/components/admin/analytics/CohortMetricsSelector.tsx"
      },
      {
        "id": "comp-47",
        "label": "index",
        "type": "component",
        "file": "src/components/admin/analytics/index.ts"
      },
      {
        "id": "comp-48",
        "label": "APIManagementDashboard",
        "type": "component",
        "file": "src/components/admin/api-management/APIManagementDashboard.tsx"
      },
      {
        "id": "comp-49",
        "label": "AssetGenerator",
        "type": "component",
        "file": "src/components/admin/app-store/AssetGenerator.tsx"
      },
      {
        "id": "comp-50",
        "label": "ComplianceChecker",
        "type": "component",
        "file": "src/components/admin/app-store/ComplianceChecker.tsx"
      },
      {
        "id": "comp-51",
        "label": "PreviewGenerator",
        "type": "component",
        "file": "src/components/admin/app-store/PreviewGenerator.tsx"
      },
      {
        "id": "comp-52",
        "label": "StoreOptimizer",
        "type": "component",
        "file": "src/components/admin/app-store/StoreOptimizer.tsx"
      },
      {
        "id": "comp-53",
        "label": "SubmissionDashboard",
        "type": "component",
        "file": "src/components/admin/app-store/SubmissionDashboard.tsx"
      },
      {
        "id": "comp-54",
        "label": "index",
        "type": "component",
        "file": "src/components/admin/app-store/index.ts"
      },
      {
        "id": "comp-55",
        "label": "BackupDashboard",
        "type": "component",
        "file": "src/components/admin/backup/BackupDashboard.tsx"
      },
      {
        "id": "comp-56",
        "label": "BackupHistoryTable",
        "type": "component",
        "file": "src/components/admin/backup/BackupHistoryTable.tsx"
      },
      {
        "id": "comp-57",
        "label": "BackupStatusCard",
        "type": "component",
        "file": "src/components/admin/backup/BackupStatusCard.tsx"
      },
      {
        "id": "comp-58",
        "label": "ManualBackupForm",
        "type": "component",
        "file": "src/components/admin/backup/ManualBackupForm.tsx"
      },
      {
        "id": "comp-59",
        "label": "OfflineBackupStatus",
        "type": "component",
        "file": "src/components/admin/backup/OfflineBackupStatus.tsx"
      },
      {
        "id": "comp-60",
        "label": "RecoveryPointTimeline",
        "type": "component",
        "file": "src/components/admin/backup/RecoveryPointTimeline.tsx"
      },
      {
        "id": "comp-61",
        "label": "ResponsiveBackupDashboard",
        "type": "component",
        "file": "src/components/admin/backup/ResponsiveBackupDashboard.tsx"
      },
      {
        "id": "comp-62",
        "label": "WS191BackupDashboard",
        "type": "component",
        "file": "src/components/admin/backup/WS191BackupDashboard.tsx"
      },
      {
        "id": "comp-63",
        "label": "index",
        "type": "component",
        "file": "src/components/admin/backup/index.ts"
      },
      {
        "id": "comp-64",
        "label": "BackupStatusWidget",
        "type": "component",
        "file": "src/components/admin/backup/mobile/BackupStatusWidget.tsx"
      },
      {
        "id": "comp-65",
        "label": "MobileBackupControls",
        "type": "component",
        "file": "src/components/admin/backup/mobile/MobileBackupControls.tsx"
      },
      {
        "id": "comp-66",
        "label": "BusinessMetricsDashboard",
        "type": "component",
        "file": "src/components/admin/business/BusinessMetricsDashboard.tsx"
      },
      {
        "id": "comp-67",
        "label": "CACAnalysisPanel",
        "type": "component",
        "file": "src/components/admin/business/CACAnalysisPanel.tsx"
      },
      {
        "id": "comp-68",
        "label": "ExecutiveReportingInterface",
        "type": "component",
        "file": "src/components/admin/business/ExecutiveReportingInterface.tsx"
      },
      {
        "id": "comp-69",
        "label": "MRRTracker",
        "type": "component",
        "file": "src/components/admin/business/MRRTracker.tsx"
      },
      {
        "id": "comp-70",
        "label": "ViralCoefficientAnalyzer",
        "type": "component",
        "file": "src/components/admin/business/ViralCoefficientAnalyzer.tsx"
      },
      {
        "id": "comp-71",
        "label": "AtRiskSupplierCard",
        "type": "component",
        "file": "src/components/admin/churn/AtRiskSupplierCard.tsx"
      },
      {
        "id": "comp-72",
        "label": "ChurnAlertPanel",
        "type": "component",
        "file": "src/components/admin/churn/ChurnAlertPanel.tsx"
      },
      {
        "id": "comp-73",
        "label": "ChurnRiskDashboard",
        "type": "component",
        "file": "src/components/admin/churn/ChurnRiskDashboard.tsx"
      },
      {
        "id": "comp-74",
        "label": "ChurnTrendChart",
        "type": "component",
        "file": "src/components/admin/churn/ChurnTrendChart.tsx"
      },
      {
        "id": "comp-75",
        "label": "RetentionCampaignManager",
        "type": "component",
        "file": "src/components/admin/churn/RetentionCampaignManager.tsx"
      },
      {
        "id": "comp-76",
        "label": "ChurnRiskDashboard.test",
        "type": "component",
        "file": "src/components/admin/churn/__tests__/ChurnRiskDashboard.test.tsx"
      },
      {
        "id": "comp-77",
        "label": "index",
        "type": "component",
        "file": "src/components/admin/churn/index.ts"
      },
      {
        "id": "comp-78",
        "label": "CustomerSuccessDashboard",
        "type": "component",
        "file": "src/components/admin/customer-success/CustomerSuccessDashboard.tsx"
      },
      {
        "id": "comp-79",
        "label": "HealthScoreOverview",
        "type": "component",
        "file": "src/components/admin/customer-success/HealthScoreOverview.tsx"
      },
      {
        "id": "comp-80",
        "label": "InterventionModal",
        "type": "component",
        "file": "src/components/admin/customer-success/InterventionModal.tsx"
      },
      {
        "id": "comp-81",
        "label": "InterventionQueue",
        "type": "component",
        "file": "src/components/admin/customer-success/InterventionQueue.tsx"
      },
      {
        "id": "comp-82",
        "label": "MetricsCharts",
        "type": "component",
        "file": "src/components/admin/customer-success/MetricsCharts.tsx"
      },
      {
        "id": "comp-83",
        "label": "RiskSegmentation",
        "type": "component",
        "file": "src/components/admin/customer-success/RiskSegmentation.tsx"
      },
      {
        "id": "comp-84",
        "label": "index",
        "type": "component",
        "file": "src/components/admin/index.ts"
      },
      {
        "id": "comp-85",
        "label": "CACRatioTracker",
        "type": "component",
        "file": "src/components/admin/ltv/CACRatioTracker.tsx"
      },
      {
        "id": "comp-86",
        "label": "LTVDashboard",
        "type": "component",
        "file": "src/components/admin/ltv/LTVDashboard.tsx"
      },
      {
        "id": "comp-87",
        "label": "LTVDistributionChart",
        "type": "component",
        "file": "src/components/admin/ltv/LTVDistributionChart.tsx"
      },
      {
        "id": "comp-88",
        "label": "LTVPredictionVisualizer",
        "type": "component",
        "file": "src/components/admin/ltv/LTVPredictionVisualizer.tsx"
      },
      {
        "id": "comp-89",
        "label": "LTVSegmentAnalyzer",
        "type": "component",
        "file": "src/components/admin/ltv/LTVSegmentAnalyzer.tsx"
      },
      {
        "id": "comp-90",
        "label": "index",
        "type": "component",
        "file": "src/components/admin/ltv/index.ts"
      },
      {
        "id": "comp-91",
        "label": "CSRFProtectionMonitor",
        "type": "component",
        "file": "src/components/admin/middleware/CSRFProtectionMonitor.tsx"
      },
      {
        "id": "comp-92",
        "label": "MiddlewareDashboard",
        "type": "component",
        "file": "src/components/admin/middleware/MiddlewareDashboard.tsx"
      },
      {
        "id": "comp-93",
        "label": "RateLimitingVisualizer",
        "type": "component",
        "file": "src/components/admin/middleware/RateLimitingVisualizer.tsx"
      },
      {
        "id": "comp-94",
        "label": "SecurityEventMonitor",
        "type": "component",
        "file": "src/components/admin/middleware/SecurityEventMonitor.tsx"
      },
      {
        "id": "comp-95",
        "label": "SessionManagementPanel",
        "type": "component",
        "file": "src/components/admin/middleware/SessionManagementPanel.tsx"
      },
      {
        "id": "comp-96",
        "label": "AIPerformanceDashboard",
        "type": "component",
        "file": "src/components/admin/monitoring/AIPerformanceDashboard.tsx"
      },
      {
        "id": "comp-97",
        "label": "AdminMonitoringDashboard",
        "type": "component",
        "file": "src/components/admin/monitoring/AdminMonitoringDashboard.tsx"
      },
      {
        "id": "comp-98",
        "label": "BusinessMetrics",
        "type": "component",
        "file": "src/components/admin/monitoring/BusinessMetrics.tsx"
      },
      {
        "id": "comp-99",
        "label": "ErrorMonitoring",
        "type": "component",
        "file": "src/components/admin/monitoring/ErrorMonitoring.tsx"
      },
      {
        "id": "comp-100",
        "label": "PerformanceMetrics",
        "type": "component",
        "file": "src/components/admin/monitoring/PerformanceMetrics.tsx"
      },
      {
        "id": "comp-101",
        "label": "SecurityMonitoring",
        "type": "component",
        "file": "src/components/admin/monitoring/SecurityMonitoring.tsx"
      },
      {
        "id": "comp-102",
        "label": "SystemHealthOverview",
        "type": "component",
        "file": "src/components/admin/monitoring/SystemHealthOverview.tsx"
      },
      {
        "id": "comp-103",
        "label": "AdminHeader",
        "type": "component",
        "file": "src/components/admin/navigation/AdminHeader.tsx"
      },
      {
        "id": "comp-104",
        "label": "AdminNavigation",
        "type": "component",
        "file": "src/components/admin/navigation/AdminNavigation.tsx"
      },
      {
        "id": "comp-105",
        "label": "PerformanceMetricsChart",
        "type": "component",
        "file": "src/components/admin/performance/PerformanceMetricsChart.tsx"
      },
      {
        "id": "comp-106",
        "label": "PerformanceTestDashboard",
        "type": "component",
        "file": "src/components/admin/performance/PerformanceTestDashboard.tsx"
      },
      {
        "id": "comp-107",
        "label": "TestExecutionPanel",
        "type": "component",
        "file": "src/components/admin/performance/TestExecutionPanel.tsx"
      },
      {
        "id": "comp-108",
        "label": "TestProgressIndicator",
        "type": "component",
        "file": "src/components/admin/performance/TestProgressIndicator.tsx"
      },
      {
        "id": "comp-109",
        "label": "TestResultsTable",
        "type": "component",
        "file": "src/components/admin/performance/TestResultsTable.tsx"
      },
      {
        "id": "comp-110",
        "label": "index",
        "type": "component",
        "file": "src/components/admin/performance/index.ts"
      },
      {
        "id": "comp-111",
        "label": "APIUsageAnalytics",
        "type": "component",
        "file": "src/components/admin/rate-limiting/APIUsageAnalytics.tsx"
      },
      {
        "id": "comp-112",
        "label": "AbuseDetectionMonitor",
        "type": "component",
        "file": "src/components/admin/rate-limiting/AbuseDetectionMonitor.tsx"
      },
      {
        "id": "comp-113",
        "label": "RateLimitDashboard",
        "type": "component",
        "file": "src/components/admin/rate-limiting/RateLimitDashboard.tsx"
      },
      {
        "id": "comp-114",
        "label": "SubscriptionTierVisualizer",
        "type": "component",
        "file": "src/components/admin/rate-limiting/SubscriptionTierVisualizer.tsx"
      },
      {
        "id": "comp-115",
        "label": "ViolationAlertCenter",
        "type": "component",
        "file": "src/components/admin/rate-limiting/ViolationAlertCenter.tsx"
      },
      {
        "id": "comp-116",
        "label": "AbuseDetectionMonitor.test",
        "type": "component",
        "file": "src/components/admin/rate-limiting/__tests__/AbuseDetectionMonitor.test.tsx"
      },
      {
        "id": "comp-117",
        "label": "RateLimitDashboard.test",
        "type": "component",
        "file": "src/components/admin/rate-limiting/__tests__/RateLimitDashboard.test.tsx"
      },
      {
        "id": "comp-118",
        "label": "SubscriptionTierVisualizer.test",
        "type": "component",
        "file": "src/components/admin/rate-limiting/__tests__/SubscriptionTierVisualizer.test.tsx"
      },
      {
        "id": "comp-119",
        "label": "AdminAuthGuard",
        "type": "component",
        "file": "src/components/admin/security/AdminAuthGuard.tsx"
      },
      {
        "id": "comp-120",
        "label": "EmergencyResponsePanel",
        "type": "component",
        "file": "src/components/admin/security/EmergencyResponsePanel.tsx"
      },
      {
        "id": "comp-121",
        "label": "GDPRComplianceTracker",
        "type": "component",
        "file": "src/components/admin/security/GDPRComplianceTracker.tsx"
      },
      {
        "id": "comp-122",
        "label": "IncidentDashboard",
        "type": "component",
        "file": "src/components/admin/security/IncidentDashboard.tsx"
      },
      {
        "id": "comp-123",
        "label": "IncidentTimeline",
        "type": "component",
        "file": "src/components/admin/security/IncidentTimeline.tsx"
      },
      {
        "id": "comp-124",
        "label": "IntegrationTestDashboard",
        "type": "component",
        "file": "src/components/admin/testing/IntegrationTestDashboard.tsx"
      },
      {
        "id": "comp-125",
        "label": "TestIsolationManager",
        "type": "component",
        "file": "src/components/admin/testing/TestIsolationManager.tsx"
      },
      {
        "id": "comp-126",
        "label": "TestResultsAnalyzer",
        "type": "component",
        "file": "src/components/admin/testing/TestResultsAnalyzer.tsx"
      },
      {
        "id": "comp-127",
        "label": "WeddingScenarioRunner",
        "type": "component",
        "file": "src/components/admin/testing/WeddingScenarioRunner.tsx"
      },
      {
        "id": "comp-128",
        "label": "WorkflowTestVisualizer",
        "type": "component",
        "file": "src/components/admin/testing/WorkflowTestVisualizer.tsx"
      },
      {
        "id": "comp-129",
        "label": "AIRecommendationEngine",
        "type": "component",
        "file": "src/components/ai/AIRecommendationEngine.tsx"
      },
      {
        "id": "comp-130",
        "label": "AIWeddingOptimizer",
        "type": "component",
        "file": "src/components/ai/AIWeddingOptimizer.tsx"
      },
      {
        "id": "comp-131",
        "label": "BudgetOptimizationPanel",
        "type": "component",
        "file": "src/components/ai/BudgetOptimizationPanel.tsx"
      },
      {
        "id": "comp-132",
        "label": "ContentSuggestions",
        "type": "component",
        "file": "src/components/ai/ContentSuggestions.tsx"
      },
      {
        "id": "comp-133",
        "label": "EmailPersonalizationPanel",
        "type": "component",
        "file": "src/components/ai/EmailPersonalizationPanel.tsx"
      },
      {
        "id": "comp-134",
        "label": "EmailTemplateGenerator",
        "type": "component",
        "file": "src/components/ai/EmailTemplateGenerator.tsx"
      },
      {
        "id": "comp-135",
        "label": "GeneratedJourneyPreview",
        "type": "component",
        "file": "src/components/ai/GeneratedJourneyPreview.tsx"
      },
      {
        "id": "comp-136",
        "label": "JourneySuggestionsPanel",
        "type": "component",
        "file": "src/components/ai/JourneySuggestionsPanel.tsx"
      },
      {
        "id": "comp-137",
        "label": "KnowledgeBasePanel",
        "type": "component",
        "file": "src/components/ai/KnowledgeBasePanel.tsx"
      },
      {
        "id": "comp-138",
        "label": "KnowledgeEditor",
        "type": "component",
        "file": "src/components/ai/KnowledgeEditor.tsx"
      },
      {
        "id": "comp-139",
        "label": "OptimizationSuggestions",
        "type": "component",
        "file": "src/components/ai/OptimizationSuggestions.tsx"
      },
      {
        "id": "comp-140",
        "label": "PerformancePredictionDisplay",
        "type": "component",
        "file": "src/components/ai/PerformancePredictionDisplay.tsx"
      },
      {
        "id": "comp-141",
        "label": "PersonalizationControls",
        "type": "component",
        "file": "src/components/ai/PersonalizationControls.tsx"
      },
      {
        "id": "comp-142",
        "label": "PersonalizationPreview",
        "type": "component",
        "file": "src/components/ai/PersonalizationPreview.tsx"
      },
      {
        "id": "comp-143",
        "label": "SmartSearch",
        "type": "component",
        "file": "src/components/ai/SmartSearch.tsx"
      },
      {
        "id": "comp-144",
        "label": "TemplateVariantSelector",
        "type": "component",
        "file": "src/components/ai/TemplateVariantSelector.tsx"
      },
      {
        "id": "comp-145",
        "label": "VendorSpecificControls",
        "type": "component",
        "file": "src/components/ai/VendorSpecificControls.tsx"
      },
      {
        "id": "comp-146",
        "label": "CacheConfigurationInterface",
        "type": "component",
        "file": "src/components/ai/cache/CacheConfigurationInterface.tsx"
      },
      {
        "id": "comp-147",
        "label": "CachePerformanceDashboard",
        "type": "component",
        "file": "src/components/ai/cache/CachePerformanceDashboard.tsx"
      },
      {
        "id": "comp-148",
        "label": "MobileCacheInterface",
        "type": "component",
        "file": "src/components/ai/cache/MobileCacheInterface.tsx"
      },
      {
        "id": "comp-149",
        "label": "index",
        "type": "component",
        "file": "src/components/ai/index.ts"
      },
      {
        "id": "comp-150",
        "label": "AIEmailTemplateEditor",
        "type": "component",
        "file": "src/components/ai-email-templates/AIEmailTemplateEditor.tsx"
      },
      {
        "id": "comp-151",
        "label": "AIFeatureManager",
        "type": "component",
        "file": "src/components/ai-features/AIFeatureManager.tsx"
      },
      {
        "id": "comp-152",
        "label": "APIKeySetupWizard",
        "type": "component",
        "file": "src/components/ai-features/APIKeySetupWizard.tsx"
      },
      {
        "id": "comp-153",
        "label": "CostTrackingDashboard",
        "type": "component",
        "file": "src/components/ai-features/CostTrackingDashboard.tsx"
      },
      {
        "id": "comp-154",
        "label": "FeatureTierComparison",
        "type": "component",
        "file": "src/components/ai-features/FeatureTierComparison.tsx"
      },
      {
        "id": "comp-155",
        "label": "PlatformVsClientToggle",
        "type": "component",
        "file": "src/components/ai-features/PlatformVsClientToggle.tsx"
      },
      {
        "id": "comp-156",
        "label": "index",
        "type": "component",
        "file": "src/components/ai-features/index.ts"
      },
      {
        "id": "comp-157",
        "label": "BatchProcessingScheduler",
        "type": "component",
        "file": "src/components/ai-optimization/BatchProcessingScheduler.tsx"
      },
      {
        "id": "comp-158",
        "label": "BudgetAlertsManager",
        "type": "component",
        "file": "src/components/ai-optimization/BudgetAlertsManager.tsx"
      },
      {
        "id": "comp-159",
        "label": "CostOptimizationDashboard",
        "type": "component",
        "file": "src/components/ai-optimization/CostOptimizationDashboard.tsx"
      },
      {
        "id": "comp-160",
        "label": "CostSavingsReporter",
        "type": "component",
        "file": "src/components/ai-optimization/CostSavingsReporter.tsx"
      },
      {
        "id": "comp-161",
        "label": "ModelSelectionOptimizer",
        "type": "component",
        "file": "src/components/ai-optimization/ModelSelectionOptimizer.tsx"
      },
      {
        "id": "comp-162",
        "label": "SmartCachingVisualizer",
        "type": "component",
        "file": "src/components/ai-optimization/SmartCachingVisualizer.tsx"
      },
      {
        "id": "comp-163",
        "label": "WeddingSeasonCostProjector",
        "type": "component",
        "file": "src/components/ai-optimization/WeddingSeasonCostProjector.tsx"
      },
      {
        "id": "comp-164",
        "label": "ActiveJourneysTable",
        "type": "component",
        "file": "src/components/analytics/ActiveJourneysTable.tsx"
      },
      {
        "id": "comp-165",
        "label": "AlertSystem",
        "type": "component",
        "file": "src/components/analytics/AlertSystem.tsx"
      },
      {
        "id": "comp-166",
        "label": "AnalyticsFilters",
        "type": "component",
        "file": "src/components/analytics/AnalyticsFilters.tsx"
      },
      {
        "id": "comp-167",
        "label": "AnalyticsOverview",
        "type": "component",
        "file": "src/components/analytics/AnalyticsOverview.tsx"
      },
      {
        "id": "comp-168",
        "label": "BenchmarkingInterface",
        "type": "component",
        "file": "src/components/analytics/BenchmarkingInterface.tsx"
      },
      {
        "id": "comp-169",
        "label": "BookingFunnelAnalytics",
        "type": "component",
        "file": "src/components/analytics/BookingFunnelAnalytics.tsx"
      },
      {
        "id": "comp-170",
        "label": "ChartsPanel",
        "type": "component",
        "file": "src/components/analytics/ChartsPanel.tsx"
      },
      {
        "id": "comp-171",
        "label": "ClientAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/ClientAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-172",
        "label": "ClientJourney",
        "type": "component",
        "file": "src/components/analytics/ClientJourney.tsx"
      },
      {
        "id": "comp-173",
        "label": "ClientPortalAnalytics",
        "type": "component",
        "file": "src/components/analytics/ClientPortalAnalytics.tsx"
      },
      {
        "id": "comp-174",
        "label": "ClientSatisfactionDashboard",
        "type": "component",
        "file": "src/components/analytics/ClientSatisfactionDashboard.tsx"
      },
      {
        "id": "comp-175",
        "label": "CommunicationAnalytics",
        "type": "component",
        "file": "src/components/analytics/CommunicationAnalytics.tsx"
      },
      {
        "id": "comp-176",
        "label": "ConversionFunnelChart",
        "type": "component",
        "file": "src/components/analytics/ConversionFunnelChart.tsx"
      },
      {
        "id": "comp-177",
        "label": "CustomDashboardBuilder",
        "type": "component",
        "file": "src/components/analytics/CustomDashboardBuilder.tsx"
      },
      {
        "id": "comp-178",
        "label": "EngagementMetrics",
        "type": "component",
        "file": "src/components/analytics/EngagementMetrics.tsx"
      },
      {
        "id": "comp-179",
        "label": "ExecutiveDashboard",
        "type": "component",
        "file": "src/components/analytics/ExecutiveDashboard.tsx"
      },
      {
        "id": "comp-180",
        "label": "ExportReports",
        "type": "component",
        "file": "src/components/analytics/ExportReports.tsx"
      },
      {
        "id": "comp-181",
        "label": "FeatureUsage",
        "type": "component",
        "file": "src/components/analytics/FeatureUsage.tsx"
      },
      {
        "id": "comp-182",
        "label": "GuestDemographicsAnalysis",
        "type": "component",
        "file": "src/components/analytics/GuestDemographicsAnalysis.tsx"
      },
      {
        "id": "comp-183",
        "label": "JourneyOverviewCards",
        "type": "component",
        "file": "src/components/analytics/JourneyOverviewCards.tsx"
      },
      {
        "id": "comp-184",
        "label": "MRRDashboard",
        "type": "component",
        "file": "src/components/analytics/MRRDashboard.tsx"
      },
      {
        "id": "comp-185",
        "label": "MarketPositionAnalytics",
        "type": "component",
        "file": "src/components/analytics/MarketPositionAnalytics.tsx"
      },
      {
        "id": "comp-186",
        "label": "MetricsCards",
        "type": "component",
        "file": "src/components/analytics/MetricsCards.tsx"
      },
      {
        "id": "comp-187",
        "label": "MobileAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/MobileAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-188",
        "label": "PerformanceAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/PerformanceAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-189",
        "label": "PerformanceCharts",
        "type": "component",
        "file": "src/components/analytics/PerformanceCharts.tsx"
      },
      {
        "id": "comp-190",
        "label": "PerformanceKPIDashboard",
        "type": "component",
        "file": "src/components/analytics/PerformanceKPIDashboard.tsx"
      },
      {
        "id": "comp-191",
        "label": "PerformanceMetricsChart",
        "type": "component",
        "file": "src/components/analytics/PerformanceMetricsChart.tsx"
      },
      {
        "id": "comp-192",
        "label": "RealTimeAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/RealTimeAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-193",
        "label": "RechartsComponents",
        "type": "component",
        "file": "src/components/analytics/RechartsComponents.tsx"
      },
      {
        "id": "comp-194",
        "label": "ResponseAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/ResponseAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-195",
        "label": "ResponseRateDashboard",
        "type": "component",
        "file": "src/components/analytics/ResponseRateDashboard.tsx"
      },
      {
        "id": "comp-196",
        "label": "RevenueAnalytics",
        "type": "component",
        "file": "src/components/analytics/RevenueAnalytics.tsx"
      },
      {
        "id": "comp-197",
        "label": "RevenueAttributionChart",
        "type": "component",
        "file": "src/components/analytics/RevenueAttributionChart.tsx"
      },
      {
        "id": "comp-198",
        "label": "RevenueDashboard",
        "type": "component",
        "file": "src/components/analytics/RevenueDashboard.tsx"
      },
      {
        "id": "comp-199",
        "label": "Skeletons",
        "type": "component",
        "file": "src/components/analytics/Skeletons.tsx"
      },
      {
        "id": "comp-200",
        "label": "TimeframeSelector",
        "type": "component",
        "file": "src/components/analytics/TimeframeSelector.tsx"
      },
      {
        "id": "comp-201",
        "label": "VendorAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/VendorAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-202",
        "label": "VendorCompletionTracker",
        "type": "component",
        "file": "src/components/analytics/VendorCompletionTracker.tsx"
      },
      {
        "id": "comp-203",
        "label": "VendorScoreCard",
        "type": "component",
        "file": "src/components/analytics/VendorScoreCard.tsx"
      },
      {
        "id": "comp-204",
        "label": "WeddingAnalyticsPatterns",
        "type": "component",
        "file": "src/components/analytics/WeddingAnalyticsPatterns.tsx"
      },
      {
        "id": "comp-205",
        "label": "AnalyticsOverview.test",
        "type": "component",
        "file": "src/components/analytics/__tests__/AnalyticsOverview.test.tsx"
      },
      {
        "id": "comp-206",
        "label": "ClientJourney.test",
        "type": "component",
        "file": "src/components/analytics/__tests__/ClientJourney.test.tsx"
      },
      {
        "id": "comp-207",
        "label": "ClientPortalAnalytics.test",
        "type": "component",
        "file": "src/components/analytics/__tests__/ClientPortalAnalytics.test.tsx"
      },
      {
        "id": "comp-208",
        "label": "CommunicationAnalytics.test",
        "type": "component",
        "file": "src/components/analytics/__tests__/CommunicationAnalytics.test.tsx"
      },
      {
        "id": "comp-209",
        "label": "EngagementMetrics.test",
        "type": "component",
        "file": "src/components/analytics/__tests__/EngagementMetrics.test.tsx"
      },
      {
        "id": "comp-210",
        "label": "FeatureUsage.test",
        "type": "component",
        "file": "src/components/analytics/__tests__/FeatureUsage.test.tsx"
      },
      {
        "id": "comp-211",
        "label": "ABTestDashboard",
        "type": "component",
        "file": "src/components/analytics/ab-tests/ABTestDashboard.tsx"
      },
      {
        "id": "comp-212",
        "label": "ABTestRealtimeDashboard",
        "type": "component",
        "file": "src/components/analytics/ab-tests/ABTestRealtimeDashboard.tsx"
      },
      {
        "id": "comp-213",
        "label": "ActivationFunnelDashboard",
        "type": "component",
        "file": "src/components/analytics/activation/ActivationFunnelDashboard.tsx"
      },
      {
        "id": "comp-214",
        "label": "UserActivationProgress",
        "type": "component",
        "file": "src/components/analytics/activation/UserActivationProgress.tsx"
      },
      {
        "id": "comp-215",
        "label": "BudgetOptimizationPanel",
        "type": "component",
        "file": "src/components/analytics/predictive-insights/BudgetOptimizationPanel.tsx"
      },
      {
        "id": "comp-216",
        "label": "ChurnRiskMonitor",
        "type": "component",
        "file": "src/components/analytics/predictive-insights/ChurnRiskMonitor.tsx"
      },
      {
        "id": "comp-217",
        "label": "PredictiveInsightsDashboard",
        "type": "component",
        "file": "src/components/analytics/predictive-insights/PredictiveInsightsDashboard.tsx"
      },
      {
        "id": "comp-218",
        "label": "RevenueForecasting",
        "type": "component",
        "file": "src/components/analytics/predictive-insights/RevenueForecasting.tsx"
      },
      {
        "id": "comp-219",
        "label": "TrendAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/predictive-insights/TrendAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-220",
        "label": "VendorPerformanceAnalytics",
        "type": "component",
        "file": "src/components/analytics/predictive-insights/VendorPerformanceAnalytics.tsx"
      },
      {
        "id": "comp-221",
        "label": "SEOAnalyticsDashboard",
        "type": "component",
        "file": "src/components/analytics/seo/SEOAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-222",
        "label": "BudgetVarianceReporting",
        "type": "component",
        "file": "src/components/analytics/wedding/BudgetVarianceReporting.tsx"
      },
      {
        "id": "comp-223",
        "label": "ReportBuilder",
        "type": "component",
        "file": "src/components/analytics/wedding/ReportBuilder.tsx"
      },
      {
        "id": "comp-224",
        "label": "TimelineEfficiencyTracker",
        "type": "component",
        "file": "src/components/analytics/wedding/TimelineEfficiencyTracker.tsx"
      },
      {
        "id": "comp-225",
        "label": "VendorPerformanceAnalytics",
        "type": "component",
        "file": "src/components/analytics/wedding/VendorPerformanceAnalytics.tsx"
      },
      {
        "id": "comp-226",
        "label": "WeddingMetricsDashboard",
        "type": "component",
        "file": "src/components/analytics/wedding/WeddingMetricsDashboard.tsx"
      },
      {
        "id": "comp-227",
        "label": "MigrationAssistant",
        "type": "component",
        "file": "src/components/api/MigrationAssistant.tsx"
      },
      {
        "id": "comp-228",
        "label": "CriticalEndpointProtection",
        "type": "component",
        "file": "src/components/api-gateway/CriticalEndpointProtection.tsx"
      },
      {
        "id": "comp-229",
        "label": "EndpointConfigurationPanel",
        "type": "component",
        "file": "src/components/api-gateway/EndpointConfigurationPanel.tsx"
      },
      {
        "id": "comp-230",
        "label": "SeasonalTrafficMonitor",
        "type": "component",
        "file": "src/components/api-gateway/SeasonalTrafficMonitor.tsx"
      },
      {
        "id": "comp-231",
        "label": "VendorAPIAccessManager",
        "type": "component",
        "file": "src/components/api-gateway/VendorAPIAccessManager.tsx"
      },
      {
        "id": "comp-232",
        "label": "WeddingAPIUsageAnalytics",
        "type": "component",
        "file": "src/components/api-gateway/WeddingAPIUsageAnalytics.tsx"
      },
      {
        "id": "comp-233",
        "label": "APIAnalyticsDashboard",
        "type": "component",
        "file": "src/components/api-keys/APIAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-234",
        "label": "APIDocumentationGenerator",
        "type": "component",
        "file": "src/components/api-keys/APIDocumentationGenerator.tsx"
      },
      {
        "id": "comp-235",
        "label": "APIKeyManager",
        "type": "component",
        "file": "src/components/api-keys/APIKeyManager.tsx"
      },
      {
        "id": "comp-236",
        "label": "ArticleAnalytics",
        "type": "component",
        "file": "src/components/articles/ArticleAnalytics.tsx"
      },
      {
        "id": "comp-237",
        "label": "ArticleEditor",
        "type": "component",
        "file": "src/components/articles/ArticleEditor.tsx"
      },
      {
        "id": "comp-238",
        "label": "ContentDistribution",
        "type": "component",
        "file": "src/components/articles/ContentDistribution.tsx"
      },
      {
        "id": "comp-239",
        "label": "PublishingScheduler",
        "type": "component",
        "file": "src/components/articles/PublishingScheduler.tsx"
      },
      {
        "id": "comp-240",
        "label": "SEOOptimizer",
        "type": "component",
        "file": "src/components/articles/SEOOptimizer.tsx"
      },
      {
        "id": "comp-241",
        "label": "AlertManagement",
        "type": "component",
        "file": "src/components/audit/AlertManagement.tsx"
      },
      {
        "id": "comp-242",
        "label": "AuditDashboard",
        "type": "component",
        "file": "src/components/audit/AuditDashboard.tsx"
      },
      {
        "id": "comp-243",
        "label": "AuditInvestigationInterface",
        "type": "component",
        "file": "src/components/audit/AuditInvestigationInterface.tsx"
      },
      {
        "id": "comp-244",
        "label": "CoupleSignupForm",
        "type": "component",
        "file": "src/components/auth/CoupleSignupForm.tsx"
      },
      {
        "id": "comp-245",
        "label": "ForgotPasswordForm",
        "type": "component",
        "file": "src/components/auth/ForgotPasswordForm.tsx"
      },
      {
        "id": "comp-246",
        "label": "MFASetupWizard",
        "type": "component",
        "file": "src/components/auth/MFASetupWizard.tsx"
      },
      {
        "id": "comp-247",
        "label": "OAuthSignupButtons",
        "type": "component",
        "file": "src/components/auth/OAuthSignupButtons.tsx"
      },
      {
        "id": "comp-248",
        "label": "ResetPasswordForm",
        "type": "component",
        "file": "src/components/auth/ResetPasswordForm.tsx"
      },
      {
        "id": "comp-249",
        "label": "DomainBasedRouting",
        "type": "component",
        "file": "src/components/auth/enterprise/DomainBasedRouting.tsx"
      },
      {
        "id": "comp-250",
        "label": "EnterpriseProviderSelector",
        "type": "component",
        "file": "src/components/auth/enterprise/EnterpriseProviderSelector.tsx"
      },
      {
        "id": "comp-251",
        "label": "MultiVendorAccess",
        "type": "component",
        "file": "src/components/auth/enterprise/MultiVendorAccess.tsx"
      },
      {
        "id": "comp-252",
        "label": "RoleManagementInterface",
        "type": "component",
        "file": "src/components/auth/enterprise/RoleManagementInterface.tsx"
      },
      {
        "id": "comp-253",
        "label": "SSOLoginInterface",
        "type": "component",
        "file": "src/components/auth/enterprise/SSOLoginInterface.tsx"
      },
      {
        "id": "comp-254",
        "label": "TeamMemberInvitation",
        "type": "component",
        "file": "src/components/auth/enterprise/TeamMemberInvitation.tsx"
      },
      {
        "id": "comp-255",
        "label": "VendorNetworkSSO",
        "type": "component",
        "file": "src/components/auth/enterprise/VendorNetworkSSO.tsx"
      },
      {
        "id": "comp-256",
        "label": "WeddingSeasonAccess",
        "type": "component",
        "file": "src/components/auth/enterprise/WeddingSeasonAccess.tsx"
      },
      {
        "id": "comp-257",
        "label": "WeddingTeamSSO",
        "type": "component",
        "file": "src/components/auth/enterprise/WeddingTeamSSO.tsx"
      },
      {
        "id": "comp-258",
        "label": "BackupAnalyticsDashboard",
        "type": "component",
        "file": "src/components/backup/BackupAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-259",
        "label": "BackupComplianceTracker",
        "type": "component",
        "file": "src/components/backup/BackupComplianceTracker.tsx"
      },
      {
        "id": "comp-260",
        "label": "BackupScheduler",
        "type": "component",
        "file": "src/components/backup/BackupScheduler.tsx"
      },
      {
        "id": "comp-261",
        "label": "BackupStatusMonitor",
        "type": "component",
        "file": "src/components/backup/BackupStatusMonitor.tsx"
      },
      {
        "id": "comp-262",
        "label": "BackupStatusOverview",
        "type": "component",
        "file": "src/components/backup/BackupStatusOverview.tsx"
      },
      {
        "id": "comp-263",
        "label": "BackupStrategyDashboard",
        "type": "component",
        "file": "src/components/backup/BackupStrategyDashboard.tsx"
      },
      {
        "id": "comp-264",
        "label": "CriticalDateProtection",
        "type": "component",
        "file": "src/components/backup/CriticalDateProtection.tsx"
      },
      {
        "id": "comp-265",
        "label": "DataIntegrityValidator",
        "type": "component",
        "file": "src/components/backup/DataIntegrityValidator.tsx"
      },
      {
        "id": "comp-266",
        "label": "DataProtectionPanel",
        "type": "component",
        "file": "src/components/backup/DataProtectionPanel.tsx"
      },
      {
        "id": "comp-267",
        "label": "EmergencyBackupControls",
        "type": "component",
        "file": "src/components/backup/EmergencyBackupControls.tsx"
      },
      {
        "id": "comp-268",
        "label": "EmergencyRecoveryPanel",
        "type": "component",
        "file": "src/components/backup/EmergencyRecoveryPanel.tsx"
      },
      {
        "id": "comp-269",
        "label": "PointInTimeRecovery",
        "type": "component",
        "file": "src/components/backup/PointInTimeRecovery.tsx"
      },
      {
        "id": "comp-270",
        "label": "RealTimeBackupMonitor",
        "type": "component",
        "file": "src/components/backup/RealTimeBackupMonitor.tsx"
      },
      {
        "id": "comp-271",
        "label": "RecoveryControlCenter",
        "type": "component",
        "file": "src/components/backup/RecoveryControlCenter.tsx"
      },
      {
        "id": "comp-272",
        "label": "RecoveryProgressTracker",
        "type": "component",
        "file": "src/components/backup/RecoveryProgressTracker.tsx"
      },
      {
        "id": "comp-273",
        "label": "VendorDataBackupManager",
        "type": "component",
        "file": "src/components/backup/VendorDataBackupManager.tsx"
      },
      {
        "id": "comp-274",
        "label": "WeddingDataBackupSelector",
        "type": "component",
        "file": "src/components/backup/WeddingDataBackupSelector.tsx"
      },
      {
        "id": "comp-275",
        "label": "WeddingDataProtectionPanel",
        "type": "component",
        "file": "src/components/backup/WeddingDataProtectionPanel.tsx"
      },
      {
        "id": "comp-276",
        "label": "BackupStrategyDashboard.test",
        "type": "component",
        "file": "src/components/backup/__tests__/BackupStrategyDashboard.test.tsx"
      },
      {
        "id": "comp-277",
        "label": "EmergencyBackupControls.test",
        "type": "component",
        "file": "src/components/backup/__tests__/EmergencyBackupControls.test.tsx"
      },
      {
        "id": "comp-278",
        "label": "RecoveryControlCenter.test",
        "type": "component",
        "file": "src/components/backup/__tests__/RecoveryControlCenter.test.tsx"
      },
      {
        "id": "comp-279",
        "label": "WeddingDataProtectionPanel.test",
        "type": "component",
        "file": "src/components/backup/__tests__/WeddingDataProtectionPanel.test.tsx"
      },
      {
        "id": "comp-280",
        "label": "backup-components.test",
        "type": "component",
        "file": "src/components/backup/__tests__/backup-components.test.tsx"
      },
      {
        "id": "comp-281",
        "label": "index",
        "type": "component",
        "file": "src/components/backup/index.ts"
      },
      {
        "id": "comp-282",
        "label": "types",
        "type": "component",
        "file": "src/components/backup/types.ts"
      },
      {
        "id": "comp-283",
        "label": "AdminBackupNavigation",
        "type": "component",
        "file": "src/components/backup-recovery/AdminBackupNavigation.tsx"
      },
      {
        "id": "comp-284",
        "label": "AdminLayout",
        "type": "component",
        "file": "src/components/backup-recovery/AdminLayout.tsx"
      },
      {
        "id": "comp-285",
        "label": "BackupDashboard",
        "type": "component",
        "file": "src/components/backup-recovery/BackupDashboard.tsx"
      },
      {
        "id": "comp-286",
        "label": "BackupMonitoringWidgets",
        "type": "component",
        "file": "src/components/backup-recovery/BackupMonitoringWidgets.tsx"
      },
      {
        "id": "comp-287",
        "label": "DataRecoveryPreview",
        "type": "component",
        "file": "src/components/backup-recovery/DataRecoveryPreview.tsx"
      },
      {
        "id": "comp-288",
        "label": "DisasterTimelineVisualizer",
        "type": "component",
        "file": "src/components/backup-recovery/DisasterTimelineVisualizer.tsx"
      },
      {
        "id": "comp-289",
        "label": "EmergencyRecovery",
        "type": "component",
        "file": "src/components/backup-recovery/EmergencyRecovery.tsx"
      },
      {
        "id": "comp-290",
        "label": "BackupDashboard.test",
        "type": "component",
        "file": "src/components/backup-recovery/__tests__/BackupDashboard.test.tsx"
      },
      {
        "id": "comp-291",
        "label": "BackupMonitoringWidgets.test",
        "type": "component",
        "file": "src/components/backup-recovery/__tests__/BackupMonitoringWidgets.test.tsx"
      },
      {
        "id": "comp-292",
        "label": "DataRecoveryPreview.test",
        "type": "component",
        "file": "src/components/backup-recovery/__tests__/DataRecoveryPreview.test.tsx"
      },
      {
        "id": "comp-293",
        "label": "DisasterTimelineVisualizer.test",
        "type": "component",
        "file": "src/components/backup-recovery/__tests__/DisasterTimelineVisualizer.test.tsx"
      },
      {
        "id": "comp-294",
        "label": "EmergencyRecovery.test",
        "type": "component",
        "file": "src/components/backup-recovery/__tests__/EmergencyRecovery.test.tsx"
      },
      {
        "id": "comp-295",
        "label": "AdvancedBillingDashboard",
        "type": "component",
        "file": "src/components/billing/AdvancedBillingDashboard.tsx"
      },
      {
        "id": "comp-296",
        "label": "PaymentForm",
        "type": "component",
        "file": "src/components/billing/PaymentForm.tsx"
      },
      {
        "id": "comp-297",
        "label": "PaymentHistory",
        "type": "component",
        "file": "src/components/billing/PaymentHistory.tsx"
      },
      {
        "id": "comp-298",
        "label": "PaymentMethods",
        "type": "component",
        "file": "src/components/billing/PaymentMethods.tsx"
      },
      {
        "id": "comp-299",
        "label": "PricingPlans",
        "type": "component",
        "file": "src/components/billing/PricingPlans.tsx"
      },
      {
        "id": "comp-300",
        "label": "SubscriptionCard",
        "type": "component",
        "file": "src/components/billing/SubscriptionCard.tsx"
      },
      {
        "id": "comp-301",
        "label": "SubscriptionManager",
        "type": "component",
        "file": "src/components/billing/SubscriptionManager.tsx"
      },
      {
        "id": "comp-302",
        "label": "UsageDisplay",
        "type": "component",
        "file": "src/components/billing/UsageDisplay.tsx"
      },
      {
        "id": "comp-303",
        "label": "index",
        "type": "component",
        "file": "src/components/billing/index.ts"
      },
      {
        "id": "comp-304",
        "label": "MeetingPreparationPanel",
        "type": "component",
        "file": "src/components/booking/MeetingPreparationPanel.tsx"
      },
      {
        "id": "comp-305",
        "label": "BrandingCustomizer",
        "type": "component",
        "file": "src/components/branding/BrandingCustomizer.tsx"
      },
      {
        "id": "comp-306",
        "label": "CSSEditor",
        "type": "component",
        "file": "src/components/branding/CSSEditor.tsx"
      },
      {
        "id": "comp-307",
        "label": "LogoUploader",
        "type": "component",
        "file": "src/components/branding/LogoUploader.tsx"
      },
      {
        "id": "comp-308",
        "label": "BrandingCustomizer.test",
        "type": "component",
        "file": "src/components/branding/__tests__/BrandingCustomizer.test.tsx"
      },
      {
        "id": "comp-309",
        "label": "BroadcastBadge",
        "type": "component",
        "file": "src/components/broadcast/BroadcastBadge.tsx"
      },
      {
        "id": "comp-310",
        "label": "BroadcastCenter",
        "type": "component",
        "file": "src/components/broadcast/BroadcastCenter.tsx"
      },
      {
        "id": "comp-311",
        "label": "BroadcastInbox",
        "type": "component",
        "file": "src/components/broadcast/BroadcastInbox.tsx"
      },
      {
        "id": "comp-312",
        "label": "BroadcastPreferences",
        "type": "component",
        "file": "src/components/broadcast/BroadcastPreferences.tsx"
      },
      {
        "id": "comp-313",
        "label": "BroadcastToast",
        "type": "component",
        "file": "src/components/broadcast/BroadcastToast.tsx"
      },
      {
        "id": "comp-314",
        "label": "index",
        "type": "component",
        "file": "src/components/broadcast/index.ts"
      },
      {
        "id": "comp-315",
        "label": "AccessibleBudgetInterface",
        "type": "component",
        "file": "src/components/budget/AccessibleBudgetInterface.tsx"
      },
      {
        "id": "comp-316",
        "label": "AdvancedBudgetDashboard",
        "type": "component",
        "file": "src/components/budget/AdvancedBudgetDashboard.tsx"
      },
      {
        "id": "comp-317",
        "label": "BudgetAlerts",
        "type": "component",
        "file": "src/components/budget/BudgetAlerts.tsx"
      },
      {
        "id": "comp-318",
        "label": "BudgetAllocation",
        "type": "component",
        "file": "src/components/budget/BudgetAllocation.tsx"
      },
      {
        "id": "comp-319",
        "label": "BudgetDashboard",
        "type": "component",
        "file": "src/components/budget/BudgetDashboard.tsx"
      },
      {
        "id": "comp-320",
        "label": "BudgetErrorBoundary",
        "type": "component",
        "file": "src/components/budget/BudgetErrorBoundary.tsx"
      },
      {
        "id": "comp-321",
        "label": "BudgetOptimizer",
        "type": "component",
        "file": "src/components/budget/BudgetOptimizer.tsx"
      },
      {
        "id": "comp-322",
        "label": "BudgetOverview",
        "type": "component",
        "file": "src/components/budget/BudgetOverview.tsx"
      },
      {
        "id": "comp-323",
        "label": "BudgetReallocation",
        "type": "component",
        "file": "src/components/budget/BudgetReallocation.tsx"
      },
      {
        "id": "comp-324",
        "label": "BudgetReports",
        "type": "component",
        "file": "src/components/budget/BudgetReports.tsx"
      },
      {
        "id": "comp-325",
        "label": "BudgetVisualization",
        "type": "component",
        "file": "src/components/budget/BudgetVisualization.tsx"
      },
      {
        "id": "comp-326",
        "label": "CostSavingRecommendations",
        "type": "component",
        "file": "src/components/budget/CostSavingRecommendations.tsx"
      },
      {
        "id": "comp-327",
        "label": "ManualExpenseEntry",
        "type": "component",
        "file": "src/components/budget/ManualExpenseEntry.tsx"
      },
      {
        "id": "comp-328",
        "label": "SmartReceiptScanner",
        "type": "component",
        "file": "src/components/budget/SmartReceiptScanner.tsx"
      },
      {
        "id": "comp-329",
        "label": "TransactionManager",
        "type": "component",
        "file": "src/components/budget/TransactionManager.tsx"
      },
      {
        "id": "comp-330",
        "label": "BudgetExportDialog",
        "type": "component",
        "file": "src/components/budget/export/BudgetExportDialog.tsx"
      },
      {
        "id": "comp-331",
        "label": "ExportFilters",
        "type": "component",
        "file": "src/components/budget/export/ExportFilters.tsx"
      },
      {
        "id": "comp-332",
        "label": "ExportFormatSelector",
        "type": "component",
        "file": "src/components/budget/export/ExportFormatSelector.tsx"
      },
      {
        "id": "comp-333",
        "label": "ExportHistory",
        "type": "component",
        "file": "src/components/budget/export/ExportHistory.tsx"
      },
      {
        "id": "comp-334",
        "label": "ExportProgress",
        "type": "component",
        "file": "src/components/budget/export/ExportProgress.tsx"
      },
      {
        "id": "comp-335",
        "label": "BudgetExportDialog.test",
        "type": "component",
        "file": "src/components/budget/export/__tests__/BudgetExportDialog.test.tsx"
      },
      {
        "id": "comp-336",
        "label": "ExportFilters.test",
        "type": "component",
        "file": "src/components/budget/export/__tests__/ExportFilters.test.tsx"
      },
      {
        "id": "comp-337",
        "label": "ExportFormatSelector.test",
        "type": "component",
        "file": "src/components/budget/export/__tests__/ExportFormatSelector.test.tsx"
      },
      {
        "id": "comp-338",
        "label": "ExportHistory.test",
        "type": "component",
        "file": "src/components/budget/export/__tests__/ExportHistory.test.tsx"
      },
      {
        "id": "comp-339",
        "label": "ExportProgress.test",
        "type": "component",
        "file": "src/components/budget/export/__tests__/ExportProgress.test.tsx"
      },
      {
        "id": "comp-340",
        "label": "MRRMovementChart",
        "type": "component",
        "file": "src/components/business/charts/MRRMovementChart.tsx"
      },
      {
        "id": "comp-341",
        "label": "SeasonalTrendsChart",
        "type": "component",
        "file": "src/components/business/charts/SeasonalTrendsChart.tsx"
      },
      {
        "id": "comp-342",
        "label": "BusinessHealthIndicator",
        "type": "component",
        "file": "src/components/business/metrics/BusinessHealthIndicator.tsx"
      },
      {
        "id": "comp-343",
        "label": "ConversionFunnelViz",
        "type": "component",
        "file": "src/components/business/metrics/ConversionFunnelViz.tsx"
      },
      {
        "id": "comp-344",
        "label": "MetricsCard",
        "type": "component",
        "file": "src/components/business/metrics/MetricsCard.tsx"
      },
      {
        "id": "comp-345",
        "label": "AppleCalendarSelector",
        "type": "component",
        "file": "src/components/calendar/AppleCalendarSelector.tsx"
      },
      {
        "id": "comp-346",
        "label": "AppleCalendarSync",
        "type": "component",
        "file": "src/components/calendar/AppleCalendarSync.tsx"
      },
      {
        "id": "comp-347",
        "label": "AppleSyncStatus",
        "type": "component",
        "file": "src/components/calendar/AppleSyncStatus.tsx"
      },
      {
        "id": "comp-348",
        "label": "OutlookCalendarSync",
        "type": "component",
        "file": "src/components/calendar/OutlookCalendarSync.tsx"
      },
      {
        "id": "comp-349",
        "label": "OutlookEventMapping",
        "type": "component",
        "file": "src/components/calendar/OutlookEventMapping.tsx"
      },
      {
        "id": "comp-350",
        "label": "OutlookOAuthFlow",
        "type": "component",
        "file": "src/components/calendar/OutlookOAuthFlow.tsx"
      },
      {
        "id": "comp-351",
        "label": "OutlookSyncSettings",
        "type": "component",
        "file": "src/components/calendar/OutlookSyncSettings.tsx"
      },
      {
        "id": "comp-352",
        "label": "OutlookSyncStatus",
        "type": "component",
        "file": "src/components/calendar/OutlookSyncStatus.tsx"
      },
      {
        "id": "comp-353",
        "label": "AvailabilitySharing",
        "type": "component",
        "file": "src/components/calendar-integration/AvailabilitySharing.tsx"
      },
      {
        "id": "comp-354",
        "label": "CalendarAuthFlow",
        "type": "component",
        "file": "src/components/calendar-integration/CalendarAuthFlow.tsx"
      },
      {
        "id": "comp-355",
        "label": "CalendarSyncDashboard",
        "type": "component",
        "file": "src/components/calendar-integration/CalendarSyncDashboard.tsx"
      },
      {
        "id": "comp-356",
        "label": "TimelineSyncManager",
        "type": "component",
        "file": "src/components/calendar-integration/TimelineSyncManager.tsx"
      },
      {
        "id": "comp-357",
        "label": "DietaryManagementDashboard",
        "type": "component",
        "file": "src/components/catering/DietaryManagementDashboard.tsx"
      },
      {
        "id": "comp-358",
        "label": "MenuGenerator",
        "type": "component",
        "file": "src/components/catering/MenuGenerator.tsx"
      },
      {
        "id": "comp-359",
        "label": "MobileDietaryInterface",
        "type": "component",
        "file": "src/components/catering/mobile/MobileDietaryInterface.tsx"
      },
      {
        "id": "comp-360",
        "label": "BudgetCharts",
        "type": "component",
        "file": "src/components/charts/BudgetCharts.tsx"
      },
      {
        "id": "comp-361",
        "label": "ChartContainer",
        "type": "component",
        "file": "src/components/charts/ChartContainer.tsx"
      },
      {
        "id": "comp-362",
        "label": "MilestoneTimeline",
        "type": "component",
        "file": "src/components/charts/MilestoneTimeline.tsx"
      },
      {
        "id": "comp-363",
        "label": "MobileOptimizedChart",
        "type": "component",
        "file": "src/components/charts/MobileOptimizedChart.tsx"
      },
      {
        "id": "comp-364",
        "label": "ProgressCharts",
        "type": "component",
        "file": "src/components/charts/ProgressCharts.tsx"
      },
      {
        "id": "comp-365",
        "label": "ProgressGaugeChart",
        "type": "component",
        "file": "src/components/charts/ProgressGaugeChart.tsx"
      },
      {
        "id": "comp-366",
        "label": "ProgressLineChart",
        "type": "component",
        "file": "src/components/charts/ProgressLineChart.tsx"
      },
      {
        "id": "comp-367",
        "label": "ProgressOverview",
        "type": "component",
        "file": "src/components/charts/ProgressOverview.tsx"
      },
      {
        "id": "comp-368",
        "label": "RealTimeProgressChart",
        "type": "component",
        "file": "src/components/charts/RealTimeProgressChart.tsx"
      },
      {
        "id": "comp-369",
        "label": "TaskProgress",
        "type": "component",
        "file": "src/components/charts/TaskProgress.tsx"
      },
      {
        "id": "comp-370",
        "label": "VendorMetrics",
        "type": "component",
        "file": "src/components/charts/VendorMetrics.tsx"
      },
      {
        "id": "comp-371",
        "label": "VendorChatInterface",
        "type": "component",
        "file": "src/components/chat/VendorChatInterface.tsx"
      },
      {
        "id": "comp-372",
        "label": "ChatInput",
        "type": "component",
        "file": "src/components/chatbot/ChatInput.tsx"
      },
      {
        "id": "comp-373",
        "label": "ChatWidget",
        "type": "component",
        "file": "src/components/chatbot/ChatWidget.tsx"
      },
      {
        "id": "comp-374",
        "label": "ChatbotWidget",
        "type": "component",
        "file": "src/components/chatbot/ChatbotWidget.tsx"
      },
      {
        "id": "comp-375",
        "label": "MessageBubble",
        "type": "component",
        "file": "src/components/chatbot/MessageBubble.tsx"
      },
      {
        "id": "comp-376",
        "label": "TypingIndicator",
        "type": "component",
        "file": "src/components/chatbot/TypingIndicator.tsx"
      },
      {
        "id": "comp-377",
        "label": "ChatInput.test",
        "type": "component",
        "file": "src/components/chatbot/__tests__/ChatInput.test.tsx"
      },
      {
        "id": "comp-378",
        "label": "ChatWidget.test",
        "type": "component",
        "file": "src/components/chatbot/__tests__/ChatWidget.test.tsx"
      },
      {
        "id": "comp-379",
        "label": "MessageBubble.test",
        "type": "component",
        "file": "src/components/chatbot/__tests__/MessageBubble.test.tsx"
      },
      {
        "id": "comp-380",
        "label": "TypingIndicator.test",
        "type": "component",
        "file": "src/components/chatbot/__tests__/TypingIndicator.test.tsx"
      },
      {
        "id": "comp-381",
        "label": "setup",
        "type": "component",
        "file": "src/components/chatbot/__tests__/setup.ts"
      },
      {
        "id": "comp-382",
        "label": "BulkActionsBar",
        "type": "component",
        "file": "src/components/clients/BulkActionsBar.tsx"
      },
      {
        "id": "comp-383",
        "label": "ClientErrorBoundary",
        "type": "component",
        "file": "src/components/clients/ClientErrorBoundary.tsx"
      },
      {
        "id": "comp-384",
        "label": "ClientListViews",
        "type": "component",
        "file": "src/components/clients/ClientListViews.tsx"
      },
      {
        "id": "comp-385",
        "label": "ClientLoadingStates",
        "type": "component",
        "file": "src/components/clients/ClientLoadingStates.tsx"
      },
      {
        "id": "comp-386",
        "label": "ClientNotifications",
        "type": "component",
        "file": "src/components/clients/ClientNotifications.tsx"
      },
      {
        "id": "comp-387",
        "label": "BulkOperationsModal",
        "type": "component",
        "file": "src/components/clients/bulk/BulkOperationsModal.tsx"
      },
      {
        "id": "comp-388",
        "label": "BulkProgressModal",
        "type": "component",
        "file": "src/components/clients/bulk/BulkProgressModal.tsx"
      },
      {
        "id": "comp-389",
        "label": "BulkSelectionInterface",
        "type": "component",
        "file": "src/components/clients/bulk/BulkSelectionInterface.tsx"
      },
      {
        "id": "comp-390",
        "label": "BulkSelectionProvider",
        "type": "component",
        "file": "src/components/clients/bulk/BulkSelectionProvider.tsx"
      },
      {
        "id": "comp-391",
        "label": "MobileBulkActions",
        "type": "component",
        "file": "src/components/clients/bulk/MobileBulkActions.tsx"
      },
      {
        "id": "comp-392",
        "label": "types",
        "type": "component",
        "file": "src/components/clients/bulk/types.ts"
      },
      {
        "id": "comp-393",
        "label": "ImportWizard",
        "type": "component",
        "file": "src/components/clients/import/ImportWizard.tsx"
      },
      {
        "id": "comp-394",
        "label": "ActivityFeed",
        "type": "component",
        "file": "src/components/clients/profile/ActivityFeed.tsx"
      },
      {
        "id": "comp-395",
        "label": "DocumentManager",
        "type": "component",
        "file": "src/components/clients/profile/DocumentManager.tsx"
      },
      {
        "id": "comp-396",
        "label": "NotesSection",
        "type": "component",
        "file": "src/components/clients/profile/NotesSection.tsx"
      },
      {
        "id": "comp-397",
        "label": "ProfileHeader",
        "type": "component",
        "file": "src/components/clients/profile/ProfileHeader.tsx"
      },
      {
        "id": "comp-398",
        "label": "TagsSection",
        "type": "component",
        "file": "src/components/clients/profile/TagsSection.tsx"
      },
      {
        "id": "comp-399",
        "label": "DisasterRecoveryControlPanel",
        "type": "component",
        "file": "src/components/cloud-infrastructure/disaster-recovery/DisasterRecoveryControlPanel.tsx"
      },
      {
        "id": "comp-400",
        "label": "index",
        "type": "component",
        "file": "src/components/cloud-infrastructure/disaster-recovery/index.ts"
      },
      {
        "id": "comp-401",
        "label": "types",
        "type": "component",
        "file": "src/components/cloud-infrastructure/disaster-recovery/types.ts"
      },
      {
        "id": "comp-402",
        "label": "ContentEditor",
        "type": "component",
        "file": "src/components/cms/ContentEditor.tsx"
      },
      {
        "id": "comp-403",
        "label": "ContentPreview",
        "type": "component",
        "file": "src/components/cms/ContentPreview.tsx"
      },
      {
        "id": "comp-404",
        "label": "ContentScheduler",
        "type": "component",
        "file": "src/components/cms/ContentScheduler.tsx"
      },
      {
        "id": "comp-405",
        "label": "CrossBrowserCMSEditor",
        "type": "component",
        "file": "src/components/cms/CrossBrowserCMSEditor.tsx"
      },
      {
        "id": "comp-406",
        "label": "MediaLibrary",
        "type": "component",
        "file": "src/components/cms/MediaLibrary.tsx"
      },
      {
        "id": "comp-407",
        "label": "MediaManager",
        "type": "component",
        "file": "src/components/cms/MediaManager.tsx"
      },
      {
        "id": "comp-408",
        "label": "MediaPerformanceMonitor",
        "type": "component",
        "file": "src/components/cms/MediaPerformanceMonitor.tsx"
      },
      {
        "id": "comp-409",
        "label": "MobileContentEditor",
        "type": "component",
        "file": "src/components/cms/MobileContentEditor.tsx"
      },
      {
        "id": "comp-410",
        "label": "PageBuilder",
        "type": "component",
        "file": "src/components/cms/PageBuilder.tsx"
      },
      {
        "id": "comp-411",
        "label": "TemplateManager",
        "type": "component",
        "file": "src/components/cms/TemplateManager.tsx"
      },
      {
        "id": "comp-412",
        "label": "ContentEditor.test",
        "type": "component",
        "file": "src/components/cms/__tests__/ContentEditor.test.tsx"
      },
      {
        "id": "comp-413",
        "label": "ContentScheduler.test",
        "type": "component",
        "file": "src/components/cms/__tests__/ContentScheduler.test.tsx"
      },
      {
        "id": "comp-414",
        "label": "MediaLibrary.test",
        "type": "component",
        "file": "src/components/cms/__tests__/MediaLibrary.test.tsx"
      },
      {
        "id": "comp-415",
        "label": "useContentState.test",
        "type": "component",
        "file": "src/components/cms/__tests__/useContentState.test.ts"
      },
      {
        "id": "comp-416",
        "label": "CollaborationPresence",
        "type": "component",
        "file": "src/components/collaboration/CollaborationPresence.tsx"
      },
      {
        "id": "comp-417",
        "label": "CollaborationToolbar",
        "type": "component",
        "file": "src/components/collaboration/CollaborationToolbar.tsx"
      },
      {
        "id": "comp-418",
        "label": "CollaborativeEditor",
        "type": "component",
        "file": "src/components/collaboration/CollaborativeEditor.tsx"
      },
      {
        "id": "comp-419",
        "label": "LiveTaskManagement",
        "type": "component",
        "file": "src/components/collaboration/LiveTaskManagement.tsx"
      },
      {
        "id": "comp-420",
        "label": "LiveWeddingTimeline",
        "type": "component",
        "file": "src/components/collaboration/LiveWeddingTimeline.tsx"
      },
      {
        "id": "comp-421",
        "label": "PresenceIndicator",
        "type": "component",
        "file": "src/components/collaboration/PresenceIndicator.tsx"
      },
      {
        "id": "comp-422",
        "label": "RealTimeCollaborationHub",
        "type": "component",
        "file": "src/components/collaboration/RealTimeCollaborationHub.tsx"
      },
      {
        "id": "comp-423",
        "label": "SharedWeddingBoard",
        "type": "component",
        "file": "src/components/collaboration/SharedWeddingBoard.tsx"
      },
      {
        "id": "comp-424",
        "label": "UserCursor",
        "type": "component",
        "file": "src/components/collaboration/UserCursor.tsx"
      },
      {
        "id": "comp-425",
        "label": "VendorCoordinationPanel",
        "type": "component",
        "file": "src/components/collaboration/VendorCoordinationPanel.tsx"
      },
      {
        "id": "comp-426",
        "label": "WeddingPartyChat",
        "type": "component",
        "file": "src/components/collaboration/WeddingPartyChat.tsx"
      },
      {
        "id": "comp-427",
        "label": "RealTimeCollaborationHub.test",
        "type": "component",
        "file": "src/components/collaboration/__tests__/RealTimeCollaborationHub.test.tsx"
      },
      {
        "id": "comp-428",
        "label": "AccessibleMessaging",
        "type": "component",
        "file": "src/components/communications/AccessibleMessaging.tsx"
      },
      {
        "id": "comp-429",
        "label": "AdvancedGuestCommunications",
        "type": "component",
        "file": "src/components/communications/AdvancedGuestCommunications.tsx"
      },
      {
        "id": "comp-430",
        "label": "AdvancedPersonalization",
        "type": "component",
        "file": "src/components/communications/AdvancedPersonalization.tsx"
      },
      {
        "id": "comp-431",
        "label": "AutomatedFollowUps",
        "type": "component",
        "file": "src/components/communications/AutomatedFollowUps.tsx"
      },
      {
        "id": "comp-432",
        "label": "BulkSendConfig",
        "type": "component",
        "file": "src/components/communications/BulkSendConfig.tsx"
      },
      {
        "id": "comp-433",
        "label": "DeliveryStatus",
        "type": "component",
        "file": "src/components/communications/DeliveryStatus.tsx"
      },
      {
        "id": "comp-434",
        "label": "GuestCommunications",
        "type": "component",
        "file": "src/components/communications/GuestCommunications.tsx"
      },
      {
        "id": "comp-435",
        "label": "GuestSegmentation",
        "type": "component",
        "file": "src/components/communications/GuestSegmentation.tsx"
      },
      {
        "id": "comp-436",
        "label": "MessageABTestDashboard",
        "type": "component",
        "file": "src/components/communications/MessageABTestDashboard.tsx"
      },
      {
        "id": "comp-437",
        "label": "MessageAnalytics",
        "type": "component",
        "file": "src/components/communications/MessageAnalytics.tsx"
      },
      {
        "id": "comp-438",
        "label": "MessageComposition",
        "type": "component",
        "file": "src/components/communications/MessageComposition.tsx"
      },
      {
        "id": "comp-439",
        "label": "MessageHistory",
        "type": "component",
        "file": "src/components/communications/MessageHistory.tsx"
      },
      {
        "id": "comp-440",
        "label": "MessagePreview",
        "type": "component",
        "file": "src/components/communications/MessagePreview.tsx"
      },
      {
        "id": "comp-441",
        "label": "MessageScheduler",
        "type": "component",
        "file": "src/components/communications/MessageScheduler.tsx"
      },
      {
        "id": "comp-442",
        "label": "MultiChannelComposer",
        "type": "component",
        "file": "src/components/communications/MultiChannelComposer.tsx"
      },
      {
        "id": "comp-443",
        "label": "PersonalizationTokens",
        "type": "component",
        "file": "src/components/communications/PersonalizationTokens.tsx"
      },
      {
        "id": "comp-444",
        "label": "SMSCompliance",
        "type": "component",
        "file": "src/components/communications/SMSCompliance.tsx"
      },
      {
        "id": "comp-445",
        "label": "SMSConfiguration",
        "type": "component",
        "file": "src/components/communications/SMSConfiguration.tsx"
      },
      {
        "id": "comp-446",
        "label": "SMSTemplateEditor",
        "type": "component",
        "file": "src/components/communications/SMSTemplateEditor.tsx"
      },
      {
        "id": "comp-447",
        "label": "TeamIntegrationHub",
        "type": "component",
        "file": "src/components/communications/TeamIntegrationHub.tsx"
      },
      {
        "id": "comp-448",
        "label": "WhatsAppConfiguration",
        "type": "component",
        "file": "src/components/communications/WhatsAppConfiguration.tsx"
      },
      {
        "id": "comp-449",
        "label": "DraggableSection",
        "type": "component",
        "file": "src/components/config/DraggableSection.tsx"
      },
      {
        "id": "comp-450",
        "label": "LayoutCustomizer",
        "type": "component",
        "file": "src/components/config/LayoutCustomizer.tsx"
      },
      {
        "id": "comp-451",
        "label": "MobileSectionConfig",
        "type": "component",
        "file": "src/components/config/MobileSectionConfig.tsx"
      },
      {
        "id": "comp-452",
        "label": "SectionConfigBuilder",
        "type": "component",
        "file": "src/components/config/SectionConfigBuilder.tsx"
      },
      {
        "id": "comp-453",
        "label": "index",
        "type": "component",
        "file": "src/components/config/index.ts"
      },
      {
        "id": "comp-454",
        "label": "CoupleNotificationCenter",
        "type": "component",
        "file": "src/components/couples/notifications/CoupleNotificationCenter.tsx"
      },
      {
        "id": "comp-455",
        "label": "MilestoneNotificationGrid",
        "type": "component",
        "file": "src/components/couples/notifications/MilestoneNotificationGrid.tsx"
      },
      {
        "id": "comp-456",
        "label": "CouplePersonalizationEngine",
        "type": "component",
        "file": "src/components/couples/personalization/CouplePersonalizationEngine.tsx"
      },
      {
        "id": "comp-457",
        "label": "BudgetAnalysisReport",
        "type": "component",
        "file": "src/components/couples/reporting/BudgetAnalysisReport.tsx"
      },
      {
        "id": "comp-458",
        "label": "CoupleReportDashboard",
        "type": "component",
        "file": "src/components/couples/reporting/CoupleReportDashboard.tsx"
      },
      {
        "id": "comp-459",
        "label": "ReportTypeSelector",
        "type": "component",
        "file": "src/components/couples/reporting/ReportTypeSelector.tsx"
      },
      {
        "id": "comp-460",
        "label": "SocialShareableReport",
        "type": "component",
        "file": "src/components/couples/reporting/SocialShareableReport.tsx"
      },
      {
        "id": "comp-461",
        "label": "VendorPerformanceReport",
        "type": "component",
        "file": "src/components/couples/reporting/VendorPerformanceReport.tsx"
      },
      {
        "id": "comp-462",
        "label": "WeddingProgressOverview",
        "type": "component",
        "file": "src/components/couples/reporting/WeddingProgressOverview.tsx"
      },
      {
        "id": "comp-463",
        "label": "WeddingProgressReport",
        "type": "component",
        "file": "src/components/couples/reporting/WeddingProgressReport.tsx"
      },
      {
        "id": "comp-464",
        "label": "ViralGrowthPrompts",
        "type": "component",
        "file": "src/components/couples/sharing/ViralGrowthPrompts.tsx"
      },
      {
        "id": "comp-465",
        "label": "CircularProgress",
        "type": "component",
        "file": "src/components/couples/visualization/CircularProgress.tsx"
      },
      {
        "id": "comp-466",
        "label": "AdvancedInterventionManager",
        "type": "component",
        "file": "src/components/customer-success/AdvancedInterventionManager.tsx"
      },
      {
        "id": "comp-467",
        "label": "CustomerSuccessDashboard",
        "type": "component",
        "file": "src/components/customer-success/CustomerSuccessDashboard.tsx"
      },
      {
        "id": "comp-468",
        "label": "DashboardTestSuite",
        "type": "component",
        "file": "src/components/customer-success/DashboardTestSuite.ts"
      },
      {
        "id": "comp-469",
        "label": "EnhancedCustomerSuccessDashboard",
        "type": "component",
        "file": "src/components/customer-success/EnhancedCustomerSuccessDashboard.tsx"
      },
      {
        "id": "comp-470",
        "label": "HealthMetricsVisualization",
        "type": "component",
        "file": "src/components/customer-success/HealthMetricsVisualization.tsx"
      },
      {
        "id": "comp-471",
        "label": "InterventionWorkflowManager",
        "type": "component",
        "file": "src/components/customer-success/InterventionWorkflowManager.tsx"
      },
      {
        "id": "comp-472",
        "label": "OnboardingWorkflowManager",
        "type": "component",
        "file": "src/components/customer-success/OnboardingWorkflowManager.tsx"
      },
      {
        "id": "comp-473",
        "label": "OptimizedCustomerSuccessDashboard",
        "type": "component",
        "file": "src/components/customer-success/OptimizedCustomerSuccessDashboard.tsx"
      },
      {
        "id": "comp-474",
        "label": "SupplierHealthMonitor",
        "type": "component",
        "file": "src/components/customer-success/SupplierHealthMonitor.tsx"
      },
      {
        "id": "comp-475",
        "label": "WeddingSeasonAdjustments",
        "type": "component",
        "file": "src/components/customer-success/WeddingSeasonAdjustments.tsx"
      },
      {
        "id": "comp-476",
        "label": "CustomerHealthDashboard",
        "type": "component",
        "file": "src/components/dashboard/CustomerHealthDashboard.tsx"
      },
      {
        "id": "comp-477",
        "label": "DashboardSkeleton",
        "type": "component",
        "file": "src/components/dashboard/DashboardSkeleton.tsx"
      },
      {
        "id": "comp-478",
        "label": "ExecutiveDashboard",
        "type": "component",
        "file": "src/components/dashboard/ExecutiveDashboard.tsx"
      },
      {
        "id": "comp-479",
        "label": "HealthExportButton",
        "type": "component",
        "file": "src/components/dashboard/HealthExportButton.tsx"
      },
      {
        "id": "comp-480",
        "label": "HealthTrendChart",
        "type": "component",
        "file": "src/components/dashboard/HealthTrendChart.tsx"
      },
      {
        "id": "comp-481",
        "label": "InterventionActions",
        "type": "component",
        "file": "src/components/dashboard/InterventionActions.tsx"
      },
      {
        "id": "comp-482",
        "label": "QuickActions",
        "type": "component",
        "file": "src/components/dashboard/QuickActions.tsx"
      },
      {
        "id": "comp-483",
        "label": "RealtimeStatusPanel",
        "type": "component",
        "file": "src/components/dashboard/RealtimeStatusPanel.tsx"
      },
      {
        "id": "comp-484",
        "label": "RiskLevelFilter",
        "type": "component",
        "file": "src/components/dashboard/RiskLevelFilter.tsx"
      },
      {
        "id": "comp-485",
        "label": "EnhancedBudgetTracker",
        "type": "component",
        "file": "src/components/dashboard/budget/EnhancedBudgetTracker.tsx"
      },
      {
        "id": "comp-486",
        "label": "DocumentStatus",
        "type": "component",
        "file": "src/components/dashboard/realtime/DocumentStatus.tsx"
      },
      {
        "id": "comp-487",
        "label": "RealtimeActivityFeed",
        "type": "component",
        "file": "src/components/dashboard/realtime/RealtimeActivityFeed.tsx"
      },
      {
        "id": "comp-488",
        "label": "RealtimeBudgetTracker",
        "type": "component",
        "file": "src/components/dashboard/realtime/RealtimeBudgetTracker.tsx"
      },
      {
        "id": "comp-489",
        "label": "RealtimeTimeline",
        "type": "component",
        "file": "src/components/dashboard/realtime/RealtimeTimeline.tsx"
      },
      {
        "id": "comp-490",
        "label": "VendorPresence",
        "type": "component",
        "file": "src/components/dashboard/realtime/VendorPresence.tsx"
      },
      {
        "id": "comp-491",
        "label": "ContentConfigPanel",
        "type": "component",
        "file": "src/components/dashboard-builder/ContentConfigPanel.tsx"
      },
      {
        "id": "comp-492",
        "label": "SectionConfigEditor",
        "type": "component",
        "file": "src/components/dashboard-builder/SectionConfigEditor.tsx"
      },
      {
        "id": "comp-493",
        "label": "VisibilityRulesBuilder",
        "type": "component",
        "file": "src/components/dashboard-builder/VisibilityRulesBuilder.tsx"
      },
      {
        "id": "comp-494",
        "label": "ClientDashboardRenderer",
        "type": "component",
        "file": "src/components/dashboard-templates/ClientDashboardRenderer.tsx"
      },
      {
        "id": "comp-495",
        "label": "DashboardTemplateBuilder",
        "type": "component",
        "file": "src/components/dashboard-templates/DashboardTemplateBuilder.tsx"
      },
      {
        "id": "comp-496",
        "label": "ActivityFeedSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/ActivityFeedSection.tsx"
      },
      {
        "id": "comp-497",
        "label": "BudgetTrackerSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/BudgetTrackerSection.tsx"
      },
      {
        "id": "comp-498",
        "label": "CommunicationSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/CommunicationSection.tsx"
      },
      {
        "id": "comp-499",
        "label": "DocumentsSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/DocumentsSection.tsx"
      },
      {
        "id": "comp-500",
        "label": "GallerySection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/GallerySection.tsx"
      },
      {
        "id": "comp-501",
        "label": "GuestListSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/GuestListSection.tsx"
      },
      {
        "id": "comp-502",
        "label": "NotesSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/NotesSection.tsx"
      },
      {
        "id": "comp-503",
        "label": "TaskManagerSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/TaskManagerSection.tsx"
      },
      {
        "id": "comp-504",
        "label": "TimelineSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/TimelineSection.tsx"
      },
      {
        "id": "comp-505",
        "label": "VendorPortfolioSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/VendorPortfolioSection.tsx"
      },
      {
        "id": "comp-506",
        "label": "WelcomeSection",
        "type": "component",
        "file": "src/components/dashboard-templates/sections/WelcomeSection.tsx"
      },
      {
        "id": "comp-507",
        "label": "TouchPerformanceDebugger",
        "type": "component",
        "file": "src/components/debug/TouchPerformanceDebugger.tsx"
      },
      {
        "id": "comp-508",
        "label": "DemoAssetsProvider",
        "type": "component",
        "file": "src/components/demo/DemoAssetsProvider.tsx"
      },
      {
        "id": "comp-509",
        "label": "DemoBanner",
        "type": "component",
        "file": "src/components/demo/DemoBanner.tsx"
      },
      {
        "id": "comp-510",
        "label": "ScreenshotModeToggle",
        "type": "component",
        "file": "src/components/demo/ScreenshotModeToggle.tsx"
      },
      {
        "id": "comp-511",
        "label": "SupplierTiles",
        "type": "component",
        "file": "src/components/demo/SupplierTiles.tsx"
      },
      {
        "id": "comp-512",
        "label": "RouteDocumentationViewer",
        "type": "component",
        "file": "src/components/developer/RouteDocumentationViewer.tsx"
      },
      {
        "id": "comp-513",
        "label": "PortfolioGallery",
        "type": "component",
        "file": "src/components/directory/PortfolioGallery.tsx"
      },
      {
        "id": "comp-514",
        "label": "AestheticPreferenceSliders",
        "type": "component",
        "file": "src/components/directory/style/AestheticPreferenceSliders.tsx"
      },
      {
        "id": "comp-515",
        "label": "ColorPalettePicker",
        "type": "component",
        "file": "src/components/directory/style/ColorPalettePicker.tsx"
      },
      {
        "id": "comp-516",
        "label": "StyleCategorySelector",
        "type": "component",
        "file": "src/components/directory/style/StyleCategorySelector.tsx"
      },
      {
        "id": "comp-517",
        "label": "StyleDiscoveryWizard",
        "type": "component",
        "file": "src/components/directory/style/StyleDiscoveryWizard.tsx"
      },
      {
        "id": "comp-518",
        "label": "StyleMatchResults",
        "type": "component",
        "file": "src/components/directory/style/StyleMatchResults.tsx"
      },
      {
        "id": "comp-519",
        "label": "index",
        "type": "component",
        "file": "src/components/directory/style/index.ts"
      },
      {
        "id": "comp-520",
        "label": "DocumentUploader",
        "type": "component",
        "file": "src/components/directory/verification/DocumentUploader.tsx"
      },
      {
        "id": "comp-521",
        "label": "TrustIndicator",
        "type": "component",
        "file": "src/components/directory/verification/TrustIndicator.tsx"
      },
      {
        "id": "comp-522",
        "label": "VerificationBadges",
        "type": "component",
        "file": "src/components/directory/verification/VerificationBadges.tsx"
      },
      {
        "id": "comp-523",
        "label": "VerificationDashboard",
        "type": "component",
        "file": "src/components/directory/verification/VerificationDashboard.tsx"
      },
      {
        "id": "comp-524",
        "label": "VerificationModal",
        "type": "component",
        "file": "src/components/directory/verification/VerificationModal.tsx"
      },
      {
        "id": "comp-525",
        "label": "index",
        "type": "component",
        "file": "src/components/directory/verification/index.ts"
      },
      {
        "id": "comp-526",
        "label": "AccessControlPanel",
        "type": "component",
        "file": "src/components/documents/AccessControlPanel.tsx"
      },
      {
        "id": "comp-527",
        "label": "DocumentLibrary",
        "type": "component",
        "file": "src/components/documents/DocumentLibrary.tsx"
      },
      {
        "id": "comp-528",
        "label": "DocumentManager",
        "type": "component",
        "file": "src/components/documents/DocumentManager.tsx"
      },
      {
        "id": "comp-529",
        "label": "DocumentUploader",
        "type": "component",
        "file": "src/components/documents/DocumentUploader.tsx"
      },
      {
        "id": "comp-530",
        "label": "ExpiryTracker",
        "type": "component",
        "file": "src/components/documents/ExpiryTracker.tsx"
      },
      {
        "id": "comp-531",
        "label": "DNSInstructions",
        "type": "component",
        "file": "src/components/domains/DNSInstructions.tsx"
      },
      {
        "id": "comp-532",
        "label": "DomainManager",
        "type": "component",
        "file": "src/components/domains/DomainManager.tsx"
      },
      {
        "id": "comp-533",
        "label": "DomainPreview",
        "type": "component",
        "file": "src/components/domains/DomainPreview.tsx"
      },
      {
        "id": "comp-534",
        "label": "DomainVerification",
        "type": "component",
        "file": "src/components/domains/DomainVerification.tsx"
      },
      {
        "id": "comp-535",
        "label": "SSLStatus",
        "type": "component",
        "file": "src/components/domains/SSLStatus.tsx"
      },
      {
        "id": "comp-536",
        "label": "DomainManager.test",
        "type": "component",
        "file": "src/components/domains/__tests__/DomainManager.test.tsx"
      },
      {
        "id": "comp-537",
        "label": "domain-playwright.test",
        "type": "component",
        "file": "src/components/domains/__tests__/domain-playwright.test.ts"
      },
      {
        "id": "comp-538",
        "label": "EncryptionKeyManager",
        "type": "component",
        "file": "src/components/encryption/EncryptionKeyManager.tsx"
      },
      {
        "id": "comp-539",
        "label": "EncryptionStatusIndicator",
        "type": "component",
        "file": "src/components/encryption/EncryptionStatusIndicator.tsx"
      },
      {
        "id": "comp-540",
        "label": "SecureDataDisplay",
        "type": "component",
        "file": "src/components/encryption/SecureDataDisplay.tsx"
      },
      {
        "id": "comp-541",
        "label": "DeploymentSyncDashboard",
        "type": "component",
        "file": "src/components/environment-variables/DeploymentSyncDashboard.tsx"
      },
      {
        "id": "comp-542",
        "label": "EnvironmentHealthCard",
        "type": "component",
        "file": "src/components/environment-variables/EnvironmentHealthCard.tsx"
      },
      {
        "id": "comp-543",
        "label": "EnvironmentVariablesManagement",
        "type": "component",
        "file": "src/components/environment-variables/EnvironmentVariablesManagement.tsx"
      },
      {
        "id": "comp-544",
        "label": "EnvironmentVariablesManagementOptimized",
        "type": "component",
        "file": "src/components/environment-variables/EnvironmentVariablesManagementOptimized.tsx"
      },
      {
        "id": "comp-545",
        "label": "VariableConfigurationForm",
        "type": "component",
        "file": "src/components/environment-variables/VariableConfigurationForm.tsx"
      },
      {
        "id": "comp-546",
        "label": "VariableSecurityCenter",
        "type": "component",
        "file": "src/components/environment-variables/VariableSecurityCenter.tsx"
      },
      {
        "id": "comp-547",
        "label": "VariablesList",
        "type": "component",
        "file": "src/components/environment-variables/VariablesList.tsx"
      },
      {
        "id": "comp-548",
        "label": "EnvironmentHealthCard.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/EnvironmentHealthCard.test.tsx"
      },
      {
        "id": "comp-549",
        "label": "EnvironmentVariablesManagement.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/EnvironmentVariablesManagement.test.tsx"
      },
      {
        "id": "comp-550",
        "label": "VariableConfigurationForm.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/VariableConfigurationForm.test.tsx"
      },
      {
        "id": "comp-551",
        "label": "VariablesList.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/VariablesList.test.tsx"
      },
      {
        "id": "comp-552",
        "label": "accessibility.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/accessibility.test.tsx"
      },
      {
        "id": "comp-553",
        "label": "deployment-sync-integration.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/integration/deployment-sync-integration.test.tsx"
      },
      {
        "id": "comp-554",
        "label": "mobile-integration.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/integration/mobile-integration.test.tsx"
      },
      {
        "id": "comp-555",
        "label": "realtime-integration.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/integration/realtime-integration.test.tsx"
      },
      {
        "id": "comp-556",
        "label": "setup",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/integration/setup.ts"
      },
      {
        "id": "comp-557",
        "label": "performance.test",
        "type": "component",
        "file": "src/components/environment-variables/__tests__/performance.test.tsx"
      },
      {
        "id": "comp-558",
        "label": "MobileEnvironmentVariablesManager",
        "type": "component",
        "file": "src/components/environment-variables/mobile/MobileEnvironmentVariablesManager.tsx"
      },
      {
        "id": "comp-559",
        "label": "MobileHealthOverview",
        "type": "component",
        "file": "src/components/environment-variables/mobile/MobileHealthOverview.tsx"
      },
      {
        "id": "comp-560",
        "label": "MobileVariableCard",
        "type": "component",
        "file": "src/components/environment-variables/mobile/MobileVariableCard.tsx"
      },
      {
        "id": "comp-561",
        "label": "MobileVariableForm",
        "type": "component",
        "file": "src/components/environment-variables/mobile/MobileVariableForm.tsx"
      },
      {
        "id": "comp-562",
        "label": "accessibility",
        "type": "component",
        "file": "src/components/environment-variables/utils/accessibility.ts"
      },
      {
        "id": "comp-563",
        "label": "performance",
        "type": "component",
        "file": "src/components/environment-variables/utils/performance.ts"
      },
      {
        "id": "comp-564",
        "label": "ErrorRecoveryActions",
        "type": "component",
        "file": "src/components/error/ErrorRecoveryActions.tsx"
      },
      {
        "id": "comp-565",
        "label": "UserFriendlyError",
        "type": "component",
        "file": "src/components/error/UserFriendlyError.tsx"
      },
      {
        "id": "comp-566",
        "label": "UserFriendlyError.test",
        "type": "component",
        "file": "src/components/error/__tests__/UserFriendlyError.test.tsx"
      },
      {
        "id": "comp-567",
        "label": "ErrorAnalyticsDashboard",
        "type": "component",
        "file": "src/components/error/monitoring/ErrorAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-568",
        "label": "ErrorBoundary",
        "type": "component",
        "file": "src/components/error-boundary/ErrorBoundary.tsx"
      },
      {
        "id": "comp-569",
        "label": "ErrorFallbackInterface",
        "type": "component",
        "file": "src/components/error-boundary/ErrorFallbackInterface.tsx"
      },
      {
        "id": "comp-570",
        "label": "WeddingErrorBoundary",
        "type": "component",
        "file": "src/components/error-boundary/WeddingErrorBoundary.tsx"
      },
      {
        "id": "comp-571",
        "label": "ErrorBoundary.test",
        "type": "component",
        "file": "src/components/error-boundary/__tests__/ErrorBoundary.test.tsx"
      },
      {
        "id": "comp-572",
        "label": "error-boundary",
        "type": "component",
        "file": "src/components/error-boundary.tsx"
      },
      {
        "id": "comp-573",
        "label": "ExecutiveDashboard",
        "type": "component",
        "file": "src/components/executive/ExecutiveDashboard.tsx"
      },
      {
        "id": "comp-574",
        "label": "GrowthAnalytics",
        "type": "component",
        "file": "src/components/executive/GrowthAnalytics.tsx"
      },
      {
        "id": "comp-575",
        "label": "KPIDashboard",
        "type": "component",
        "file": "src/components/executive/KPIDashboard.tsx"
      },
      {
        "id": "comp-576",
        "label": "MarketInsights",
        "type": "component",
        "file": "src/components/executive/MarketInsights.tsx"
      },
      {
        "id": "comp-577",
        "label": "RevenueMetrics",
        "type": "component",
        "file": "src/components/executive/RevenueMetrics.tsx"
      },
      {
        "id": "comp-578",
        "label": "SupplierMetrics",
        "type": "component",
        "file": "src/components/executive/SupplierMetrics.tsx"
      },
      {
        "id": "comp-579",
        "label": "useExecutiveData",
        "type": "component",
        "file": "src/components/executive/useExecutiveData.ts"
      },
      {
        "id": "comp-580",
        "label": "FAQAnalytics",
        "type": "component",
        "file": "src/components/faq/FAQAnalytics.tsx"
      },
      {
        "id": "comp-581",
        "label": "FAQCategoryManager",
        "type": "component",
        "file": "src/components/faq/FAQCategoryManager.tsx"
      },
      {
        "id": "comp-582",
        "label": "FAQDisplay",
        "type": "component",
        "file": "src/components/faq/FAQDisplay.tsx"
      },
      {
        "id": "comp-583",
        "label": "FAQEditor",
        "type": "component",
        "file": "src/components/faq/FAQEditor.tsx"
      },
      {
        "id": "comp-584",
        "label": "FAQExtractionDashboard",
        "type": "component",
        "file": "src/components/faq/FAQExtractionDashboard.tsx"
      },
      {
        "id": "comp-585",
        "label": "FAQExtractionReview",
        "type": "component",
        "file": "src/components/faq/FAQExtractionReview.tsx"
      },
      {
        "id": "comp-586",
        "label": "FAQExtractionWizard",
        "type": "component",
        "file": "src/components/faq/FAQExtractionWizard.tsx"
      },
      {
        "id": "comp-587",
        "label": "FAQManager",
        "type": "component",
        "file": "src/components/faq/FAQManager.tsx"
      },
      {
        "id": "comp-588",
        "label": "FAQReviewQueue",
        "type": "component",
        "file": "src/components/faq/FAQReviewQueue.tsx"
      },
      {
        "id": "comp-589",
        "label": "FeedbackForm",
        "type": "component",
        "file": "src/components/feedback/FeedbackForm.tsx"
      },
      {
        "id": "comp-590",
        "label": "FeedbackList",
        "type": "component",
        "file": "src/components/feedback/FeedbackList.tsx"
      },
      {
        "id": "comp-591",
        "label": "FeedbackModal",
        "type": "component",
        "file": "src/components/feedback/FeedbackModal.tsx"
      },
      {
        "id": "comp-592",
        "label": "AdvancedFileUpload",
        "type": "component",
        "file": "src/components/file-management/AdvancedFileUpload.tsx"
      },
      {
        "id": "comp-593",
        "label": "FileAnalyticsDashboard",
        "type": "component",
        "file": "src/components/file-management/FileAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-594",
        "label": "FileSecurityPanel",
        "type": "component",
        "file": "src/components/file-management/FileSecurityPanel.tsx"
      },
      {
        "id": "comp-595",
        "label": "AdvancedFileUpload.test",
        "type": "component",
        "file": "src/components/file-management/__tests__/AdvancedFileUpload.test.tsx"
      },
      {
        "id": "comp-596",
        "label": "FileManagementDashboard.test",
        "type": "component",
        "file": "src/components/file-management/__tests__/FileManagementDashboard.test.tsx"
      },
      {
        "id": "comp-597",
        "label": "FileSecurityPanel.test",
        "type": "component",
        "file": "src/components/file-management/__tests__/FileSecurityPanel.test.tsx"
      },
      {
        "id": "comp-598",
        "label": "setup",
        "type": "component",
        "file": "src/components/file-management/__tests__/setup.ts"
      },
      {
        "id": "comp-599",
        "label": "ArrangementPlanner",
        "type": "component",
        "file": "src/components/florist/ArrangementPlanner.tsx"
      },
      {
        "id": "comp-600",
        "label": "ColorPaletteGenerator",
        "type": "component",
        "file": "src/components/florist/ColorPaletteGenerator.tsx"
      },
      {
        "id": "comp-601",
        "label": "FloristIntelligence",
        "type": "component",
        "file": "src/components/florist/FloristIntelligence.tsx"
      },
      {
        "id": "comp-602",
        "label": "FlowerSearch",
        "type": "component",
        "file": "src/components/florist/FlowerSearch.tsx"
      },
      {
        "id": "comp-603",
        "label": "SustainabilityAnalyzer",
        "type": "component",
        "file": "src/components/florist/SustainabilityAnalyzer.tsx"
      },
      {
        "id": "comp-604",
        "label": "FieldPalette.test",
        "type": "component",
        "file": "src/components/form-builder/__tests__/FieldPalette.test.tsx"
      },
      {
        "id": "comp-605",
        "label": "FormBuilder.integration.test",
        "type": "component",
        "file": "src/components/form-builder/__tests__/FormBuilder.integration.test.tsx"
      },
      {
        "id": "comp-606",
        "label": "FormBuilderCanvas.test",
        "type": "component",
        "file": "src/components/form-builder/__tests__/FormBuilderCanvas.test.tsx"
      },
      {
        "id": "comp-607",
        "label": "FormPreview.test",
        "type": "component",
        "file": "src/components/form-builder/__tests__/FormPreview.test.tsx"
      },
      {
        "id": "comp-608",
        "label": "WeddingDateField.test",
        "type": "component",
        "file": "src/components/form-builder/__tests__/WeddingDateField.test.tsx"
      },
      {
        "id": "comp-609",
        "label": "setup",
        "type": "component",
        "file": "src/components/form-builder/__tests__/setup.ts"
      },
      {
        "id": "comp-610",
        "label": "CanvasToolbar",
        "type": "component",
        "file": "src/components/form-builder/canvas/CanvasToolbar.tsx"
      },
      {
        "id": "comp-611",
        "label": "DraggableFieldOverlay",
        "type": "component",
        "file": "src/components/form-builder/canvas/DraggableFieldOverlay.tsx"
      },
      {
        "id": "comp-612",
        "label": "EmptyCanvasState",
        "type": "component",
        "file": "src/components/form-builder/canvas/EmptyCanvasState.tsx"
      },
      {
        "id": "comp-613",
        "label": "FormBuilderCanvas",
        "type": "component",
        "file": "src/components/form-builder/canvas/FormBuilderCanvas.tsx"
      },
      {
        "id": "comp-614",
        "label": "FormFieldPreview",
        "type": "component",
        "file": "src/components/form-builder/canvas/FormFieldPreview.tsx"
      },
      {
        "id": "comp-615",
        "label": "SortableFormField",
        "type": "component",
        "file": "src/components/form-builder/canvas/SortableFormField.tsx"
      },
      {
        "id": "comp-616",
        "label": "FieldConfigPanel",
        "type": "component",
        "file": "src/components/form-builder/config/FieldConfigPanel.tsx"
      },
      {
        "id": "comp-617",
        "label": "BudgetRangeField",
        "type": "component",
        "file": "src/components/form-builder/fields/BudgetRangeField.tsx"
      },
      {
        "id": "comp-618",
        "label": "GuestCountField",
        "type": "component",
        "file": "src/components/form-builder/fields/GuestCountField.tsx"
      },
      {
        "id": "comp-619",
        "label": "VenueField",
        "type": "component",
        "file": "src/components/form-builder/fields/VenueField.tsx"
      },
      {
        "id": "comp-620",
        "label": "WeddingDateField",
        "type": "component",
        "file": "src/components/form-builder/fields/WeddingDateField.tsx"
      },
      {
        "id": "comp-621",
        "label": "FieldPalette",
        "type": "component",
        "file": "src/components/form-builder/palette/FieldPalette.tsx"
      },
      {
        "id": "comp-622",
        "label": "FormPreview",
        "type": "component",
        "file": "src/components/form-builder/preview/FormPreview.tsx"
      },
      {
        "id": "comp-623",
        "label": "AutoPopulateIndicator",
        "type": "component",
        "file": "src/components/forms/AutoPopulateIndicator.tsx"
      },
      {
        "id": "comp-624",
        "label": "AutoPopulationProvider",
        "type": "component",
        "file": "src/components/forms/AutoPopulationProvider.tsx"
      },
      {
        "id": "comp-625",
        "label": "AutoSaveFormWrapper",
        "type": "component",
        "file": "src/components/forms/AutoSaveFormWrapper.tsx"
      },
      {
        "id": "comp-626",
        "label": "ClientFormSubmission",
        "type": "component",
        "file": "src/components/forms/ClientFormSubmission.tsx"
      },
      {
        "id": "comp-627",
        "label": "CollaborativeFormBuilder",
        "type": "component",
        "file": "src/components/forms/CollaborativeFormBuilder.tsx"
      },
      {
        "id": "comp-628",
        "label": "CoreFieldsPanel",
        "type": "component",
        "file": "src/components/forms/CoreFieldsPanel.tsx"
      },
      {
        "id": "comp-629",
        "label": "DynamicFormBuilder",
        "type": "component",
        "file": "src/components/forms/DynamicFormBuilder.tsx"
      },
      {
        "id": "comp-630",
        "label": "EnhancedFormBuilder",
        "type": "component",
        "file": "src/components/forms/EnhancedFormBuilder.tsx"
      },
      {
        "id": "comp-631",
        "label": "FieldConfidenceScore",
        "type": "component",
        "file": "src/components/forms/FieldConfidenceScore.tsx"
      },
      {
        "id": "comp-632",
        "label": "FieldEditor",
        "type": "component",
        "file": "src/components/forms/FieldEditor.tsx"
      },
      {
        "id": "comp-633",
        "label": "FieldIntegration",
        "type": "component",
        "file": "src/components/forms/FieldIntegration.tsx"
      },
      {
        "id": "comp-634",
        "label": "FieldManagementDemo",
        "type": "component",
        "file": "src/components/forms/FieldManagementDemo.tsx"
      },
      {
        "id": "comp-635",
        "label": "FieldManager",
        "type": "component",
        "file": "src/components/forms/FieldManager.tsx"
      },
      {
        "id": "comp-636",
        "label": "FieldPalette",
        "type": "component",
        "file": "src/components/forms/FieldPalette.tsx"
      },
      {
        "id": "comp-637",
        "label": "FieldValidator",
        "type": "component",
        "file": "src/components/forms/FieldValidator.tsx"
      },
      {
        "id": "comp-638",
        "label": "FormBuilder",
        "type": "component",
        "file": "src/components/forms/FormBuilder.tsx"
      },
      {
        "id": "comp-639",
        "label": "FormCanvas",
        "type": "component",
        "file": "src/components/forms/FormCanvas.tsx"
      },
      {
        "id": "comp-640",
        "label": "FormPreview",
        "type": "component",
        "file": "src/components/forms/FormPreview.tsx"
      },
      {
        "id": "comp-641",
        "label": "LazyFormBuilder",
        "type": "component",
        "file": "src/components/forms/LazyFormBuilder.tsx"
      },
      {
        "id": "comp-642",
        "label": "OptimizedFieldPalette",
        "type": "component",
        "file": "src/components/forms/OptimizedFieldPalette.tsx"
      },
      {
        "id": "comp-643",
        "label": "OptimizedFormBuilder",
        "type": "component",
        "file": "src/components/forms/OptimizedFormBuilder.tsx"
      },
      {
        "id": "comp-644",
        "label": "OptimizedFormCanvas",
        "type": "component",
        "file": "src/components/forms/OptimizedFormCanvas.tsx"
      },
      {
        "id": "comp-645",
        "label": "PasswordProtectedFormAccess",
        "type": "component",
        "file": "src/components/forms/PasswordProtectedFormAccess.tsx"
      },
      {
        "id": "comp-646",
        "label": "PerformanceOptimizedFormBuilder",
        "type": "component",
        "file": "src/components/forms/PerformanceOptimizedFormBuilder.tsx"
      },
      {
        "id": "comp-647",
        "label": "PopulatedFormField",
        "type": "component",
        "file": "src/components/forms/PopulatedFormField.tsx"
      },
      {
        "id": "comp-648",
        "label": "PopulationStatusBanner",
        "type": "component",
        "file": "src/components/forms/PopulationStatusBanner.tsx"
      },
      {
        "id": "comp-649",
        "label": "ProgressiveSavingProvider",
        "type": "component",
        "file": "src/components/forms/ProgressiveSavingProvider.tsx"
      },
      {
        "id": "comp-650",
        "label": "RealtimeFormProvider",
        "type": "component",
        "file": "src/components/forms/RealtimeFormProvider.tsx"
      },
      {
        "id": "comp-651",
        "label": "VirtualizedFormCanvas",
        "type": "component",
        "file": "src/components/forms/VirtualizedFormCanvas.tsx"
      },
      {
        "id": "comp-652",
        "label": "DynamicFormBuilder.test",
        "type": "component",
        "file": "src/components/forms/__tests__/DynamicFormBuilder.test.tsx"
      },
      {
        "id": "comp-653",
        "label": "EmailTemplateEditor.test",
        "type": "component",
        "file": "src/components/forms/__tests__/EmailTemplateEditor.test.tsx"
      },
      {
        "id": "comp-654",
        "label": "EmailTemplateLibrary.test",
        "type": "component",
        "file": "src/components/forms/__tests__/EmailTemplateLibrary.test.tsx"
      },
      {
        "id": "comp-655",
        "label": "FieldAccessibilityTester",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldAccessibilityTester.tsx"
      },
      {
        "id": "comp-656",
        "label": "FieldDataIntegrityTester",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldDataIntegrityTester.tsx"
      },
      {
        "id": "comp-657",
        "label": "FieldIntegration.test",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldIntegration.test.tsx"
      },
      {
        "id": "comp-658",
        "label": "FieldIntegrationTester",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldIntegrationTester.tsx"
      },
      {
        "id": "comp-659",
        "label": "FieldManager.test",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldManager.test.tsx"
      },
      {
        "id": "comp-660",
        "label": "FieldOptionsTester",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldOptionsTester.tsx"
      },
      {
        "id": "comp-661",
        "label": "FieldPerformanceTester",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldPerformanceTester.tsx"
      },
      {
        "id": "comp-662",
        "label": "FieldTests",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldTests.tsx"
      },
      {
        "id": "comp-663",
        "label": "FieldTypeTester",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldTypeTester.tsx"
      },
      {
        "id": "comp-664",
        "label": "FieldValidationTester",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldValidationTester.tsx"
      },
      {
        "id": "comp-665",
        "label": "FieldValidator.test",
        "type": "component",
        "file": "src/components/forms/__tests__/FieldValidator.test.tsx"
      },
      {
        "id": "comp-666",
        "label": "TemplateBulkActions.test",
        "type": "component",
        "file": "src/components/forms/__tests__/TemplateBulkActions.test.tsx"
      },
      {
        "id": "comp-667",
        "label": "TemplateCard.test",
        "type": "component",
        "file": "src/components/forms/__tests__/TemplateCard.test.tsx"
      },
      {
        "id": "comp-668",
        "label": "TemplateFilters.test",
        "type": "component",
        "file": "src/components/forms/__tests__/TemplateFilters.test.tsx"
      },
      {
        "id": "comp-669",
        "label": "AutomatedWorkflows",
        "type": "component",
        "file": "src/components/forms/responses/AutomatedWorkflows.tsx"
      },
      {
        "id": "comp-670",
        "label": "ResponseAnalyticsDashboard",
        "type": "component",
        "file": "src/components/forms/responses/ResponseAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-671",
        "label": "ResponseFilters",
        "type": "component",
        "file": "src/components/forms/responses/ResponseFilters.tsx"
      },
      {
        "id": "comp-672",
        "label": "ResponseNotifications",
        "type": "component",
        "file": "src/components/forms/responses/ResponseNotifications.tsx"
      },
      {
        "id": "comp-673",
        "label": "ConsentBanner",
        "type": "component",
        "file": "src/components/gdpr/ConsentBanner.tsx"
      },
      {
        "id": "comp-674",
        "label": "ConsentManager",
        "type": "component",
        "file": "src/components/gdpr/ConsentManager.tsx"
      },
      {
        "id": "comp-675",
        "label": "CookieConsentBanner",
        "type": "component",
        "file": "src/components/gdpr/CookieConsentBanner.tsx"
      },
      {
        "id": "comp-676",
        "label": "DataRequestForm",
        "type": "component",
        "file": "src/components/gdpr/DataRequestForm.tsx"
      },
      {
        "id": "comp-677",
        "label": "GDPRIntelligenceDashboard",
        "type": "component",
        "file": "src/components/gdpr/GDPRIntelligenceDashboard.tsx"
      },
      {
        "id": "comp-678",
        "label": "PrivacyPolicyModal",
        "type": "component",
        "file": "src/components/gdpr/PrivacyPolicyModal.tsx"
      },
      {
        "id": "comp-679",
        "label": "ReferralProgramBuilder",
        "type": "component",
        "file": "src/components/growth/ReferralProgramBuilder.tsx"
      },
      {
        "id": "comp-680",
        "label": "AddGuestModal",
        "type": "component",
        "file": "src/components/guests/AddGuestModal.tsx"
      },
      {
        "id": "comp-681",
        "label": "AllergenWarnings",
        "type": "component",
        "file": "src/components/guests/AllergenWarnings.tsx"
      },
      {
        "id": "comp-682",
        "label": "BudgetIntegration",
        "type": "component",
        "file": "src/components/guests/BudgetIntegration.tsx"
      },
      {
        "id": "comp-683",
        "label": "BulkOperationsModal",
        "type": "component",
        "file": "src/components/guests/BulkOperationsModal.tsx"
      },
      {
        "id": "comp-684",
        "label": "BulkSelectionBar",
        "type": "component",
        "file": "src/components/guests/BulkSelectionBar.tsx"
      },
      {
        "id": "comp-685",
        "label": "ConflictDetectionPanel",
        "type": "component",
        "file": "src/components/guests/ConflictDetectionPanel.tsx"
      },
      {
        "id": "comp-686",
        "label": "DietaryMatrix",
        "type": "component",
        "file": "src/components/guests/DietaryMatrix.tsx"
      },
      {
        "id": "comp-687",
        "label": "DietaryRequirementsForm",
        "type": "component",
        "file": "src/components/guests/DietaryRequirementsForm.tsx"
      },
      {
        "id": "comp-688",
        "label": "DietaryTracker",
        "type": "component",
        "file": "src/components/guests/DietaryTracker.tsx"
      },
      {
        "id": "comp-689",
        "label": "EnhancedDietaryTracker",
        "type": "component",
        "file": "src/components/guests/EnhancedDietaryTracker.tsx"
      },
      {
        "id": "comp-690",
        "label": "GroupPriorityManager",
        "type": "component",
        "file": "src/components/guests/GroupPriorityManager.tsx"
      },
      {
        "id": "comp-691",
        "label": "GuestAnalyticsDashboard",
        "type": "component",
        "file": "src/components/guests/GuestAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-692",
        "label": "GuestCards",
        "type": "component",
        "file": "src/components/guests/GuestCards.tsx"
      },
      {
        "id": "comp-693",
        "label": "GuestExportModal",
        "type": "component",
        "file": "src/components/guests/GuestExportModal.tsx"
      },
      {
        "id": "comp-694",
        "label": "GuestFilters",
        "type": "component",
        "file": "src/components/guests/GuestFilters.tsx"
      },
      {
        "id": "comp-695",
        "label": "GuestListBuilder",
        "type": "component",
        "file": "src/components/guests/GuestListBuilder.tsx"
      },
      {
        "id": "comp-696",
        "label": "GuestListLoadingSkeleton",
        "type": "component",
        "file": "src/components/guests/GuestListLoadingSkeleton.tsx"
      },
      {
        "id": "comp-697",
        "label": "GuestListManager",
        "type": "component",
        "file": "src/components/guests/GuestListManager.tsx"
      },
      {
        "id": "comp-698",
        "label": "GuestListManagerIntegrated",
        "type": "component",
        "file": "src/components/guests/GuestListManagerIntegrated.tsx"
      },
      {
        "id": "comp-699",
        "label": "GuestListManagerUntitledUI",
        "type": "component",
        "file": "src/components/guests/GuestListManagerUntitledUI.tsx"
      },
      {
        "id": "comp-700",
        "label": "GuestMessageHistory",
        "type": "component",
        "file": "src/components/guests/GuestMessageHistory.tsx"
      },
      {
        "id": "comp-701",
        "label": "GuestSelector",
        "type": "component",
        "file": "src/components/guests/GuestSelector.tsx"
      },
      {
        "id": "comp-702",
        "label": "GuestTable",
        "type": "component",
        "file": "src/components/guests/GuestTable.tsx"
      },
      {
        "id": "comp-703",
        "label": "HouseholdView",
        "type": "component",
        "file": "src/components/guests/HouseholdView.tsx"
      },
      {
        "id": "comp-704",
        "label": "PhotoGroupBuilder",
        "type": "component",
        "file": "src/components/guests/PhotoGroupBuilder.tsx"
      },
      {
        "id": "comp-705",
        "label": "PhotoGroupCard",
        "type": "component",
        "file": "src/components/guests/PhotoGroupCard.tsx"
      },
      {
        "id": "comp-706",
        "label": "PhotoGroupErrorBoundary",
        "type": "component",
        "file": "src/components/guests/PhotoGroupErrorBoundary.tsx"
      },
      {
        "id": "comp-707",
        "label": "PhotoGroupLoadingSkeleton",
        "type": "component",
        "file": "src/components/guests/PhotoGroupLoadingSkeleton.tsx"
      },
      {
        "id": "comp-708",
        "label": "PhotoGroupManager",
        "type": "component",
        "file": "src/components/guests/PhotoGroupManager.tsx"
      },
      {
        "id": "comp-709",
        "label": "PhotoGroupScheduler",
        "type": "component",
        "file": "src/components/guests/PhotoGroupScheduler.tsx"
      },
      {
        "id": "comp-710",
        "label": "PhotoGroupsManager",
        "type": "component",
        "file": "src/components/guests/PhotoGroupsManager.tsx"
      },
      {
        "id": "comp-711",
        "label": "PhotographerNotesEditor",
        "type": "component",
        "file": "src/components/guests/PhotographerNotesEditor.tsx"
      },
      {
        "id": "comp-712",
        "label": "QuickAddGuest",
        "type": "component",
        "file": "src/components/guests/QuickAddGuest.tsx"
      },
      {
        "id": "comp-713",
        "label": "RSVPIntegration",
        "type": "component",
        "file": "src/components/guests/RSVPIntegration.tsx"
      },
      {
        "id": "comp-714",
        "label": "TaskIntegration",
        "type": "component",
        "file": "src/components/guests/TaskIntegration.tsx"
      },
      {
        "id": "comp-715",
        "label": "WebsiteIntegration",
        "type": "component",
        "file": "src/components/guests/WebsiteIntegration.tsx"
      },
      {
        "id": "comp-716",
        "label": "CompletionStep",
        "type": "component",
        "file": "src/components/guests/import/CompletionStep.tsx"
      },
      {
        "id": "comp-717",
        "label": "FieldMappingStep",
        "type": "component",
        "file": "src/components/guests/import/FieldMappingStep.tsx"
      },
      {
        "id": "comp-718",
        "label": "FileUploadStep",
        "type": "component",
        "file": "src/components/guests/import/FileUploadStep.tsx"
      },
      {
        "id": "comp-719",
        "label": "GuestImportWizard",
        "type": "component",
        "file": "src/components/guests/import/GuestImportWizard.tsx"
      },
      {
        "id": "comp-720",
        "label": "ImportPreviewStep",
        "type": "component",
        "file": "src/components/guests/import/ImportPreviewStep.tsx"
      },
      {
        "id": "comp-721",
        "label": "ProcessingStep",
        "type": "component",
        "file": "src/components/guests/import/ProcessingStep.tsx"
      },
      {
        "id": "comp-722",
        "label": "HelperScheduleTimeline",
        "type": "component",
        "file": "src/components/helpers/HelperScheduleTimeline.tsx"
      },
      {
        "id": "comp-723",
        "label": "RealtimeScheduleManager",
        "type": "component",
        "file": "src/components/helpers/RealtimeScheduleManager.tsx"
      },
      {
        "id": "comp-724",
        "label": "AddressFormLocalizer",
        "type": "component",
        "file": "src/components/i18n/AddressFormLocalizer.tsx"
      },
      {
        "id": "comp-725",
        "label": "CeremonyTypeLocalizer",
        "type": "component",
        "file": "src/components/i18n/CeremonyTypeLocalizer.tsx"
      },
      {
        "id": "comp-726",
        "label": "CurrencyFormatter",
        "type": "component",
        "file": "src/components/i18n/CurrencyFormatter.tsx"
      },
      {
        "id": "comp-727",
        "label": "GiftRegistryLocalizer",
        "type": "component",
        "file": "src/components/i18n/GiftRegistryLocalizer.tsx"
      },
      {
        "id": "comp-728",
        "label": "LanguageSwitcher",
        "type": "component",
        "file": "src/components/i18n/LanguageSwitcher.tsx"
      },
      {
        "id": "comp-729",
        "label": "LocalizedDatePicker",
        "type": "component",
        "file": "src/components/i18n/LocalizedDatePicker.tsx"
      },
      {
        "id": "comp-730",
        "label": "LocalizedWeddingCalendar",
        "type": "component",
        "file": "src/components/i18n/LocalizedWeddingCalendar.tsx"
      },
      {
        "id": "comp-731",
        "label": "MultilingualForm",
        "type": "component",
        "file": "src/components/i18n/MultilingualForm.tsx"
      },
      {
        "id": "comp-732",
        "label": "RTLLayoutProvider",
        "type": "component",
        "file": "src/components/i18n/RTLLayoutProvider.tsx"
      },
      {
        "id": "comp-733",
        "label": "WeddingTraditionSelector",
        "type": "component",
        "file": "src/components/i18n/WeddingTraditionSelector.tsx"
      },
      {
        "id": "comp-734",
        "label": "TeamOptimizationIntegration",
        "type": "component",
        "file": "src/components/integration/TeamOptimizationIntegration.tsx"
      },
      {
        "id": "comp-735",
        "label": "CRMIntegrationCard",
        "type": "component",
        "file": "src/components/integrations/CRMIntegrationCard.tsx"
      },
      {
        "id": "comp-736",
        "label": "CRMIntegrationDashboard",
        "type": "component",
        "file": "src/components/integrations/CRMIntegrationDashboard.tsx"
      },
      {
        "id": "comp-737",
        "label": "CRMProviderWizard",
        "type": "component",
        "file": "src/components/integrations/CRMProviderWizard.tsx"
      },
      {
        "id": "comp-738",
        "label": "FieldMappingInterface",
        "type": "component",
        "file": "src/components/integrations/FieldMappingInterface.tsx"
      },
      {
        "id": "comp-739",
        "label": "IntegrationHealth",
        "type": "component",
        "file": "src/components/integrations/IntegrationHealth.tsx"
      },
      {
        "id": "comp-740",
        "label": "IntegrationHealthDashboard",
        "type": "component",
        "file": "src/components/integrations/IntegrationHealthDashboard.tsx"
      },
      {
        "id": "comp-741",
        "label": "OAuthFlowHandler",
        "type": "component",
        "file": "src/components/integrations/OAuthFlowHandler.tsx"
      },
      {
        "id": "comp-742",
        "label": "SyncStatusMonitor",
        "type": "component",
        "file": "src/components/integrations/SyncStatusMonitor.tsx"
      },
      {
        "id": "comp-743",
        "label": "IntegrationHealthDashboard.test",
        "type": "component",
        "file": "src/components/integrations/__tests__/IntegrationHealthDashboard.test.tsx"
      },
      {
        "id": "comp-744",
        "label": "WeddingIntelligenceDashboard",
        "type": "component",
        "file": "src/components/intelligence/WeddingIntelligenceDashboard.tsx"
      },
      {
        "id": "comp-745",
        "label": "ActionRecommendations",
        "type": "component",
        "file": "src/components/intelligence/predictive/ActionRecommendations.tsx"
      },
      {
        "id": "comp-746",
        "label": "BehaviorPatternAnalytics",
        "type": "component",
        "file": "src/components/intelligence/predictive/BehaviorPatternAnalytics.tsx"
      },
      {
        "id": "comp-747",
        "label": "BookingProbabilityChart",
        "type": "component",
        "file": "src/components/intelligence/predictive/BookingProbabilityChart.tsx"
      },
      {
        "id": "comp-748",
        "label": "ClientIntentWidget",
        "type": "component",
        "file": "src/components/intelligence/predictive/ClientIntentWidget.tsx"
      },
      {
        "id": "comp-749",
        "label": "HistoricalInsights",
        "type": "component",
        "file": "src/components/intelligence/predictive/HistoricalInsights.tsx"
      },
      {
        "id": "comp-750",
        "label": "PredictiveInsightsDashboard",
        "type": "component",
        "file": "src/components/intelligence/predictive/PredictiveInsightsDashboard.tsx"
      },
      {
        "id": "comp-751",
        "label": "RiskAssessmentPanel",
        "type": "component",
        "file": "src/components/intelligence/predictive/RiskAssessmentPanel.tsx"
      },
      {
        "id": "comp-752",
        "label": "JourneyCanvas",
        "type": "component",
        "file": "src/components/journey/JourneyCanvas.tsx"
      },
      {
        "id": "comp-753",
        "label": "CanvasGrid",
        "type": "component",
        "file": "src/components/journey/canvas/CanvasGrid.tsx"
      },
      {
        "id": "comp-754",
        "label": "NodeConnector",
        "type": "component",
        "file": "src/components/journey/canvas/NodeConnector.tsx"
      },
      {
        "id": "comp-755",
        "label": "NodeLibrary",
        "type": "component",
        "file": "src/components/journey/canvas/NodeLibrary.tsx"
      },
      {
        "id": "comp-756",
        "label": "TimelineAnchor",
        "type": "component",
        "file": "src/components/journey/canvas/TimelineAnchor.tsx"
      },
      {
        "id": "comp-757",
        "label": "ConditionalNode",
        "type": "component",
        "file": "src/components/journey/nodes/ConditionalNode.tsx"
      },
      {
        "id": "comp-758",
        "label": "SplitNode",
        "type": "component",
        "file": "src/components/journey/nodes/SplitNode.tsx"
      },
      {
        "id": "comp-759",
        "label": "CanvasToolbar",
        "type": "component",
        "file": "src/components/journey-builder/CanvasToolbar.tsx"
      },
      {
        "id": "comp-760",
        "label": "JourneyCanvas",
        "type": "component",
        "file": "src/components/journey-builder/JourneyCanvas.tsx"
      },
      {
        "id": "comp-761",
        "label": "NodeConfigPanel",
        "type": "component",
        "file": "src/components/journey-builder/NodeConfigPanel.tsx"
      },
      {
        "id": "comp-762",
        "label": "NodePalette",
        "type": "component",
        "file": "src/components/journey-builder/NodePalette.tsx"
      },
      {
        "id": "comp-763",
        "label": "OverflowCanvasToolbar",
        "type": "component",
        "file": "src/components/journey-builder/OverflowCanvasToolbar.tsx"
      },
      {
        "id": "comp-764",
        "label": "OverflowNodePalette",
        "type": "component",
        "file": "src/components/journey-builder/OverflowNodePalette.tsx"
      },
      {
        "id": "comp-765",
        "label": "OverflowTemplateCard",
        "type": "component",
        "file": "src/components/journey-builder/OverflowTemplateCard.tsx"
      },
      {
        "id": "comp-766",
        "label": "TemplatePreviewModal",
        "type": "component",
        "file": "src/components/journey-builder/TemplatePreviewModal.tsx"
      },
      {
        "id": "comp-767",
        "label": "performance.test",
        "type": "component",
        "file": "src/components/journey-builder/__tests__/performance.test.tsx"
      },
      {
        "id": "comp-768",
        "label": "ConditionNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/ConditionNodeConfig.tsx"
      },
      {
        "id": "comp-769",
        "label": "EmailNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/EmailNodeConfig.tsx"
      },
      {
        "id": "comp-770",
        "label": "FormNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/FormNodeConfig.tsx"
      },
      {
        "id": "comp-771",
        "label": "MeetingNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/MeetingNodeConfig.tsx"
      },
      {
        "id": "comp-772",
        "label": "ReferralNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/ReferralNodeConfig.tsx"
      },
      {
        "id": "comp-773",
        "label": "ReviewNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/ReviewNodeConfig.tsx"
      },
      {
        "id": "comp-774",
        "label": "SmsNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/SmsNodeConfig.tsx"
      },
      {
        "id": "comp-775",
        "label": "SplitNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/SplitNodeConfig.tsx"
      },
      {
        "id": "comp-776",
        "label": "TimelineNodeConfig",
        "type": "component",
        "file": "src/components/journey-builder/config/TimelineNodeConfig.tsx"
      },
      {
        "id": "comp-777",
        "label": "useCanvasState",
        "type": "component",
        "file": "src/components/journey-builder/hooks/useCanvasState.ts"
      },
      {
        "id": "comp-778",
        "label": "index",
        "type": "component",
        "file": "src/components/journey-builder/index.ts"
      },
      {
        "id": "comp-779",
        "label": "BaseNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/BaseNode.tsx"
      },
      {
        "id": "comp-780",
        "label": "ConditionNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/ConditionNode.tsx"
      },
      {
        "id": "comp-781",
        "label": "EmailNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/EmailNode.tsx"
      },
      {
        "id": "comp-782",
        "label": "EndNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/EndNode.tsx"
      },
      {
        "id": "comp-783",
        "label": "FormNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/FormNode.tsx"
      },
      {
        "id": "comp-784",
        "label": "MeetingNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/MeetingNode.tsx"
      },
      {
        "id": "comp-785",
        "label": "OverflowBaseNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/OverflowBaseNode.tsx"
      },
      {
        "id": "comp-786",
        "label": "OverflowNodes",
        "type": "component",
        "file": "src/components/journey-builder/nodes/OverflowNodes.tsx"
      },
      {
        "id": "comp-787",
        "label": "ReviewNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/ReviewNode.tsx"
      },
      {
        "id": "comp-788",
        "label": "SplitNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/SplitNode.tsx"
      },
      {
        "id": "comp-789",
        "label": "StartNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/StartNode.tsx"
      },
      {
        "id": "comp-790",
        "label": "TimelineNode",
        "type": "component",
        "file": "src/components/journey-builder/nodes/TimelineNode.tsx"
      },
      {
        "id": "comp-791",
        "label": "JourneyExecutionMonitor",
        "type": "component",
        "file": "src/components/journey-engine/JourneyExecutionMonitor.tsx"
      },
      {
        "id": "comp-792",
        "label": "ArticleDisplay",
        "type": "component",
        "file": "src/components/knowledge-base/ArticleDisplay.tsx"
      },
      {
        "id": "comp-793",
        "label": "ArticleRating",
        "type": "component",
        "file": "src/components/knowledge-base/ArticleRating.tsx"
      },
      {
        "id": "comp-794",
        "label": "ContextualHelpWidget",
        "type": "component",
        "file": "src/components/knowledge-base/ContextualHelpWidget.tsx"
      },
      {
        "id": "comp-795",
        "label": "IntelligentSearchBar",
        "type": "component",
        "file": "src/components/knowledge-base/IntelligentSearchBar.tsx"
      },
      {
        "id": "comp-796",
        "label": "KnowledgeBaseInterface",
        "type": "component",
        "file": "src/components/knowledge-base/KnowledgeBaseInterface.tsx"
      },
      {
        "id": "comp-797",
        "label": "KnowledgeBaseNavigation",
        "type": "component",
        "file": "src/components/knowledge-base/KnowledgeBaseNavigation.tsx"
      },
      {
        "id": "comp-798",
        "label": "SearchResults",
        "type": "component",
        "file": "src/components/knowledge-base/SearchResults.tsx"
      },
      {
        "id": "comp-799",
        "label": "TutorialProgress",
        "type": "component",
        "file": "src/components/knowledge-base/TutorialProgress.tsx"
      },
      {
        "id": "comp-800",
        "label": "LeadScoringCard",
        "type": "component",
        "file": "src/components/leads/LeadScoringCard.tsx"
      },
      {
        "id": "comp-801",
        "label": "StatusProgressionTimeline",
        "type": "component",
        "file": "src/components/leads/StatusProgressionTimeline.tsx"
      },
      {
        "id": "comp-802",
        "label": "shimmer-button",
        "type": "component",
        "file": "src/components/magicui/shimmer-button.tsx"
      },
      {
        "id": "comp-803",
        "label": "shine-border",
        "type": "component",
        "file": "src/components/magicui/shine-border.tsx"
      },
      {
        "id": "comp-804",
        "label": "MaintenancePage",
        "type": "component",
        "file": "src/components/maintenance/MaintenancePage.tsx"
      },
      {
        "id": "comp-805",
        "label": "SupplierLocationMap",
        "type": "component",
        "file": "src/components/maps/SupplierLocationMap.tsx"
      },
      {
        "id": "comp-806",
        "label": "AttributionVisualizer",
        "type": "component",
        "file": "src/components/marketing/AttributionVisualizer.tsx"
      },
      {
        "id": "comp-807",
        "label": "CampaignBuilder",
        "type": "component",
        "file": "src/components/marketing/CampaignBuilder.tsx"
      },
      {
        "id": "comp-808",
        "label": "CampaignDashboard",
        "type": "component",
        "file": "src/components/marketing/CampaignDashboard.tsx"
      },
      {
        "id": "comp-809",
        "label": "MarketingDashboard",
        "type": "component",
        "file": "src/components/marketing/MarketingDashboard.tsx"
      },
      {
        "id": "comp-810",
        "label": "ViralTracker",
        "type": "component",
        "file": "src/components/marketing/ViralTracker.tsx"
      },
      {
        "id": "comp-811",
        "label": "CategoryFilter",
        "type": "component",
        "file": "src/components/marketplace/CategoryFilter.tsx"
      },
      {
        "id": "comp-812",
        "label": "CommissionManagementPanel",
        "type": "component",
        "file": "src/components/marketplace/CommissionManagementPanel.tsx"
      },
      {
        "id": "comp-813",
        "label": "CreatorEarningsTable",
        "type": "component",
        "file": "src/components/marketplace/CreatorEarningsTable.tsx"
      },
      {
        "id": "comp-814",
        "label": "FinancialReportsSection",
        "type": "component",
        "file": "src/components/marketplace/FinancialReportsSection.tsx"
      },
      {
        "id": "comp-815",
        "label": "MarketplaceFilterSidebar",
        "type": "component",
        "file": "src/components/marketplace/MarketplaceFilterSidebar.tsx"
      },
      {
        "id": "comp-816",
        "label": "MarketplaceRevenueMetrics",
        "type": "component",
        "file": "src/components/marketplace/MarketplaceRevenueMetrics.tsx"
      },
      {
        "id": "comp-817",
        "label": "MarketplaceSearchInterface",
        "type": "component",
        "file": "src/components/marketplace/MarketplaceSearchInterface.tsx"
      },
      {
        "id": "comp-818",
        "label": "MarketplaceSearchPage",
        "type": "component",
        "file": "src/components/marketplace/MarketplaceSearchPage.tsx"
      },
      {
        "id": "comp-819",
        "label": "MarketplaceSearchResults",
        "type": "component",
        "file": "src/components/marketplace/MarketplaceSearchResults.tsx"
      },
      {
        "id": "comp-820",
        "label": "MobilePurchaseInterface",
        "type": "component",
        "file": "src/components/marketplace/MobilePurchaseInterface.tsx"
      },
      {
        "id": "comp-821",
        "label": "PurchaseButton",
        "type": "component",
        "file": "src/components/marketplace/PurchaseButton.tsx"
      },
      {
        "id": "comp-822",
        "label": "PurchaseModal",
        "type": "component",
        "file": "src/components/marketplace/PurchaseModal.tsx"
      },
      {
        "id": "comp-823",
        "label": "RevenueChartsPanel",
        "type": "component",
        "file": "src/components/marketplace/RevenueChartsPanel.tsx"
      },
      {
        "id": "comp-824",
        "label": "TemplateCard",
        "type": "component",
        "file": "src/components/marketplace/TemplateCard.tsx"
      },
      {
        "id": "comp-825",
        "label": "ABTestManager",
        "type": "component",
        "file": "src/components/marketplace/creator/analytics/ABTestManager.tsx"
      },
      {
        "id": "comp-826",
        "label": "CreatorAnalyticsDashboard",
        "type": "component",
        "file": "src/components/marketplace/creator/analytics/CreatorAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-827",
        "label": "InsightsPanel",
        "type": "component",
        "file": "src/components/marketplace/creator/analytics/InsightsPanel.tsx"
      },
      {
        "id": "comp-828",
        "label": "RevenueChart",
        "type": "component",
        "file": "src/components/marketplace/creator/analytics/RevenueChart.tsx"
      },
      {
        "id": "comp-829",
        "label": "TemplatePerformanceTable",
        "type": "component",
        "file": "src/components/marketplace/creator/analytics/TemplatePerformanceTable.tsx"
      },
      {
        "id": "comp-830",
        "label": "ActivityFeed",
        "type": "component",
        "file": "src/components/messaging/ActivityFeed.tsx"
      },
      {
        "id": "comp-831",
        "label": "ConversationList",
        "type": "component",
        "file": "src/components/messaging/ConversationList.tsx"
      },
      {
        "id": "comp-832",
        "label": "DeliveryStatusMobile",
        "type": "component",
        "file": "src/components/messaging/DeliveryStatusMobile.tsx"
      },
      {
        "id": "comp-833",
        "label": "GuestSelectionModal",
        "type": "component",
        "file": "src/components/messaging/GuestSelectionModal.tsx"
      },
      {
        "id": "comp-834",
        "label": "MessageThread",
        "type": "component",
        "file": "src/components/messaging/MessageThread.tsx"
      },
      {
        "id": "comp-835",
        "label": "MessagingLayout",
        "type": "component",
        "file": "src/components/messaging/MessagingLayout.tsx"
      },
      {
        "id": "comp-836",
        "label": "MessagingStatsDashboard",
        "type": "component",
        "file": "src/components/messaging/MessagingStatsDashboard.tsx"
      },
      {
        "id": "comp-837",
        "label": "MobileMessageComposer",
        "type": "component",
        "file": "src/components/messaging/MobileMessageComposer.tsx"
      },
      {
        "id": "comp-838",
        "label": "MobilePersonalization",
        "type": "component",
        "file": "src/components/messaging/MobilePersonalization.tsx"
      },
      {
        "id": "comp-839",
        "label": "OfflineMessageQueue",
        "type": "component",
        "file": "src/components/messaging/OfflineMessageQueue.tsx"
      },
      {
        "id": "comp-840",
        "label": "PushNotifications",
        "type": "component",
        "file": "src/components/messaging/PushNotifications.tsx"
      },
      {
        "id": "comp-841",
        "label": "QuickActionTemplates",
        "type": "component",
        "file": "src/components/messaging/QuickActionTemplates.tsx"
      },
      {
        "id": "comp-842",
        "label": "QuickMessageTemplates",
        "type": "component",
        "file": "src/components/messaging/QuickMessageTemplates.tsx"
      },
      {
        "id": "comp-843",
        "label": "TouchOptimizedControls",
        "type": "component",
        "file": "src/components/messaging/TouchOptimizedControls.tsx"
      },
      {
        "id": "comp-844",
        "label": "WedMeMessagingLayout",
        "type": "component",
        "file": "src/components/messaging/WedMeMessagingLayout.tsx"
      },
      {
        "id": "comp-845",
        "label": "EngagementDashboard",
        "type": "component",
        "file": "src/components/metrics/engagement/EngagementDashboard.tsx"
      },
      {
        "id": "comp-846",
        "label": "AppleCalendarMobile",
        "type": "component",
        "file": "src/components/mobile/AppleCalendarMobile.tsx"
      },
      {
        "id": "comp-847",
        "label": "EmergencyControlPanel",
        "type": "component",
        "file": "src/components/mobile/EmergencyControlPanel.tsx"
      },
      {
        "id": "comp-848",
        "label": "MobileArrangementPlanner",
        "type": "component",
        "file": "src/components/mobile/MobileArrangementPlanner.tsx"
      },
      {
        "id": "comp-849",
        "label": "MobileColorPalette",
        "type": "component",
        "file": "src/components/mobile/MobileColorPalette.tsx"
      },
      {
        "id": "comp-850",
        "label": "MobileColorPicker",
        "type": "component",
        "file": "src/components/mobile/MobileColorPicker.tsx"
      },
      {
        "id": "comp-851",
        "label": "MobileEnhancedFeatures",
        "type": "component",
        "file": "src/components/mobile/MobileEnhancedFeatures.tsx"
      },
      {
        "id": "comp-852",
        "label": "MobileFloristIntelligence",
        "type": "component",
        "file": "src/components/mobile/MobileFloristIntelligence.tsx"
      },
      {
        "id": "comp-853",
        "label": "MobileInfrastructureDashboard",
        "type": "component",
        "file": "src/components/mobile/MobileInfrastructureDashboard.tsx"
      },
      {
        "id": "comp-854",
        "label": "MobileMetricsCards",
        "type": "component",
        "file": "src/components/mobile/MobileMetricsCards.tsx"
      },
      {
        "id": "comp-855",
        "label": "MobileNavigation",
        "type": "component",
        "file": "src/components/mobile/MobileNavigation.tsx"
      },
      {
        "id": "comp-856",
        "label": "MobilePlacesSearch",
        "type": "component",
        "file": "src/components/mobile/MobilePlacesSearch.tsx"
      },
      {
        "id": "comp-857",
        "label": "MobileSustainabilityAnalyzer",
        "type": "component",
        "file": "src/components/mobile/MobileSustainabilityAnalyzer.tsx"
      },
      {
        "id": "comp-858",
        "label": "MobileVariableForm",
        "type": "component",
        "file": "src/components/mobile/MobileVariableForm.tsx"
      },
      {
        "id": "comp-859",
        "label": "OutlookCalendarMobile",
        "type": "component",
        "file": "src/components/mobile/OutlookCalendarMobile.tsx"
      },
      {
        "id": "comp-860",
        "label": "PWAInstallPrompt",
        "type": "component",
        "file": "src/components/mobile/PWAInstallPrompt.tsx"
      },
      {
        "id": "comp-861",
        "label": "ProgressiveLoader",
        "type": "component",
        "file": "src/components/mobile/ProgressiveLoader.tsx"
      },
      {
        "id": "comp-862",
        "label": "RateLimitIndicator",
        "type": "component",
        "file": "src/components/mobile/RateLimitIndicator.tsx"
      },
      {
        "id": "comp-863",
        "label": "TouchFlowerSearch",
        "type": "component",
        "file": "src/components/mobile/TouchFlowerSearch.tsx"
      },
      {
        "id": "comp-864",
        "label": "TouchOptimizedVariableCard",
        "type": "component",
        "file": "src/components/mobile/TouchOptimizedVariableCard.tsx"
      },
      {
        "id": "comp-865",
        "label": "MobileEmailTemplateGenerator",
        "type": "component",
        "file": "src/components/mobile/ai/MobileEmailTemplateGenerator.tsx"
      },
      {
        "id": "comp-866",
        "label": "MobileKnowledgeSearch",
        "type": "component",
        "file": "src/components/mobile/ai/MobileKnowledgeSearch.tsx"
      },
      {
        "id": "comp-867",
        "label": "OfflineKnowledge",
        "type": "component",
        "file": "src/components/mobile/ai/OfflineKnowledge.tsx"
      },
      {
        "id": "comp-868",
        "label": "TouchOptimizedVariantSelector",
        "type": "component",
        "file": "src/components/mobile/ai/TouchOptimizedVariantSelector.tsx"
      },
      {
        "id": "comp-869",
        "label": "VoiceSearch",
        "type": "component",
        "file": "src/components/mobile/ai/VoiceSearch.tsx"
      },
      {
        "id": "comp-870",
        "label": "MobileAnalyticsDashboard",
        "type": "component",
        "file": "src/components/mobile/analytics/MobileAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-871",
        "label": "MobilePerformanceCharts",
        "type": "component",
        "file": "src/components/mobile/analytics/MobilePerformanceCharts.tsx"
      },
      {
        "id": "comp-872",
        "label": "TouchVendorComparison",
        "type": "component",
        "file": "src/components/mobile/analytics/TouchVendorComparison.tsx"
      },
      {
        "id": "comp-873",
        "label": "CriticalWeddingEndpoints",
        "type": "component",
        "file": "src/components/mobile/api-gateway/CriticalWeddingEndpoints.tsx"
      },
      {
        "id": "comp-874",
        "label": "MobileAssetGenerator",
        "type": "component",
        "file": "src/components/mobile/app-store/MobileAssetGenerator.tsx"
      },
      {
        "id": "comp-875",
        "label": "ResponsiveSubmissionForm",
        "type": "component",
        "file": "src/components/mobile/app-store/ResponsiveSubmissionForm.tsx"
      },
      {
        "id": "comp-876",
        "label": "WedMeIntegrationPanel",
        "type": "component",
        "file": "src/components/mobile/app-store/WedMeIntegrationPanel.tsx"
      },
      {
        "id": "comp-877",
        "label": "CriticalDocumentAccess",
        "type": "component",
        "file": "src/components/mobile/backup/CriticalDocumentAccess.tsx"
      },
      {
        "id": "comp-878",
        "label": "EmergencyDataAccess",
        "type": "component",
        "file": "src/components/mobile/backup/EmergencyDataAccess.tsx"
      },
      {
        "id": "comp-879",
        "label": "EmergencyRecoveryMobile",
        "type": "component",
        "file": "src/components/mobile/backup/EmergencyRecoveryMobile.tsx"
      },
      {
        "id": "comp-880",
        "label": "LocalBackupSync",
        "type": "component",
        "file": "src/components/mobile/backup/LocalBackupSync.tsx"
      },
      {
        "id": "comp-881",
        "label": "MobileBackupManager",
        "type": "component",
        "file": "src/components/mobile/backup/MobileBackupManager.tsx"
      },
      {
        "id": "comp-882",
        "label": "MobileBackupScheduler",
        "type": "component",
        "file": "src/components/mobile/backup/MobileBackupScheduler.tsx"
      },
      {
        "id": "comp-883",
        "label": "OfflineRecoveryInterface",
        "type": "component",
        "file": "src/components/mobile/backup/OfflineRecoveryInterface.tsx"
      },
      {
        "id": "comp-884",
        "label": "OfflineVendorContacts",
        "type": "component",
        "file": "src/components/mobile/backup/OfflineVendorContacts.tsx"
      },
      {
        "id": "comp-885",
        "label": "TouchRecoveryControls",
        "type": "component",
        "file": "src/components/mobile/backup/TouchRecoveryControls.tsx"
      },
      {
        "id": "comp-886",
        "label": "WeddingDayEmergencyAccess",
        "type": "component",
        "file": "src/components/mobile/backup/WeddingDayEmergencyAccess.tsx"
      },
      {
        "id": "comp-887",
        "label": "BackupPWAManager",
        "type": "component",
        "file": "src/components/mobile/backup/performance/BackupPWAManager.tsx"
      },
      {
        "id": "comp-888",
        "label": "GestureNavigationManager",
        "type": "component",
        "file": "src/components/mobile/backup/performance/GestureNavigationManager.tsx"
      },
      {
        "id": "comp-889",
        "label": "MobileBackupDataVisualization",
        "type": "component",
        "file": "src/components/mobile/backup/performance/MobileBackupDataVisualization.tsx"
      },
      {
        "id": "comp-890",
        "label": "RealTimePerformanceMonitor",
        "type": "component",
        "file": "src/components/mobile/backup/performance/RealTimePerformanceMonitor.tsx"
      },
      {
        "id": "comp-891",
        "label": "TouchBackupControls",
        "type": "component",
        "file": "src/components/mobile/backup/performance/TouchBackupControls.tsx"
      },
      {
        "id": "comp-892",
        "label": "MobileBudgetDashboard",
        "type": "component",
        "file": "src/components/mobile/budget/MobileBudgetDashboard.tsx"
      },
      {
        "id": "comp-893",
        "label": "MobileBudgetOptimizer",
        "type": "component",
        "file": "src/components/mobile/budget/MobileBudgetOptimizer.tsx"
      },
      {
        "id": "comp-894",
        "label": "MobileBudgetVisualization",
        "type": "component",
        "file": "src/components/mobile/budget/MobileBudgetVisualization.tsx"
      },
      {
        "id": "comp-895",
        "label": "QuickBudgetEntry",
        "type": "component",
        "file": "src/components/mobile/budget/QuickBudgetEntry.tsx"
      },
      {
        "id": "comp-896",
        "label": "TouchBudgetAllocation",
        "type": "component",
        "file": "src/components/mobile/budget/TouchBudgetAllocation.tsx"
      },
      {
        "id": "comp-897",
        "label": "MobileExportInterface",
        "type": "component",
        "file": "src/components/mobile/budget-export/MobileExportInterface.tsx"
      },
      {
        "id": "comp-898",
        "label": "ProgressiveExportLoader",
        "type": "component",
        "file": "src/components/mobile/budget-export/ProgressiveExportLoader.tsx"
      },
      {
        "id": "comp-899",
        "label": "MobileCalendarSync",
        "type": "component",
        "file": "src/components/mobile/calendar/MobileCalendarSync.tsx"
      },
      {
        "id": "comp-900",
        "label": "MobileCalendarWidgets",
        "type": "component",
        "file": "src/components/mobile/calendar/MobileCalendarWidgets.tsx"
      },
      {
        "id": "comp-901",
        "label": "TouchTimelineView",
        "type": "component",
        "file": "src/components/mobile/calendar/TouchTimelineView.tsx"
      },
      {
        "id": "comp-902",
        "label": "MobileCategoryCard",
        "type": "component",
        "file": "src/components/mobile/categories/MobileCategoryCard.tsx"
      },
      {
        "id": "comp-903",
        "label": "MobileCategoryDashboard",
        "type": "component",
        "file": "src/components/mobile/categories/MobileCategoryDashboard.tsx"
      },
      {
        "id": "comp-904",
        "label": "MobileCategoryTimeline",
        "type": "component",
        "file": "src/components/mobile/categories/MobileCategoryTimeline.tsx"
      },
      {
        "id": "comp-905",
        "label": "TouchDragDropCategories",
        "type": "component",
        "file": "src/components/mobile/categories/TouchDragDropCategories.tsx"
      },
      {
        "id": "comp-906",
        "label": "WedMeCategoryIntegration",
        "type": "component",
        "file": "src/components/mobile/categories/WedMeCategoryIntegration.tsx"
      },
      {
        "id": "comp-907",
        "label": "BottomSheetChat",
        "type": "component",
        "file": "src/components/mobile/chatbot/BottomSheetChat.tsx"
      },
      {
        "id": "comp-908",
        "label": "MobileChatInterface",
        "type": "component",
        "file": "src/components/mobile/chatbot/MobileChatInterface.tsx"
      },
      {
        "id": "comp-909",
        "label": "MobileMessageBubble",
        "type": "component",
        "file": "src/components/mobile/chatbot/MobileMessageBubble.tsx"
      },
      {
        "id": "comp-910",
        "label": "TouchInputHandler",
        "type": "component",
        "file": "src/components/mobile/chatbot/TouchInputHandler.tsx"
      },
      {
        "id": "comp-911",
        "label": "types",
        "type": "component",
        "file": "src/components/mobile/chatbot/types.ts"
      },
      {
        "id": "comp-912",
        "label": "CollaborativeDocumentLoader",
        "type": "component",
        "file": "src/components/mobile/collaboration/CollaborativeDocumentLoader.tsx"
      },
      {
        "id": "comp-913",
        "label": "MobileCollaborativeEditor",
        "type": "component",
        "file": "src/components/mobile/collaboration/MobileCollaborativeEditor.tsx"
      },
      {
        "id": "comp-914",
        "label": "MobilePresenceDisplay",
        "type": "component",
        "file": "src/components/mobile/collaboration/MobilePresenceDisplay.tsx"
      },
      {
        "id": "comp-915",
        "label": "OfflineCollaborationManager",
        "type": "component",
        "file": "src/components/mobile/collaboration/OfflineCollaborationManager.tsx"
      },
      {
        "id": "comp-916",
        "label": "TouchSelectionHandler",
        "type": "component",
        "file": "src/components/mobile/collaboration/TouchSelectionHandler.tsx"
      },
      {
        "id": "comp-917",
        "label": "MobileDietaryManager",
        "type": "component",
        "file": "src/components/mobile/dietary/MobileDietaryManager.tsx"
      },
      {
        "id": "comp-918",
        "label": "EmergencyCommandCenter",
        "type": "component",
        "file": "src/components/mobile/emergency/EmergencyCommandCenter.tsx"
      },
      {
        "id": "comp-919",
        "label": "EmergencyVoiceCommands",
        "type": "component",
        "file": "src/components/mobile/emergency/EmergencyVoiceCommands.tsx"
      },
      {
        "id": "comp-920",
        "label": "EmergencyWorkflow",
        "type": "component",
        "file": "src/components/mobile/emergency/EmergencyWorkflow.tsx"
      },
      {
        "id": "comp-921",
        "label": "CrossPlatformAuthSync",
        "type": "component",
        "file": "src/components/mobile/enterprise-auth/CrossPlatformAuthSync.ts"
      },
      {
        "id": "comp-922",
        "label": "DeviceComplianceValidator",
        "type": "component",
        "file": "src/components/mobile/enterprise-auth/DeviceComplianceValidator.ts"
      },
      {
        "id": "comp-923",
        "label": "MobileSecurityPolicies",
        "type": "component",
        "file": "src/components/mobile/enterprise-auth/MobileSecurityPolicies.ts"
      },
      {
        "id": "comp-924",
        "label": "MobileTokenSecurityManager",
        "type": "component",
        "file": "src/components/mobile/enterprise-auth/MobileTokenSecurityManager.ts"
      },
      {
        "id": "comp-925",
        "label": "BusinessMetricsMobile",
        "type": "component",
        "file": "src/components/mobile/executive/BusinessMetricsMobile.tsx"
      },
      {
        "id": "comp-926",
        "label": "ChartComponents",
        "type": "component",
        "file": "src/components/mobile/executive/widgets/ChartComponents.tsx"
      },
      {
        "id": "comp-927",
        "label": "ClientMetricsWidget",
        "type": "component",
        "file": "src/components/mobile/executive/widgets/ClientMetricsWidget.tsx"
      },
      {
        "id": "comp-928",
        "label": "PerformanceWidget",
        "type": "component",
        "file": "src/components/mobile/executive/widgets/PerformanceWidget.tsx"
      },
      {
        "id": "comp-929",
        "label": "RevenueWidget",
        "type": "component",
        "file": "src/components/mobile/executive/widgets/RevenueWidget.tsx"
      },
      {
        "id": "comp-930",
        "label": "WidgetContainer",
        "type": "component",
        "file": "src/components/mobile/executive/widgets/WidgetContainer.tsx"
      },
      {
        "id": "comp-931",
        "label": "MobileExpenseCapture",
        "type": "component",
        "file": "src/components/mobile/expenses/MobileExpenseCapture.tsx"
      },
      {
        "id": "comp-932",
        "label": "MobileFAQCategoryManager",
        "type": "component",
        "file": "src/components/mobile/faq/MobileFAQCategoryManager.tsx"
      },
      {
        "id": "comp-933",
        "label": "MobileFAQExtractor",
        "type": "component",
        "file": "src/components/mobile/faq/MobileFAQExtractor.tsx"
      },
      {
        "id": "comp-934",
        "label": "TouchOptimizedFAQReview",
        "type": "component",
        "file": "src/components/mobile/faq/TouchOptimizedFAQReview.tsx"
      },
      {
        "id": "comp-935",
        "label": "MobileFieldEditor",
        "type": "component",
        "file": "src/components/mobile/fields/MobileFieldEditor.tsx"
      },
      {
        "id": "comp-936",
        "label": "MobileFieldManager",
        "type": "component",
        "file": "src/components/mobile/fields/MobileFieldManager.tsx"
      },
      {
        "id": "comp-937",
        "label": "MobileFieldPerformanceProvider",
        "type": "component",
        "file": "src/components/mobile/fields/MobileFieldPerformanceProvider.tsx"
      },
      {
        "id": "comp-938",
        "label": "MobileFieldStatusIndicator",
        "type": "component",
        "file": "src/components/mobile/fields/MobileFieldStatusIndicator.tsx"
      },
      {
        "id": "comp-939",
        "label": "MobileFieldSyncTracker",
        "type": "component",
        "file": "src/components/mobile/fields/MobileFieldSyncTracker.tsx"
      },
      {
        "id": "comp-940",
        "label": "MobileFieldValidator",
        "type": "component",
        "file": "src/components/mobile/fields/MobileFieldValidator.tsx"
      },
      {
        "id": "comp-941",
        "label": "index",
        "type": "component",
        "file": "src/components/mobile/fields/index.ts"
      },
      {
        "id": "comp-942",
        "label": "types",
        "type": "component",
        "file": "src/components/mobile/fields/types.ts"
      },
      {
        "id": "comp-943",
        "label": "HelperAssignmentMobileDashboard",
        "type": "component",
        "file": "src/components/mobile/helper-assignment/HelperAssignmentMobileDashboard.tsx"
      },
      {
        "id": "comp-944",
        "label": "MobileHelperDirectory",
        "type": "component",
        "file": "src/components/mobile/helper-assignment/MobileHelperDirectory.tsx"
      },
      {
        "id": "comp-945",
        "label": "TouchDragAndDrop",
        "type": "component",
        "file": "src/components/mobile/helper-assignment/TouchDragAndDrop.tsx"
      },
      {
        "id": "comp-946",
        "label": "TouchOptimizedHelperDashboard",
        "type": "component",
        "file": "src/components/mobile/helper-assignment/TouchOptimizedHelperDashboard.tsx"
      },
      {
        "id": "comp-947",
        "label": "WedMeIntegration",
        "type": "component",
        "file": "src/components/mobile/helper-assignment/WedMeIntegration.tsx"
      },
      {
        "id": "comp-948",
        "label": "HelperTaskDashboard",
        "type": "component",
        "file": "src/components/mobile/helpers/HelperTaskDashboard.tsx"
      },
      {
        "id": "comp-949",
        "label": "MobileCulturalAdaptations",
        "type": "component",
        "file": "src/components/mobile/i18n/MobileCulturalAdaptations.tsx"
      },
      {
        "id": "comp-950",
        "label": "MobileCulturalCalendar",
        "type": "component",
        "file": "src/components/mobile/i18n/MobileCulturalCalendar.tsx"
      },
      {
        "id": "comp-951",
        "label": "MobileLanguageSelector",
        "type": "component",
        "file": "src/components/mobile/i18n/MobileLanguageSelector.tsx"
      },
      {
        "id": "comp-952",
        "label": "MobileRTLLayout",
        "type": "component",
        "file": "src/components/mobile/i18n/MobileRTLLayout.tsx"
      },
      {
        "id": "comp-953",
        "label": "MobileWeddingFormsLocalizer",
        "type": "component",
        "file": "src/components/mobile/i18n/MobileWeddingFormsLocalizer.tsx"
      },
      {
        "id": "comp-954",
        "label": "MobileJourneyAI",
        "type": "component",
        "file": "src/components/mobile/journey/MobileJourneyAI.tsx"
      },
      {
        "id": "comp-955",
        "label": "MobileOfflineManager",
        "type": "component",
        "file": "src/components/mobile/offline/MobileOfflineManager.tsx"
      },
      {
        "id": "comp-956",
        "label": "MobilePerformanceOptimizer",
        "type": "component",
        "file": "src/components/mobile/offline/MobilePerformanceOptimizer.tsx"
      },
      {
        "id": "comp-957",
        "label": "TouchConflictResolver",
        "type": "component",
        "file": "src/components/mobile/offline/TouchConflictResolver.tsx"
      },
      {
        "id": "comp-958",
        "label": "index",
        "type": "component",
        "file": "src/components/mobile/offline/index.ts"
      },
      {
        "id": "comp-959",
        "label": "types",
        "type": "component",
        "file": "src/components/mobile/offline/types.ts"
      },
      {
        "id": "comp-960",
        "label": "MobilePaymentCalendar",
        "type": "component",
        "file": "src/components/mobile/payments/MobilePaymentCalendar.tsx"
      },
      {
        "id": "comp-961",
        "label": "MobilePersonalizationEditor",
        "type": "component",
        "file": "src/components/mobile/personalization/MobilePersonalizationEditor.tsx"
      },
      {
        "id": "comp-962",
        "label": "TouchPersonalizationControls",
        "type": "component",
        "file": "src/components/mobile/personalization/TouchPersonalizationControls.tsx"
      },
      {
        "id": "comp-963",
        "label": "CouplePortfolioView",
        "type": "component",
        "file": "src/components/mobile/portfolio/CouplePortfolioView.tsx"
      },
      {
        "id": "comp-964",
        "label": "MobilePortfolioManager",
        "type": "component",
        "file": "src/components/mobile/portfolio/MobilePortfolioManager.tsx"
      },
      {
        "id": "comp-965",
        "label": "MobileUploader",
        "type": "component",
        "file": "src/components/mobile/portfolio/MobileUploader.tsx"
      },
      {
        "id": "comp-966",
        "label": "PresentationMode",
        "type": "component",
        "file": "src/components/mobile/portfolio/PresentationMode.tsx"
      },
      {
        "id": "comp-967",
        "label": "CrossPlatformShare",
        "type": "component",
        "file": "src/components/mobile/referrals/CrossPlatformShare.tsx"
      },
      {
        "id": "comp-968",
        "label": "MobileAnalytics",
        "type": "component",
        "file": "src/components/mobile/referrals/MobileAnalytics.tsx"
      },
      {
        "id": "comp-969",
        "label": "MobileLeaderboard",
        "type": "component",
        "file": "src/components/mobile/referrals/MobileLeaderboard.tsx"
      },
      {
        "id": "comp-970",
        "label": "MobileOptimizations",
        "type": "component",
        "file": "src/components/mobile/referrals/MobileOptimizations.tsx"
      },
      {
        "id": "comp-971",
        "label": "MobileQRGenerator",
        "type": "component",
        "file": "src/components/mobile/referrals/MobileQRGenerator.tsx"
      },
      {
        "id": "comp-972",
        "label": "MobileReferralShare",
        "type": "component",
        "file": "src/components/mobile/referrals/MobileReferralShare.tsx"
      },
      {
        "id": "comp-973",
        "label": "MobileHelperScheduleView",
        "type": "component",
        "file": "src/components/mobile/schedules/MobileHelperScheduleView.tsx"
      },
      {
        "id": "comp-974",
        "label": "MapBasedVendorSearch",
        "type": "component",
        "file": "src/components/mobile/search/MapBasedVendorSearch.tsx"
      },
      {
        "id": "comp-975",
        "label": "MobileSearchHistory",
        "type": "component",
        "file": "src/components/mobile/search/MobileSearchHistory.tsx"
      },
      {
        "id": "comp-976",
        "label": "NearbyVendorDiscovery",
        "type": "component",
        "file": "src/components/mobile/search/NearbyVendorDiscovery.tsx"
      },
      {
        "id": "comp-977",
        "label": "QuickSearchActions",
        "type": "component",
        "file": "src/components/mobile/search/QuickSearchActions.tsx"
      },
      {
        "id": "comp-978",
        "label": "SwipeableSearchResults",
        "type": "component",
        "file": "src/components/mobile/search/SwipeableSearchResults.tsx"
      },
      {
        "id": "comp-979",
        "label": "TouchOptimizedAutocomplete",
        "type": "component",
        "file": "src/components/mobile/search/TouchOptimizedAutocomplete.tsx"
      },
      {
        "id": "comp-980",
        "label": "ConflictMobileBanner",
        "type": "component",
        "file": "src/components/mobile/seating/ConflictMobileBanner.tsx"
      },
      {
        "id": "comp-981",
        "label": "CoupleAuthGuard",
        "type": "component",
        "file": "src/components/mobile/seating/CoupleAuthGuard.tsx"
      },
      {
        "id": "comp-982",
        "label": "GuestAssignmentModal",
        "type": "component",
        "file": "src/components/mobile/seating/GuestAssignmentModal.tsx"
      },
      {
        "id": "comp-983",
        "label": "MobileSeatingDashboard",
        "type": "component",
        "file": "src/components/mobile/seating/MobileSeatingDashboard.tsx"
      },
      {
        "id": "comp-984",
        "label": "MobileSeatingViewer",
        "type": "component",
        "file": "src/components/mobile/seating/MobileSeatingViewer.tsx"
      },
      {
        "id": "comp-985",
        "label": "ProductionSeatingDashboard",
        "type": "component",
        "file": "src/components/mobile/seating/ProductionSeatingDashboard.tsx"
      },
      {
        "id": "comp-986",
        "label": "SeatingNavigationControls",
        "type": "component",
        "file": "src/components/mobile/seating/SeatingNavigationControls.tsx"
      },
      {
        "id": "comp-987",
        "label": "TouchTableCard",
        "type": "component",
        "file": "src/components/mobile/seating/TouchTableCard.tsx"
      },
      {
        "id": "comp-988",
        "label": "ConsentManager",
        "type": "component",
        "file": "src/components/mobile/security/ConsentManager.tsx"
      },
      {
        "id": "comp-989",
        "label": "DataControlActions",
        "type": "component",
        "file": "src/components/mobile/security/DataControlActions.tsx"
      },
      {
        "id": "comp-990",
        "label": "EmergencyContacts",
        "type": "component",
        "file": "src/components/mobile/security/EmergencyContacts.tsx"
      },
      {
        "id": "comp-991",
        "label": "EmergencyResponseMobile",
        "type": "component",
        "file": "src/components/mobile/security/EmergencyResponseMobile.tsx"
      },
      {
        "id": "comp-992",
        "label": "GuestPrivacyControls",
        "type": "component",
        "file": "src/components/mobile/security/GuestPrivacyControls.tsx"
      },
      {
        "id": "comp-993",
        "label": "MobileIncidentDashboard",
        "type": "component",
        "file": "src/components/mobile/security/MobileIncidentDashboard.tsx"
      },
      {
        "id": "comp-994",
        "label": "MobileSecurityDashboard",
        "type": "component",
        "file": "src/components/mobile/security/MobileSecurityDashboard.tsx"
      },
      {
        "id": "comp-995",
        "label": "OfflineIncidentHandler",
        "type": "component",
        "file": "src/components/mobile/security/OfflineIncidentHandler.tsx"
      },
      {
        "id": "comp-996",
        "label": "PrivacyPreferences",
        "type": "component",
        "file": "src/components/mobile/security/PrivacyPreferences.tsx"
      },
      {
        "id": "comp-997",
        "label": "SecurityStatusOverview",
        "type": "component",
        "file": "src/components/mobile/security/SecurityStatusOverview.tsx"
      },
      {
        "id": "comp-998",
        "label": "WeddingDataProtection",
        "type": "component",
        "file": "src/components/mobile/security/WeddingDataProtection.tsx"
      },
      {
        "id": "comp-999",
        "label": "NodeEditor",
        "type": "component",
        "file": "src/components/mobile/timeline/NodeEditor.tsx"
      },
      {
        "id": "comp-1000",
        "label": "TimelineNodes",
        "type": "component",
        "file": "src/components/mobile/timeline/TimelineNodes.tsx"
      },
      {
        "id": "comp-1001",
        "label": "MobileTouchOptimizer",
        "type": "component",
        "file": "src/components/mobile/touch/MobileTouchOptimizer.tsx"
      },
      {
        "id": "comp-1002",
        "label": "MobileWeddingWorkflow",
        "type": "component",
        "file": "src/components/mobile/touch/MobileWeddingWorkflow.tsx"
      },
      {
        "id": "comp-1003",
        "label": "WedMeMobileTouchSync",
        "type": "component",
        "file": "src/components/mobile/touch/WedMeMobileTouchSync.tsx"
      },
      {
        "id": "comp-1004",
        "label": "index",
        "type": "component",
        "file": "src/components/mobile/touch/index.ts"
      },
      {
        "id": "comp-1005",
        "label": "ViralDashboard",
        "type": "component",
        "file": "src/components/mobile/viral/ViralDashboard.tsx"
      },
      {
        "id": "comp-1006",
        "label": "ViralPWAManager",
        "type": "component",
        "file": "src/components/mobile/viral/ViralPWAManager.tsx"
      },
      {
        "id": "comp-1007",
        "label": "MobileWidgetGrid",
        "type": "component",
        "file": "src/components/mobile/widgets/MobileWidgetGrid.tsx"
      },
      {
        "id": "comp-1008",
        "label": "SwipeableWidgets",
        "type": "component",
        "file": "src/components/mobile/widgets/SwipeableWidgets.tsx"
      },
      {
        "id": "comp-1009",
        "label": "ConfirmationDialog",
        "type": "component",
        "file": "src/components/modals/ConfirmationDialog.tsx"
      },
      {
        "id": "comp-1010",
        "label": "FormPreviewModal",
        "type": "component",
        "file": "src/components/modals/FormPreviewModal.tsx"
      },
      {
        "id": "comp-1011",
        "label": "HealthDashboard",
        "type": "component",
        "file": "src/components/monitoring/HealthDashboard.tsx"
      },
      {
        "id": "comp-1012",
        "label": "MonitoringProvider",
        "type": "component",
        "file": "src/components/monitoring/MonitoringProvider.tsx"
      },
      {
        "id": "comp-1013",
        "label": "PerformanceDashboard",
        "type": "component",
        "file": "src/components/monitoring/PerformanceDashboard.tsx"
      },
      {
        "id": "comp-1014",
        "label": "performance-dashboard",
        "type": "component",
        "file": "src/components/monitoring/performance-dashboard.tsx"
      },
      {
        "id": "comp-1015",
        "label": "AppropriatenessChecker",
        "type": "component",
        "file": "src/components/music/AppropriatenessChecker.tsx"
      },
      {
        "id": "comp-1016",
        "label": "AudioPreview",
        "type": "component",
        "file": "src/components/music/AudioPreview.tsx"
      },
      {
        "id": "comp-1017",
        "label": "GuestRequestForm",
        "type": "component",
        "file": "src/components/music/GuestRequestForm.tsx"
      },
      {
        "id": "comp-1018",
        "label": "MusicDashboard",
        "type": "component",
        "file": "src/components/music/MusicDashboard.tsx"
      },
      {
        "id": "comp-1019",
        "label": "MusicDatabase",
        "type": "component",
        "file": "src/components/music/MusicDatabase.tsx"
      },
      {
        "id": "comp-1020",
        "label": "PlaylistBuilder",
        "type": "component",
        "file": "src/components/music/PlaylistBuilder.tsx"
      },
      {
        "id": "comp-1021",
        "label": "SongRequestResolver",
        "type": "component",
        "file": "src/components/music/SongRequestResolver.tsx"
      },
      {
        "id": "comp-1022",
        "label": "SongSearch",
        "type": "component",
        "file": "src/components/music/SongSearch.tsx"
      },
      {
        "id": "comp-1023",
        "label": "MobileMusicInterface",
        "type": "component",
        "file": "src/components/music/mobile/MobileMusicInterface.tsx"
      },
      {
        "id": "comp-1024",
        "label": "Breadcrumbs",
        "type": "component",
        "file": "src/components/navigation/Breadcrumbs.tsx"
      },
      {
        "id": "comp-1025",
        "label": "CommandPalette",
        "type": "component",
        "file": "src/components/navigation/CommandPalette.tsx"
      },
      {
        "id": "comp-1026",
        "label": "MobileNav",
        "type": "component",
        "file": "src/components/navigation/MobileNav.tsx"
      },
      {
        "id": "comp-1027",
        "label": "NavigationBar",
        "type": "component",
        "file": "src/components/navigation/NavigationBar.tsx"
      },
      {
        "id": "comp-1028",
        "label": "NotificationCard",
        "type": "component",
        "file": "src/components/notifications/NotificationCard.tsx"
      },
      {
        "id": "comp-1029",
        "label": "NotificationCenter",
        "type": "component",
        "file": "src/components/notifications/NotificationCenter.tsx"
      },
      {
        "id": "comp-1030",
        "label": "NotificationDashboard",
        "type": "component",
        "file": "src/components/notifications/NotificationDashboard.tsx"
      },
      {
        "id": "comp-1031",
        "label": "SmartNotificationGroup",
        "type": "component",
        "file": "src/components/notifications/SmartNotificationGroup.tsx"
      },
      {
        "id": "comp-1032",
        "label": "SwipeableNotificationCard",
        "type": "component",
        "file": "src/components/notifications/SwipeableNotificationCard.tsx"
      },
      {
        "id": "comp-1033",
        "label": "WeddingDayNotificationOverlay",
        "type": "component",
        "file": "src/components/notifications/WeddingDayNotificationOverlay.tsx"
      },
      {
        "id": "comp-1034",
        "label": "ConflictBreadcrumb",
        "type": "component",
        "file": "src/components/offline/ConflictBreadcrumb.tsx"
      },
      {
        "id": "comp-1035",
        "label": "ConflictList",
        "type": "component",
        "file": "src/components/offline/ConflictList.tsx"
      },
      {
        "id": "comp-1036",
        "label": "ConflictResolutionDialog",
        "type": "component",
        "file": "src/components/offline/ConflictResolutionDialog.tsx"
      },
      {
        "id": "comp-1037",
        "label": "ErrorRecoveryPanel",
        "type": "component",
        "file": "src/components/offline/ErrorRecoveryPanel.tsx"
      },
      {
        "id": "comp-1038",
        "label": "OfflineForm",
        "type": "component",
        "file": "src/components/offline/OfflineForm.tsx"
      },
      {
        "id": "comp-1039",
        "label": "OfflineIndicator",
        "type": "component",
        "file": "src/components/offline/OfflineIndicator.tsx"
      },
      {
        "id": "comp-1040",
        "label": "SyncDashboard",
        "type": "component",
        "file": "src/components/offline/SyncDashboard.tsx"
      },
      {
        "id": "comp-1041",
        "label": "SyncStatusIndicator",
        "type": "component",
        "file": "src/components/offline/SyncStatusIndicator.tsx"
      },
      {
        "id": "comp-1042",
        "label": "SyncToastProvider",
        "type": "component",
        "file": "src/components/offline/SyncToastProvider.tsx"
      },
      {
        "id": "comp-1043",
        "label": "OfflineIndicator.enhanced.test",
        "type": "component",
        "file": "src/components/offline/__tests__/OfflineIndicator.enhanced.test.tsx"
      },
      {
        "id": "comp-1044",
        "label": "index",
        "type": "component",
        "file": "src/components/offline/index.ts"
      },
      {
        "id": "comp-1045",
        "label": "GuestCountSelector",
        "type": "component",
        "file": "src/components/onboarding/GuestCountSelector.tsx"
      },
      {
        "id": "comp-1046",
        "label": "KeyboardShortcuts",
        "type": "component",
        "file": "src/components/onboarding/KeyboardShortcuts.tsx"
      },
      {
        "id": "comp-1047",
        "label": "OnboardingTour",
        "type": "component",
        "file": "src/components/onboarding/OnboardingTour.tsx"
      },
      {
        "id": "comp-1048",
        "label": "ProgressTracker",
        "type": "component",
        "file": "src/components/onboarding/ProgressTracker.tsx"
      },
      {
        "id": "comp-1049",
        "label": "VenueAutocomplete",
        "type": "component",
        "file": "src/components/onboarding/VenueAutocomplete.tsx"
      },
      {
        "id": "comp-1050",
        "label": "WeddingBasicsForm",
        "type": "component",
        "file": "src/components/onboarding/WeddingBasicsForm.tsx"
      },
      {
        "id": "comp-1051",
        "label": "WeddingStyleSelector",
        "type": "component",
        "file": "src/components/onboarding/WeddingStyleSelector.tsx"
      },
      {
        "id": "comp-1052",
        "label": "index",
        "type": "component",
        "file": "src/components/onboarding/index.ts"
      },
      {
        "id": "comp-1053",
        "label": "MarkAsPaidModal",
        "type": "component",
        "file": "src/components/payments/MarkAsPaidModal.tsx"
      },
      {
        "id": "comp-1054",
        "label": "PaymentCalendar",
        "type": "component",
        "file": "src/components/payments/PaymentCalendar.tsx"
      },
      {
        "id": "comp-1055",
        "label": "PaymentStatusIndicator",
        "type": "component",
        "file": "src/components/payments/PaymentStatusIndicator.tsx"
      },
      {
        "id": "comp-1056",
        "label": "UpcomingPaymentsList",
        "type": "component",
        "file": "src/components/payments/UpcomingPaymentsList.tsx"
      },
      {
        "id": "comp-1057",
        "label": "MarkAsPaidModal.test",
        "type": "component",
        "file": "src/components/payments/__tests__/MarkAsPaidModal.test.tsx"
      },
      {
        "id": "comp-1058",
        "label": "PaymentStatusIndicator.test",
        "type": "component",
        "file": "src/components/payments/__tests__/PaymentStatusIndicator.test.tsx"
      },
      {
        "id": "comp-1059",
        "label": "FieldMappingInterface",
        "type": "component",
        "file": "src/components/pdf/FieldMappingInterface.tsx"
      },
      {
        "id": "comp-1060",
        "label": "PDFProcessingProgress",
        "type": "component",
        "file": "src/components/pdf/PDFProcessingProgress.tsx"
      },
      {
        "id": "comp-1061",
        "label": "PDFUploader",
        "type": "component",
        "file": "src/components/pdf/PDFUploader.tsx"
      },
      {
        "id": "comp-1062",
        "label": "SmartFieldMappingInterface",
        "type": "component",
        "file": "src/components/pdf/SmartFieldMappingInterface.tsx"
      },
      {
        "id": "comp-1063",
        "label": "AdvancedPerformanceDashboard",
        "type": "component",
        "file": "src/components/performance/AdvancedPerformanceDashboard.tsx"
      },
      {
        "id": "comp-1064",
        "label": "AdvancedPerformanceProfiler",
        "type": "component",
        "file": "src/components/performance/AdvancedPerformanceProfiler.tsx"
      },
      {
        "id": "comp-1065",
        "label": "AlertsOverview",
        "type": "component",
        "file": "src/components/performance/AlertsOverview.tsx"
      },
      {
        "id": "comp-1066",
        "label": "AutoScalingDashboard",
        "type": "component",
        "file": "src/components/performance/AutoScalingDashboard.tsx"
      },
      {
        "id": "comp-1067",
        "label": "CacheMetrics",
        "type": "component",
        "file": "src/components/performance/CacheMetrics.tsx"
      },
      {
        "id": "comp-1068",
        "label": "ChannelPerformance",
        "type": "component",
        "file": "src/components/performance/ChannelPerformance.tsx"
      },
      {
        "id": "comp-1069",
        "label": "ConcurrentGuestLoader",
        "type": "component",
        "file": "src/components/performance/ConcurrentGuestLoader.tsx"
      },
      {
        "id": "comp-1070",
        "label": "GeographicPerformanceDashboard",
        "type": "component",
        "file": "src/components/performance/GeographicPerformanceDashboard.tsx"
      },
      {
        "id": "comp-1071",
        "label": "MemoizedDataGrid",
        "type": "component",
        "file": "src/components/performance/MemoizedDataGrid.tsx"
      },
      {
        "id": "comp-1072",
        "label": "MemoizedGuestDataGrid",
        "type": "component",
        "file": "src/components/performance/MemoizedGuestDataGrid.tsx"
      },
      {
        "id": "comp-1073",
        "label": "PerformanceBreadcrumbNavigation",
        "type": "component",
        "file": "src/components/performance/PerformanceBreadcrumbNavigation.tsx"
      },
      {
        "id": "comp-1074",
        "label": "PerformanceDashboard",
        "type": "component",
        "file": "src/components/performance/PerformanceDashboard.tsx"
      },
      {
        "id": "comp-1075",
        "label": "PerformanceExport",
        "type": "component",
        "file": "src/components/performance/PerformanceExport.tsx"
      },
      {
        "id": "comp-1076",
        "label": "PerformanceIntegrationProvider",
        "type": "component",
        "file": "src/components/performance/PerformanceIntegrationProvider.tsx"
      },
      {
        "id": "comp-1077",
        "label": "PerformantGuestSearchTable",
        "type": "component",
        "file": "src/components/performance/PerformantGuestSearchTable.tsx"
      },
      {
        "id": "comp-1078",
        "label": "ProductionPerformanceDashboard",
        "type": "component",
        "file": "src/components/performance/ProductionPerformanceDashboard.tsx"
      },
      {
        "id": "comp-1079",
        "label": "ProductionReadinessValidator",
        "type": "component",
        "file": "src/components/performance/ProductionReadinessValidator.tsx"
      },
      {
        "id": "comp-1080",
        "label": "ProgressiveImage",
        "type": "component",
        "file": "src/components/performance/ProgressiveImage.tsx"
      },
      {
        "id": "comp-1081",
        "label": "React19PerformanceProvider",
        "type": "component",
        "file": "src/components/performance/React19PerformanceProvider.tsx"
      },
      {
        "id": "comp-1082",
        "label": "RealtimeProvider",
        "type": "component",
        "file": "src/components/performance/RealtimeProvider.tsx"
      },
      {
        "id": "comp-1083",
        "label": "TeamBIntegrationDashboard",
        "type": "component",
        "file": "src/components/performance/TeamBIntegrationDashboard.tsx"
      },
      {
        "id": "comp-1084",
        "label": "VirtualPhotoGrid",
        "type": "component",
        "file": "src/components/performance/VirtualPhotoGrid.tsx"
      },
      {
        "id": "comp-1085",
        "label": "VirtualizedClientList",
        "type": "component",
        "file": "src/components/performance/VirtualizedClientList.tsx"
      },
      {
        "id": "comp-1086",
        "label": "VirtualizedGuestRow",
        "type": "component",
        "file": "src/components/performance/VirtualizedGuestRow.tsx"
      },
      {
        "id": "comp-1087",
        "label": "VirtualizedGuestTable",
        "type": "component",
        "file": "src/components/performance/VirtualizedGuestTable.tsx"
      },
      {
        "id": "comp-1088",
        "label": "VirtualizedList",
        "type": "component",
        "file": "src/components/performance/VirtualizedList.tsx"
      },
      {
        "id": "comp-1089",
        "label": "WebSocketMetrics",
        "type": "component",
        "file": "src/components/performance/WebSocketMetrics.tsx"
      },
      {
        "id": "comp-1090",
        "label": "WeddingSeasonAnalytics",
        "type": "component",
        "file": "src/components/performance/WeddingSeasonAnalytics.tsx"
      },
      {
        "id": "comp-1091",
        "label": "DynamicCustomerHealthDashboard",
        "type": "component",
        "file": "src/components/performance/dynamic/DynamicCustomerHealthDashboard.tsx"
      },
      {
        "id": "comp-1092",
        "label": "DynamicPhotoGroupsManager",
        "type": "component",
        "file": "src/components/performance/dynamic/DynamicPhotoGroupsManager.tsx"
      },
      {
        "id": "comp-1093",
        "label": "DynamicReviewAnalyticsDashboard",
        "type": "component",
        "file": "src/components/performance/dynamic/DynamicReviewAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-1094",
        "label": "DynamicSeatingArrangement",
        "type": "component",
        "file": "src/components/performance/dynamic/DynamicSeatingArrangement.tsx"
      },
      {
        "id": "comp-1095",
        "label": "DynamicTrialConversionFlow",
        "type": "component",
        "file": "src/components/performance/dynamic/DynamicTrialConversionFlow.tsx"
      },
      {
        "id": "comp-1096",
        "label": "index",
        "type": "component",
        "file": "src/components/performance/dynamic/index.ts"
      },
      {
        "id": "comp-1097",
        "label": "PerformanceTestSuite",
        "type": "component",
        "file": "src/components/performance/testing/PerformanceTestSuite.ts"
      },
      {
        "id": "comp-1098",
        "label": ".!26246!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26246!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1099",
        "label": ".!26259!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26259!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1100",
        "label": ".!26265!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26265!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1101",
        "label": ".!26275!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26275!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1102",
        "label": ".!26285!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26285!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1103",
        "label": ".!26295!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26295!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1104",
        "label": ".!26303!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26303!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1105",
        "label": ".!26343!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26343!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1106",
        "label": ".!26349!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!26349!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1107",
        "label": ".!67562!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!67562!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1108",
        "label": ".!90247!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!90247!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1109",
        "label": ".!90260!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!90260!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1110",
        "label": ".!90279!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!90279!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1111",
        "label": ".!90909!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!90909!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1112",
        "label": ".!92342!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!92342!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1113",
        "label": ".!93425!StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/.!93425!StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1114",
        "label": "AIMoodBoardGenerator",
        "type": "component",
        "file": "src/components/photography/AIMoodBoardGenerator.tsx"
      },
      {
        "id": "comp-1115",
        "label": "AIPhotoAnalysisOverlay",
        "type": "component",
        "file": "src/components/photography/AIPhotoAnalysisOverlay.tsx"
      },
      {
        "id": "comp-1116",
        "label": "EnhancedSearchFilters",
        "type": "component",
        "file": "src/components/photography/EnhancedSearchFilters.tsx"
      },
      {
        "id": "comp-1117",
        "label": "ErrorBoundary",
        "type": "component",
        "file": "src/components/photography/ErrorBoundary.tsx"
      },
      {
        "id": "comp-1118",
        "label": "IntegratedMoodBoardGenerator",
        "type": "component",
        "file": "src/components/photography/IntegratedMoodBoardGenerator.tsx"
      },
      {
        "id": "comp-1119",
        "label": "PhotographerPortfolioGallery",
        "type": "component",
        "file": "src/components/photography/PhotographerPortfolioGallery.tsx"
      },
      {
        "id": "comp-1120",
        "label": "PhotographyStyleFilter",
        "type": "component",
        "file": "src/components/photography/PhotographyStyleFilter.tsx"
      },
      {
        "id": "comp-1121",
        "label": "StyleMatchingGallery",
        "type": "component",
        "file": "src/components/photography/StyleMatchingGallery.tsx"
      },
      {
        "id": "comp-1122",
        "label": "CreateAlbumModal",
        "type": "component",
        "file": "src/components/photos/CreateAlbumModal.tsx"
      },
      {
        "id": "comp-1123",
        "label": "GalleryManager",
        "type": "component",
        "file": "src/components/photos/GalleryManager.tsx"
      },
      {
        "id": "comp-1124",
        "label": "OptimizedImage",
        "type": "component",
        "file": "src/components/photos/OptimizedImage.tsx"
      },
      {
        "id": "comp-1125",
        "label": "PhotoAlbumCard",
        "type": "component",
        "file": "src/components/photos/PhotoAlbumCard.tsx"
      },
      {
        "id": "comp-1126",
        "label": "PhotoCard",
        "type": "component",
        "file": "src/components/photos/PhotoCard.tsx"
      },
      {
        "id": "comp-1127",
        "label": "PhotoGallery",
        "type": "component",
        "file": "src/components/photos/PhotoGallery.tsx"
      },
      {
        "id": "comp-1128",
        "label": "PhotoUpload",
        "type": "component",
        "file": "src/components/photos/PhotoUpload.tsx"
      },
      {
        "id": "comp-1129",
        "label": "PhotoUploader",
        "type": "component",
        "file": "src/components/photos/PhotoUploader.tsx"
      },
      {
        "id": "comp-1130",
        "label": "PhotoViewer",
        "type": "component",
        "file": "src/components/photos/PhotoViewer.tsx"
      },
      {
        "id": "comp-1131",
        "label": "VendorSharingModal",
        "type": "component",
        "file": "src/components/photos/VendorSharingModal.tsx"
      },
      {
        "id": "comp-1132",
        "label": "GooglePlacesAutocomplete",
        "type": "component",
        "file": "src/components/places/GooglePlacesAutocomplete.tsx"
      },
      {
        "id": "comp-1133",
        "label": "LocationPicker",
        "type": "component",
        "file": "src/components/places/LocationPicker.tsx"
      },
      {
        "id": "comp-1134",
        "label": "NearbyPlacesSearch",
        "type": "component",
        "file": "src/components/places/NearbyPlacesSearch.tsx"
      },
      {
        "id": "comp-1135",
        "label": "PlaceDetails",
        "type": "component",
        "file": "src/components/places/PlaceDetails.tsx"
      },
      {
        "id": "comp-1136",
        "label": "GooglePlacesAutocomplete.test",
        "type": "component",
        "file": "src/components/places/__tests__/GooglePlacesAutocomplete.test.tsx"
      },
      {
        "id": "comp-1137",
        "label": "BudgetTracker",
        "type": "component",
        "file": "src/components/planning/BudgetTracker.tsx"
      },
      {
        "id": "comp-1138",
        "label": "MediaUploadModal",
        "type": "component",
        "file": "src/components/portfolio/MediaUploadModal.tsx"
      },
      {
        "id": "comp-1139",
        "label": "PortfolioGallery",
        "type": "component",
        "file": "src/components/portfolio/PortfolioGallery.tsx"
      },
      {
        "id": "comp-1140",
        "label": "PortfolioManager",
        "type": "component",
        "file": "src/components/portfolio/PortfolioManager.tsx"
      },
      {
        "id": "comp-1141",
        "label": "PortfolioProjectModal",
        "type": "component",
        "file": "src/components/portfolio/PortfolioProjectModal.tsx"
      },
      {
        "id": "comp-1142",
        "label": "index",
        "type": "component",
        "file": "src/components/portfolio/index.ts"
      },
      {
        "id": "comp-1143",
        "label": "ActivityTracker",
        "type": "component",
        "file": "src/components/presence/ActivityTracker.tsx"
      },
      {
        "id": "comp-1144",
        "label": "PresenceIndicator",
        "type": "component",
        "file": "src/components/presence/PresenceIndicator.tsx"
      },
      {
        "id": "comp-1145",
        "label": "PresenceList",
        "type": "component",
        "file": "src/components/presence/PresenceList.tsx"
      },
      {
        "id": "comp-1146",
        "label": "PresenceSettings",
        "type": "component",
        "file": "src/components/presence/PresenceSettings.tsx"
      },
      {
        "id": "comp-1147",
        "label": "ActivityTracker.test",
        "type": "component",
        "file": "src/components/presence/__tests__/ActivityTracker.test.tsx"
      },
      {
        "id": "comp-1148",
        "label": "PresenceIndicator.test",
        "type": "component",
        "file": "src/components/presence/__tests__/PresenceIndicator.test.tsx"
      },
      {
        "id": "comp-1149",
        "label": "usePresence.test",
        "type": "component",
        "file": "src/components/presence/__tests__/usePresence.test.ts"
      },
      {
        "id": "comp-1150",
        "label": "index",
        "type": "component",
        "file": "src/components/presence/index.ts"
      },
      {
        "id": "comp-1151",
        "label": "ComplianceReportingDashboard",
        "type": "component",
        "file": "src/components/privacy/ComplianceReportingDashboard.tsx"
      },
      {
        "id": "comp-1152",
        "label": "ConsentManager",
        "type": "component",
        "file": "src/components/privacy/ConsentManager.tsx"
      },
      {
        "id": "comp-1153",
        "label": "CookieConsentBanner",
        "type": "component",
        "file": "src/components/privacy/CookieConsentBanner.tsx"
      },
      {
        "id": "comp-1154",
        "label": "PrivacyDashboard",
        "type": "component",
        "file": "src/components/privacy/PrivacyDashboard.tsx"
      },
      {
        "id": "comp-1155",
        "label": "MonitoringProvider",
        "type": "component",
        "file": "src/components/providers/MonitoringProvider.tsx"
      },
      {
        "id": "comp-1156",
        "label": "RealtimeProvider",
        "type": "component",
        "file": "src/components/providers/RealtimeProvider.tsx"
      },
      {
        "id": "comp-1157",
        "label": "providers",
        "type": "component",
        "file": "src/components/providers.tsx"
      },
      {
        "id": "comp-1158",
        "label": "GuestBook",
        "type": "component",
        "file": "src/components/public/GuestBook.tsx"
      },
      {
        "id": "comp-1159",
        "label": "InstallButton",
        "type": "component",
        "file": "src/components/pwa/InstallButton.tsx"
      },
      {
        "id": "comp-1160",
        "label": "InstallInstructionsModal",
        "type": "component",
        "file": "src/components/pwa/InstallInstructionsModal.tsx"
      },
      {
        "id": "comp-1161",
        "label": "InstallPrompt",
        "type": "component",
        "file": "src/components/pwa/InstallPrompt.tsx"
      },
      {
        "id": "comp-1162",
        "label": "InstallSuccessMessage",
        "type": "component",
        "file": "src/components/pwa/InstallSuccessMessage.tsx"
      },
      {
        "id": "comp-1163",
        "label": "PWARegistration",
        "type": "component",
        "file": "src/components/pwa/PWARegistration.tsx"
      },
      {
        "id": "comp-1164",
        "label": "ServiceWorkerRegistration",
        "type": "component",
        "file": "src/components/pwa/ServiceWorkerRegistration.tsx"
      },
      {
        "id": "comp-1165",
        "label": "InstallButton.test",
        "type": "component",
        "file": "src/components/pwa/__tests__/InstallButton.test.tsx"
      },
      {
        "id": "comp-1166",
        "label": "PWACategoryManager",
        "type": "component",
        "file": "src/components/pwa/category-management/PWACategoryManager.tsx"
      },
      {
        "id": "comp-1167",
        "label": "TestResultsDashboard",
        "type": "component",
        "file": "src/components/qa/TestResultsDashboard.tsx"
      },
      {
        "id": "comp-1168",
        "label": "EndpointUsageChart",
        "type": "component",
        "file": "src/components/rate-limiting/EndpointUsageChart.tsx"
      },
      {
        "id": "comp-1169",
        "label": "RateLimitGauge",
        "type": "component",
        "file": "src/components/rate-limiting/RateLimitGauge.tsx"
      },
      {
        "id": "comp-1170",
        "label": "TierComparisonTable",
        "type": "component",
        "file": "src/components/rate-limiting/TierComparisonTable.tsx"
      },
      {
        "id": "comp-1171",
        "label": "UpgradeRecommendation",
        "type": "component",
        "file": "src/components/rate-limiting/UpgradeRecommendation.tsx"
      },
      {
        "id": "comp-1172",
        "label": "UsageMonitorCard",
        "type": "component",
        "file": "src/components/rate-limiting/UsageMonitorCard.tsx"
      },
      {
        "id": "comp-1173",
        "label": "UsageMonitorCard.test",
        "type": "component",
        "file": "src/components/rate-limiting/__tests__/UsageMonitorCard.test.tsx"
      },
      {
        "id": "comp-1174",
        "label": "RateLimitExceededDialog",
        "type": "component",
        "file": "src/components/rate-limiting/user/RateLimitExceededDialog.tsx"
      },
      {
        "id": "comp-1175",
        "label": "UpgradePrompt",
        "type": "component",
        "file": "src/components/rate-limiting/user/UpgradePrompt.tsx"
      },
      {
        "id": "comp-1176",
        "label": "UsageQuotaDisplay",
        "type": "component",
        "file": "src/components/rate-limiting/user/UsageQuotaDisplay.tsx"
      },
      {
        "id": "comp-1177",
        "label": "RateLimitExceededDialog.test",
        "type": "component",
        "file": "src/components/rate-limiting/user/__tests__/RateLimitExceededDialog.test.tsx"
      },
      {
        "id": "comp-1178",
        "label": "RealtimeAccessibility",
        "type": "component",
        "file": "src/components/realtime/RealtimeAccessibility.tsx"
      },
      {
        "id": "comp-1179",
        "label": "RealtimeMobileOptimizations",
        "type": "component",
        "file": "src/components/realtime/RealtimeMobileOptimizations.tsx"
      },
      {
        "id": "comp-1180",
        "label": "RealtimeStatusPanel",
        "type": "component",
        "file": "src/components/realtime/RealtimeStatusPanel.tsx"
      },
      {
        "id": "comp-1181",
        "label": "RealtimeToast",
        "type": "component",
        "file": "src/components/realtime/RealtimeToast.tsx"
      },
      {
        "id": "comp-1182",
        "label": "LeaderboardView",
        "type": "component",
        "file": "src/components/referrals/LeaderboardView.tsx"
      },
      {
        "id": "comp-1183",
        "label": "QRCodeGenerator",
        "type": "component",
        "file": "src/components/referrals/QRCodeGenerator.tsx"
      },
      {
        "id": "comp-1184",
        "label": "ReferralCenter",
        "type": "component",
        "file": "src/components/referrals/ReferralCenter.tsx"
      },
      {
        "id": "comp-1185",
        "label": "ReferralStats",
        "type": "component",
        "file": "src/components/referrals/ReferralStats.tsx"
      },
      {
        "id": "comp-1186",
        "label": "CreateReminderModal",
        "type": "component",
        "file": "src/components/reminders/CreateReminderModal.tsx"
      },
      {
        "id": "comp-1187",
        "label": "ReportingEngine.test",
        "type": "component",
        "file": "src/components/reporting/__tests__/ReportingEngine.test.tsx"
      },
      {
        "id": "comp-1188",
        "label": "ClientSatisfactionRadar",
        "type": "component",
        "file": "src/components/reporting/charts/ClientSatisfactionRadar.tsx"
      },
      {
        "id": "comp-1189",
        "label": "SeasonalTrendsChart",
        "type": "component",
        "file": "src/components/reporting/charts/SeasonalTrendsChart.tsx"
      },
      {
        "id": "comp-1190",
        "label": "VendorComparisonChart",
        "type": "component",
        "file": "src/components/reporting/charts/VendorComparisonChart.tsx"
      },
      {
        "id": "comp-1191",
        "label": "WeddingTimelineChart",
        "type": "component",
        "file": "src/components/reporting/charts/WeddingTimelineChart.tsx"
      },
      {
        "id": "comp-1192",
        "label": "WeddingRevenueChart.test",
        "type": "component",
        "file": "src/components/reporting/charts/__tests__/WeddingRevenueChart.test.tsx"
      },
      {
        "id": "comp-1193",
        "label": "ExportManager",
        "type": "component",
        "file": "src/components/reporting/export/ExportManager.tsx"
      },
      {
        "id": "comp-1194",
        "label": "ReportExporter",
        "type": "component",
        "file": "src/components/reporting/export/ReportExporter.tsx"
      },
      {
        "id": "comp-1195",
        "label": "exportUtils",
        "type": "component",
        "file": "src/components/reporting/export/exportUtils.ts"
      },
      {
        "id": "comp-1196",
        "label": "MobileReportBuilder.test",
        "type": "component",
        "file": "src/components/reporting/mobile/__tests__/MobileReportBuilder.test.tsx"
      },
      {
        "id": "comp-1197",
        "label": "TouchableReportCards.test",
        "type": "component",
        "file": "src/components/reporting/mobile/__tests__/TouchableReportCards.test.tsx"
      },
      {
        "id": "comp-1198",
        "label": "ReportDataCache.test",
        "type": "component",
        "file": "src/components/reporting/performance/__tests__/ReportDataCache.test.tsx"
      },
      {
        "id": "comp-1199",
        "label": "VirtualReportList.test",
        "type": "component",
        "file": "src/components/reporting/performance/__tests__/VirtualReportList.test.tsx"
      },
      {
        "id": "comp-1200",
        "label": "RealtimeJobManager",
        "type": "component",
        "file": "src/components/reporting/realtime/RealtimeJobManager.tsx"
      },
      {
        "id": "comp-1201",
        "label": "RealtimeReportGenerator",
        "type": "component",
        "file": "src/components/reporting/realtime/RealtimeReportGenerator.tsx"
      },
      {
        "id": "comp-1202",
        "label": "RealtimeReportGenerator.test",
        "type": "component",
        "file": "src/components/reporting/realtime/__tests__/RealtimeReportGenerator.test.tsx"
      },
      {
        "id": "comp-1203",
        "label": "useWebSocket",
        "type": "component",
        "file": "src/components/reporting/realtime/useWebSocket.ts"
      },
      {
        "id": "comp-1204",
        "label": "ReportCustomizer",
        "type": "component",
        "file": "src/components/reporting/templates/ReportCustomizer.tsx"
      },
      {
        "id": "comp-1205",
        "label": "ReportTemplateBuilder",
        "type": "component",
        "file": "src/components/reporting/templates/ReportTemplateBuilder.tsx"
      },
      {
        "id": "comp-1206",
        "label": "TemplateLibrary",
        "type": "component",
        "file": "src/components/reporting/templates/TemplateLibrary.tsx"
      },
      {
        "id": "comp-1207",
        "label": "ReportTemplateBuilder.test",
        "type": "component",
        "file": "src/components/reporting/templates/__tests__/ReportTemplateBuilder.test.tsx"
      },
      {
        "id": "comp-1208",
        "label": "CampaignPreview",
        "type": "component",
        "file": "src/components/reviews/CampaignPreview.tsx"
      },
      {
        "id": "comp-1209",
        "label": "MessageTemplateEditor",
        "type": "component",
        "file": "src/components/reviews/MessageTemplateEditor.tsx"
      },
      {
        "id": "comp-1210",
        "label": "PlatformToggle",
        "type": "component",
        "file": "src/components/reviews/PlatformToggle.tsx"
      },
      {
        "id": "comp-1211",
        "label": "ReviewCampaignBuilder",
        "type": "component",
        "file": "src/components/reviews/ReviewCampaignBuilder.tsx"
      },
      {
        "id": "comp-1212",
        "label": "ReviewCampaignCard",
        "type": "component",
        "file": "src/components/reviews/ReviewCampaignCard.tsx"
      },
      {
        "id": "comp-1213",
        "label": "ReviewDashboard",
        "type": "component",
        "file": "src/components/reviews/ReviewDashboard.tsx"
      },
      {
        "id": "comp-1214",
        "label": "ReviewMetrics",
        "type": "component",
        "file": "src/components/reviews/ReviewMetrics.tsx"
      },
      {
        "id": "comp-1215",
        "label": "ReviewPlatformIntegrations",
        "type": "component",
        "file": "src/components/reviews/ReviewPlatformIntegrations.tsx"
      },
      {
        "id": "comp-1216",
        "label": "ReviewAnalyticsDashboard",
        "type": "component",
        "file": "src/components/reviews/analytics/ReviewAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-1217",
        "label": "ReviewMetricsCards",
        "type": "component",
        "file": "src/components/reviews/analytics/ReviewMetricsCards.tsx"
      },
      {
        "id": "comp-1218",
        "label": "ReviewPerformanceCharts",
        "type": "component",
        "file": "src/components/reviews/analytics/ReviewPerformanceCharts.tsx"
      },
      {
        "id": "comp-1219",
        "label": "ReviewAnalyticsDashboard.test",
        "type": "component",
        "file": "src/components/reviews/analytics/__tests__/ReviewAnalyticsDashboard.test.tsx"
      },
      {
        "id": "comp-1220",
        "label": "ReviewMetricsCards.test",
        "type": "component",
        "file": "src/components/reviews/analytics/__tests__/ReviewMetricsCards.test.tsx"
      },
      {
        "id": "comp-1221",
        "label": "ReviewDashboardSection",
        "type": "component",
        "file": "src/components/reviews/wedme/ReviewDashboardSection.tsx"
      },
      {
        "id": "comp-1222",
        "label": "ReviewWidget",
        "type": "component",
        "file": "src/components/reviews/wedme/ReviewWidget.tsx"
      },
      {
        "id": "comp-1223",
        "label": "RSVPDashboard",
        "type": "component",
        "file": "src/components/rsvp/RSVPDashboard.tsx"
      },
      {
        "id": "comp-1224",
        "label": "AlertsAndNotifications",
        "type": "component",
        "file": "src/components/scalability/AlertsAndNotifications.tsx"
      },
      {
        "id": "comp-1225",
        "label": "CapacityPlanningWidget",
        "type": "component",
        "file": "src/components/scalability/CapacityPlanningWidget.tsx"
      },
      {
        "id": "comp-1226",
        "label": "DashboardHeader",
        "type": "component",
        "file": "src/components/scalability/DashboardHeader.tsx"
      },
      {
        "id": "comp-1227",
        "label": "MetricsOverviewPanel",
        "type": "component",
        "file": "src/components/scalability/MetricsOverviewPanel.tsx"
      },
      {
        "id": "comp-1228",
        "label": "ScalabilityInfrastructureDashboard",
        "type": "component",
        "file": "src/components/scalability/ScalabilityInfrastructureDashboard.tsx"
      },
      {
        "id": "comp-1229",
        "label": "ScalingEventsTimeline",
        "type": "component",
        "file": "src/components/scalability/ScalingEventsTimeline.tsx"
      },
      {
        "id": "comp-1230",
        "label": "ScalingPoliciesManager",
        "type": "component",
        "file": "src/components/scalability/ScalingPoliciesManager.tsx"
      },
      {
        "id": "comp-1231",
        "label": "ServiceHealthMatrix",
        "type": "component",
        "file": "src/components/scalability/ServiceHealthMatrix.tsx"
      },
      {
        "id": "comp-1232",
        "label": "WeddingAwareScaling",
        "type": "component",
        "file": "src/components/scalability/WeddingAwareScaling.tsx"
      },
      {
        "id": "comp-1233",
        "label": "index",
        "type": "component",
        "file": "src/components/scalability/index.ts"
      },
      {
        "id": "comp-1234",
        "label": "AvailabilityCalendar",
        "type": "component",
        "file": "src/components/scheduling/AvailabilityCalendar.tsx"
      },
      {
        "id": "comp-1235",
        "label": "BookingPageBuilder",
        "type": "component",
        "file": "src/components/scheduling/BookingPageBuilder.tsx"
      },
      {
        "id": "comp-1236",
        "label": "ClientBookingForm",
        "type": "component",
        "file": "src/components/scheduling/ClientBookingForm.tsx"
      },
      {
        "id": "comp-1237",
        "label": "AdvancedSearchInterface",
        "type": "component",
        "file": "src/components/search/AdvancedSearchInterface.tsx"
      },
      {
        "id": "comp-1238",
        "label": "AvailabilityFilter",
        "type": "component",
        "file": "src/components/search/AvailabilityFilter.tsx"
      },
      {
        "id": "comp-1239",
        "label": "GlobalSearch",
        "type": "component",
        "file": "src/components/search/GlobalSearch.tsx"
      },
      {
        "id": "comp-1240",
        "label": "LocationSearchFilter",
        "type": "component",
        "file": "src/components/search/LocationSearchFilter.tsx"
      },
      {
        "id": "comp-1241",
        "label": "PriceRangeFilter",
        "type": "component",
        "file": "src/components/search/PriceRangeFilter.tsx"
      },
      {
        "id": "comp-1242",
        "label": "ReviewScoreFilter",
        "type": "component",
        "file": "src/components/search/ReviewScoreFilter.tsx"
      },
      {
        "id": "comp-1243",
        "label": "SavedSearches",
        "type": "component",
        "file": "src/components/search/SavedSearches.tsx"
      },
      {
        "id": "comp-1244",
        "label": "SearchFilters",
        "type": "component",
        "file": "src/components/search/SearchFilters.tsx"
      },
      {
        "id": "comp-1245",
        "label": "SearchResults",
        "type": "component",
        "file": "src/components/search/SearchResults.tsx"
      },
      {
        "id": "comp-1246",
        "label": "SearchSuggestions",
        "type": "component",
        "file": "src/components/search/SearchSuggestions.tsx"
      },
      {
        "id": "comp-1247",
        "label": "VendorCategoryFilter",
        "type": "component",
        "file": "src/components/search/VendorCategoryFilter.tsx"
      },
      {
        "id": "comp-1248",
        "label": "AccessibleSeatingManager",
        "type": "component",
        "file": "src/components/seating/AccessibleSeatingManager.tsx"
      },
      {
        "id": "comp-1249",
        "label": "BulkAssignmentTools",
        "type": "component",
        "file": "src/components/seating/BulkAssignmentTools.tsx"
      },
      {
        "id": "comp-1250",
        "label": "ConflictAlert",
        "type": "component",
        "file": "src/components/seating/ConflictAlert.tsx"
      },
      {
        "id": "comp-1251",
        "label": "ConflictHeatMapVisualization",
        "type": "component",
        "file": "src/components/seating/ConflictHeatMapVisualization.tsx"
      },
      {
        "id": "comp-1252",
        "label": "EnhancedSeatingArrangementManager",
        "type": "component",
        "file": "src/components/seating/EnhancedSeatingArrangementManager.tsx"
      },
      {
        "id": "comp-1253",
        "label": "GuestChip",
        "type": "component",
        "file": "src/components/seating/GuestChip.tsx"
      },
      {
        "id": "comp-1254",
        "label": "GuestList",
        "type": "component",
        "file": "src/components/seating/GuestList.tsx"
      },
      {
        "id": "comp-1255",
        "label": "MobileSeatingInterface",
        "type": "component",
        "file": "src/components/seating/MobileSeatingInterface.tsx"
      },
      {
        "id": "comp-1256",
        "label": "ProductionSeatingInterface",
        "type": "component",
        "file": "src/components/seating/ProductionSeatingInterface.tsx"
      },
      {
        "id": "comp-1257",
        "label": "ProgressiveSeatingLoader",
        "type": "component",
        "file": "src/components/seating/ProgressiveSeatingLoader.tsx"
      },
      {
        "id": "comp-1258",
        "label": "RealtimeCollaborationManager",
        "type": "component",
        "file": "src/components/seating/RealtimeCollaborationManager.tsx"
      },
      {
        "id": "comp-1259",
        "label": "SeatingAnimations",
        "type": "component",
        "file": "src/components/seating/SeatingAnimations.tsx"
      },
      {
        "id": "comp-1260",
        "label": "SeatingArrangementManager",
        "type": "component",
        "file": "src/components/seating/SeatingArrangementManager.tsx"
      },
      {
        "id": "comp-1261",
        "label": "SeatingArrangementResponsive",
        "type": "component",
        "file": "src/components/seating/SeatingArrangementResponsive.tsx"
      },
      {
        "id": "comp-1262",
        "label": "SeatingControls",
        "type": "component",
        "file": "src/components/seating/SeatingControls.tsx"
      },
      {
        "id": "comp-1263",
        "label": "SeatingExportManager",
        "type": "component",
        "file": "src/components/seating/SeatingExportManager.tsx"
      },
      {
        "id": "comp-1264",
        "label": "SecureSeatingArrangement",
        "type": "component",
        "file": "src/components/seating/SecureSeatingArrangement.tsx"
      },
      {
        "id": "comp-1265",
        "label": "TableCard",
        "type": "component",
        "file": "src/components/seating/TableCard.tsx"
      },
      {
        "id": "comp-1266",
        "label": "TableLayout",
        "type": "component",
        "file": "src/components/seating/TableLayout.tsx"
      },
      {
        "id": "comp-1267",
        "label": "TableToolbar",
        "type": "component",
        "file": "src/components/seating/TableToolbar.tsx"
      },
      {
        "id": "comp-1268",
        "label": "AdvancedSecurityDashboard",
        "type": "component",
        "file": "src/components/security/AdvancedSecurityDashboard.tsx"
      },
      {
        "id": "comp-1269",
        "label": "AutomatedMonitoringDashboard",
        "type": "component",
        "file": "src/components/security/AutomatedMonitoringDashboard.tsx"
      },
      {
        "id": "comp-1270",
        "label": "CSRFProtectedForm",
        "type": "component",
        "file": "src/components/security/CSRFProtectedForm.tsx"
      },
      {
        "id": "comp-1271",
        "label": "MFASettings",
        "type": "component",
        "file": "src/components/security/MFASettings.tsx"
      },
      {
        "id": "comp-1272",
        "label": "MFASetup",
        "type": "component",
        "file": "src/components/security/MFASetup.tsx"
      },
      {
        "id": "comp-1273",
        "label": "MFAVerification",
        "type": "component",
        "file": "src/components/security/MFAVerification.tsx"
      },
      {
        "id": "comp-1274",
        "label": "MultiJurisdictionComplianceDashboard",
        "type": "component",
        "file": "src/components/security/MultiJurisdictionComplianceDashboard.tsx"
      },
      {
        "id": "comp-1275",
        "label": "SecurityDashboard",
        "type": "component",
        "file": "src/components/security/SecurityDashboard.tsx"
      },
      {
        "id": "comp-1276",
        "label": "SecurityReports",
        "type": "component",
        "file": "src/components/security/SecurityReports.tsx"
      },
      {
        "id": "comp-1277",
        "label": "TouchInputValidator",
        "type": "component",
        "file": "src/components/security/TouchInputValidator.tsx"
      },
      {
        "id": "comp-1278",
        "label": "ContainmentActions",
        "type": "component",
        "file": "src/components/security/incident/ContainmentActions.tsx"
      },
      {
        "id": "comp-1279",
        "label": "EvidencePreservation",
        "type": "component",
        "file": "src/components/security/incident/EvidencePreservation.tsx"
      },
      {
        "id": "comp-1280",
        "label": "IncidentCard",
        "type": "component",
        "file": "src/components/security/incident/IncidentCard.tsx"
      },
      {
        "id": "comp-1281",
        "label": "NotificationCenter",
        "type": "component",
        "file": "src/components/security/incident/NotificationCenter.tsx"
      },
      {
        "id": "comp-1282",
        "label": "SeverityIndicator",
        "type": "component",
        "file": "src/components/security/incident/SeverityIndicator.tsx"
      },
      {
        "id": "comp-1283",
        "label": "index",
        "type": "component",
        "file": "src/components/security/incident/index.ts"
      },
      {
        "id": "comp-1284",
        "label": "RequestMetricsChart",
        "type": "component",
        "file": "src/components/security/monitoring/RequestMetricsChart.tsx"
      },
      {
        "id": "comp-1285",
        "label": "ThreatAlertCard",
        "type": "component",
        "file": "src/components/security/monitoring/ThreatAlertCard.tsx"
      },
      {
        "id": "comp-1286",
        "label": "UserBehaviorAnalyzer",
        "type": "component",
        "file": "src/components/security/monitoring/UserBehaviorAnalyzer.tsx"
      },
      {
        "id": "comp-1287",
        "label": "NotificationPreferences",
        "type": "component",
        "file": "src/components/settings/NotificationPreferences.tsx"
      },
      {
        "id": "comp-1288",
        "label": "SMSConfigurationWizard",
        "type": "component",
        "file": "src/components/sms/SMSConfigurationWizard.tsx"
      },
      {
        "id": "comp-1289",
        "label": "SMSPerformanceDashboard",
        "type": "component",
        "file": "src/components/sms/SMSPerformanceDashboard.tsx"
      },
      {
        "id": "comp-1290",
        "label": "QuickActions",
        "type": "component",
        "file": "src/components/supplier/mobile/QuickActions.tsx"
      },
      {
        "id": "comp-1291",
        "label": "ScheduleFilters",
        "type": "component",
        "file": "src/components/supplier/mobile/ScheduleFilters.tsx"
      },
      {
        "id": "comp-1292",
        "label": "ScheduleOverview",
        "type": "component",
        "file": "src/components/supplier/mobile/ScheduleOverview.tsx"
      },
      {
        "id": "comp-1293",
        "label": "StatusSummary",
        "type": "component",
        "file": "src/components/supplier/mobile/StatusSummary.tsx"
      },
      {
        "id": "comp-1294",
        "label": "SupplierHeader",
        "type": "component",
        "file": "src/components/supplier/mobile/SupplierHeader.tsx"
      },
      {
        "id": "comp-1295",
        "label": "SupplierNavigation",
        "type": "component",
        "file": "src/components/supplier/mobile/SupplierNavigation.tsx"
      },
      {
        "id": "comp-1296",
        "label": "TodayEvents",
        "type": "component",
        "file": "src/components/supplier/mobile/TodayEvents.tsx"
      },
      {
        "id": "comp-1297",
        "label": "UpcomingBookings",
        "type": "component",
        "file": "src/components/supplier/mobile/UpcomingBookings.tsx"
      },
      {
        "id": "comp-1298",
        "label": "AITaggingInterface",
        "type": "component",
        "file": "src/components/supplier/portfolio/AITaggingInterface.tsx"
      },
      {
        "id": "comp-1299",
        "label": "FeaturedWorkEditor",
        "type": "component",
        "file": "src/components/supplier/portfolio/FeaturedWorkEditor.tsx"
      },
      {
        "id": "comp-1300",
        "label": "ImageUploader",
        "type": "component",
        "file": "src/components/supplier/portfolio/ImageUploader.tsx"
      },
      {
        "id": "comp-1301",
        "label": "PortfolioManager",
        "type": "component",
        "file": "src/components/supplier/portfolio/PortfolioManager.tsx"
      },
      {
        "id": "comp-1302",
        "label": "MobileScheduleView",
        "type": "component",
        "file": "src/components/supplier/schedule/MobileScheduleView.tsx"
      },
      {
        "id": "comp-1303",
        "label": "GeographicSearchResults",
        "type": "component",
        "file": "src/components/suppliers/GeographicSearchResults.tsx"
      },
      {
        "id": "comp-1304",
        "label": "LocationSearchFilter",
        "type": "component",
        "file": "src/components/suppliers/LocationSearchFilter.tsx"
      },
      {
        "id": "comp-1305",
        "label": "ProfileCreationWizard",
        "type": "component",
        "file": "src/components/suppliers/ProfileCreationWizard.tsx"
      },
      {
        "id": "comp-1306",
        "label": "ProfileCreationWizardLazy",
        "type": "component",
        "file": "src/components/suppliers/ProfileCreationWizardLazy.tsx"
      },
      {
        "id": "comp-1307",
        "label": "ProfileManagementDashboard",
        "type": "component",
        "file": "src/components/suppliers/ProfileManagementDashboard.tsx"
      },
      {
        "id": "comp-1308",
        "label": "SEOOptimization",
        "type": "component",
        "file": "src/components/suppliers/SEOOptimization.tsx"
      },
      {
        "id": "comp-1309",
        "label": "ServiceAreaManager",
        "type": "component",
        "file": "src/components/suppliers/ServiceAreaManager.tsx"
      },
      {
        "id": "comp-1310",
        "label": "SupplierPortal",
        "type": "component",
        "file": "src/components/suppliers/SupplierPortal.tsx"
      },
      {
        "id": "comp-1311",
        "label": "VerificationWorkflow",
        "type": "component",
        "file": "src/components/suppliers/VerificationWorkflow.tsx"
      },
      {
        "id": "comp-1312",
        "label": "CatererScheduleView",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/CatererScheduleView.tsx"
      },
      {
        "id": "comp-1313",
        "label": "CoordinatorScheduleView",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/CoordinatorScheduleView.tsx"
      },
      {
        "id": "comp-1314",
        "label": "DJScheduleView",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/DJScheduleView.tsx"
      },
      {
        "id": "comp-1315",
        "label": "FloristScheduleView",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/FloristScheduleView.tsx"
      },
      {
        "id": "comp-1316",
        "label": "PhotographerScheduleView",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/PhotographerScheduleView.tsx"
      },
      {
        "id": "comp-1317",
        "label": "SupplierScheduleViewSelector",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/SupplierScheduleViewSelector.tsx"
      },
      {
        "id": "comp-1318",
        "label": "TransportScheduleView",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/TransportScheduleView.tsx"
      },
      {
        "id": "comp-1319",
        "label": "index",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/index.ts"
      },
      {
        "id": "comp-1320",
        "label": "types",
        "type": "component",
        "file": "src/components/suppliers/schedule-views/types.ts"
      },
      {
        "id": "comp-1321",
        "label": "MetricsDashboard",
        "type": "component",
        "file": "src/components/support/MetricsDashboard.tsx"
      },
      {
        "id": "comp-1322",
        "label": "ResponseManager",
        "type": "component",
        "file": "src/components/support/ResponseManager.tsx"
      },
      {
        "id": "comp-1323",
        "label": "TemplateSelector",
        "type": "component",
        "file": "src/components/support/TemplateSelector.tsx"
      },
      {
        "id": "comp-1324",
        "label": "TicketDashboard",
        "type": "component",
        "file": "src/components/support/TicketDashboard.tsx"
      },
      {
        "id": "comp-1325",
        "label": "TicketDetailView",
        "type": "component",
        "file": "src/components/support/TicketDetailView.tsx"
      },
      {
        "id": "comp-1326",
        "label": "TicketQueue",
        "type": "component",
        "file": "src/components/support/TicketQueue.tsx"
      },
      {
        "id": "comp-1327",
        "label": "AttachmentUploader",
        "type": "component",
        "file": "src/components/support/mobile/AttachmentUploader.tsx"
      },
      {
        "id": "comp-1328",
        "label": "NotificationManager",
        "type": "component",
        "file": "src/components/support/mobile/NotificationManager.tsx"
      },
      {
        "id": "comp-1329",
        "label": "OfflineQueueManager",
        "type": "component",
        "file": "src/components/support/mobile/OfflineQueueManager.tsx"
      },
      {
        "id": "comp-1330",
        "label": "QuickActionsPanel",
        "type": "component",
        "file": "src/components/support/mobile/QuickActionsPanel.tsx"
      },
      {
        "id": "comp-1331",
        "label": "SupportDashboard",
        "type": "component",
        "file": "src/components/support/mobile/SupportDashboard.tsx"
      },
      {
        "id": "comp-1332",
        "label": "TicketDetailView",
        "type": "component",
        "file": "src/components/support/mobile/TicketDetailView.tsx"
      },
      {
        "id": "comp-1333",
        "label": "TicketListView",
        "type": "component",
        "file": "src/components/support/mobile/TicketListView.tsx"
      },
      {
        "id": "comp-1334",
        "label": "TicketSubmissionForm",
        "type": "component",
        "file": "src/components/support/mobile/TicketSubmissionForm.tsx"
      },
      {
        "id": "comp-1335",
        "label": "VoiceNoteRecorder",
        "type": "component",
        "file": "src/components/support/mobile/VoiceNoteRecorder.tsx"
      },
      {
        "id": "comp-1336",
        "label": "EnhancedSyncStatus",
        "type": "component",
        "file": "src/components/sync/EnhancedSyncStatus.tsx"
      },
      {
        "id": "comp-1337",
        "label": "SyncSystemDemo",
        "type": "component",
        "file": "src/components/sync/SyncSystemDemo.tsx"
      },
      {
        "id": "comp-1338",
        "label": "TagAnalytics",
        "type": "component",
        "file": "src/components/tags/TagAnalytics.tsx"
      },
      {
        "id": "comp-1339",
        "label": "TagFilter",
        "type": "component",
        "file": "src/components/tags/TagFilter.tsx"
      },
      {
        "id": "comp-1340",
        "label": "TagInput",
        "type": "component",
        "file": "src/components/tags/TagInput.tsx"
      },
      {
        "id": "comp-1341",
        "label": "TagManager",
        "type": "component",
        "file": "src/components/tags/TagManager.tsx"
      },
      {
        "id": "comp-1342",
        "label": "AutomatedAssignmentManager",
        "type": "component",
        "file": "src/components/tasks/AutomatedAssignmentManager.tsx"
      },
      {
        "id": "comp-1343",
        "label": "BulkTaskOperations",
        "type": "component",
        "file": "src/components/tasks/BulkTaskOperations.tsx"
      },
      {
        "id": "comp-1344",
        "label": "CalendarIntegrationManager",
        "type": "component",
        "file": "src/components/tasks/CalendarIntegrationManager.tsx"
      },
      {
        "id": "comp-1345",
        "label": "ChecklistGenerator",
        "type": "component",
        "file": "src/components/tasks/ChecklistGenerator.tsx"
      },
      {
        "id": "comp-1346",
        "label": "PhotoEvidenceUpload",
        "type": "component",
        "file": "src/components/tasks/PhotoEvidenceUpload.tsx"
      },
      {
        "id": "comp-1347",
        "label": "ProgressAnalyticsDashboard",
        "type": "component",
        "file": "src/components/tasks/ProgressAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-1348",
        "label": "PushNotificationManager",
        "type": "component",
        "file": "src/components/tasks/PushNotificationManager.tsx"
      },
      {
        "id": "comp-1349",
        "label": "ReminderSystemManager",
        "type": "component",
        "file": "src/components/tasks/ReminderSystemManager.tsx"
      },
      {
        "id": "comp-1350",
        "label": "StatusUpdateForm",
        "type": "component",
        "file": "src/components/tasks/StatusUpdateForm.tsx"
      },
      {
        "id": "comp-1351",
        "label": "TaskComments",
        "type": "component",
        "file": "src/components/tasks/TaskComments.tsx"
      },
      {
        "id": "comp-1352",
        "label": "TaskCreator",
        "type": "component",
        "file": "src/components/tasks/TaskCreator.tsx"
      },
      {
        "id": "comp-1353",
        "label": "TaskDependencyManager",
        "type": "component",
        "file": "src/components/tasks/TaskDependencyManager.tsx"
      },
      {
        "id": "comp-1354",
        "label": "TaskProgressIndicator",
        "type": "component",
        "file": "src/components/tasks/TaskProgressIndicator.tsx"
      },
      {
        "id": "comp-1355",
        "label": "TaskStatusCard",
        "type": "component",
        "file": "src/components/tasks/TaskStatusCard.tsx"
      },
      {
        "id": "comp-1356",
        "label": "TaskTemplateLibrary",
        "type": "component",
        "file": "src/components/tasks/TaskTemplateLibrary.tsx"
      },
      {
        "id": "comp-1357",
        "label": "TaskTemplatesManager",
        "type": "component",
        "file": "src/components/tasks/TaskTemplatesManager.tsx"
      },
      {
        "id": "comp-1358",
        "label": "TaskTimingValidator",
        "type": "component",
        "file": "src/components/tasks/TaskTimingValidator.tsx"
      },
      {
        "id": "comp-1359",
        "label": "TaskTrackingDashboard",
        "type": "component",
        "file": "src/components/tasks/TaskTrackingDashboard.tsx"
      },
      {
        "id": "comp-1360",
        "label": "TimelineTemplateBuilder",
        "type": "component",
        "file": "src/components/tasks/TimelineTemplateBuilder.tsx"
      },
      {
        "id": "comp-1361",
        "label": "CategoryFilter",
        "type": "component",
        "file": "src/components/tasks/categories/CategoryFilter.tsx"
      },
      {
        "id": "comp-1362",
        "label": "CategoryHelperAssignment",
        "type": "component",
        "file": "src/components/tasks/categories/CategoryHelperAssignment.tsx"
      },
      {
        "id": "comp-1363",
        "label": "CategoryPreferences",
        "type": "component",
        "file": "src/components/tasks/categories/CategoryPreferences.tsx"
      },
      {
        "id": "comp-1364",
        "label": "TaskCategoryManager",
        "type": "component",
        "file": "src/components/tasks/categories/TaskCategoryManager.tsx"
      },
      {
        "id": "comp-1365",
        "label": "TaskTimeline",
        "type": "component",
        "file": "src/components/tasks/categories/TaskTimeline.tsx"
      },
      {
        "id": "comp-1366",
        "label": "TaskTemplateGallery",
        "type": "component",
        "file": "src/components/tasks/mobile/TaskTemplateGallery.tsx"
      },
      {
        "id": "comp-1367",
        "label": "TouchTaskCreationForm",
        "type": "component",
        "file": "src/components/tasks/mobile/TouchTaskCreationForm.tsx"
      },
      {
        "id": "comp-1368",
        "label": "TeamManager",
        "type": "component",
        "file": "src/components/team/TeamManager.tsx"
      },
      {
        "id": "comp-1369",
        "label": "BrandingCustomizer",
        "type": "component",
        "file": "src/components/templates/BrandingCustomizer.tsx"
      },
      {
        "id": "comp-1370",
        "label": "BrandingCustomizerLazy",
        "type": "component",
        "file": "src/components/templates/BrandingCustomizerLazy.tsx"
      },
      {
        "id": "comp-1371",
        "label": "BrandingSync",
        "type": "component",
        "file": "src/components/templates/BrandingSync.tsx"
      },
      {
        "id": "comp-1372",
        "label": "IntegrationTestExample",
        "type": "component",
        "file": "src/components/templates/IntegrationTestExample.tsx"
      },
      {
        "id": "comp-1373",
        "label": "ResponsivePreview",
        "type": "component",
        "file": "src/components/templates/ResponsivePreview.tsx"
      },
      {
        "id": "comp-1374",
        "label": "TemplateGallery",
        "type": "component",
        "file": "src/components/templates/TemplateGallery.tsx"
      },
      {
        "id": "comp-1375",
        "label": "TemplateIntegration",
        "type": "component",
        "file": "src/components/templates/TemplateIntegration.tsx"
      },
      {
        "id": "comp-1376",
        "label": "TemplateManagementUI",
        "type": "component",
        "file": "src/components/templates/TemplateManagementUI.tsx"
      },
      {
        "id": "comp-1377",
        "label": "TemplateModal",
        "type": "component",
        "file": "src/components/templates/TemplateModal.tsx"
      },
      {
        "id": "comp-1378",
        "label": "TemplatePreviewSystem",
        "type": "component",
        "file": "src/components/templates/TemplatePreviewSystem.tsx"
      },
      {
        "id": "comp-1379",
        "label": "TouchDragDrop",
        "type": "component",
        "file": "src/components/templates/TouchDragDrop.tsx"
      },
      {
        "id": "comp-1380",
        "label": "WedMeIntegration",
        "type": "component",
        "file": "src/components/templates/WedMeIntegration.tsx"
      },
      {
        "id": "comp-1381",
        "label": "WeddingComponentLibrary",
        "type": "component",
        "file": "src/components/templates/WeddingComponentLibrary.tsx"
      },
      {
        "id": "comp-1382",
        "label": "WidgetLibrary",
        "type": "component",
        "file": "src/components/templates/WidgetLibrary.tsx"
      },
      {
        "id": "comp-1383",
        "label": "WidgetOrchestrator",
        "type": "component",
        "file": "src/components/templates/WidgetOrchestrator.tsx"
      },
      {
        "id": "comp-1384",
        "label": "MockServiceStatus",
        "type": "component",
        "file": "src/components/testing/MockServiceStatus.tsx"
      },
      {
        "id": "comp-1385",
        "label": "TestDataFactoryManager",
        "type": "component",
        "file": "src/components/testing/TestDataFactoryManager.tsx"
      },
      {
        "id": "comp-1386",
        "label": "TestExecutionCard",
        "type": "component",
        "file": "src/components/testing/TestExecutionCard.tsx"
      },
      {
        "id": "comp-1387",
        "label": "WorkflowStepIndicator",
        "type": "component",
        "file": "src/components/testing/WorkflowStepIndicator.tsx"
      },
      {
        "id": "comp-1388",
        "label": "ConflictDetector",
        "type": "component",
        "file": "src/components/timeline/ConflictDetector.tsx"
      },
      {
        "id": "comp-1389",
        "label": "InteractiveTimelineBuilder",
        "type": "component",
        "file": "src/components/timeline/InteractiveTimelineBuilder.tsx"
      },
      {
        "id": "comp-1390",
        "label": "LiveEditingIndicators",
        "type": "component",
        "file": "src/components/timeline/LiveEditingIndicators.tsx"
      },
      {
        "id": "comp-1391",
        "label": "RealtimeTimelineProvider",
        "type": "component",
        "file": "src/components/timeline/RealtimeTimelineProvider.tsx"
      },
      {
        "id": "comp-1392",
        "label": "TimelineCollaborationProvider",
        "type": "component",
        "file": "src/components/timeline/TimelineCollaborationProvider.tsx"
      },
      {
        "id": "comp-1393",
        "label": "TimelineConflictResolver",
        "type": "component",
        "file": "src/components/timeline/TimelineConflictResolver.tsx"
      },
      {
        "id": "comp-1394",
        "label": "TimelineEventCard",
        "type": "component",
        "file": "src/components/timeline/TimelineEventCard.tsx"
      },
      {
        "id": "comp-1395",
        "label": "TimelineEventForm",
        "type": "component",
        "file": "src/components/timeline/TimelineEventForm.tsx"
      },
      {
        "id": "comp-1396",
        "label": "TimelineExportDialog",
        "type": "component",
        "file": "src/components/timeline/TimelineExportDialog.tsx"
      },
      {
        "id": "comp-1397",
        "label": "TimelineRealtimeIndicator",
        "type": "component",
        "file": "src/components/timeline/TimelineRealtimeIndicator.tsx"
      },
      {
        "id": "comp-1398",
        "label": "TimelineRuler",
        "type": "component",
        "file": "src/components/timeline/TimelineRuler.tsx"
      },
      {
        "id": "comp-1399",
        "label": "TimelineTemplateLibrary",
        "type": "component",
        "file": "src/components/timeline/TimelineTemplateLibrary.tsx"
      },
      {
        "id": "comp-1400",
        "label": "TimelineVendorPanel",
        "type": "component",
        "file": "src/components/timeline/TimelineVendorPanel.tsx"
      },
      {
        "id": "comp-1401",
        "label": "VirtualizedTimeline",
        "type": "component",
        "file": "src/components/timeline/VirtualizedTimeline.tsx"
      },
      {
        "id": "comp-1402",
        "label": "TimelineCollaborationProvider.test",
        "type": "component",
        "file": "src/components/timeline/__tests__/TimelineCollaborationProvider.test.tsx"
      },
      {
        "id": "comp-1403",
        "label": "TimelineExportDialog.test",
        "type": "component",
        "file": "src/components/timeline/__tests__/TimelineExportDialog.test.tsx"
      },
      {
        "id": "comp-1404",
        "label": "PinchZoomImage",
        "type": "component",
        "file": "src/components/touch/PinchZoomImage.tsx"
      },
      {
        "id": "comp-1405",
        "label": "PullToRefresh",
        "type": "component",
        "file": "src/components/touch/PullToRefresh.tsx"
      },
      {
        "id": "comp-1406",
        "label": "SwipeNavigation",
        "type": "component",
        "file": "src/components/touch/SwipeNavigation.tsx"
      },
      {
        "id": "comp-1407",
        "label": "SwipeableNav",
        "type": "component",
        "file": "src/components/touch/SwipeableNav.tsx"
      },
      {
        "id": "comp-1408",
        "label": "ThumbNavigationBar",
        "type": "component",
        "file": "src/components/touch/ThumbNavigationBar.tsx"
      },
      {
        "id": "comp-1409",
        "label": "TouchButton",
        "type": "component",
        "file": "src/components/touch/TouchButton.tsx"
      },
      {
        "id": "comp-1410",
        "label": "TouchDrawer",
        "type": "component",
        "file": "src/components/touch/TouchDrawer.tsx"
      },
      {
        "id": "comp-1411",
        "label": "TouchGestureHandler",
        "type": "component",
        "file": "src/components/touch/TouchGestureHandler.tsx"
      },
      {
        "id": "comp-1412",
        "label": "TouchInput",
        "type": "component",
        "file": "src/components/touch/TouchInput.tsx"
      },
      {
        "id": "comp-1413",
        "label": "TouchOptimizedButton",
        "type": "component",
        "file": "src/components/touch/TouchOptimizedButton.tsx"
      },
      {
        "id": "comp-1414",
        "label": "TouchOptimizedCalendar",
        "type": "component",
        "file": "src/components/touch/TouchOptimizedCalendar.tsx"
      },
      {
        "id": "comp-1415",
        "label": "TouchTimeline",
        "type": "component",
        "file": "src/components/touch/TouchTimeline.tsx"
      },
      {
        "id": "comp-1416",
        "label": "index",
        "type": "component",
        "file": "src/components/touch/index.ts"
      },
      {
        "id": "comp-1417",
        "label": "LocationInput",
        "type": "component",
        "file": "src/components/travel/LocationInput.tsx"
      },
      {
        "id": "comp-1418",
        "label": "RouteResults",
        "type": "component",
        "file": "src/components/travel/RouteResults.tsx"
      },
      {
        "id": "comp-1419",
        "label": "TrafficAnalysis",
        "type": "component",
        "file": "src/components/travel/TrafficAnalysis.tsx"
      },
      {
        "id": "comp-1420",
        "label": "TravelTimeCalculator",
        "type": "component",
        "file": "src/components/travel/TravelTimeCalculator.tsx"
      },
      {
        "id": "comp-1421",
        "label": "InteractiveTooltips",
        "type": "component",
        "file": "src/components/trial/InteractiveTooltips.tsx"
      },
      {
        "id": "comp-1422",
        "label": "MilestoneProgress",
        "type": "component",
        "file": "src/components/trial/MilestoneProgress.tsx"
      },
      {
        "id": "comp-1423",
        "label": "ROIDisplay",
        "type": "component",
        "file": "src/components/trial/ROIDisplay.tsx"
      },
      {
        "id": "comp-1424",
        "label": "TrialActivityFeed",
        "type": "component",
        "file": "src/components/trial/TrialActivityFeed.tsx"
      },
      {
        "id": "comp-1425",
        "label": "TrialBanner",
        "type": "component",
        "file": "src/components/trial/TrialBanner.tsx"
      },
      {
        "id": "comp-1426",
        "label": "TrialBusinessIntelligenceDashboard",
        "type": "component",
        "file": "src/components/trial/TrialBusinessIntelligenceDashboard.tsx"
      },
      {
        "id": "comp-1427",
        "label": "TrialChecklist",
        "type": "component",
        "file": "src/components/trial/TrialChecklist.tsx"
      },
      {
        "id": "comp-1428",
        "label": "TrialConversionFlow",
        "type": "component",
        "file": "src/components/trial/TrialConversionFlow.tsx"
      },
      {
        "id": "comp-1429",
        "label": "TrialCountdown",
        "type": "component",
        "file": "src/components/trial/TrialCountdown.tsx"
      },
      {
        "id": "comp-1430",
        "label": "TrialDashboard",
        "type": "component",
        "file": "src/components/trial/TrialDashboard.tsx"
      },
      {
        "id": "comp-1431",
        "label": "TrialExtensionModal",
        "type": "component",
        "file": "src/components/trial/TrialExtensionModal.tsx"
      },
      {
        "id": "comp-1432",
        "label": "TrialMilestones",
        "type": "component",
        "file": "src/components/trial/TrialMilestones.tsx"
      },
      {
        "id": "comp-1433",
        "label": "TrialProgressBar",
        "type": "component",
        "file": "src/components/trial/TrialProgressBar.tsx"
      },
      {
        "id": "comp-1434",
        "label": "TrialRecommendations",
        "type": "component",
        "file": "src/components/trial/TrialRecommendations.tsx"
      },
      {
        "id": "comp-1435",
        "label": "TrialStatusWidget",
        "type": "component",
        "file": "src/components/trial/TrialStatusWidget.tsx"
      },
      {
        "id": "comp-1436",
        "label": "TrialSummaryReport",
        "type": "component",
        "file": "src/components/trial/TrialSummaryReport.tsx"
      },
      {
        "id": "comp-1437",
        "label": "TrialTips",
        "type": "component",
        "file": "src/components/trial/TrialTips.tsx"
      },
      {
        "id": "comp-1438",
        "label": "UsageMeter",
        "type": "component",
        "file": "src/components/trial/UsageMeter.tsx"
      },
      {
        "id": "comp-1439",
        "label": "trial-animations",
        "type": "component",
        "file": "src/components/trial/animations/trial-animations.ts"
      },
      {
        "id": "comp-1440",
        "label": "TutorialCelebration",
        "type": "component",
        "file": "src/components/tutorial/TutorialCelebration.tsx"
      },
      {
        "id": "comp-1441",
        "label": "TutorialManager",
        "type": "component",
        "file": "src/components/tutorial/TutorialManager.tsx"
      },
      {
        "id": "comp-1442",
        "label": "ColorPicker",
        "type": "component",
        "file": "src/components/ui/ColorPicker.tsx"
      },
      {
        "id": "comp-1443",
        "label": "EmptyState",
        "type": "component",
        "file": "src/components/ui/EmptyState.tsx"
      },
      {
        "id": "comp-1444",
        "label": "ErrorBoundary",
        "type": "component",
        "file": "src/components/ui/ErrorBoundary.tsx"
      },
      {
        "id": "comp-1445",
        "label": "LoadingSkeleton",
        "type": "component",
        "file": "src/components/ui/LoadingSkeleton.tsx"
      },
      {
        "id": "comp-1446",
        "label": "LoadingStates",
        "type": "component",
        "file": "src/components/ui/LoadingStates.tsx"
      },
      {
        "id": "comp-1447",
        "label": "MagicAnimations",
        "type": "component",
        "file": "src/components/ui/MagicAnimations.tsx"
      },
      {
        "id": "comp-1448",
        "label": "MobileNav",
        "type": "component",
        "file": "src/components/ui/MobileNav.tsx"
      },
      {
        "id": "comp-1449",
        "label": "OnboardingFlow",
        "type": "component",
        "file": "src/components/ui/OnboardingFlow.tsx"
      },
      {
        "id": "comp-1450",
        "label": "ProgressIndicator",
        "type": "component",
        "file": "src/components/ui/ProgressIndicator.tsx"
      },
      {
        "id": "comp-1451",
        "label": "RealtimeIndicator",
        "type": "component",
        "file": "src/components/ui/RealtimeIndicator.tsx"
      },
      {
        "id": "comp-1452",
        "label": "Toast",
        "type": "component",
        "file": "src/components/ui/Toast.tsx"
      },
      {
        "id": "comp-1453",
        "label": "alert-dialog",
        "type": "component",
        "file": "src/components/ui/alert-dialog.tsx"
      },
      {
        "id": "comp-1454",
        "label": "alert",
        "type": "component",
        "file": "src/components/ui/alert.tsx"
      },
      {
        "id": "comp-1455",
        "label": "avatar",
        "type": "component",
        "file": "src/components/ui/avatar.tsx"
      },
      {
        "id": "comp-1456",
        "label": "badge",
        "type": "component",
        "file": "src/components/ui/badge.tsx"
      },
      {
        "id": "comp-1457",
        "label": "button-untitled",
        "type": "component",
        "file": "src/components/ui/button-untitled.tsx"
      },
      {
        "id": "comp-1458",
        "label": "button",
        "type": "component",
        "file": "src/components/ui/button.tsx"
      },
      {
        "id": "comp-1459",
        "label": "calendar",
        "type": "component",
        "file": "src/components/ui/calendar.tsx"
      },
      {
        "id": "comp-1460",
        "label": "card-untitled",
        "type": "component",
        "file": "src/components/ui/card-untitled.tsx"
      },
      {
        "id": "comp-1461",
        "label": "card",
        "type": "component",
        "file": "src/components/ui/card.tsx"
      },
      {
        "id": "comp-1462",
        "label": "checkbox",
        "type": "component",
        "file": "src/components/ui/checkbox.tsx"
      },
      {
        "id": "comp-1463",
        "label": "collapsible",
        "type": "component",
        "file": "src/components/ui/collapsible.tsx"
      },
      {
        "id": "comp-1464",
        "label": "dashboard-header",
        "type": "component",
        "file": "src/components/ui/dashboard-header.tsx"
      },
      {
        "id": "comp-1465",
        "label": "dashboard-shell",
        "type": "component",
        "file": "src/components/ui/dashboard-shell.tsx"
      },
      {
        "id": "comp-1466",
        "label": "description-list",
        "type": "component",
        "file": "src/components/ui/description-list.tsx"
      },
      {
        "id": "comp-1467",
        "label": "dialog",
        "type": "component",
        "file": "src/components/ui/dialog.tsx"
      },
      {
        "id": "comp-1468",
        "label": "dropdown-menu",
        "type": "component",
        "file": "src/components/ui/dropdown-menu.tsx"
      },
      {
        "id": "comp-1469",
        "label": "dropdown",
        "type": "component",
        "file": "src/components/ui/dropdown.tsx"
      },
      {
        "id": "comp-1470",
        "label": "form",
        "type": "component",
        "file": "src/components/ui/form.tsx"
      },
      {
        "id": "comp-1471",
        "label": "heading",
        "type": "component",
        "file": "src/components/ui/heading.tsx"
      },
      {
        "id": "comp-1472",
        "label": "input-group",
        "type": "component",
        "file": "src/components/ui/input-group.tsx"
      },
      {
        "id": "comp-1473",
        "label": "input-untitled",
        "type": "component",
        "file": "src/components/ui/input-untitled.tsx"
      },
      {
        "id": "comp-1474",
        "label": "input",
        "type": "component",
        "file": "src/components/ui/input.tsx"
      },
      {
        "id": "comp-1475",
        "label": "label",
        "type": "component",
        "file": "src/components/ui/label.tsx"
      },
      {
        "id": "comp-1476",
        "label": "loading-spinner",
        "type": "component",
        "file": "src/components/ui/loading-spinner.tsx"
      },
      {
        "id": "comp-1477",
        "label": "migration-adapter",
        "type": "component",
        "file": "src/components/ui/migration-adapter.tsx"
      },
      {
        "id": "comp-1478",
        "label": "popover",
        "type": "component",
        "file": "src/components/ui/popover.tsx"
      },
      {
        "id": "comp-1479",
        "label": "progress",
        "type": "component",
        "file": "src/components/ui/progress.tsx"
      },
      {
        "id": "comp-1480",
        "label": "radio-group",
        "type": "component",
        "file": "src/components/ui/radio-group.tsx"
      },
      {
        "id": "comp-1481",
        "label": "screen-reader-only",
        "type": "component",
        "file": "src/components/ui/screen-reader-only.tsx"
      },
      {
        "id": "comp-1482",
        "label": "scroll-area",
        "type": "component",
        "file": "src/components/ui/scroll-area.tsx"
      },
      {
        "id": "comp-1483",
        "label": "select",
        "type": "component",
        "file": "src/components/ui/select.tsx"
      },
      {
        "id": "comp-1484",
        "label": "separator",
        "type": "component",
        "file": "src/components/ui/separator.tsx"
      },
      {
        "id": "comp-1485",
        "label": "sidebar",
        "type": "component",
        "file": "src/components/ui/sidebar.tsx"
      },
      {
        "id": "comp-1486",
        "label": "skeleton",
        "type": "component",
        "file": "src/components/ui/skeleton.tsx"
      },
      {
        "id": "comp-1487",
        "label": "skip-link",
        "type": "component",
        "file": "src/components/ui/skip-link.tsx"
      },
      {
        "id": "comp-1488",
        "label": "slider",
        "type": "component",
        "file": "src/components/ui/slider.tsx"
      },
      {
        "id": "comp-1489",
        "label": "switch",
        "type": "component",
        "file": "src/components/ui/switch.tsx"
      },
      {
        "id": "comp-1490",
        "label": "table",
        "type": "component",
        "file": "src/components/ui/table.tsx"
      },
      {
        "id": "comp-1491",
        "label": "tabs",
        "type": "component",
        "file": "src/components/ui/tabs.tsx"
      },
      {
        "id": "comp-1492",
        "label": "textarea",
        "type": "component",
        "file": "src/components/ui/textarea.tsx"
      },
      {
        "id": "comp-1493",
        "label": "toast-custom-backup",
        "type": "component",
        "file": "src/components/ui/toast-custom-backup.tsx"
      },
      {
        "id": "comp-1494",
        "label": "toaster",
        "type": "component",
        "file": "src/components/ui/toaster.tsx"
      },
      {
        "id": "comp-1495",
        "label": "tooltip",
        "type": "component",
        "file": "src/components/ui/tooltip.tsx"
      },
      {
        "id": "comp-1496",
        "label": "use-toast",
        "type": "component",
        "file": "src/components/ui/use-toast.ts"
      },
      {
        "id": "comp-1497",
        "label": "weddingcard",
        "type": "component",
        "file": "src/components/ui/weddingcard.tsx"
      },
      {
        "id": "comp-1498",
        "label": "badge",
        "type": "component",
        "file": "src/components/untitled-ui/badge.tsx"
      },
      {
        "id": "comp-1499",
        "label": "button",
        "type": "component",
        "file": "src/components/untitled-ui/button.tsx"
      },
      {
        "id": "comp-1500",
        "label": "card",
        "type": "component",
        "file": "src/components/untitled-ui/card.tsx"
      },
      {
        "id": "comp-1501",
        "label": "index",
        "type": "component",
        "file": "src/components/untitled-ui/index.ts"
      },
      {
        "id": "comp-1502",
        "label": "input",
        "type": "component",
        "file": "src/components/untitled-ui/input.tsx"
      },
      {
        "id": "comp-1503",
        "label": "label",
        "type": "component",
        "file": "src/components/untitled-ui/label.tsx"
      },
      {
        "id": "comp-1504",
        "label": "progress",
        "type": "component",
        "file": "src/components/untitled-ui/progress.tsx"
      },
      {
        "id": "comp-1505",
        "label": "ConnectionRequestCard",
        "type": "component",
        "file": "src/components/vendor-networking/ConnectionRequestCard.tsx"
      },
      {
        "id": "comp-1506",
        "label": "VendorDiscovery",
        "type": "component",
        "file": "src/components/vendor-networking/VendorDiscovery.tsx"
      },
      {
        "id": "comp-1507",
        "label": "VendorNetworkingHub",
        "type": "component",
        "file": "src/components/vendor-networking/VendorNetworkingHub.tsx"
      },
      {
        "id": "comp-1508",
        "label": "PostWeddingReviewForm",
        "type": "component",
        "file": "src/components/vendor-reviews/PostWeddingReviewForm.tsx"
      },
      {
        "id": "comp-1509",
        "label": "ReviewModerationDashboard",
        "type": "component",
        "file": "src/components/vendor-reviews/ReviewModerationDashboard.tsx"
      },
      {
        "id": "comp-1510",
        "label": "VendorReviewAnalytics",
        "type": "component",
        "file": "src/components/vendor-reviews/VendorReviewAnalytics.tsx"
      },
      {
        "id": "comp-1511",
        "label": "VendorReviewDisplay",
        "type": "component",
        "file": "src/components/vendor-reviews/VendorReviewDisplay.tsx"
      },
      {
        "id": "comp-1512",
        "label": "AssignedWeddings",
        "type": "component",
        "file": "src/components/vendors/AssignedWeddings.tsx"
      },
      {
        "id": "comp-1513",
        "label": "CollaborationTools",
        "type": "component",
        "file": "src/components/vendors/CollaborationTools.tsx"
      },
      {
        "id": "comp-1514",
        "label": "NetworkingInterface",
        "type": "component",
        "file": "src/components/vendors/NetworkingInterface.tsx"
      },
      {
        "id": "comp-1515",
        "label": "PerformanceScoring",
        "type": "component",
        "file": "src/components/vendors/PerformanceScoring.tsx"
      },
      {
        "id": "comp-1516",
        "label": "VendorCategoryBrowser",
        "type": "component",
        "file": "src/components/vendors/VendorCategoryBrowser.tsx"
      },
      {
        "id": "comp-1517",
        "label": "VendorCommunications",
        "type": "component",
        "file": "src/components/vendors/VendorCommunications.tsx"
      },
      {
        "id": "comp-1518",
        "label": "VendorConnectionHub",
        "type": "component",
        "file": "src/components/vendors/VendorConnectionHub.tsx"
      },
      {
        "id": "comp-1519",
        "label": "VendorDashboard",
        "type": "component",
        "file": "src/components/vendors/VendorDashboard.tsx"
      },
      {
        "id": "comp-1520",
        "label": "InvitationFlow",
        "type": "component",
        "file": "src/components/viral/InvitationFlow.tsx"
      },
      {
        "id": "comp-1521",
        "label": "QRCodeDisplay",
        "type": "component",
        "file": "src/components/viral/QRCodeDisplay.tsx"
      },
      {
        "id": "comp-1522",
        "label": "ReferralTracker",
        "type": "component",
        "file": "src/components/viral/ReferralTracker.tsx"
      },
      {
        "id": "comp-1523",
        "label": "ReferralWidget",
        "type": "component",
        "file": "src/components/viral/ReferralWidget.tsx"
      },
      {
        "id": "comp-1524",
        "label": "ViralDashboard",
        "type": "component",
        "file": "src/components/viral/ViralDashboard.tsx"
      },
      {
        "id": "comp-1525",
        "label": "ConversionOptimizationDashboard",
        "type": "component",
        "file": "src/components/viral-analytics/ConversionOptimizationDashboard.tsx"
      },
      {
        "id": "comp-1526",
        "label": "MobileWeatherWidget",
        "type": "component",
        "file": "src/components/weather/MobileWeatherWidget.tsx"
      },
      {
        "id": "comp-1527",
        "label": "WeatherAlertsPanel",
        "type": "component",
        "file": "src/components/weather/WeatherAlertsPanel.tsx"
      },
      {
        "id": "comp-1528",
        "label": "WeatherCard",
        "type": "component",
        "file": "src/components/weather/WeatherCard.tsx"
      },
      {
        "id": "comp-1529",
        "label": "WeatherDashboard",
        "type": "component",
        "file": "src/components/weather/WeatherDashboard.tsx"
      },
      {
        "id": "comp-1530",
        "label": "WeatherForecastWidget",
        "type": "component",
        "file": "src/components/weather/WeatherForecastWidget.tsx"
      },
      {
        "id": "comp-1531",
        "label": "WeatherTimeline",
        "type": "component",
        "file": "src/components/weather/WeatherTimeline.tsx"
      },
      {
        "id": "comp-1532",
        "label": "WeatherAlertsPanel.test",
        "type": "component",
        "file": "src/components/weather/__tests__/WeatherAlertsPanel.test.tsx"
      },
      {
        "id": "comp-1533",
        "label": "WeatherDashboard.test",
        "type": "component",
        "file": "src/components/weather/__tests__/WeatherDashboard.test.tsx"
      },
      {
        "id": "comp-1534",
        "label": "WeatherForecastWidget.test",
        "type": "component",
        "file": "src/components/weather/__tests__/WeatherForecastWidget.test.tsx"
      },
      {
        "id": "comp-1535",
        "label": "DeliveryMonitor",
        "type": "component",
        "file": "src/components/webhooks/DeliveryMonitor.tsx"
      },
      {
        "id": "comp-1536",
        "label": "EndpointConfiguration",
        "type": "component",
        "file": "src/components/webhooks/EndpointConfiguration.tsx"
      },
      {
        "id": "comp-1537",
        "label": "EventSubscriptionManager",
        "type": "component",
        "file": "src/components/webhooks/EventSubscriptionManager.tsx"
      },
      {
        "id": "comp-1538",
        "label": "WebhookDashboard",
        "type": "component",
        "file": "src/components/webhooks/WebhookDashboard.tsx"
      },
      {
        "id": "comp-1539",
        "label": "WebhookDashboard.test",
        "type": "component",
        "file": "src/components/webhooks/__tests__/WebhookDashboard.test.tsx"
      },
      {
        "id": "comp-1540",
        "label": "ChannelIndicator",
        "type": "component",
        "file": "src/components/websocket/ChannelIndicator.tsx"
      },
      {
        "id": "comp-1541",
        "label": "ChannelManager",
        "type": "component",
        "file": "src/components/websocket/ChannelManager.tsx"
      },
      {
        "id": "comp-1542",
        "label": "MessageQueue",
        "type": "component",
        "file": "src/components/websocket/MessageQueue.tsx"
      },
      {
        "id": "comp-1543",
        "label": "CoordinatorPresencePanel",
        "type": "component",
        "file": "src/components/wedding-day/CoordinatorPresencePanel.tsx"
      },
      {
        "id": "comp-1544",
        "label": "IssueTrackingPanel",
        "type": "component",
        "file": "src/components/wedding-day/IssueTrackingPanel.tsx"
      },
      {
        "id": "comp-1545",
        "label": "OfflineSyncStatus",
        "type": "component",
        "file": "src/components/wedding-day/OfflineSyncStatus.tsx"
      },
      {
        "id": "comp-1546",
        "label": "VendorCheckInHub",
        "type": "component",
        "file": "src/components/wedding-day/VendorCheckInHub.tsx"
      },
      {
        "id": "comp-1547",
        "label": "WeatherWidget",
        "type": "component",
        "file": "src/components/wedding-day/WeatherWidget.tsx"
      },
      {
        "id": "comp-1548",
        "label": "WeddingDayDashboard",
        "type": "component",
        "file": "src/components/wedding-day/WeddingDayDashboard.tsx"
      },
      {
        "id": "comp-1549",
        "label": "WeddingDayTimeline",
        "type": "component",
        "file": "src/components/wedding-day/WeddingDayTimeline.tsx"
      },
      {
        "id": "comp-1550",
        "label": "BasicSetupWizard",
        "type": "component",
        "file": "src/components/wedding-setup/BasicSetupWizard.tsx"
      },
      {
        "id": "comp-1551",
        "label": "VenueSelector",
        "type": "component",
        "file": "src/components/wedding-setup/VenueSelector.tsx"
      },
      {
        "id": "comp-1552",
        "label": "WeddingDetailsForm",
        "type": "component",
        "file": "src/components/wedding-setup/WeddingDetailsForm.tsx"
      },
      {
        "id": "comp-1553",
        "label": "WeddingSetupDemo",
        "type": "component",
        "file": "src/components/wedding-setup/WeddingSetupDemo.tsx"
      },
      {
        "id": "comp-1554",
        "label": "index",
        "type": "component",
        "file": "src/components/wedding-setup/index.ts"
      },
      {
        "id": "comp-1555",
        "label": "CustomDomainSetup",
        "type": "component",
        "file": "src/components/wedding-website/CustomDomainSetup.tsx"
      },
      {
        "id": "comp-1556",
        "label": "GuestListSync",
        "type": "component",
        "file": "src/components/wedding-website/GuestListSync.tsx"
      },
      {
        "id": "comp-1557",
        "label": "LiveRSVPDisplay",
        "type": "component",
        "file": "src/components/wedding-website/LiveRSVPDisplay.tsx"
      },
      {
        "id": "comp-1558",
        "label": "PhotoSharing",
        "type": "component",
        "file": "src/components/wedding-website/PhotoSharing.tsx"
      },
      {
        "id": "comp-1559",
        "label": "RegistryLinks",
        "type": "component",
        "file": "src/components/wedding-website/RegistryLinks.tsx"
      },
      {
        "id": "comp-1560",
        "label": "StoryTimeline",
        "type": "component",
        "file": "src/components/wedding-website/StoryTimeline.tsx"
      },
      {
        "id": "comp-1561",
        "label": "TravelInformation",
        "type": "component",
        "file": "src/components/wedding-website/TravelInformation.tsx"
      },
      {
        "id": "comp-1562",
        "label": "VendorInformation",
        "type": "component",
        "file": "src/components/wedding-website/VendorInformation.tsx"
      },
      {
        "id": "comp-1563",
        "label": "WeddingParty",
        "type": "component",
        "file": "src/components/wedding-website/WeddingParty.tsx"
      },
      {
        "id": "comp-1564",
        "label": "CreateGroupModal",
        "type": "component",
        "file": "src/components/wedme/CreateGroupModal.tsx"
      },
      {
        "id": "comp-1565",
        "label": "EmergencyPhotoGroups",
        "type": "component",
        "file": "src/components/wedme/EmergencyPhotoGroups.tsx"
      },
      {
        "id": "comp-1566",
        "label": "EmptyState",
        "type": "component",
        "file": "src/components/wedme/EmptyState.tsx"
      },
      {
        "id": "comp-1567",
        "label": "GroupActionsSheet",
        "type": "component",
        "file": "src/components/wedme/GroupActionsSheet.tsx"
      },
      {
        "id": "comp-1568",
        "label": "InvitationLanding",
        "type": "component",
        "file": "src/components/wedme/InvitationLanding.tsx"
      },
      {
        "id": "comp-1569",
        "label": "MobileConflictDetection",
        "type": "component",
        "file": "src/components/wedme/MobileConflictDetection.tsx"
      },
      {
        "id": "comp-1570",
        "label": "MobileGroupBuilder",
        "type": "component",
        "file": "src/components/wedme/MobileGroupBuilder.tsx"
      },
      {
        "id": "comp-1571",
        "label": "MobileGuestAssignment",
        "type": "component",
        "file": "src/components/wedme/MobileGuestAssignment.tsx"
      },
      {
        "id": "comp-1572",
        "label": "OfflinePhotoGroupEditor",
        "type": "component",
        "file": "src/components/wedme/OfflinePhotoGroupEditor.tsx"
      },
      {
        "id": "comp-1573",
        "label": "PhotoGrid",
        "type": "component",
        "file": "src/components/wedme/PhotoGrid.tsx"
      },
      {
        "id": "comp-1574",
        "label": "PhotoGroup",
        "type": "component",
        "file": "src/components/wedme/PhotoGroup.tsx"
      },
      {
        "id": "comp-1575",
        "label": "PhotoGroupFAB",
        "type": "component",
        "file": "src/components/wedme/PhotoGroupFAB.tsx"
      },
      {
        "id": "comp-1576",
        "label": "PhotoGroupsManager",
        "type": "component",
        "file": "src/components/wedme/PhotoGroupsManager.tsx"
      },
      {
        "id": "comp-1577",
        "label": "PhotoGroupsMobile",
        "type": "component",
        "file": "src/components/wedme/PhotoGroupsMobile.tsx"
      },
      {
        "id": "comp-1578",
        "label": "PhotoPreviewModal",
        "type": "component",
        "file": "src/components/wedme/PhotoPreviewModal.tsx"
      },
      {
        "id": "comp-1579",
        "label": "PhotoThumbnail",
        "type": "component",
        "file": "src/components/wedme/PhotoThumbnail.tsx"
      },
      {
        "id": "comp-1580",
        "label": "QuickShareModal",
        "type": "component",
        "file": "src/components/wedme/QuickShareModal.tsx"
      },
      {
        "id": "comp-1581",
        "label": "SupplierPreview",
        "type": "component",
        "file": "src/components/wedme/SupplierPreview.tsx"
      },
      {
        "id": "comp-1582",
        "label": "WedMeHeader",
        "type": "component",
        "file": "src/components/wedme/WedMeHeader.tsx"
      },
      {
        "id": "comp-1583",
        "label": "WedMeNavigation",
        "type": "component",
        "file": "src/components/wedme/WedMeNavigation.tsx"
      },
      {
        "id": "comp-1584",
        "label": "WedMeNavigationProvider",
        "type": "component",
        "file": "src/components/wedme/WedMeNavigationProvider.tsx"
      },
      {
        "id": "comp-1585",
        "label": "WeddingContextChat",
        "type": "component",
        "file": "src/components/wedme/WeddingContextChat.tsx"
      },
      {
        "id": "comp-1586",
        "label": "WeddingDayMode",
        "type": "component",
        "file": "src/components/wedme/WeddingDayMode.tsx"
      },
      {
        "id": "comp-1587",
        "label": "WedMeFileSystem.test",
        "type": "component",
        "file": "src/components/wedme/__tests__/WedMeFileSystem.test.tsx"
      },
      {
        "id": "comp-1588",
        "label": "AIFeatureMigrationMobile",
        "type": "component",
        "file": "src/components/wedme/ai-features/AIFeatureMigrationMobile.tsx"
      },
      {
        "id": "comp-1589",
        "label": "MobileAIFeatureManager",
        "type": "component",
        "file": "src/components/wedme/ai-features/MobileAIFeatureManager.tsx"
      },
      {
        "id": "comp-1590",
        "label": "MobileAPIKeySetup",
        "type": "component",
        "file": "src/components/wedme/ai-features/MobileAPIKeySetup.tsx"
      },
      {
        "id": "comp-1591",
        "label": "MobileCostMonitor",
        "type": "component",
        "file": "src/components/wedme/ai-features/MobileCostMonitor.tsx"
      },
      {
        "id": "comp-1592",
        "label": "PlatformVsClientMobileToggle",
        "type": "component",
        "file": "src/components/wedme/ai-features/PlatformVsClientMobileToggle.tsx"
      },
      {
        "id": "comp-1593",
        "label": "BudgetOptimizationWidget",
        "type": "component",
        "file": "src/components/wedme/analytics/BudgetOptimizationWidget.tsx"
      },
      {
        "id": "comp-1594",
        "label": "PersonalizedInsightsPanels",
        "type": "component",
        "file": "src/components/wedme/analytics/PersonalizedInsightsPanels.tsx"
      },
      {
        "id": "comp-1595",
        "label": "TimelineProgressTracker",
        "type": "component",
        "file": "src/components/wedme/analytics/TimelineProgressTracker.tsx"
      },
      {
        "id": "comp-1596",
        "label": "VendorPerformanceInsights",
        "type": "component",
        "file": "src/components/wedme/analytics/VendorPerformanceInsights.tsx"
      },
      {
        "id": "comp-1597",
        "label": "WeddingMomentumMeter",
        "type": "component",
        "file": "src/components/wedme/analytics/WeddingMomentumMeter.tsx"
      },
      {
        "id": "comp-1598",
        "label": "AdvancedAnalytics",
        "type": "component",
        "file": "src/components/wedme/budget/AdvancedAnalytics.tsx"
      },
      {
        "id": "comp-1599",
        "label": "BudgetCharts",
        "type": "component",
        "file": "src/components/wedme/budget/BudgetCharts.tsx"
      },
      {
        "id": "comp-1600",
        "label": "BudgetOptimizer",
        "type": "component",
        "file": "src/components/wedme/budget/BudgetOptimizer.tsx"
      },
      {
        "id": "comp-1601",
        "label": "BudgetOverview",
        "type": "component",
        "file": "src/components/wedme/budget/BudgetOverview.tsx"
      },
      {
        "id": "comp-1602",
        "label": "BudgetSharing",
        "type": "component",
        "file": "src/components/wedme/budget/BudgetSharing.tsx"
      },
      {
        "id": "comp-1603",
        "label": "BudgetTracker",
        "type": "component",
        "file": "src/components/wedme/budget/BudgetTracker.tsx"
      },
      {
        "id": "comp-1604",
        "label": "CashFlowProjection",
        "type": "component",
        "file": "src/components/wedme/budget/CashFlowProjection.tsx"
      },
      {
        "id": "comp-1605",
        "label": "CategoryManager",
        "type": "component",
        "file": "src/components/wedme/budget/CategoryManager.tsx"
      },
      {
        "id": "comp-1606",
        "label": "ContractMilestones",
        "type": "component",
        "file": "src/components/wedme/budget/ContractMilestones.tsx"
      },
      {
        "id": "comp-1607",
        "label": "CurrencySelector",
        "type": "component",
        "file": "src/components/wedme/budget/CurrencySelector.tsx"
      },
      {
        "id": "comp-1608",
        "label": "ExpenseCategorizationManager",
        "type": "component",
        "file": "src/components/wedme/budget/ExpenseCategorizationManager.tsx"
      },
      {
        "id": "comp-1609",
        "label": "PaymentScheduler",
        "type": "component",
        "file": "src/components/wedme/budget/PaymentScheduler.tsx"
      },
      {
        "id": "comp-1610",
        "label": "ReceiptUpload",
        "type": "component",
        "file": "src/components/wedme/budget/ReceiptUpload.tsx"
      },
      {
        "id": "comp-1611",
        "label": "TransactionEntry",
        "type": "component",
        "file": "src/components/wedme/budget/TransactionEntry.tsx"
      },
      {
        "id": "comp-1612",
        "label": "index",
        "type": "component",
        "file": "src/components/wedme/budget/index.tsx"
      },
      {
        "id": "comp-1613",
        "label": "EmergencyCostStop",
        "type": "component",
        "file": "src/components/wedme/cost-optimization/EmergencyCostStop.tsx"
      },
      {
        "id": "comp-1614",
        "label": "MobileCostMonitor",
        "type": "component",
        "file": "src/components/wedme/cost-optimization/MobileCostMonitor.tsx"
      },
      {
        "id": "comp-1615",
        "label": "MobileOptimizationSettings",
        "type": "component",
        "file": "src/components/wedme/cost-optimization/MobileOptimizationSettings.tsx"
      },
      {
        "id": "comp-1616",
        "label": "OfflineCostTracker",
        "type": "component",
        "file": "src/components/wedme/cost-optimization/OfflineCostTracker.tsx"
      },
      {
        "id": "comp-1617",
        "label": "TouchBudgetControls",
        "type": "component",
        "file": "src/components/wedme/cost-optimization/TouchBudgetControls.tsx"
      },
      {
        "id": "comp-1618",
        "label": "WeddingSeasonProjector",
        "type": "component",
        "file": "src/components/wedme/cost-optimization/WeddingSeasonProjector.tsx"
      },
      {
        "id": "comp-1619",
        "label": "WedSyncIntegrationHub",
        "type": "component",
        "file": "src/components/wedme/integration/WedSyncIntegrationHub.tsx"
      },
      {
        "id": "comp-1620",
        "label": "ArticleCard",
        "type": "component",
        "file": "src/components/wedme/knowledge-base/ArticleCard.tsx"
      },
      {
        "id": "comp-1621",
        "label": "CategoryGrid",
        "type": "component",
        "file": "src/components/wedme/knowledge-base/CategoryGrid.tsx"
      },
      {
        "id": "comp-1622",
        "label": "MobileKnowledgeBase",
        "type": "component",
        "file": "src/components/wedme/knowledge-base/MobileKnowledgeBase.tsx"
      },
      {
        "id": "comp-1623",
        "label": "OfflineIndicator",
        "type": "component",
        "file": "src/components/wedme/knowledge-base/OfflineIndicator.tsx"
      },
      {
        "id": "comp-1624",
        "label": "SearchInterface",
        "type": "component",
        "file": "src/components/wedme/knowledge-base/SearchInterface.tsx"
      },
      {
        "id": "comp-1625",
        "label": "VoiceSearchInterface",
        "type": "component",
        "file": "src/components/wedme/knowledge-base/VoiceSearchInterface.tsx"
      },
      {
        "id": "comp-1626",
        "label": "MobileFileHub",
        "type": "component",
        "file": "src/components/wedme/mobile/MobileFileHub.tsx"
      },
      {
        "id": "comp-1627",
        "label": "MobileSharingInterface",
        "type": "component",
        "file": "src/components/wedme/mobile/MobileSharingInterface.tsx"
      },
      {
        "id": "comp-1628",
        "label": "MobileTimelineView",
        "type": "component",
        "file": "src/components/wedme/mobile/MobileTimelineView.tsx"
      },
      {
        "id": "comp-1629",
        "label": "MobileWedMeLayout",
        "type": "component",
        "file": "src/components/wedme/mobile/MobileWedMeLayout.tsx"
      },
      {
        "id": "comp-1630",
        "label": "ContentCurationSuite",
        "type": "component",
        "file": "src/components/wedme/sharing/ContentCurationSuite.tsx"
      },
      {
        "id": "comp-1631",
        "label": "FamilyFriendsSharing",
        "type": "component",
        "file": "src/components/wedme/sharing/FamilyFriendsSharing.tsx"
      },
      {
        "id": "comp-1632",
        "label": "PrivacyControlCenter",
        "type": "component",
        "file": "src/components/wedme/sharing/PrivacyControlCenter.tsx"
      },
      {
        "id": "comp-1633",
        "label": "SharingAnalyticsDashboard",
        "type": "component",
        "file": "src/components/wedme/sharing/SharingAnalyticsDashboard.tsx"
      },
      {
        "id": "comp-1634",
        "label": "SharingGroupManager",
        "type": "component",
        "file": "src/components/wedme/sharing/SharingGroupManager.tsx"
      },
      {
        "id": "comp-1635",
        "label": "MobileStatusUpdateModal",
        "type": "component",
        "file": "src/components/wedme/tasks/MobileStatusUpdateModal.tsx"
      },
      {
        "id": "comp-1636",
        "label": "PhotoCaptureInterface",
        "type": "component",
        "file": "src/components/wedme/tasks/PhotoCaptureInterface.tsx"
      },
      {
        "id": "comp-1637",
        "label": "TaskStatusCard",
        "type": "component",
        "file": "src/components/wedme/tasks/TaskStatusCard.tsx"
      },
      {
        "id": "comp-1638",
        "label": "TaskTrackingMobileDashboard",
        "type": "component",
        "file": "src/components/wedme/tasks/TaskTrackingMobileDashboard.tsx"
      },
      {
        "id": "comp-1639",
        "label": "TimelineContent",
        "type": "component",
        "file": "src/components/wedme/timeline/TimelineContent.tsx"
      },
      {
        "id": "comp-1640",
        "label": "TimelineExportModal",
        "type": "component",
        "file": "src/components/wedme/timeline/TimelineExportModal.tsx"
      },
      {
        "id": "comp-1641",
        "label": "TimelineHeader",
        "type": "component",
        "file": "src/components/wedme/timeline/TimelineHeader.tsx"
      },
      {
        "id": "comp-1642",
        "label": "TimelineMomentDetails",
        "type": "component",
        "file": "src/components/wedme/timeline/TimelineMomentDetails.tsx"
      },
      {
        "id": "comp-1643",
        "label": "TimelineNavigation",
        "type": "component",
        "file": "src/components/wedme/timeline/TimelineNavigation.tsx"
      },
      {
        "id": "comp-1644",
        "label": "TimelineShareModal",
        "type": "component",
        "file": "src/components/wedme/timeline/TimelineShareModal.tsx"
      },
      {
        "id": "comp-1645",
        "label": "TimelineTemplateSelector",
        "type": "component",
        "file": "src/components/wedme/timeline/TimelineTemplateSelector.tsx"
      },
      {
        "id": "comp-1646",
        "label": "TouchConflictResolutionModal",
        "type": "component",
        "file": "src/components/wedme/timeline/TouchConflictResolutionModal.tsx"
      },
      {
        "id": "comp-1647",
        "label": "TouchTimePicker",
        "type": "component",
        "file": "src/components/wedme/timeline/TouchTimePicker.tsx"
      },
      {
        "id": "comp-1648",
        "label": "ViralSharingPanel",
        "type": "component",
        "file": "src/components/wedme/timeline/ViralSharingPanel.tsx"
      },
      {
        "id": "comp-1649",
        "label": "WedMeMobileTimelineBuilder",
        "type": "component",
        "file": "src/components/wedme/timeline/WedMeMobileTimelineBuilder.tsx"
      },
      {
        "id": "comp-1650",
        "label": "WeddingTimelineExperience",
        "type": "component",
        "file": "src/components/wedme/timeline/WeddingTimelineExperience.tsx"
      },
      {
        "id": "comp-1651",
        "label": "VendorDiscoveryCard",
        "type": "component",
        "file": "src/components/wedme/vendor-discovery/VendorDiscoveryCard.tsx"
      },
      {
        "id": "comp-1652",
        "label": "VendorDiscoveryEngine",
        "type": "component",
        "file": "src/components/wedme/vendor-discovery/VendorDiscoveryEngine.tsx"
      },
      {
        "id": "comp-1653",
        "label": "ViralGrowthDashboard",
        "type": "component",
        "file": "src/components/wedme/viral/ViralGrowthDashboard.tsx"
      },
      {
        "id": "comp-1654",
        "label": "PhotoAlbums",
        "type": "component",
        "file": "src/components/wedme/website/PhotoAlbums.tsx"
      },
      {
        "id": "comp-1655",
        "label": "WhatsAppGroupManager",
        "type": "component",
        "file": "src/components/whatsapp/WhatsAppGroupManager.tsx"
      },
      {
        "id": "comp-1656",
        "label": "WhatsAppMessageComposer",
        "type": "component",
        "file": "src/components/whatsapp/WhatsAppMessageComposer.tsx"
      },
      {
        "id": "comp-1657",
        "label": "WhatsAppTemplateManager",
        "type": "component",
        "file": "src/components/whatsapp/WhatsAppTemplateManager.tsx"
      },
      {
        "id": "comp-1658",
        "label": "QuickStats",
        "type": "component",
        "file": "src/components/widgets/QuickStats.tsx"
      },
      {
        "id": "comp-1659",
        "label": "RecentActivity",
        "type": "component",
        "file": "src/components/widgets/RecentActivity.tsx"
      },
      {
        "id": "comp-1660",
        "label": "TodaySchedule",
        "type": "component",
        "file": "src/components/widgets/TodaySchedule.tsx"
      },
      {
        "id": "comp-1661",
        "label": "UrgentTasks",
        "type": "component",
        "file": "src/components/widgets/UrgentTasks.tsx"
      },
      {
        "id": "comp-1662",
        "label": "DeadlineTracker",
        "type": "component",
        "file": "src/components/workflow/deadlines/DeadlineTracker.tsx"
      },
      {
        "id": "comp-1663",
        "label": "TaskStatusManager",
        "type": "component",
        "file": "src/components/workflow/status/TaskStatusManager.tsx"
      },
      {
        "id": "comp-1664",
        "label": "DelegationModal",
        "type": "component",
        "file": "src/components/workflow/tasks/DelegationModal.tsx"
      },
      {
        "id": "comp-1665",
        "label": "TaskAssignmentModal",
        "type": "component",
        "file": "src/components/workflow/tasks/TaskAssignmentModal.tsx"
      },
      {
        "id": "comp-1666",
        "label": "TaskBoard",
        "type": "component",
        "file": "src/components/workflow/tasks/TaskBoard.tsx"
      },
      {
        "id": "comp-1667",
        "label": "TaskCard",
        "type": "component",
        "file": "src/components/workflow/tasks/TaskCard.tsx"
      },
      {
        "id": "comp-1668",
        "label": "TaskCreateForm",
        "type": "component",
        "file": "src/components/workflow/tasks/TaskCreateForm.tsx"
      },
      {
        "id": "comp-1669",
        "label": "WorkloadDashboard",
        "type": "component",
        "file": "src/components/workflow/workload/WorkloadDashboard.tsx"
      }
    ],
    "edges": [
      {
        "from": "page-0",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-0",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-0",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-0",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-0",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-1",
        "to": "comp-478",
        "type": "imports"
      },
      {
        "from": "page-1",
        "to": "comp-477",
        "type": "imports"
      },
      {
        "from": "page-2",
        "to": "comp-29",
        "type": "imports"
      },
      {
        "from": "page-2",
        "to": "comp-34",
        "type": "imports"
      },
      {
        "from": "page-2",
        "to": "comp-35",
        "type": "imports"
      },
      {
        "from": "page-2",
        "to": "comp-20",
        "type": "imports"
      },
      {
        "from": "page-2",
        "to": "comp-13",
        "type": "imports"
      },
      {
        "from": "page-2",
        "to": "comp-477",
        "type": "imports"
      },
      {
        "from": "page-3",
        "to": "comp-1011",
        "type": "imports"
      },
      {
        "from": "page-4",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-4",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-4",
        "to": "comp-2",
        "type": "imports"
      },
      {
        "from": "page-4",
        "to": "comp-211",
        "type": "imports"
      },
      {
        "from": "page-5",
        "to": "comp-15",
        "type": "imports"
      },
      {
        "from": "page-5",
        "to": "comp-30",
        "type": "imports"
      },
      {
        "from": "page-5",
        "to": "comp-14",
        "type": "imports"
      },
      {
        "from": "page-5",
        "to": "comp-32",
        "type": "imports"
      },
      {
        "from": "page-6",
        "to": "comp-476",
        "type": "imports"
      },
      {
        "from": "page-6",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-6",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-6",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-7",
        "to": "comp-78",
        "type": "imports"
      },
      {
        "from": "page-7",
        "to": "comp-1486",
        "type": "imports"
      },
      {
        "from": "page-7",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-8",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-8",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-8",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-8",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-8",
        "to": "comp-1483",
        "type": "imports"
      },
      {
        "from": "page-8",
        "to": "comp-1467",
        "type": "imports"
      },
      {
        "from": "page-9",
        "to": "comp-22",
        "type": "imports"
      },
      {
        "from": "page-9",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-10",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-10",
        "to": "comp-1486",
        "type": "imports"
      },
      {
        "from": "page-10",
        "to": "comp-194",
        "type": "imports"
      },
      {
        "from": "page-11",
        "to": "comp-97",
        "type": "imports"
      },
      {
        "from": "page-12",
        "to": "comp-184",
        "type": "imports"
      },
      {
        "from": "page-13",
        "to": "comp-151",
        "type": "imports"
      },
      {
        "from": "page-14",
        "to": "comp-159",
        "type": "imports"
      },
      {
        "from": "page-15",
        "to": "comp-183",
        "type": "imports"
      },
      {
        "from": "page-15",
        "to": "comp-176",
        "type": "imports"
      },
      {
        "from": "page-15",
        "to": "comp-197",
        "type": "imports"
      },
      {
        "from": "page-15",
        "to": "comp-164",
        "type": "imports"
      },
      {
        "from": "page-15",
        "to": "comp-191",
        "type": "imports"
      },
      {
        "from": "page-15",
        "to": "comp-200",
        "type": "imports"
      },
      {
        "from": "page-15",
        "to": "comp-199",
        "type": "imports"
      },
      {
        "from": "page-16",
        "to": "comp-221",
        "type": "imports"
      },
      {
        "from": "page-17",
        "to": "comp-226",
        "type": "imports"
      },
      {
        "from": "page-17",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-18",
        "to": "comp-223",
        "type": "imports"
      },
      {
        "from": "page-19",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-19",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-19",
        "to": "comp-235",
        "type": "imports"
      },
      {
        "from": "page-20",
        "to": "comp-301",
        "type": "imports"
      },
      {
        "from": "page-20",
        "to": "comp-302",
        "type": "imports"
      },
      {
        "from": "page-20",
        "to": "comp-297",
        "type": "imports"
      },
      {
        "from": "page-20",
        "to": "comp-299",
        "type": "imports"
      },
      {
        "from": "page-23",
        "to": "comp-371",
        "type": "imports"
      },
      {
        "from": "page-25",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-25",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-25",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-26",
        "to": "comp-697",
        "type": "imports"
      },
      {
        "from": "page-26",
        "to": "comp-691",
        "type": "imports"
      },
      {
        "from": "page-26",
        "to": "comp-696",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-397",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-394",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-395",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-396",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-1466",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-27",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-28",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-28",
        "to": "comp-393",
        "type": "imports"
      },
      {
        "from": "page-29",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-29",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-29",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-30",
        "to": "comp-384",
        "type": "imports"
      },
      {
        "from": "page-30",
        "to": "comp-386",
        "type": "imports"
      },
      {
        "from": "page-30",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-30",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-30",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-31",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-31",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-31",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-31",
        "to": "comp-1490",
        "type": "imports"
      },
      {
        "from": "page-31",
        "to": "comp-1468",
        "type": "imports"
      },
      {
        "from": "page-31",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-32",
        "to": "comp-835",
        "type": "imports"
      },
      {
        "from": "page-33",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-34",
        "to": "comp-495",
        "type": "imports"
      },
      {
        "from": "page-35",
        "to": "comp-494",
        "type": "imports"
      },
      {
        "from": "page-35",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-36",
        "to": "comp-495",
        "type": "imports"
      },
      {
        "from": "page-37",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-37",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-37",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-37",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-38",
        "to": "comp-587",
        "type": "imports"
      },
      {
        "from": "page-38",
        "to": "comp-583",
        "type": "imports"
      },
      {
        "from": "page-38",
        "to": "comp-580",
        "type": "imports"
      },
      {
        "from": "page-39",
        "to": "comp-601",
        "type": "imports"
      },
      {
        "from": "page-40",
        "to": "comp-738",
        "type": "imports"
      },
      {
        "from": "page-40",
        "to": "comp-1465",
        "type": "imports"
      },
      {
        "from": "page-40",
        "to": "comp-1464",
        "type": "imports"
      },
      {
        "from": "page-40",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-41",
        "to": "comp-742",
        "type": "imports"
      },
      {
        "from": "page-41",
        "to": "comp-1465",
        "type": "imports"
      },
      {
        "from": "page-41",
        "to": "comp-1464",
        "type": "imports"
      },
      {
        "from": "page-41",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-41",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-41",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-41",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-42",
        "to": "comp-736",
        "type": "imports"
      },
      {
        "from": "page-42",
        "to": "comp-1465",
        "type": "imports"
      },
      {
        "from": "page-42",
        "to": "comp-1464",
        "type": "imports"
      },
      {
        "from": "page-43",
        "to": "comp-1538",
        "type": "imports"
      },
      {
        "from": "page-43",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-44",
        "to": "comp-791",
        "type": "imports"
      },
      {
        "from": "page-45",
        "to": "comp-752",
        "type": "imports"
      },
      {
        "from": "page-45",
        "to": "comp-1476",
        "type": "imports"
      },
      {
        "from": "page-45",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-45",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-46",
        "to": "comp-759",
        "type": "imports"
      },
      {
        "from": "page-46",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-46",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-47",
        "to": "comp-759",
        "type": "imports"
      },
      {
        "from": "page-47",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-48",
        "to": "comp-759",
        "type": "imports"
      },
      {
        "from": "page-48",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-48",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-49",
        "to": "comp-759",
        "type": "imports"
      },
      {
        "from": "page-49",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-49",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-49",
        "to": "comp-1492",
        "type": "imports"
      },
      {
        "from": "page-49",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-49",
        "to": "comp-1467",
        "type": "imports"
      },
      {
        "from": "page-50",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-50",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-50",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-1483",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-766",
        "type": "imports"
      },
      {
        "from": "page-51",
        "to": "comp-765",
        "type": "imports"
      },
      {
        "from": "page-52",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-52",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-52",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-52",
        "to": "comp-1490",
        "type": "imports"
      },
      {
        "from": "page-52",
        "to": "comp-1468",
        "type": "imports"
      },
      {
        "from": "page-52",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-53",
        "to": "comp-826",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-1483",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-1484",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-816",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-812",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-813",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-823",
        "type": "imports"
      },
      {
        "from": "page-54",
        "to": "comp-814",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1089",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1068",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1067",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1066",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1090",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1065",
        "type": "imports"
      },
      {
        "from": "page-55",
        "to": "comp-1075",
        "type": "imports"
      },
      {
        "from": "page-56",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-56",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-56",
        "to": "comp-1479",
        "type": "imports"
      },
      {
        "from": "page-56",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-56",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-56",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-57",
        "to": "comp-1154",
        "type": "imports"
      },
      {
        "from": "page-58",
        "to": "comp-972",
        "type": "imports"
      },
      {
        "from": "page-58",
        "to": "comp-967",
        "type": "imports"
      },
      {
        "from": "page-58",
        "to": "comp-970",
        "type": "imports"
      },
      {
        "from": "page-58",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-58",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-59",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-59",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-59",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-59",
        "to": "comp-1184",
        "type": "imports"
      },
      {
        "from": "page-59",
        "to": "comp-1185",
        "type": "imports"
      },
      {
        "from": "page-59",
        "to": "comp-1182",
        "type": "imports"
      },
      {
        "from": "page-59",
        "to": "comp-1183",
        "type": "imports"
      },
      {
        "from": "page-61",
        "to": "comp-1352",
        "type": "imports"
      },
      {
        "from": "page-61",
        "to": "comp-1356",
        "type": "imports"
      },
      {
        "from": "page-61",
        "to": "comp-1358",
        "type": "imports"
      },
      {
        "from": "page-62",
        "to": "comp-1368",
        "type": "imports"
      },
      {
        "from": "page-62",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-63",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-63",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-63",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-63",
        "to": "comp-1374",
        "type": "imports"
      },
      {
        "from": "page-63",
        "to": "comp-1377",
        "type": "imports"
      },
      {
        "from": "page-64",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-64",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-64",
        "to": "comp-830",
        "type": "imports"
      },
      {
        "from": "page-65",
        "to": "comp-1426",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1519",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1512",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1515",
        "type": "imports"
      },
      {
        "from": "page-66",
        "to": "comp-1517",
        "type": "imports"
      },
      {
        "from": "page-67",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-67",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-67",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-68",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-68",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-68",
        "to": "comp-1466",
        "type": "imports"
      },
      {
        "from": "page-69",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-69",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-69",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-70",
        "to": "comp-1529",
        "type": "imports"
      },
      {
        "from": "page-70",
        "to": "comp-1528",
        "type": "imports"
      },
      {
        "from": "page-70",
        "to": "comp-1531",
        "type": "imports"
      },
      {
        "from": "page-70",
        "to": "comp-1526",
        "type": "imports"
      },
      {
        "from": "page-70",
        "to": "comp-1498",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1492",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1489",
        "type": "imports"
      },
      {
        "from": "page-71",
        "to": "comp-1483",
        "type": "imports"
      },
      {
        "from": "page-73",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-73",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-73",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-73",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-73",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-74",
        "to": "comp-1576",
        "type": "imports"
      },
      {
        "from": "page-74",
        "to": "comp-1582",
        "type": "imports"
      },
      {
        "from": "page-74",
        "to": "comp-1476",
        "type": "imports"
      },
      {
        "from": "page-75",
        "to": "comp-984",
        "type": "imports"
      },
      {
        "from": "page-75",
        "to": "comp-983",
        "type": "imports"
      },
      {
        "from": "page-75",
        "to": "comp-1445",
        "type": "imports"
      },
      {
        "from": "page-75",
        "to": "comp-981",
        "type": "imports"
      },
      {
        "from": "page-75",
        "to": "comp-1582",
        "type": "imports"
      },
      {
        "from": "page-75",
        "to": "comp-1583",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1491",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1484",
        "type": "imports"
      },
      {
        "from": "page-76",
        "to": "comp-1482",
        "type": "imports"
      },
      {
        "from": "page-77",
        "to": "comp-1050",
        "type": "imports"
      },
      {
        "from": "page-77",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-77",
        "to": "comp-1479",
        "type": "imports"
      },
      {
        "from": "page-77",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-77",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-77",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-79",
        "to": "comp-1594",
        "type": "imports"
      },
      {
        "from": "page-79",
        "to": "comp-1593",
        "type": "imports"
      },
      {
        "from": "page-79",
        "to": "comp-1596",
        "type": "imports"
      },
      {
        "from": "page-79",
        "to": "comp-1595",
        "type": "imports"
      },
      {
        "from": "page-79",
        "to": "comp-1597",
        "type": "imports"
      },
      {
        "from": "page-85",
        "to": "comp-62",
        "type": "imports"
      },
      {
        "from": "page-86",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-86",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-86",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-86",
        "to": "comp-509",
        "type": "imports"
      },
      {
        "from": "page-1028",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1028",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1028",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-1028",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-1028",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1029",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1029",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1029",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-1029",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1030",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1030",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1030",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-1030",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-1030",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1030",
        "to": "comp-1479",
        "type": "imports"
      },
      {
        "from": "page-1031",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1031",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1031",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1031",
        "to": "comp-509",
        "type": "imports"
      },
      {
        "from": "page-1033",
        "to": "comp-1541",
        "type": "imports"
      },
      {
        "from": "page-1034",
        "to": "comp-1161",
        "type": "imports"
      },
      {
        "from": "page-1034",
        "to": "comp-1164",
        "type": "imports"
      },
      {
        "from": "page-1034",
        "to": "comp-373",
        "type": "imports"
      },
      {
        "from": "page-1034",
        "to": "comp-1485",
        "type": "imports"
      },
      {
        "from": "page-1034",
        "to": "comp-1455",
        "type": "imports"
      },
      {
        "from": "page-1034",
        "to": "comp-1468",
        "type": "imports"
      },
      {
        "from": "page-1035",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1035",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1035",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1035",
        "to": "comp-1019",
        "type": "imports"
      },
      {
        "from": "page-1036",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1036",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1037",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1037",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1037",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-1037",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1038",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1038",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1038",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1038",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1039",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1039",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1039",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1040",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1040",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1040",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-1041",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1041",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1042",
        "to": "comp-364",
        "type": "imports"
      },
      {
        "from": "page-1045",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1045",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1046",
        "to": "comp-245",
        "type": "imports"
      },
      {
        "from": "page-1047",
        "to": "comp-626",
        "type": "imports"
      },
      {
        "from": "page-1047",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1048",
        "to": "comp-645",
        "type": "imports"
      },
      {
        "from": "page-1049",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1049",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1049",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1050",
        "to": "comp-1445",
        "type": "imports"
      },
      {
        "from": "page-1051",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1052",
        "to": "comp-630",
        "type": "imports"
      },
      {
        "from": "page-1053",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1054",
        "to": "comp-1568",
        "type": "imports"
      },
      {
        "from": "page-1054",
        "to": "comp-1445",
        "type": "imports"
      },
      {
        "from": "page-1055",
        "to": "comp-759",
        "type": "imports"
      },
      {
        "from": "page-1056",
        "to": "comp-1155",
        "type": "imports"
      },
      {
        "from": "page-1056",
        "to": "comp-568",
        "type": "imports"
      },
      {
        "from": "page-1056",
        "to": "comp-1153",
        "type": "imports"
      },
      {
        "from": "page-1056",
        "to": "comp-1012",
        "type": "imports"
      },
      {
        "from": "page-1058",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1058",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1058",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-1058",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1060",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1060",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1060",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1062",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1062",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1062",
        "to": "comp-1479",
        "type": "imports"
      },
      {
        "from": "page-1063",
        "to": "comp-1",
        "type": "imports"
      },
      {
        "from": "page-1065",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1067",
        "to": "comp-1054",
        "type": "imports"
      },
      {
        "from": "page-1067",
        "to": "comp-1056",
        "type": "imports"
      },
      {
        "from": "page-1067",
        "to": "comp-1053",
        "type": "imports"
      },
      {
        "from": "page-1067",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1067",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1067",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1068",
        "to": "comp-1059",
        "type": "imports"
      },
      {
        "from": "page-1068",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1068",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1069",
        "to": "comp-1061",
        "type": "imports"
      },
      {
        "from": "page-1069",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1069",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1070",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1070",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1070",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1070",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-1070",
        "to": "comp-1492",
        "type": "imports"
      },
      {
        "from": "page-1070",
        "to": "comp-1483",
        "type": "imports"
      },
      {
        "from": "page-1070",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-1072",
        "to": "comp-1494",
        "type": "imports"
      },
      {
        "from": "page-1073",
        "to": "comp-248",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1472",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1462",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1492",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1483",
        "type": "imports"
      },
      {
        "from": "page-1074",
        "to": "comp-1496",
        "type": "imports"
      },
      {
        "from": "page-1075",
        "to": "comp-640",
        "type": "imports"
      },
      {
        "from": "page-1075",
        "to": "comp-638",
        "type": "imports"
      },
      {
        "from": "page-1075",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1075",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1075",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1076",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1076",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1076",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1076",
        "to": "comp-307",
        "type": "imports"
      },
      {
        "from": "page-1076",
        "to": "comp-306",
        "type": "imports"
      },
      {
        "from": "page-1077",
        "to": "comp-346",
        "type": "imports"
      },
      {
        "from": "page-1080",
        "to": "comp-1453",
        "type": "imports"
      },
      {
        "from": "page-1080",
        "to": "comp-244",
        "type": "imports"
      },
      {
        "from": "page-1081",
        "to": "comp-1295",
        "type": "imports"
      },
      {
        "from": "page-1081",
        "to": "comp-1294",
        "type": "imports"
      },
      {
        "from": "page-1081",
        "to": "comp-1494",
        "type": "imports"
      },
      {
        "from": "page-1081",
        "to": "comp-373",
        "type": "imports"
      },
      {
        "from": "page-1082",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1082",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1083",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1083",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1084",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1084",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1084",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1084",
        "to": "comp-1489",
        "type": "imports"
      },
      {
        "from": "page-1084",
        "to": "comp-1492",
        "type": "imports"
      },
      {
        "from": "page-1085",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1085",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1085",
        "to": "comp-1492",
        "type": "imports"
      },
      {
        "from": "page-1085",
        "to": "comp-1456",
        "type": "imports"
      },
      {
        "from": "page-1085",
        "to": "comp-1480",
        "type": "imports"
      },
      {
        "from": "page-1085",
        "to": "comp-1475",
        "type": "imports"
      },
      {
        "from": "page-1085",
        "to": "comp-1489",
        "type": "imports"
      },
      {
        "from": "page-1086",
        "to": "comp-1414",
        "type": "imports"
      },
      {
        "from": "page-1086",
        "to": "comp-1291",
        "type": "imports"
      },
      {
        "from": "page-1086",
        "to": "comp-1302",
        "type": "imports"
      },
      {
        "from": "page-1086",
        "to": "comp-1405",
        "type": "imports"
      },
      {
        "from": "page-1086",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1086",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1087",
        "to": "comp-1367",
        "type": "imports"
      },
      {
        "from": "page-1087",
        "to": "comp-1366",
        "type": "imports"
      },
      {
        "from": "page-1087",
        "to": "comp-1277",
        "type": "imports"
      },
      {
        "from": "page-1089",
        "to": "comp-961",
        "type": "imports"
      },
      {
        "from": "page-1090",
        "to": "comp-1523",
        "type": "imports"
      },
      {
        "from": "page-1090",
        "to": "comp-1460",
        "type": "imports"
      },
      {
        "from": "page-1092",
        "to": "comp-1288",
        "type": "imports"
      },
      {
        "from": "page-1092",
        "to": "comp-1289",
        "type": "imports"
      },
      {
        "from": "page-1093",
        "to": "comp-1420",
        "type": "imports"
      },
      {
        "from": "page-1094",
        "to": "comp-1457",
        "type": "imports"
      },
      {
        "from": "page-1094",
        "to": "comp-1473",
        "type": "imports"
      },
      {
        "from": "page-1094",
        "to": "comp-1460",
        "type": "imports"
      }
    ]
  }
}