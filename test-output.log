
> wedsync@0.1.0 test:coverage
> jest --coverage

FAIL tests/integration/session-a-b-coordination.test.ts
  ● Console

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      27 |     
      28 |     // Create test user for session coordination tests
    > 29 |     const { data: authData, error } = await supabase.auth.signUp({
         |                                       ^
      30 |       email: 'session-test@example.com',
      31 |       password: 'SecurePassword123!'
      32 |     })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signUp (node_modules/@supabase/auth-js/src/GoTrueClient.ts:502:15)
      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:29:39)

  ● Session A ↔ B Integration Tests › Form Creation with Database Security (A → B) › should create form with proper authentication and RLS enforcement

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Creation with Database Security (A → B) › should reject form creation without proper authentication

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Submission Flow (A → B → Storage) › should handle complete form submission with validation and storage

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Submission Flow (A → B → Storage) › should sanitize and validate malicious input

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Submission Flow (A → B → Storage) › should enforce field validation rules

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Cross-Session Security Validation › should maintain CSRF protection across form operations

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Cross-Session Security Validation › should enforce rate limiting across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Cross-Session Security Validation › should properly handle authentication state across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Data Consistency and Integrity › should maintain data consistency across form operations

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Data Consistency and Integrity › should handle concurrent form submissions safely

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Error Handling and Recovery › should handle database errors gracefully

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Error Handling and Recovery › should validate data types and constraints

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Performance and Security Monitoring › should handle large form submissions within limits

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Performance and Security Monitoring › should track submission metrics for monitoring

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

FAIL tests/src/__tests__/integration/pdf-workflow.test.ts
  ● PDF Import Workflow Integration › Performance Considerations › should implement proper rate limiting

    TypeError: Cannot read properties of undefined (reading 'requests')

      258 |         checkLimit: (userId: string, limit = 5, windowMs = 60000) => {
      259 |           const now = Date.now();
    > 260 |           const userRequests = this.requests.get(userId) || [];
          |                                     ^
      261 |           
      262 |           // Remove old requests outside the window
      263 |           const validRequests = userRequests.filter((time: number) => now - time < windowMs);

      at Object.requests [as checkLimit] (tests/src/__tests__/integration/pdf-workflow.test.ts:260:37)
      at checkLimit (tests/src/__tests__/integration/pdf-workflow.test.ts:277:66)
          at Function.from (<anonymous>)
      at Object.from (tests/src/__tests__/integration/pdf-workflow.test.ts:277:28)

FAIL tests/src/__tests__/integration/supabase.test.ts
  ● Console

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      15 |     
      16 |     // Create test user
    > 17 |     const { data: authData } = await supabase.auth.signUp({
         |                                ^
      18 |       email: 'test@example.com',
      19 |       password: 'testpassword123'
      20 |     })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signUp (node_modules/@supabase/auth-js/src/GoTrueClient.ts:502:15)
      at Object.<anonymous> (tests/src/__tests__/integration/supabase.test.ts:17:32)

  ● Supabase Integration › Supplier Operations › should create a supplier profile

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/suppliers?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      46 |         .single()
      47 |       
    > 48 |       expect(error).toBeNull()
         |                     ^
      49 |       expect(data?.business_name).toBe('Test Photography')
      50 |       expect(data?.vendor_type).toBe('photographer')
      51 |     })

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/suppliers?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/src/__tests__/integration/supabase.test.ts:48:21)

  ● Supabase Integration › Supplier Operations › should enforce RLS policies

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: null

      58 |         .eq('user_id', 'different-user-id')
      59 |       
    > 60 |       expect(data).toHaveLength(0)
         |                    ^
      61 |     })
      62 |   })
      63 |

      at Object.toHaveLength (tests/src/__tests__/integration/supabase.test.ts:60:20)

  ● Supabase Integration › Forms Operations › should create and retrieve a form

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      83 |         .single()
      84 |       
    > 85 |       expect(error).toBeNull()
         |                     ^
      86 |       expect(form?.name).toBe('Wedding Timeline Form')
      87 |       expect(form?.fields).toHaveLength(1)
      88 |       

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/src/__tests__/integration/supabase.test.ts:85:21)

  ● Supabase Integration › Client Dashboard Operations › should create a client dashboard

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/client_dashboards?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      114 |         .single()
      115 |       
    > 116 |       expect(error).toBeNull()
          |                     ^
      117 |       expect(data?.sections).toContain('forms')
      118 |     })
      119 |   })

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/client_dashboards?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/src/__tests__/integration/supabase.test.ts:116:21)

FAIL src/__tests__/integration/api-security.test.ts
  ● API Security › should return 401 for unauthenticated requests

    ReferenceError: fetch is not defined

      1 | describe('API Security', () => {
      2 |   it('should return 401 for unauthenticated requests', async () => {
    > 3 |     const response = await fetch('http://localhost:3000/api/pdf/process', {
        |                      ^
      4 |       method: 'POST',
      5 |     })
      6 |     expect(response.status).toBe(401)

      at Object.<anonymous> (src/__tests__/integration/api-security.test.ts:3:22)

PASS src/__tests__/unit/build-check.test.ts
FAIL tests/integration/cross-session-validation.test.ts
  ● Console

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      40 |     
      41 |     // Create test user
    > 42 |     const { data: authData, error } = await supabase.auth.signUp({
         |                                       ^
      43 |       email: 'cross-validation-test@example.com',
      44 |       password: 'SecurePassword123!'
      45 |     })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signUp (node_modules/@supabase/auth-js/src/GoTrueClient.ts:502:15)
      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:42:39)

  ● Cross-Session Validation Tests › Frontend-Backend Validation Synchronization › should maintain consistent validation rules between frontend and backend

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Frontend-Backend Validation Synchronization › should handle edge cases consistently across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Authentication State Validation › should validate authentication consistently across API calls

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Authentication State Validation › should handle session expiration consistently

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Form Data Validation Pipeline › should process form data through complete validation pipeline

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Form Data Validation Pipeline › should handle form submission validation across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Security Validation Coordination › should validate CSRF tokens consistently across form operations

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Security Validation Coordination › should apply rate limiting consistently across endpoints

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Error Handling Validation › should provide consistent error messages across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Error Handling Validation › should handle validation errors gracefully with recovery options

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

PASS tests/integration/session-a-c-scenarios.test.ts
  ● Console

    console.log
      ⚠️  Session C not yet available - scenarios prepared for future integration

      at Object.log (tests/integration/session-a-c-scenarios.test.ts:20:15)

    console.log
      ✅ Session A is ready for Session C integration

      at Object.log (tests/integration/session-a-c-scenarios.test.ts:713:15)

    console.log
      ⏳ Waiting for Session C completion...

      at Object.log (tests/integration/session-a-c-scenarios.test.ts:714:15)

FAIL tests/integration/form-data-flow.test.ts
  ● Console

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      24 |     
      25 |     // Create test user
    > 26 |     const { data: authData, error } = await supabase.auth.signUp({
         |                                       ^
      27 |       email: 'form-flow-test@example.com',
      28 |       password: 'SecurePassword123!'
      29 |     })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signUp (node_modules/@supabase/auth-js/src/GoTrueClient.ts:502:15)
      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:26:39)

  ● Form Submission → Storage → Retrieval Workflow › Basic Form Data Lifecycle › should complete full form data lifecycle: create → submit → store → retrieve

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Basic Form Data Lifecycle › should handle malicious data sanitization in the complete flow

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Complex Data Types and Validation › should handle file upload metadata through the complete flow

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Complex Data Types and Validation › should handle conditional field logic in data flow

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Retrieval and Aggregation › should aggregate form submission data correctly

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Retrieval and Aggregation › should handle complex data filtering and searching

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Integrity and Error Handling › should maintain referential integrity between forms and submissions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Integrity and Error Handling › should handle concurrent submissions gracefully

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

PASS tests/integration/csrf-token-flow.test.ts
PASS tests/security/pdf-security.test.ts
FAIL tests/src/components/forms/__tests__/FormBuilder.test.tsx
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/src/components/forms/__tests__/FormBuilder.test.tsx

      30 |
      31 |   describe('Field Management', () => {
    > 32 |     it('should render the form canvas', () => {
         |                ^
      33 |       renderFormBuilder()
      34 |       expect(screen.getByTestId('form-canvas')).toBeInTheDocument()
      35 |     })

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/src/components/forms/__tests__/FormBuilder.test.tsx:32:16)

FAIL tests/src/__tests__/communications/realtime.test.ts
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/src/__tests__/communications/realtime.test.ts

      10 | import { RealtimeMessage, RealtimeActivity, RealtimeConversation } from '@/types/communications'
      11 |
    > 12 | // Mock Supabase client
         |                ^
      13 | jest.mock('@supabase/supabase-js', () => ({
      14 |   createClient: jest.fn()
      15 | }))

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/src/__tests__/communications/realtime.test.ts:12:16)

FAIL tests/integration/rls-form-validation.test.ts
  ● Console

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      50 |     
      51 |     // Create users for each organization
    > 52 |     const { data: user1 } = await supabase.auth.signUp({
         |                             ^
      53 |       email: 'org1-user@example.com',
      54 |       password: 'SecurePassword123!'
      55 |     })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signUp (node_modules/@supabase/auth-js/src/GoTrueClient.ts:502:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:52:29)

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      55 |     })
      56 |     
    > 57 |     const { data: user2 } = await supabase.auth.signUp({
         |                             ^
      58 |       email: 'org2-user@example.com',
      59 |       password: 'SecurePassword123!'
      60 |     })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signUp (node_modules/@supabase/auth-js/src/GoTrueClient.ts:502:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:57:29)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      100 |     it('should enforce organization isolation for form creation and access', async () => {
      101 |       // Create client for Organization 1
    > 102 |       const org1Client = createClient(
          |                                      ^
      103 |         process.env.TEST_SUPABASE_URL || 'https://test.supabase.co',
      104 |         process.env.TEST_SUPABASE_ANON_KEY || 'test-key'
      105 |       )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:102:38)

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/token?grant_type=password failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      106 |       
      107 |       // Sign in as Organization 1 user
    > 108 |       const { data: session1 } = await org1Client.auth.signInWithPassword({
          |                                  ^
      109 |         email: 'org1-user@example.com',
      110 |         password: 'SecurePassword123!'
      111 |       })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signInWithPassword (node_modules/@supabase/auth-js/src/GoTrueClient.ts:573:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:108:34)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      240 |     it('should enforce RLS on form submissions across organizations', async () => {
      241 |       // Set up clients for both organizations
    > 242 |       const org1Client = createClient(
          |                                      ^
      243 |         process.env.TEST_SUPABASE_URL || 'https://test.supabase.co',
      244 |         process.env.TEST_SUPABASE_ANON_KEY || 'test-key'
      245 |       )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:242:38)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      245 |       )
      246 |       
    > 247 |       const org2Client = createClient(
          |                                      ^
      248 |         process.env.TEST_SUPABASE_URL || 'https://test.supabase.co',
      249 |         process.env.TEST_SUPABASE_ANON_KEY || 'test-key'
      250 |       )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:247:38)

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/token?grant_type=password failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      250 |       )
      251 |       
    > 252 |       await org1Client.auth.signInWithPassword({
          |       ^
      253 |         email: 'org1-user@example.com',
      254 |         password: 'SecurePassword123!'
      255 |       })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signInWithPassword (node_modules/@supabase/auth-js/src/GoTrueClient.ts:573:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:252:7)

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/token?grant_type=password failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      255 |       })
      256 |       
    > 257 |       await org2Client.auth.signInWithPassword({
          |       ^
      258 |         email: 'org2-user@example.com',
      259 |         password: 'SecurePassword123!'
      260 |       })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signInWithPassword (node_modules/@supabase/auth-js/src/GoTrueClient.ts:573:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:257:7)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      374 |   describe('Form Validation with Security Context', () => {
      375 |     it('should validate form data while respecting organizational boundaries', async () => {
    > 376 |       const org1Client = createClient(
          |                                      ^
      377 |         process.env.TEST_SUPABASE_URL || 'https://test.supabase.co',
      378 |         process.env.TEST_SUPABASE_ANON_KEY || 'test-key'
      379 |       )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:376:38)

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/token?grant_type=password failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      379 |       )
      380 |       
    > 381 |       await org1Client.auth.signInWithPassword({
          |       ^
      382 |         email: 'org1-user@example.com',
      383 |         password: 'SecurePassword123!'
      384 |       })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signInWithPassword (node_modules/@supabase/auth-js/src/GoTrueClient.ts:573:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:381:7)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      568 |     
      569 |     it('should handle security-sensitive field validation with RLS', async () => {
    > 570 |       const org1Client = createClient(
          |                                      ^
      571 |         process.env.TEST_SUPABASE_URL || 'https://test.supabase.co',
      572 |         process.env.TEST_SUPABASE_ANON_KEY || 'test-key'
      573 |       )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:570:38)

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/token?grant_type=password failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      573 |       )
      574 |       
    > 575 |       await org1Client.auth.signInWithPassword({
          |       ^
      576 |         email: 'org1-user@example.com',
      577 |         password: 'SecurePassword123!'
      578 |       })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signInWithPassword (node_modules/@supabase/auth-js/src/GoTrueClient.ts:573:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:575:7)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      753 |   describe('Performance and Scalability with RLS', () => {
      754 |     it('should maintain validation performance with RLS policies active', async () => {
    > 755 |       const org1Client = createClient(
          |                                      ^
      756 |         process.env.TEST_SUPABASE_URL || 'https://test.supabase.co',
      757 |         process.env.TEST_SUPABASE_ANON_KEY || 'test-key'
      758 |       )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:755:38)

    console.error
      FetchError {
        message: 'request to https://test.supabase.co/auth/v1/token?grant_type=password failed, reason: getaddrinfo ENOTFOUND test.supabase.co',
        type: 'system',
        errno: 'ENOTFOUND',
        code: 'ENOTFOUND'
      }

      758 |       )
      759 |       
    > 760 |       await org1Client.auth.signInWithPassword({
          |       ^
      761 |         email: 'org1-user@example.com',
      762 |         password: 'SecurePassword123!'
      763 |       })

      at _handleRequest (node_modules/@supabase/auth-js/src/lib/fetch.ts:188:13)
      at _request (node_modules/@supabase/auth-js/src/lib/fetch.ts:157:16)
      at SupabaseAuthClient.signInWithPassword (node_modules/@supabase/auth-js/src/GoTrueClient.ts:573:15)
      at Object.<anonymous> (tests/integration/rls-form-validation.test.ts:760:7)

  ● Form Validation with RLS Policies › Organization-Based Form Access Control › should enforce organization isolation for form creation and access

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      142 |         .single()
      143 |       
    > 144 |       expect(org1FormError).toBeNull()
          |                             ^
      145 |       expect(org1Form?.title).toBe('Organization 1 Private Form')
      146 |       expect(org1Form?.organization_id).toBe(org1Id)
      147 |       

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/rls-form-validation.test.ts:144:29)

  ● Form Validation with RLS Policies › Organization-Based Form Access Control › should enforce RLS on form submissions across organizations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      345 |         .select()
      346 |       
    > 347 |       expect(org1VisibleSubmissions?.every(sub => sub.organization_id === org1Id)).toBe(true)
          |                                                                                    ^
      348 |       expect(org1VisibleSubmissions?.length).toBeGreaterThan(0)
      349 |       
      350 |       // Organization 2 can only see their submissions

      at Object.toBe (tests/integration/rls-form-validation.test.ts:347:84)

  ● Form Validation with RLS Policies › Form Validation with Security Context › should validate form data while respecting organizational boundaries

    TypeError: Cannot read properties of null (reading 'sections')

      436 |         const errors: string[] = []
      437 |         
    > 438 |         for (const section of schema.sections) {
          |                                      ^
      439 |           for (const field of section.fields) {
      440 |             const value = data[field.id]
      441 |             

      at sections (tests/integration/rls-form-validation.test.ts:438:38)
      at Object.validateFormSubmission (tests/integration/rls-form-validation.test.ts:494:32)

  ● Form Validation with RLS Policies › Form Validation with Security Context › should handle security-sensitive field validation with RLS

    TypeError: Cannot read properties of null (reading 'sections')

      640 |         const securityFlags: string[] = []
      641 |         
    > 642 |         for (const section of schema.sections) {
          |                                      ^
      643 |           for (const field of section.fields) {
      644 |             const value = data[field.id]
      645 |             

      at sections (tests/integration/rls-form-validation.test.ts:642:38)
      at Object.validateSecurityFields (tests/integration/rls-form-validation.test.ts:682:40)

  ● Form Validation with RLS Policies › Performance and Scalability with RLS › should maintain validation performance with RLS policies active

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/form_submissions?columns=%22form_id%22%2C%22organization_id%22%2C%22data%22%2C%22status%22%2C%22submitted_at%22&select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      824 |       const processingTime = endTime - startTime
      825 |       
    > 826 |       expect(batchError).toBeNull()
          |                          ^
      827 |       expect(batchSubmissions).toHaveLength(batchSize)
      828 |       
      829 |       // Performance should be reasonable even with RLS

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/form_submissions?columns=%22form_id%22%2C%22organization_id%22%2C%22data%22%2C%22status%22%2C%22submitted_at%22&select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/rls-form-validation.test.ts:826:26)

FAIL tests/src/__tests__/communications/components.test.tsx
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/src/__tests__/communications/components.test.tsx

      36 |     conversations: [],
      37 |     loading: false,
    > 38 |     error: null
         |                ^
      39 |   })),
      40 |   useRealtimeActivity: jest.fn(() => ({
      41 |     activities: [],

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/src/__tests__/communications/components.test.tsx:38:17)

FAIL tests/integration/form-submission-workflow.test.ts
  ● Console

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      21 |   beforeEach(async () => {
      22 |     // Setup test environment
    > 23 |     supabase = createClient(
         |                            ^
      24 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      25 |       process.env.SUPABASE_ANON_KEY!
      26 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:23:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      554 |
      555 |   beforeEach(() => {
    > 556 |     supabase = createClient(
          |                            ^
      557 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      558 |       process.env.SUPABASE_ANON_KEY!
      559 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:556:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      554 |
      555 |   beforeEach(() => {
    > 556 |     supabase = createClient(
          |                            ^
      557 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      558 |       process.env.SUPABASE_ANON_KEY!
      559 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:556:28)

    console.warn
      Multiple GoTrueClient instances detected in the same browser context. It is not an error, but this should be avoided as it may produce undefined behavior when used concurrently under the same storage key.

      554 |
      555 |   beforeEach(() => {
    > 556 |     supabase = createClient(
          |                            ^
      557 |       process.env.NEXT_PUBLIC_SUPABASE_URL!,
      558 |       process.env.SUPABASE_ANON_KEY!
      559 |     )

      at new GoTrueClient (node_modules/@supabase/auth-js/src/GoTrueClient.ts:235:15)
      at new SupabaseAuthClient (node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts:6:5)
      at SupabaseClient._initSupabaseAuthClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:304:12)
      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:107:24)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (tests/integration/form-submission-workflow.test.ts:556:28)

  ● Form Submission Workflow - Wedding Vendor Integration › Wedding Inquiry Form Creation › should allow photographer to create a wedding inquiry form

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      116 |         .single()
      117 |
    > 118 |       expect(error).toBeNull()
          |                     ^
      119 |       expect(data).toBeDefined()
      120 |       expect(data.name).toBe('Wedding Photography Inquiry')
      121 |       expect(data.fields).toHaveLength(6)

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/form-submission-workflow.test.ts:118:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Couple Form Submission › should successfully submit a wedding inquiry from couple

    TypeError: Cannot read properties of null (reading 'id')

      186 |         .single()
      187 |       
    > 188 |       formId = data.id
          |                     ^
      189 |     })
      190 |
      191 |     it('should successfully submit a wedding inquiry from couple', async () => {

      at Object.id (tests/integration/form-submission-workflow.test.ts:188:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Couple Form Submission › should validate required fields before submission

    TypeError: Cannot read properties of null (reading 'id')

      186 |         .single()
      187 |       
    > 188 |       formId = data.id
          |                     ^
      189 |     })
      190 |
      191 |     it('should successfully submit a wedding inquiry from couple', async () => {

      at Object.id (tests/integration/form-submission-workflow.test.ts:188:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Couple Form Submission › should handle duplicate wedding date submissions correctly

    TypeError: Cannot read properties of null (reading 'id')

      186 |         .single()
      187 |       
    > 188 |       formId = data.id
          |                     ^
      189 |     })
      190 |
      191 |     it('should successfully submit a wedding inquiry from couple', async () => {

      at Object.id (tests/integration/form-submission-workflow.test.ts:188:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Vendor Form Management › should allow vendor to view all submissions for their forms

    TypeError: Cannot read properties of null (reading 'id')

      307 |       const submissions = [
      308 |         {
    > 309 |           form_id: form.id,
          |                         ^
      310 |           email: 'couple1@example.com',
      311 |           data: { couple_names: 'Couple 1' }
      312 |         },

      at Object.id (tests/integration/form-submission-workflow.test.ts:309:25)

  ● Form Submission Workflow - Wedding Vendor Integration › Vendor Form Management › should track form view analytics for vendor insights

    TypeError: Cannot read properties of null (reading 'view_count')

      358 |       const { error: viewError } = await supabase
      359 |         .from('forms')
    > 360 |         .update({ view_count: form.view_count + 1 })
          |                                    ^
      361 |         .eq('id', form.id)
      362 |
      363 |       expect(viewError).toBeNull()

      at Object.view_count (tests/integration/form-submission-workflow.test.ts:360:36)

  ● Form Submission Workflow - Wedding Vendor Integration › Email Notifications › should trigger notification to vendor on form submission

    TypeError: Cannot read properties of null (reading 'id')

      409 |
      410 |       const submission = {
    > 411 |         form_id: form.id,
          |                       ^
      412 |         email: COUPLE_EMAIL,
      413 |         data: {
      414 |           couple_names: 'Test Couple',

      at Object.id (tests/integration/form-submission-workflow.test.ts:411:23)

  ● Form Submission Workflow - Wedding Vendor Integration › Email Notifications › should send confirmation email to couple after submission

    TypeError: Cannot read properties of null (reading 'id')

      459 |
      460 |       const submission = {
    > 461 |         form_id: form.id,
          |                       ^
      462 |         email: COUPLE_EMAIL,
      463 |         data: {
      464 |           couple_names: 'Sarah & John',

      at Object.id (tests/integration/form-submission-workflow.test.ts:461:23)

  ● Form Submission Workflow - Wedding Vendor Integration › Data Export and Reporting › should export form submissions to CSV for vendor

    TypeError: Cannot read properties of null (reading 'id')

      507 |       const submissions = [
      508 |         {
    > 509 |           form_id: form.id,
          |                         ^
      510 |           email: 'couple1@test.com',
      511 |           data: {
      512 |             couple_names: 'Alice & Bob',

      at Object.id (tests/integration/form-submission-workflow.test.ts:509:25)

  ● Form Builder Advanced Features › Conditional Logic › should handle conditional fields based on wedding type

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      605 |         .single()
      606 |
    > 607 |       expect(error).toBeNull()
          |                     ^
      608 |       expect(data.fields).toHaveLength(3)
      609 |       expect(data.fields[1].conditional).toBeDefined()
      610 |

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/form-submission-workflow.test.ts:607:21)

  ● Form Builder Advanced Features › Multi-Step Forms › should support multi-step wedding inquiry forms

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      654 |         .single()
      655 |
    > 656 |       expect(error).toBeNull()
          |                     ^
      657 |       expect(data.type).toBe('multi-step')
      658 |       expect(data.steps).toHaveLength(3)
      659 |

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/form-submission-workflow.test.ts:656:21)

FAIL tests/src/__tests__/api/forms.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined

      4 |
      5 | // Mock Supabase
    > 6 | jest.mock('@/lib/supabase', () => ({
        |                 ^
      7 |   createClient: jest.fn(() => ({
      8 |     auth: {
      9 |       getUser: jest.fn().mockResolvedValue({

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/src/__tests__/api/forms.test.ts:6:17)

FAIL tests/src/__tests__/communications/api.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined

      25 | }))
      26 |
    > 27 | // Mock email service
         |                 ^
      28 | jest.mock('@/lib/email/service', () => ({
      29 |   sendEmail: jest.fn().mockResolvedValue({
      30 |     id: 'email-123',

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/src/__tests__/communications/api.test.ts:27:17)

FAIL tests/unit/components/FormBuilder.test.tsx
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/unit/components/FormBuilder.test.tsx

       8 | import userEvent from '@testing-library/user-event';
       9 | import { FormBuilder } from '@/components/forms/FormBuilder';
    > 10 | import { FormPreview } from '@/components/forms/FormPreview';
         |                 ^
      11 |
      12 | describe('FormBuilder Component', () => {
      13 |   const mockOnSave = jest.fn();

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/unit/components/FormBuilder.test.tsx:10:17)

FAIL tests/security/core-fields-security.test.ts
  ● Core Fields Security Tests › XSS Prevention › should remove HTML tags but keep content

    expect(received).toBe(expected) // Object.is equality

    Expected: "John & Jane's Wedding"
    Received: "John &amp; Jane's Wedding"

      59 |       const input = "<h1>John & Jane's Wedding</h1>";
      60 |       const sanitized = sanitizeInput(input);
    > 61 |       expect(sanitized).toBe("John & Jane's Wedding");
         |                         ^
      62 |     });
      63 |
      64 |     test('should handle nested script tags', () => {

      at Object.toBe (tests/security/core-fields-security.test.ts:61:25)

  ● Core Fields Security Tests › Input Size Validation › should reject very long field names

    expect(received).toContain(expected) // indexOf

    Expected substring: "field name"
    Received string:    "Validation error occurred"

      88 |       const result = validateCoreFieldValue(longFieldName, 'value');
      89 |       expect(result.valid).toBe(false);
    > 90 |       expect(result.error).toContain('field name');
         |                            ^
      91 |     });
      92 |   });
      93 |

      at Object.toContain (tests/security/core-fields-security.test.ts:90:28)

  ● Core Fields Security Tests › Phone Number Validation › should validate phone numbers correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      165 |       validPhones.forEach(phone => {
      166 |         const result = validateCoreFieldValue('bride_phone', phone);
    > 167 |         expect(result.valid).toBe(true);
          |                              ^
      168 |       });
      169 |
      170 |       const invalidPhones = [

      at toBe (tests/security/core-fields-security.test.ts:167:30)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/security/core-fields-security.test.ts:165:19)

  ● Core Fields Security Tests › Batch Field Validation › should validate multiple fields and return sanitized values

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      255 |       const result = validateCoreFields(fields);
      256 |       
    > 257 |       expect(result.valid).toBe(true);
          |                            ^
      258 |       expect(result.sanitized.bride_first_name).toBe('Jane');
      259 |       expect(result.sanitized.bride_email).toBe('jane@example.com');
      260 |       expect(result.sanitized.groom_first_name).toBe('John');

      at Object.toBe (tests/security/core-fields-security.test.ts:257:28)

  ● Core Fields Security Tests › Unknown Field Handling › should sanitize unknown string fields

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      283 |     test('should sanitize unknown string fields', () => {
      284 |       const result = validateCoreFieldValue('custom_field', '<script>test</script>');
    > 285 |       expect(result.valid).toBe(true);
          |                            ^
      286 |       expect(result.sanitized).toBe('test');
      287 |     });
      288 |

      at Object.toBe (tests/security/core-fields-security.test.ts:285:28)

  ● Core Fields Security Tests › Edge Cases › should handle null values for optional fields

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      303 |     test('should handle null values for optional fields', () => {
      304 |       const result = validateCoreFieldValue('notes', null);
    > 305 |       expect(result.valid).toBe(true);
          |                            ^
      306 |     });
      307 |
      308 |     test('should handle undefined values for optional fields', () => {

      at Object.toBe (tests/security/core-fields-security.test.ts:305:28)

FAIL tests/security/xss-prevention.test.ts
  ● XSS Prevention Tests › DOMPurify Sanitization › should sanitize XSS payload: javascript:alert("XSS")

    expect(received).not.toMatch(expected)

    Expected pattern: not /javascript:/i
    Received string:      "javascript:alert(\"XSS\")"

      38 |       expect(sanitized).not.toMatch(/<script/i);
      39 |       expect(sanitized).not.toMatch(/on\w+\s*=/i);
    > 40 |       expect(sanitized).not.toMatch(/javascript:/i);
         |                             ^
      41 |       expect(sanitized).not.toMatch(/vbscript:/i);
      42 |       expect(sanitized).not.toMatch(/data:text\/html/i);
      43 |     });

      at toMatch (tests/security/xss-prevention.test.ts:40:29)

  ● XSS Prevention Tests › Form Field Sanitization › should sanitize select option values

    expect(received).not.toMatch(expected)

    Expected pattern: not /<img/i
    Received string:      "Option 1<img src=\"x\" \"alert(1)\">"

      84 |       const sanitized = sanitizeFieldValue(maliciousOption, 'select');
      85 |       
    > 86 |       expect(sanitized).not.toMatch(/<img/i);
         |                             ^
      87 |       expect(sanitized).toBe('Option 1');
      88 |     });
      89 |

      at Object.toMatch (tests/security/xss-prevention.test.ts:86:29)

  ● XSS Prevention Tests › Advanced XSS Attack Vectors › should prevent CSS expression attacks

    expect(received).not.toMatch(expected)

    Expected pattern: not /expression/i
    Received string:      "<div style=\"background: expression(alert(1))\">Content</div>"

      114 |       });
      115 |       
    > 116 |       expect(sanitized).not.toMatch(/expression/i);
          |                             ^
      117 |     });
      118 |
      119 |     test('should prevent DOM clobbering attacks', () => {

      at Object.toMatch (tests/security/xss-prevention.test.ts:116:29)

  ● XSS Prevention Tests › Advanced XSS Attack Vectors › should prevent mXSS (mutation XSS) attacks

    expect(received).not.toMatch(expected)

    Expected pattern: not /onerror/i
    Received string:      "<p title=\"</noscript><img src=x onerror=alert(1)>\"></p>"

      132 |       const sanitized = DOMPurify.sanitize(mxssAttempt);
      133 |       
    > 134 |       expect(sanitized).not.toMatch(/onerror/i);
          |                             ^
      135 |       expect(sanitized).not.toMatch(/alert/);
      136 |     });
      137 |   });

      at Object.toMatch (tests/security/xss-prevention.test.ts:134:29)

FAIL tests/src/__tests__/core-fields.test.ts
  ● Test suite failed to run

    Cannot find module '../../../src/lib/core-fields' from 'tests/src/__tests__/core-fields.test.ts'

      4 |   CoreFieldState,
      5 |   CoreFieldType 
    > 6 | } from '@/lib/core-fields'
        |                     ^
      7 |
      8 | describe('Core Fields System', () => {
      9 |   let manager: CoreFieldsManager

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/src/__tests__/core-fields.test.ts:6:21)

(node:51467) MetadataLookupWarning: received unexpected error = All promises were rejected code = UNKNOWN
(Use `node --trace-warnings ...` to show where the warning was created)
PASS tests/src/__tests__/pdf/pdf-upload.test.ts
FAIL tests/integration/payment/stripe-webhook.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined



      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (src/app/api/stripe/webhook/route.ts:5386:26)
      at Object.<anonymous> (tests/integration/payment/stripe-webhook.test.ts:48:16)

FAIL tests/security/file-upload-security.test.ts
  ● Test suite failed to run

    Cannot find module 'supertest' from 'tests/security/file-upload-security.test.ts'

      4 | import path from 'path';
      5 |
    > 6 | const API_URL = process.env.API_URL || 'http://localhost:3000';
        |                                                           ^
      7 |
      8 | describe('File Upload Security Tests', () => {
      9 |   describe('Authentication', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/security/file-upload-security.test.ts:6:59)

FAIL tests/security/payment-security.test.ts
  ● Test suite failed to run

    Cannot find module 'supertest' from 'tests/security/payment-security.test.ts'

      4 | const API_URL = process.env.API_URL || 'http://localhost:3000';
      5 |
    > 6 | describe('Payment Security Tests', () => {
        |                                           ^
      7 |   describe('Authentication', () => {
      8 |     it('should reject payment endpoint access without authentication', async () => {
      9 |       const response = await request(API_URL)

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/security/payment-security.test.ts:6:59)

FAIL tests/security/file-upload.test.ts
  ● Test suite failed to run

    Cannot find module '../../src/lib/file-security' from 'tests/security/file-upload.test.ts'

       6 | import { validateFile, sanitizeFilename, scanForMaliciousContent, generateFileHash, FileQuarantine } from '@/lib/file-security';
       7 | import fs from 'fs';
    >  8 | import path from 'path';
         |                       ^
       9 |
      10 | describe('File Upload Security Tests', () => {
      11 |   // Test file creation helpers

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/security/file-upload.test.ts:8:23)

FAIL tests/src/lib/journey/__tests__/journey-engine.test.ts
  ● Test suite failed to run

    ReferenceError: TextDecoder is not defined



      at Object.<anonymous> (node_modules/@react-email/render/dist/node/index.js:164:15)
      at Object.<anonymous> (src/lib/email/service.ts:2468:26)
      at Object.<anonymous> (src/lib/journey/engine.ts:5408:27)
      at Object.<anonymous> (tests/src/lib/journey/__tests__/journey-engine.test.ts:6:17)

FAIL tests/security/csrf-protection.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined

       6 | import { NextRequest } from 'next/server';
       7 | import { csrfManager, CSRFError } from '@/lib/csrf';
    >  8 |
         | ^
       9 | // Mock Next.js request for testing
      10 | const createMockRequest = (
      11 |   method: string = 'POST',

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/security/csrf-protection.test.ts:8:17)

FAIL tests/src/__tests__/pdf/security-tests.test.ts
  ● Test suite failed to run

    supabaseKey is required.

       7 | import crypto from 'crypto';
       8 |
    >  9 | const supabase = createClient(
         |                              ^
      10 |   process.env.NEXT_PUBLIC_SUPABASE_URL!,
      11 |   process.env.SUPABASE_SERVICE_ROLE_KEY!
      12 | );

      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:81:29)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (src/lib/audit-logger.ts:9:30)
      at Object.<anonymous> (tests/src/__tests__/pdf/security-tests.test.ts:10:22)

FAIL tests/unit/payment/stripe-checkout.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined



      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (src/app/api/stripe/create-checkout-session/route.ts:2731:27)
      at Object.<anonymous> (tests/unit/payment/stripe-checkout.test.ts:43:16)

FAIL tests/integration/form-submission-email.test.ts
  ● Test suite failed to run

    Cannot find module '../../src/lib/supabase' from 'tests/integration/form-submission-email.test.ts'

       7 | import { createSupabaseClient } from '@/lib/supabase';
       8 | import { EmailService } from '@/lib/email/service';
    >  9 | import { Resend } from 'resend';
         |                   ^
      10 | import fetch from 'node-fetch';
      11 |
      12 | // Mock Resend for testing

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/integration/form-submission-email.test.ts:9:19)

FAIL tests/integration/pdf-ocr-form-creation.test.ts
  ● Test suite failed to run

    Cannot find module '../../src/lib/supabase' from 'tests/integration/pdf-ocr-form-creation.test.ts'

       7 | import { createSupabaseClient } from '@/lib/supabase';
       8 | import { processPDF } from '@/lib/ocr/pdf-processor';
    >  9 | import { generateFormFromOCR } from '@/lib/forms/form-generator';
         |                   ^
      10 | import fs from 'fs';
      11 | import path from 'path';
      12 | import FormData from 'form-data';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/integration/pdf-ocr-form-creation.test.ts:9:19)

FAIL tests/playwright/basic.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test'
      2 |
    > 3 | test('homepage loads', async ({ page }) => {
        |     ^
      4 |   await page.goto('/')
      5 |   await expect(page).toHaveTitle(/WedSync/)
      6 |   await page.screenshot({ path: 'tests/screenshots/homepage.png' })

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._createTest (node_modules/playwright/lib/common/testType.js:86:5)
      at node_modules/playwright/lib/transform/transform.js:275:12
      at Object.<anonymous> (tests/playwright/basic.spec.ts:3:5)

FAIL tests/staging/smoke-tests.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      4 | const config = StagingValidationConfig;
      5 |
    > 6 | test.describe('WedSync 2.0 Staging Smoke Tests', () => {
        |      ^
      7 |   let page: Page;
      8 |
      9 |   test.beforeEach(async ({ browser }) => {

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/staging/smoke-tests.spec.ts:6:6)

FAIL tests/security/integration.test.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       6 | import { test, expect } from '@playwright/test';
       7 |
    >  8 | test.describe('End-to-End Security Integration Tests', () => {
         |      ^
       9 |   test.beforeEach(async ({ page }) => {
      10 |     // Setup test environment
      11 |     await page.goto('/');

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/security/integration.test.ts:8:6)

FAIL tests/staging/pdf-validation.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       6 | const config = StagingValidationConfig;
       7 |
    >  8 | test.describe('PDF Import Validation Tests', () => {
         |      ^
       9 |   
      10 |   test.beforeAll(async () => {
      11 |     // Create test fixtures directory if it doesn't exist

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/staging/pdf-validation.spec.ts:8:6)

FAIL tests/staging/payment-flow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      4 | const config = StagingValidationConfig;
      5 |
    > 6 | test.describe('Payment Flow Validation Tests', () => {
        |      ^
      7 |
      8 |   test('Stripe configuration endpoint accessibility', async ({ page }) => {
      9 |     const response = await page.request.get(`${config.environment.apiUrl}/stripe/config`);

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/staging/payment-flow.spec.ts:6:6)

FAIL tests/e2e/pdf-to-form-workflow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      2 | import path from 'path';
      3 |
    > 4 | test.describe('PDF to Form Workflow', () => {
        |      ^
      5 |   test.beforeEach(async ({ page }) => {
      6 |     // Navigate to the PDF import page
      7 |     await page.goto('/forms/import');

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/pdf-to-form-workflow.spec.ts:4:6)

FAIL tests/e2e/production-workflow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       7 |  */
       8 |
    >  9 | test.describe('Production Workflow Validation', () => {
         |      ^
      10 |   let browser: Browser;
      11 |   let vendorPage: Page;
      12 |   let clientPage: Page;

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/production-workflow.spec.ts:9:6)

FAIL tests/e2e/pdf-import.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       5 | const mockPDFPath = path.join(__dirname, '../../fixtures/sample-contract.pdf');
       6 |
    >  7 | test.describe('PDF Import Feature', () => {
         |      ^
       8 |   test.beforeEach(async ({ page }) => {
       9 |     // Navigate to PDF import page
      10 |     await page.goto('/pdf/import');

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/pdf-import.spec.ts:7:6)

FAIL tests/integration/e2e-user-workflows.test.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      11 | import { test, expect, Page, BrowserContext } from '@playwright/test'
      12 |
    > 13 | test.describe('End-to-End User Workflows', () => {
         |      ^
      14 |   let page: Page
      15 |   let context: BrowserContext
      16 |   

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/integration/e2e-user-workflows.test.ts:13:6)

FAIL tests/e2e/payment-flow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      50 | }
      51 |
    > 52 | test.describe('Pricing Page', () => {
         |      ^
      53 |   test.beforeEach(async ({ page }) => {
      54 |     await page.goto('/pricing');
      55 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/payment-flow.spec.ts:52:6)

FAIL tests/e2e/form-builder.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test'
      2 |
    > 3 | test.describe('Form Builder', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     // Login as test user
      6 |     await page.goto('/login')

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/form-builder.spec.ts:3:6)

FAIL tests/e2e/complete-user-journey.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       7 |  */
       8 |
    >  9 | test.describe('Complete Wedding Vendor Journey', () => {
         |      ^
      10 |   let page: Page;
      11 |   const testEmail = `test-${Date.now()}@example.com`;
      12 |   const testPassword = 'TestPassword123!';

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/complete-user-journey.spec.ts:9:6)

Failed to collect coverage from /Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/src/lib/security/api-key-rotation.ts
ERROR:   [31mx[0m Expected ';', got 'dDays'
    ,-[[36;1;4m/Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/src/lib/security/api-key-rotation.ts[0m:30:1]
 [2m27[0m | interface KeyRotationPolicy {
 [2m28[0m |   autoRotationEnabled: boolean;
 [2m29[0m |   rotationIntervalDays: number;
 [2m30[0m |   gracePerio dDays: number; // How long old keys remain valid during transition
    : [35;1m             ^^^^^[0m
 [2m31[0m |   maxKeysPerOrg: number;
 [2m32[0m |   notifyBeforeExpiryDays: number;
 [2m33[0m | }
    `----


Caused by:
    Syntax Error
STACK: Error:   [31mx[0m Expected ';', got 'dDays'
    ,-[[36;1;4m/Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/src/lib/security/api-key-rotation.ts[0m:30:1]
 [2m27[0m | interface KeyRotationPolicy {
 [2m28[0m |   autoRotationEnabled: boolean;
 [2m29[0m |   rotationIntervalDays: number;
 [2m30[0m |   gracePerio dDays: number; // How long old keys remain valid during transition
    : [35;1m             ^^^^^[0m
 [2m31[0m |   maxKeysPerOrg: number;
 [2m32[0m |   notifyBeforeExpiryDays: number;
 [2m33[0m | }
    `----


Caused by:
    Syntax Error
    at Object.transformSync (/Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/node_modules/next/dist/build/swc/index.js:1062:33)
    at transformSync (/Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/node_modules/next/dist/build/swc/index.js:1142:21)
    at process (/Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/node_modules/next/dist/build/swc/jest-transformer.js:65:45)
    at ScriptTransformer.transformSourceAsync (/Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/node_modules/@jest/transform/build/index.js:462:25)
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async generateEmptyCoverage (/Users/skyphotography/CODE/WedSync-2.0/WedSync2/wedsync/node_modules/@jest/reporters/build/CoverageWorker.js:92:9)
----------------------------------------------------------|---------|----------|---------|---------|-----------------------------
File                                                      | % Stmts | % Branch | % Funcs | % Lines | Uncovered Line #s           
----------------------------------------------------------|---------|----------|---------|---------|-----------------------------
All files                                                 |    0.84 |      0.5 |    0.28 |    0.88 |                             
 src                                                      |       0 |        0 |       0 |       0 |                             
  middleware.ts                                           |       0 |        0 |       0 |       0 | 1-251                       
 src/app                                                  |       0 |      100 |       0 |       0 |                             
  layout.tsx                                              |       0 |      100 |       0 |       0 | 2-21                        
  page.tsx                                                |       0 |      100 |       0 |       0 | 1-5                         
 src/app/(dashboard)                                      |       0 |        0 |       0 |       0 |                             
  layout.tsx                                              |       0 |        0 |       0 |       0 | 1-40                        
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-272                       
 src/app/(dashboard)/admin-dashboard                      |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-316                       
 src/app/(dashboard)/clients                              |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-332                       
 src/app/(dashboard)/clients/[id]                         |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-315                       
 src/app/(dashboard)/clients/[id]/edit                    |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-168                       
 src/app/(dashboard)/clients/import                       |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-350                       
 src/app/(dashboard)/clients/new                          |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-92                        
 src/app/(dashboard)/communications                       |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-102                       
 src/app/(dashboard)/test-communications                  |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-315                       
 src/app/(dashboard)/vendors                              |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-246                       
 src/app/(dashboard)/vendors/[id]                         |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-386                       
 src/app/(dashboard)/vendors/[id]/edit                    |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-414                       
 src/app/api/auth/[...nextauth]                           |       0 |      100 |     100 |       0 |                             
  route.ts                                                |       0 |      100 |     100 |       0 | 1-6                         
 src/app/api/auth/session                                 |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-138                       
 src/app/api/clients                                      |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-148                       
 src/app/api/clients/[id]                                 |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-136                       
 src/app/api/communications/activity-feed                 |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-288                       
 src/app/api/communications/conversations                 |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-191                       
 src/app/api/communications/messages                      |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-247                       
 src/app/api/communications/messages/[id]/read            |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-102                       
 src/app/api/communications/notifications/email           |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-258                       
 src/app/api/communications/notifications/webhooks/resend |       0 |      100 |       0 |       0 |                             
  route.ts                                                |       0 |      100 |       0 |       0 | 1-25                        
 src/app/api/core-fields/extract                          |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-382                       
 src/app/api/core-fields/populate                         |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-393                       
 src/app/api/csrf-token                                   |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-104                       
 src/app/api/forms                                        |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-373                       
 src/app/api/forms/[id]                                   |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-378                       
 src/app/api/forms/[id]/submit                            |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-566                       
 src/app/api/forms/[id]/sync-core-fields                  |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-428                       
 src/app/api/forms/create-from-pdf                        |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-234                       
 src/app/api/forms/verify-password                        |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-112                       
 src/app/api/health                                       |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-124                       
 src/app/api/journeys                                     |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-215                       
 src/app/api/journeys/[executionId]                       |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-59                        
 src/app/api/pdf/process                                  |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-628                       
 src/app/api/pdf/upload                                   |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-370                       
 src/app/api/pdf/validate                                 |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-328                       
 src/app/api/sms/inbound                                  |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-73                        
 src/app/api/sms/manage                                   |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-164                       
 src/app/api/sms/webhook                                  |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-71                        
 src/app/api/stripe/create-checkout-session               |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-368                       
 src/app/api/stripe/webhook                               |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-767                       
 src/app/api/suppliers                                    |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-106                       
 src/app/api/suppliers/[id]                               |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-105                       
 src/app/api/vendor-categories                            |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-21                        
 src/app/api/webhooks                                     |       0 |        0 |       0 |       0 |                             
  route.ts                                                |       0 |        0 |       0 |       0 | 1-117                       
 src/app/demo/secure-form                                 |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-300                       
 src/app/forms/[slug]                                     |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-266                       
 src/app/forms/[slug]/password                            |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-37                        
 src/app/forms/[slug]/receipt                             |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 1-352                       
 src/app/forms/builder                                    |       0 |      100 |       0 |       0 |                             
  page.tsx                                                |       0 |      100 |       0 |       0 | 1-4                         
 src/app/forms/import                                     |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-551                       
 src/app/forms/test-core-fields                           |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-235                       
 src/app/login                                            |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-89                        
 src/app/onboarding-demo                                  |       0 |      100 |       0 |       0 |                             
  page.tsx                                                |       0 |      100 |       0 |       0 | 1-11                        
 src/app/pdf/[id]/mapping                                 |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-239                       
 src/app/pdf/import                                       |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-228                       
 src/app/pricing                                          |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-283                       
 src/app/security-demo                                    |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-452                       
 src/app/signup                                           |       0 |        0 |       0 |       0 |                             
  page.tsx                                                |       0 |        0 |       0 |       0 | 3-95                        
 src/components                                           |       0 |        0 |       0 |       0 |                             
  LazyComponents.tsx                                      |       0 |        0 |       0 |       0 | 6-153                       
  OnboardingDemo.tsx                                      |       0 |        0 |       0 |       0 | 3-42                        
 src/components/forms                                     |       0 |        0 |       0 |       0 |                             
  AutoPopulateIndicator.tsx                               |       0 |        0 |       0 |       0 | 3-87                        
  AutoSaveFormWrapper.tsx                                 |       0 |        0 |       0 |       0 | 1-26                        
  ClientFormSubmission.tsx                                |       0 |        0 |       0 |       0 | 3-602                       
  CoreFieldsPanel.tsx                                     |       0 |        0 |       0 |       0 | 3-302                       
  EnhancedFormBuilder.tsx                                 |       0 |        0 |       0 |       0 | 3-378                       
  FieldConfidenceScore.tsx                                |       0 |        0 |       0 |       0 | 3-124                       
  FieldEditor.tsx                                         |       0 |        0 |       0 |       0 | 4-243                       
  FieldPalette.tsx                                        |       0 |        0 |       0 |       0 | 3-114                       
  FormBuilder.tsx                                         |       0 |        0 |       0 |       0 | 3-411                       
  FormCanvas.tsx                                          |       0 |        0 |       0 |       0 | 4-508                       
  FormPreview.tsx                                         |       0 |        0 |       0 |       0 | 4-447                       
  LazyFormBuilder.tsx                                     |       0 |        0 |       0 |       0 | 3-58                        
  OptimizedFieldPalette.tsx                               |       0 |      100 |       0 |       0 | 1-38                        
  OptimizedFormBuilder.tsx                                |       0 |        0 |       0 |       0 | 3-335                       
  OptimizedFormCanvas.tsx                                 |       0 |        0 |       0 |       0 | 1-27                        
  PasswordProtectedFormAccess.tsx                         |       0 |        0 |       0 |       0 | 3-119                       
 src/components/magicui                                   |       0 |        0 |       0 |       0 |                             
  shine-border.tsx                                        |       0 |        0 |       0 |       0 | 3-30                        
 src/components/messaging                                 |       0 |        0 |       0 |       0 |                             
  ActivityFeed.tsx                                        |       0 |        0 |       0 |       0 | 3-319                       
  ConversationList.tsx                                    |       0 |        0 |       0 |       0 | 3-213                       
  MessageThread.tsx                                       |       0 |        0 |       0 |       0 | 3-278                       
  MessagingLayout.tsx                                     |       0 |        0 |       0 |       0 | 3-264                       
 src/components/onboarding                                |       0 |        0 |       0 |       0 |                             
  KeyboardShortcuts.tsx                                   |       0 |        0 |       0 |       0 | 3-129                       
  OnboardingTour.tsx                                      |       0 |        0 |       0 |       0 | 3-202                       
  ProgressTracker.tsx                                     |       0 |        0 |       0 |       0 | 3-63                        
  index.ts                                                |       0 |      100 |     100 |       0 | 1-6                         
 src/components/pdf                                       |       0 |        0 |       0 |       0 |                             
  FieldMappingInterface.tsx                               |       0 |        0 |       0 |       0 | 3-350                       
  PDFProcessingProgress.tsx                               |       0 |        0 |       0 |       0 | 3-170                       
  PDFUploader.tsx                                         |       0 |        0 |       0 |       0 | 3-487                       
 src/components/ui                                        |       0 |        0 |       0 |       0 |                             
  EmptyState.tsx                                          |       0 |        0 |       0 |       0 | 4-191                       
  ErrorBoundary.tsx                                       |       0 |        0 |       0 |       0 | 3-131                       
  LoadingSkeleton.tsx                                     |       0 |        0 |       0 |       0 | 3-125                       
  LoadingStates.tsx                                       |       0 |        0 |       0 |       0 | 6-261                       
  MagicAnimations.tsx                                     |       0 |        0 |       0 |       0 | 3-325                       
  MobileNav.tsx                                           |       0 |        0 |       0 |       0 | 3-139                       
  OnboardingFlow.tsx                                      |       0 |        0 |       0 |       0 | 3-334                       
  ProgressIndicator.tsx                                   |       0 |        0 |       0 |       0 | 3-272                       
  Toast.tsx                                               |       0 |        0 |       0 |       0 | 6-361                       
  badge.tsx                                               |       0 |      100 |     100 |       0 | 1                           
  button.tsx                                              |       0 |        0 |       0 |       0 | 1-45                        
  card.tsx                                                |       0 |      100 |     100 |       0 | 1                           
  input.tsx                                               |       0 |      100 |     100 |       0 | 1                           
  label.tsx                                               |       0 |      100 |       0 |       0 | 1-25                        
  progress.tsx                                            |       0 |        0 |     100 |       0 | 3-28                        
  tabs.tsx                                                |       0 |        0 |       0 |       0 | 3-101                       
 src/hooks                                                |       0 |        0 |       0 |       0 |                             
  useAutoSave.tsx                                         |       0 |        0 |       0 |       0 | 3-271                       
  useCSRF.ts                                              |       0 |        0 |       0 |       0 | 1-78                        
  useCoreFields.ts                                        |       0 |        0 |       0 |       0 | 1-308                       
  useFormAnalytics.tsx                                    |       0 |      100 |       0 |       0 | 1-17                        
  useOnboarding.ts                                        |       0 |        0 |       0 |       0 | 3-125                       
 src/lib                                                  |       0 |        0 |       0 |       0 |                             
  api-middleware.ts                                       |       0 |        0 |       0 |       0 | 1-186                       
  audit-logger.ts                                         |       0 |        0 |       0 |       0 | 6-374                       
  auth-middleware.ts                                      |       0 |        0 |       0 |       0 | 1-216                       
  auth.ts                                                 |       0 |        0 |       0 |       0 | 2-83                        
  core-fields-manager.ts                                  |       0 |        0 |       0 |       0 | 4-450                       
  crypto-utils.ts                                         |       0 |        0 |       0 |       0 | 1-220                       
  csrf-client.ts                                          |       0 |        0 |       0 |       0 | 7-148                       
  csrf-token.ts                                           |       0 |        0 |       0 |       0 | 1-160                       
  dom-polyfill.ts                                         |       0 |        0 |       0 |       0 | 4-53                        
  enhanced-auth-middleware.ts                             |       0 |        0 |       0 |       0 | 1-273                       
  feature-gates.ts                                        |       0 |        0 |       0 |       0 | 2-262                       
  form-validation.ts                                      |       0 |        0 |       0 |       0 | 1-205                       
  password.ts                                             |       0 |        0 |       0 |       0 | 1-64                        
  rate-limit.ts                                           |       0 |        0 |       0 |       0 | 14-181                      
  secure-file-storage.ts                                  |       0 |        0 |       0 |       0 | 6-434                       
  security-alerting-system.ts                             |       0 |        0 |       0 |       0 | 6-941                       
  security-audit-logger.ts                                |       0 |        0 |       0 |       0 | 6-589                       
  security-event-monitor.ts                               |       0 |        0 |       0 |       0 | 6-769                       
  session-security.ts                                     |       0 |        0 |       0 |       0 | 1-358                       
  stripe-config.ts                                        |       0 |        0 |       0 |       0 | 41-410                      
  tier-limits.ts                                          |       0 |        0 |       0 |       0 | 5-624                       
  utils.ts                                                |       0 |        0 |       0 |       0 | 1-62                        
 src/lib/activity                                         |       0 |        0 |       0 |       0 |                             
  service.ts                                              |       0 |        0 |       0 |       0 | 1-389                       
 src/lib/cache                                            |       0 |        0 |       0 |       0 |                             
  redis-cache.ts                                          |       0 |        0 |       0 |       0 | 6-416                       
 src/lib/database                                         |       0 |        0 |       0 |       0 |                             
  backup-manager.ts                                       |       0 |        0 |       0 |       0 | 6-750                       
  production-config.ts                                    |       0 |        0 |       0 |       0 | 6-556                       
 src/lib/email                                            |       0 |        0 |       0 |       0 |                             
  service.ts                                              |       0 |        0 |       0 |       0 | 1-438                       
  templates.tsx                                           |       0 |        0 |       0 |       0 | 1-435                       
 src/lib/journey                                          |       0 |        0 |       0 |       0 |                             
  engine.ts                                               |       0 |        0 |       0 |       0 | 1-760                       
 src/lib/monitoring                                       |       0 |        0 |       0 |       0 |                             
  business-metrics.ts                                     |       0 |        0 |       0 |       0 | 6-467                       
  metrics.ts                                              |       0 |        0 |       0 |       0 | 19-304                      
  slack-notifications.ts                                  |       0 |        0 |       0 |       0 | 6-473                       
  structured-logger.ts                                    |       0 |        0 |       0 |       0 | 6-326                       
 src/lib/ocr                                              |    1.91 |     1.49 |    1.36 |     2.1 |                             
  enhanced-pdf-validator.ts                               |       0 |        0 |       0 |       0 | 6-533                       
  google-vision.ts                                        |    6.93 |     3.82 |       8 |     8.4 | 112-607,625,637-640         
  optimized-processor.ts                                  |       0 |        0 |       0 |       0 | 1-351                       
  pdf-validator.ts                                        |       0 |        0 |       0 |       0 | 6-333                       
  performance-optimizer.ts                                |       0 |        0 |       0 |       0 | 2-307                       
  processing-pipeline.ts                                  |       0 |        0 |       0 |       0 | 1-721                       
 src/lib/resilience                                       |       0 |        0 |       0 |       0 |                             
  circuit-breaker.ts                                      |       0 |        0 |       0 |       0 | 6-198                       
  retry-policy.ts                                         |       0 |        0 |       0 |       0 | 23-206                      
 src/lib/security                                         |       0 |        0 |       0 |       0 |                             
  ddos-protection.ts                                      |       0 |        0 |       0 |       0 | 7-602                       
  production-rate-limiter.ts                              |       0 |        0 |       0 |       0 | 7-621                       
  security-headers.ts                                     |       0 |        0 |       0 |       0 | 6-412                       
 src/lib/sms                                              |       0 |        0 |       0 |       0 |                             
  twilio.ts                                               |       0 |        0 |       0 |       0 | 1-523                       
 src/lib/supabase                                         |       0 |        0 |       0 |       0 |                             
  client.ts                                               |       0 |      100 |       0 |       0 | 1-4                         
  middleware.ts                                           |       0 |        0 |       0 |       0 | 1-76                        
  realtime.ts                                             |       0 |        0 |       0 |       0 | 3-356                       
  server.ts                                               |       0 |      100 |       0 |       0 | 1-18                        
 src/lib/validations                                      |   58.01 |    65.85 |   36.36 |   69.44 |                             
  auth.ts                                                 |       0 |      100 |       0 |       0 | 1-57                        
  client.ts                                               |       0 |      100 |     100 |       0 | 1-73                        
  core-fields.ts                                          |   88.52 |       90 |     100 |     100 | 225-227                     
  forms.ts                                                |   52.38 |    42.85 |   33.33 |   58.33 | 152-153,191-196,202,230-237 
 src/lib/webhooks                                         |       0 |        0 |       0 |       0 |                             
  webhook-manager.ts                                      |       0 |        0 |       0 |       0 | 1-542                       
 src/types                                                |       0 |        0 |       0 |       0 |                             
  core-fields.ts                                          |       0 |        0 |       0 |       0 | 151-576                     
  forms.ts                                                |       0 |      100 |     100 |       0 | 134                         
----------------------------------------------------------|---------|----------|---------|---------|-----------------------------
Summary of all failing tests
FAIL tests/integration/session-a-b-coordination.test.ts
  ● Session A ↔ B Integration Tests › Form Creation with Database Security (A → B) › should create form with proper authentication and RLS enforcement

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Creation with Database Security (A → B) › should reject form creation without proper authentication

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Submission Flow (A → B → Storage) › should handle complete form submission with validation and storage

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Submission Flow (A → B → Storage) › should sanitize and validate malicious input

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Form Submission Flow (A → B → Storage) › should enforce field validation rules

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Cross-Session Security Validation › should maintain CSRF protection across form operations

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Cross-Session Security Validation › should enforce rate limiting across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Cross-Session Security Validation › should properly handle authentication state across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Data Consistency and Integrity › should maintain data consistency across form operations

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Data Consistency and Integrity › should handle concurrent form submissions safely

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Error Handling and Recovery › should handle database errors gracefully

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Error Handling and Recovery › should validate data types and constraints

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Performance and Security Monitoring › should handle large form submissions within limits

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

  ● Session A ↔ B Integration Tests › Performance and Security Monitoring › should track submission metrics for monitoring

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      32 |     })
      33 |     
    > 34 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      35 |     
      36 |     testUserId = authData?.user?.id || ''
      37 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/session-a-b-coordination.test.ts:34:22)

FAIL tests/src/__tests__/integration/pdf-workflow.test.ts
  ● PDF Import Workflow Integration › Performance Considerations › should implement proper rate limiting

    TypeError: Cannot read properties of undefined (reading 'requests')

      258 |         checkLimit: (userId: string, limit = 5, windowMs = 60000) => {
      259 |           const now = Date.now();
    > 260 |           const userRequests = this.requests.get(userId) || [];
          |                                     ^
      261 |           
      262 |           // Remove old requests outside the window
      263 |           const validRequests = userRequests.filter((time: number) => now - time < windowMs);

      at Object.requests [as checkLimit] (tests/src/__tests__/integration/pdf-workflow.test.ts:260:37)
      at checkLimit (tests/src/__tests__/integration/pdf-workflow.test.ts:277:66)
          at Function.from (<anonymous>)
      at Object.from (tests/src/__tests__/integration/pdf-workflow.test.ts:277:28)

FAIL tests/src/__tests__/integration/supabase.test.ts
  ● Supabase Integration › Supplier Operations › should create a supplier profile

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/suppliers?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      46 |         .single()
      47 |       
    > 48 |       expect(error).toBeNull()
         |                     ^
      49 |       expect(data?.business_name).toBe('Test Photography')
      50 |       expect(data?.vendor_type).toBe('photographer')
      51 |     })

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/suppliers?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/src/__tests__/integration/supabase.test.ts:48:21)

  ● Supabase Integration › Supplier Operations › should enforce RLS policies

    TypeError: expect(received).toHaveLength(expected)

    Matcher error: received value must have a length property whose value must be a number

    Received has value: null

      58 |         .eq('user_id', 'different-user-id')
      59 |       
    > 60 |       expect(data).toHaveLength(0)
         |                    ^
      61 |     })
      62 |   })
      63 |

      at Object.toHaveLength (tests/src/__tests__/integration/supabase.test.ts:60:20)

  ● Supabase Integration › Forms Operations › should create and retrieve a form

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      83 |         .single()
      84 |       
    > 85 |       expect(error).toBeNull()
         |                     ^
      86 |       expect(form?.name).toBe('Wedding Timeline Form')
      87 |       expect(form?.fields).toHaveLength(1)
      88 |       

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/src/__tests__/integration/supabase.test.ts:85:21)

  ● Supabase Integration › Client Dashboard Operations › should create a client dashboard

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/client_dashboards?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      114 |         .single()
      115 |       
    > 116 |       expect(error).toBeNull()
          |                     ^
      117 |       expect(data?.sections).toContain('forms')
      118 |     })
      119 |   })

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/client_dashboards?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/src/__tests__/integration/supabase.test.ts:116:21)

FAIL src/__tests__/integration/api-security.test.ts
  ● API Security › should return 401 for unauthenticated requests

    ReferenceError: fetch is not defined

      1 | describe('API Security', () => {
      2 |   it('should return 401 for unauthenticated requests', async () => {
    > 3 |     const response = await fetch('http://localhost:3000/api/pdf/process', {
        |                      ^
      4 |       method: 'POST',
      5 |     })
      6 |     expect(response.status).toBe(401)

      at Object.<anonymous> (src/__tests__/integration/api-security.test.ts:3:22)

FAIL tests/integration/cross-session-validation.test.ts
  ● Cross-Session Validation Tests › Frontend-Backend Validation Synchronization › should maintain consistent validation rules between frontend and backend

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Frontend-Backend Validation Synchronization › should handle edge cases consistently across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Authentication State Validation › should validate authentication consistently across API calls

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Authentication State Validation › should handle session expiration consistently

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Form Data Validation Pipeline › should process form data through complete validation pipeline

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Form Data Validation Pipeline › should handle form submission validation across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Security Validation Coordination › should validate CSRF tokens consistently across form operations

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Security Validation Coordination › should apply rate limiting consistently across endpoints

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Error Handling Validation › should provide consistent error messages across sessions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

  ● Cross-Session Validation Tests › Error Handling Validation › should handle validation errors gracefully with recovery options

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      45 |     })
      46 |     
    > 47 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      48 |     
      49 |     testUserId = authData?.user?.id || ''
      50 |     authToken = authData?.session?.access_token || ''

      at Object.<anonymous> (tests/integration/cross-session-validation.test.ts:47:22)

FAIL tests/integration/form-data-flow.test.ts
  ● Form Submission → Storage → Retrieval Workflow › Basic Form Data Lifecycle › should complete full form data lifecycle: create → submit → store → retrieve

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Basic Form Data Lifecycle › should handle malicious data sanitization in the complete flow

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Complex Data Types and Validation › should handle file upload metadata through the complete flow

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Complex Data Types and Validation › should handle conditional field logic in data flow

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Retrieval and Aggregation › should aggregate form submission data correctly

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Retrieval and Aggregation › should handle complex data filtering and searching

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Integrity and Error Handling › should maintain referential integrity between forms and submissions

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

  ● Form Submission → Storage → Retrieval Workflow › Data Integrity and Error Handling › should handle concurrent submissions gracefully

    Test user creation failed: request to https://test.supabase.co/auth/v1/signup failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      29 |     })
      30 |     
    > 31 |     if (error) throw new Error(`Test user creation failed: ${error.message}`)
         |                      ^
      32 |     testUserId = authData?.user?.id || ''
      33 |   })
      34 |   

      at Object.<anonymous> (tests/integration/form-data-flow.test.ts:31:22)

FAIL tests/src/components/forms/__tests__/FormBuilder.test.tsx
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/src/components/forms/__tests__/FormBuilder.test.tsx

      30 |
      31 |   describe('Field Management', () => {
    > 32 |     it('should render the form canvas', () => {
         |                ^
      33 |       renderFormBuilder()
      34 |       expect(screen.getByTestId('form-canvas')).toBeInTheDocument()
      35 |     })

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/src/components/forms/__tests__/FormBuilder.test.tsx:32:16)

FAIL tests/src/__tests__/communications/realtime.test.ts
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/src/__tests__/communications/realtime.test.ts

      10 | import { RealtimeMessage, RealtimeActivity, RealtimeConversation } from '@/types/communications'
      11 |
    > 12 | // Mock Supabase client
         |                ^
      13 | jest.mock('@supabase/supabase-js', () => ({
      14 |   createClient: jest.fn()
      15 | }))

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/src/__tests__/communications/realtime.test.ts:12:16)

FAIL tests/integration/rls-form-validation.test.ts
  ● Form Validation with RLS Policies › Organization-Based Form Access Control › should enforce organization isolation for form creation and access

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      142 |         .single()
      143 |       
    > 144 |       expect(org1FormError).toBeNull()
          |                             ^
      145 |       expect(org1Form?.title).toBe('Organization 1 Private Form')
      146 |       expect(org1Form?.organization_id).toBe(org1Id)
      147 |       

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/rls-form-validation.test.ts:144:29)

  ● Form Validation with RLS Policies › Organization-Based Form Access Control › should enforce RLS on form submissions across organizations

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: undefined

      345 |         .select()
      346 |       
    > 347 |       expect(org1VisibleSubmissions?.every(sub => sub.organization_id === org1Id)).toBe(true)
          |                                                                                    ^
      348 |       expect(org1VisibleSubmissions?.length).toBeGreaterThan(0)
      349 |       
      350 |       // Organization 2 can only see their submissions

      at Object.toBe (tests/integration/rls-form-validation.test.ts:347:84)

  ● Form Validation with RLS Policies › Form Validation with Security Context › should validate form data while respecting organizational boundaries

    TypeError: Cannot read properties of null (reading 'sections')

      436 |         const errors: string[] = []
      437 |         
    > 438 |         for (const section of schema.sections) {
          |                                      ^
      439 |           for (const field of section.fields) {
      440 |             const value = data[field.id]
      441 |             

      at sections (tests/integration/rls-form-validation.test.ts:438:38)
      at Object.validateFormSubmission (tests/integration/rls-form-validation.test.ts:494:32)

  ● Form Validation with RLS Policies › Form Validation with Security Context › should handle security-sensitive field validation with RLS

    TypeError: Cannot read properties of null (reading 'sections')

      640 |         const securityFlags: string[] = []
      641 |         
    > 642 |         for (const section of schema.sections) {
          |                                      ^
      643 |           for (const field of section.fields) {
      644 |             const value = data[field.id]
      645 |             

      at sections (tests/integration/rls-form-validation.test.ts:642:38)
      at Object.validateSecurityFields (tests/integration/rls-form-validation.test.ts:682:40)

  ● Form Validation with RLS Policies › Performance and Scalability with RLS › should maintain validation performance with RLS policies active

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/form_submissions?columns=%22form_id%22%2C%22organization_id%22%2C%22data%22%2C%22status%22%2C%22submitted_at%22&select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      824 |       const processingTime = endTime - startTime
      825 |       
    > 826 |       expect(batchError).toBeNull()
          |                          ^
      827 |       expect(batchSubmissions).toHaveLength(batchSize)
      828 |       
      829 |       // Performance should be reasonable even with RLS

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/form_submissions?columns=%22form_id%22%2C%22organization_id%22%2C%22data%22%2C%22status%22%2C%22submitted_at%22&select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/rls-form-validation.test.ts:826:26)

FAIL tests/src/__tests__/communications/components.test.tsx
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/src/__tests__/communications/components.test.tsx

      36 |     conversations: [],
      37 |     loading: false,
    > 38 |     error: null
         |                ^
      39 |   })),
      40 |   useRealtimeActivity: jest.fn(() => ({
      41 |     activities: [],

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/src/__tests__/communications/components.test.tsx:38:17)

FAIL tests/integration/form-submission-workflow.test.ts
  ● Form Submission Workflow - Wedding Vendor Integration › Wedding Inquiry Form Creation › should allow photographer to create a wedding inquiry form

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      116 |         .single()
      117 |
    > 118 |       expect(error).toBeNull()
          |                     ^
      119 |       expect(data).toBeDefined()
      120 |       expect(data.name).toBe('Wedding Photography Inquiry')
      121 |       expect(data.fields).toHaveLength(6)

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/form-submission-workflow.test.ts:118:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Couple Form Submission › should successfully submit a wedding inquiry from couple

    TypeError: Cannot read properties of null (reading 'id')

      186 |         .single()
      187 |       
    > 188 |       formId = data.id
          |                     ^
      189 |     })
      190 |
      191 |     it('should successfully submit a wedding inquiry from couple', async () => {

      at Object.id (tests/integration/form-submission-workflow.test.ts:188:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Couple Form Submission › should validate required fields before submission

    TypeError: Cannot read properties of null (reading 'id')

      186 |         .single()
      187 |       
    > 188 |       formId = data.id
          |                     ^
      189 |     })
      190 |
      191 |     it('should successfully submit a wedding inquiry from couple', async () => {

      at Object.id (tests/integration/form-submission-workflow.test.ts:188:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Couple Form Submission › should handle duplicate wedding date submissions correctly

    TypeError: Cannot read properties of null (reading 'id')

      186 |         .single()
      187 |       
    > 188 |       formId = data.id
          |                     ^
      189 |     })
      190 |
      191 |     it('should successfully submit a wedding inquiry from couple', async () => {

      at Object.id (tests/integration/form-submission-workflow.test.ts:188:21)

  ● Form Submission Workflow - Wedding Vendor Integration › Vendor Form Management › should allow vendor to view all submissions for their forms

    TypeError: Cannot read properties of null (reading 'id')

      307 |       const submissions = [
      308 |         {
    > 309 |           form_id: form.id,
          |                         ^
      310 |           email: 'couple1@example.com',
      311 |           data: { couple_names: 'Couple 1' }
      312 |         },

      at Object.id (tests/integration/form-submission-workflow.test.ts:309:25)

  ● Form Submission Workflow - Wedding Vendor Integration › Vendor Form Management › should track form view analytics for vendor insights

    TypeError: Cannot read properties of null (reading 'view_count')

      358 |       const { error: viewError } = await supabase
      359 |         .from('forms')
    > 360 |         .update({ view_count: form.view_count + 1 })
          |                                    ^
      361 |         .eq('id', form.id)
      362 |
      363 |       expect(viewError).toBeNull()

      at Object.view_count (tests/integration/form-submission-workflow.test.ts:360:36)

  ● Form Submission Workflow - Wedding Vendor Integration › Email Notifications › should trigger notification to vendor on form submission

    TypeError: Cannot read properties of null (reading 'id')

      409 |
      410 |       const submission = {
    > 411 |         form_id: form.id,
          |                       ^
      412 |         email: COUPLE_EMAIL,
      413 |         data: {
      414 |           couple_names: 'Test Couple',

      at Object.id (tests/integration/form-submission-workflow.test.ts:411:23)

  ● Form Submission Workflow - Wedding Vendor Integration › Email Notifications › should send confirmation email to couple after submission

    TypeError: Cannot read properties of null (reading 'id')

      459 |
      460 |       const submission = {
    > 461 |         form_id: form.id,
          |                       ^
      462 |         email: COUPLE_EMAIL,
      463 |         data: {
      464 |           couple_names: 'Sarah & John',

      at Object.id (tests/integration/form-submission-workflow.test.ts:461:23)

  ● Form Submission Workflow - Wedding Vendor Integration › Data Export and Reporting › should export form submissions to CSV for vendor

    TypeError: Cannot read properties of null (reading 'id')

      507 |       const submissions = [
      508 |         {
    > 509 |           form_id: form.id,
          |                         ^
      510 |           email: 'couple1@test.com',
      511 |           data: {
      512 |             couple_names: 'Alice & Bob',

      at Object.id (tests/integration/form-submission-workflow.test.ts:509:25)

  ● Form Builder Advanced Features › Conditional Logic › should handle conditional fields based on wedding type

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      605 |         .single()
      606 |
    > 607 |       expect(error).toBeNull()
          |                     ^
      608 |       expect(data.fields).toHaveLength(3)
      609 |       expect(data.fields[1].conditional).toBeDefined()
      610 |

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/form-submission-workflow.test.ts:607:21)

  ● Form Builder Advanced Features › Multi-Step Forms › should support multi-step wedding inquiry forms

    expect(received).toBeNull()

    Received: {"code": "ENOTFOUND", "details": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co

      654 |         .single()
      655 |
    > 656 |       expect(error).toBeNull()
          |                     ^
      657 |       expect(data.type).toBe('multi-step')
      658 |       expect(data.steps).toHaveLength(3)
      659 |

      at ClientRequest.<anonymous> (node_modules/@supabase/node-fetch/lib/index.js:1502:11)
      at processTicksAndRejections (node:internal/process/task_queues:90:21)", "hint": "", "message": "FetchError: request to https://test.supabase.co/rest/v1/forms?select=* failed, reason: getaddrinfo ENOTFOUND test.supabase.co"}
      at Object.toBeNull (tests/integration/form-submission-workflow.test.ts:656:21)

FAIL tests/src/__tests__/api/forms.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined

      4 |
      5 | // Mock Supabase
    > 6 | jest.mock('@/lib/supabase', () => ({
        |                 ^
      7 |   createClient: jest.fn(() => ({
      8 |     auth: {
      9 |       getUser: jest.fn().mockResolvedValue({

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/src/__tests__/api/forms.test.ts:6:17)

FAIL tests/src/__tests__/communications/api.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined

      25 | }))
      26 |
    > 27 | // Mock email service
         |                 ^
      28 | jest.mock('@/lib/email/service', () => ({
      29 |   sendEmail: jest.fn().mockResolvedValue({
      30 |     id: 'email-123',

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/src/__tests__/communications/api.test.ts:27:17)

FAIL tests/unit/components/FormBuilder.test.tsx
  ● Test suite failed to run

    Cannot find module '@testing-library/dom' from 'node_modules/@testing-library/react/dist/pure.js'

    Require stack:
      node_modules/@testing-library/react/dist/pure.js
      node_modules/@testing-library/react/dist/index.js
      tests/unit/components/FormBuilder.test.tsx

       8 | import userEvent from '@testing-library/user-event';
       9 | import { FormBuilder } from '@/components/forms/FormBuilder';
    > 10 | import { FormPreview } from '@/components/forms/FormPreview';
         |                 ^
      11 |
      12 | describe('FormBuilder Component', () => {
      13 |   const mockOnSave = jest.fn();

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/pure.js:46:12)
      at Object.<anonymous> (node_modules/@testing-library/react/dist/index.js:7:13)
      at Object.<anonymous> (tests/unit/components/FormBuilder.test.tsx:10:17)

FAIL tests/security/core-fields-security.test.ts
  ● Core Fields Security Tests › XSS Prevention › should remove HTML tags but keep content

    expect(received).toBe(expected) // Object.is equality

    Expected: "John & Jane's Wedding"
    Received: "John &amp; Jane's Wedding"

      59 |       const input = "<h1>John & Jane's Wedding</h1>";
      60 |       const sanitized = sanitizeInput(input);
    > 61 |       expect(sanitized).toBe("John & Jane's Wedding");
         |                         ^
      62 |     });
      63 |
      64 |     test('should handle nested script tags', () => {

      at Object.toBe (tests/security/core-fields-security.test.ts:61:25)

  ● Core Fields Security Tests › Input Size Validation › should reject very long field names

    expect(received).toContain(expected) // indexOf

    Expected substring: "field name"
    Received string:    "Validation error occurred"

      88 |       const result = validateCoreFieldValue(longFieldName, 'value');
      89 |       expect(result.valid).toBe(false);
    > 90 |       expect(result.error).toContain('field name');
         |                            ^
      91 |     });
      92 |   });
      93 |

      at Object.toContain (tests/security/core-fields-security.test.ts:90:28)

  ● Core Fields Security Tests › Phone Number Validation › should validate phone numbers correctly

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      165 |       validPhones.forEach(phone => {
      166 |         const result = validateCoreFieldValue('bride_phone', phone);
    > 167 |         expect(result.valid).toBe(true);
          |                              ^
      168 |       });
      169 |
      170 |       const invalidPhones = [

      at toBe (tests/security/core-fields-security.test.ts:167:30)
          at Array.forEach (<anonymous>)
      at Object.forEach (tests/security/core-fields-security.test.ts:165:19)

  ● Core Fields Security Tests › Batch Field Validation › should validate multiple fields and return sanitized values

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      255 |       const result = validateCoreFields(fields);
      256 |       
    > 257 |       expect(result.valid).toBe(true);
          |                            ^
      258 |       expect(result.sanitized.bride_first_name).toBe('Jane');
      259 |       expect(result.sanitized.bride_email).toBe('jane@example.com');
      260 |       expect(result.sanitized.groom_first_name).toBe('John');

      at Object.toBe (tests/security/core-fields-security.test.ts:257:28)

  ● Core Fields Security Tests › Unknown Field Handling › should sanitize unknown string fields

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      283 |     test('should sanitize unknown string fields', () => {
      284 |       const result = validateCoreFieldValue('custom_field', '<script>test</script>');
    > 285 |       expect(result.valid).toBe(true);
          |                            ^
      286 |       expect(result.sanitized).toBe('test');
      287 |     });
      288 |

      at Object.toBe (tests/security/core-fields-security.test.ts:285:28)

  ● Core Fields Security Tests › Edge Cases › should handle null values for optional fields

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      303 |     test('should handle null values for optional fields', () => {
      304 |       const result = validateCoreFieldValue('notes', null);
    > 305 |       expect(result.valid).toBe(true);
          |                            ^
      306 |     });
      307 |
      308 |     test('should handle undefined values for optional fields', () => {

      at Object.toBe (tests/security/core-fields-security.test.ts:305:28)

FAIL tests/security/xss-prevention.test.ts
  ● XSS Prevention Tests › DOMPurify Sanitization › should sanitize XSS payload: javascript:alert("XSS")

    expect(received).not.toMatch(expected)

    Expected pattern: not /javascript:/i
    Received string:      "javascript:alert(\"XSS\")"

      38 |       expect(sanitized).not.toMatch(/<script/i);
      39 |       expect(sanitized).not.toMatch(/on\w+\s*=/i);
    > 40 |       expect(sanitized).not.toMatch(/javascript:/i);
         |                             ^
      41 |       expect(sanitized).not.toMatch(/vbscript:/i);
      42 |       expect(sanitized).not.toMatch(/data:text\/html/i);
      43 |     });

      at toMatch (tests/security/xss-prevention.test.ts:40:29)

  ● XSS Prevention Tests › Form Field Sanitization › should sanitize select option values

    expect(received).not.toMatch(expected)

    Expected pattern: not /<img/i
    Received string:      "Option 1<img src=\"x\" \"alert(1)\">"

      84 |       const sanitized = sanitizeFieldValue(maliciousOption, 'select');
      85 |       
    > 86 |       expect(sanitized).not.toMatch(/<img/i);
         |                             ^
      87 |       expect(sanitized).toBe('Option 1');
      88 |     });
      89 |

      at Object.toMatch (tests/security/xss-prevention.test.ts:86:29)

  ● XSS Prevention Tests › Advanced XSS Attack Vectors › should prevent CSS expression attacks

    expect(received).not.toMatch(expected)

    Expected pattern: not /expression/i
    Received string:      "<div style=\"background: expression(alert(1))\">Content</div>"

      114 |       });
      115 |       
    > 116 |       expect(sanitized).not.toMatch(/expression/i);
          |                             ^
      117 |     });
      118 |
      119 |     test('should prevent DOM clobbering attacks', () => {

      at Object.toMatch (tests/security/xss-prevention.test.ts:116:29)

  ● XSS Prevention Tests › Advanced XSS Attack Vectors › should prevent mXSS (mutation XSS) attacks

    expect(received).not.toMatch(expected)

    Expected pattern: not /onerror/i
    Received string:      "<p title=\"</noscript><img src=x onerror=alert(1)>\"></p>"

      132 |       const sanitized = DOMPurify.sanitize(mxssAttempt);
      133 |       
    > 134 |       expect(sanitized).not.toMatch(/onerror/i);
          |                             ^
      135 |       expect(sanitized).not.toMatch(/alert/);
      136 |     });
      137 |   });

      at Object.toMatch (tests/security/xss-prevention.test.ts:134:29)

FAIL tests/src/__tests__/core-fields.test.ts
  ● Test suite failed to run

    Cannot find module '../../../src/lib/core-fields' from 'tests/src/__tests__/core-fields.test.ts'

      4 |   CoreFieldState,
      5 |   CoreFieldType 
    > 6 | } from '@/lib/core-fields'
        |                     ^
      7 |
      8 | describe('Core Fields System', () => {
      9 |   let manager: CoreFieldsManager

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/src/__tests__/core-fields.test.ts:6:21)

FAIL tests/integration/payment/stripe-webhook.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined



      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (src/app/api/stripe/webhook/route.ts:5386:26)
      at Object.<anonymous> (tests/integration/payment/stripe-webhook.test.ts:48:16)

FAIL tests/security/file-upload-security.test.ts
  ● Test suite failed to run

    Cannot find module 'supertest' from 'tests/security/file-upload-security.test.ts'

      4 | import path from 'path';
      5 |
    > 6 | const API_URL = process.env.API_URL || 'http://localhost:3000';
        |                                                           ^
      7 |
      8 | describe('File Upload Security Tests', () => {
      9 |   describe('Authentication', () => {

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/security/file-upload-security.test.ts:6:59)

FAIL tests/security/payment-security.test.ts
  ● Test suite failed to run

    Cannot find module 'supertest' from 'tests/security/payment-security.test.ts'

      4 | const API_URL = process.env.API_URL || 'http://localhost:3000';
      5 |
    > 6 | describe('Payment Security Tests', () => {
        |                                           ^
      7 |   describe('Authentication', () => {
      8 |     it('should reject payment endpoint access without authentication', async () => {
      9 |       const response = await request(API_URL)

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/security/payment-security.test.ts:6:59)

FAIL tests/security/file-upload.test.ts
  ● Test suite failed to run

    Cannot find module '../../src/lib/file-security' from 'tests/security/file-upload.test.ts'

       6 | import { validateFile, sanitizeFilename, scanForMaliciousContent, generateFileHash, FileQuarantine } from '@/lib/file-security';
       7 | import fs from 'fs';
    >  8 | import path from 'path';
         |                       ^
       9 |
      10 | describe('File Upload Security Tests', () => {
      11 |   // Test file creation helpers

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/security/file-upload.test.ts:8:23)

FAIL tests/src/lib/journey/__tests__/journey-engine.test.ts
  ● Test suite failed to run

    ReferenceError: TextDecoder is not defined



      at Object.<anonymous> (node_modules/@react-email/render/dist/node/index.js:164:15)
      at Object.<anonymous> (src/lib/email/service.ts:2468:26)
      at Object.<anonymous> (src/lib/journey/engine.ts:5408:27)
      at Object.<anonymous> (tests/src/lib/journey/__tests__/journey-engine.test.ts:6:17)

FAIL tests/security/csrf-protection.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined

       6 | import { NextRequest } from 'next/server';
       7 | import { csrfManager, CSRFError } from '@/lib/csrf';
    >  8 |
         | ^
       9 | // Mock Next.js request for testing
      10 | const createMockRequest = (
      11 |   method: string = 'POST',

      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (tests/security/csrf-protection.test.ts:8:17)

FAIL tests/src/__tests__/pdf/security-tests.test.ts
  ● Test suite failed to run

    supabaseKey is required.

       7 | import crypto from 'crypto';
       8 |
    >  9 | const supabase = createClient(
         |                              ^
      10 |   process.env.NEXT_PUBLIC_SUPABASE_URL!,
      11 |   process.env.SUPABASE_SERVICE_ROLE_KEY!
      12 | );

      at new SupabaseClient (node_modules/@supabase/supabase-js/src/SupabaseClient.ts:81:29)
      at createClient (node_modules/@supabase/supabase-js/src/index.ts:40:10)
      at Object.<anonymous> (src/lib/audit-logger.ts:9:30)
      at Object.<anonymous> (tests/src/__tests__/pdf/security-tests.test.ts:10:22)

FAIL tests/unit/payment/stripe-checkout.test.ts
  ● Test suite failed to run

    ReferenceError: Request is not defined



      at Object.Request (node_modules/next/src/server/web/spec-extension/request.ts:14:34)
      at Object.<anonymous> (node_modules/next/server.js:2:16)
      at Object.<anonymous> (src/app/api/stripe/create-checkout-session/route.ts:2731:27)
      at Object.<anonymous> (tests/unit/payment/stripe-checkout.test.ts:43:16)

FAIL tests/integration/form-submission-email.test.ts
  ● Test suite failed to run

    Cannot find module '../../src/lib/supabase' from 'tests/integration/form-submission-email.test.ts'

       7 | import { createSupabaseClient } from '@/lib/supabase';
       8 | import { EmailService } from '@/lib/email/service';
    >  9 | import { Resend } from 'resend';
         |                   ^
      10 | import fetch from 'node-fetch';
      11 |
      12 | // Mock Resend for testing

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/integration/form-submission-email.test.ts:9:19)

FAIL tests/integration/pdf-ocr-form-creation.test.ts
  ● Test suite failed to run

    Cannot find module '../../src/lib/supabase' from 'tests/integration/pdf-ocr-form-creation.test.ts'

       7 | import { createSupabaseClient } from '@/lib/supabase';
       8 | import { processPDF } from '@/lib/ocr/pdf-processor';
    >  9 | import { generateFormFromOCR } from '@/lib/forms/form-generator';
         |                   ^
      10 | import fs from 'fs';
      11 | import path from 'path';
      12 | import FormData from 'form-data';

      at Resolver._throwModNotFoundError (node_modules/jest-resolve/build/index.js:863:11)
      at Object.<anonymous> (tests/integration/pdf-ocr-form-creation.test.ts:9:19)

FAIL tests/playwright/basic.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test'
      2 |
    > 3 | test('homepage loads', async ({ page }) => {
        |     ^
      4 |   await page.goto('/')
      5 |   await expect(page).toHaveTitle(/WedSync/)
      6 |   await page.screenshot({ path: 'tests/screenshots/homepage.png' })

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._createTest (node_modules/playwright/lib/common/testType.js:86:5)
      at node_modules/playwright/lib/transform/transform.js:275:12
      at Object.<anonymous> (tests/playwright/basic.spec.ts:3:5)

FAIL tests/staging/smoke-tests.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      4 | const config = StagingValidationConfig;
      5 |
    > 6 | test.describe('WedSync 2.0 Staging Smoke Tests', () => {
        |      ^
      7 |   let page: Page;
      8 |
      9 |   test.beforeEach(async ({ browser }) => {

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/staging/smoke-tests.spec.ts:6:6)

FAIL tests/security/integration.test.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       6 | import { test, expect } from '@playwright/test';
       7 |
    >  8 | test.describe('End-to-End Security Integration Tests', () => {
         |      ^
       9 |   test.beforeEach(async ({ page }) => {
      10 |     // Setup test environment
      11 |     await page.goto('/');

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/security/integration.test.ts:8:6)

FAIL tests/staging/pdf-validation.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       6 | const config = StagingValidationConfig;
       7 |
    >  8 | test.describe('PDF Import Validation Tests', () => {
         |      ^
       9 |   
      10 |   test.beforeAll(async () => {
      11 |     // Create test fixtures directory if it doesn't exist

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/staging/pdf-validation.spec.ts:8:6)

FAIL tests/staging/payment-flow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      4 | const config = StagingValidationConfig;
      5 |
    > 6 | test.describe('Payment Flow Validation Tests', () => {
        |      ^
      7 |
      8 |   test('Stripe configuration endpoint accessibility', async ({ page }) => {
      9 |     const response = await page.request.get(`${config.environment.apiUrl}/stripe/config`);

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/staging/payment-flow.spec.ts:6:6)

FAIL tests/e2e/pdf-to-form-workflow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      2 | import path from 'path';
      3 |
    > 4 | test.describe('PDF to Form Workflow', () => {
        |      ^
      5 |   test.beforeEach(async ({ page }) => {
      6 |     // Navigate to the PDF import page
      7 |     await page.goto('/forms/import');

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/pdf-to-form-workflow.spec.ts:4:6)

FAIL tests/e2e/production-workflow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       7 |  */
       8 |
    >  9 | test.describe('Production Workflow Validation', () => {
         |      ^
      10 |   let browser: Browser;
      11 |   let vendorPage: Page;
      12 |   let clientPage: Page;

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/production-workflow.spec.ts:9:6)

FAIL tests/e2e/pdf-import.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       5 | const mockPDFPath = path.join(__dirname, '../../fixtures/sample-contract.pdf');
       6 |
    >  7 | test.describe('PDF Import Feature', () => {
         |      ^
       8 |   test.beforeEach(async ({ page }) => {
       9 |     // Navigate to PDF import page
      10 |     await page.goto('/pdf/import');

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/pdf-import.spec.ts:7:6)

FAIL tests/integration/e2e-user-workflows.test.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      11 | import { test, expect, Page, BrowserContext } from '@playwright/test'
      12 |
    > 13 | test.describe('End-to-End User Workflows', () => {
         |      ^
      14 |   let page: Page
      15 |   let context: BrowserContext
      16 |   

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/integration/e2e-user-workflows.test.ts:13:6)

FAIL tests/e2e/payment-flow.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      50 | }
      51 |
    > 52 | test.describe('Pricing Page', () => {
         |      ^
      53 |   test.beforeEach(async ({ page }) => {
      54 |     await page.goto('/pricing');
      55 |   });

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/payment-flow.spec.ts:52:6)

FAIL tests/e2e/form-builder.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

      1 | import { test, expect } from '@playwright/test'
      2 |
    > 3 | test.describe('Form Builder', () => {
        |      ^
      4 |   test.beforeEach(async ({ page }) => {
      5 |     // Login as test user
      6 |     await page.goto('/login')

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/form-builder.spec.ts:3:6)

FAIL tests/e2e/complete-user-journey.spec.ts
  ● Test suite failed to run

    Playwright Test needs to be invoked via 'npx playwright test' and excluded from Jest test runs.
    Creating one directory for Playwright tests and one for Jest is the recommended way of doing it.
    See https://playwright.dev/docs/intro for more information about Playwright Test.

       7 |  */
       8 |
    >  9 | test.describe('Complete Wedding Vendor Journey', () => {
         |      ^
      10 |   let page: Page;
      11 |   const testEmail = `test-${Date.now()}@example.com`;
      12 |   const testPassword = 'TestPassword123!';

      at throwIfRunningInsideJest (node_modules/playwright/lib/common/testType.js:272:11)
      at TestTypeImpl._describe (node_modules/playwright/lib/common/testType.js:113:5)
      at Function.describe (node_modules/playwright/lib/transform/transform.js:275:12)
      at Object.describe (tests/e2e/complete-user-journey.spec.ts:9:6)


Test Suites: 39 failed, 5 passed, 44 total
Tests:       64 failed, 8 skipped, 113 passed, 185 total
Snapshots:   0 total
Time:        7.373 s
Ran all test suites.
