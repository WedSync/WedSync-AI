{
  "name": "wedsync",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "NODE_OPTIONS='--max-old-space-size=8192' next dev",
    "dev:basic": "NODE_OPTIONS='--max-old-space-size=8192' next dev --port 3000",
    "demo:on": "cross-env NEXT_PUBLIC_DEMO_MODE=true next dev",
    "demo:seed": "tsx supabase/seed/demo_seed.ts",
    "demo:clean": "tsx supabase/seed/demo_seed.ts --clean",
    "build": "NODE_OPTIONS='--max-old-space-size=16384' next build",
    "build:memory": "NODE_OPTIONS='--max-old-space-size=32768' next build",
    "build:fast": "NODE_OPTIONS='--max-old-space-size=8192' next build --experimental-build-mode=compile",
    "start": "next start",
    "lint": "next lint",
    "lint:guardian": "node scripts/eslint-performance.js",
    "lint:guardian:incremental": "node scripts/eslint-performance.js incremental",
    "lint:guardian:critical": "node scripts/eslint-performance.js critical",
    "lint:guardian:typescript": "node scripts/eslint-performance.js typescript",
    "lint:guardian:full": "node scripts/eslint-performance.js full",
    "lint:enterprise": "NODE_OPTIONS='--max-old-space-size=16384' npx eslint --config eslint.config.enterprise.mjs src/**/*.{ts,tsx} --cache --cache-location .eslintcache-enterprise",
    "lint:enterprise:fix": "NODE_OPTIONS='--max-old-space-size=16384' npx eslint --config eslint.config.enterprise.mjs src/**/*.{ts,tsx} --cache --cache-location .eslintcache-enterprise --fix",
    "lint:performance": "TIMING=1 NODE_OPTIONS='--max-old-space-size=8192' npx eslint --config eslint.config.enterprise.mjs",
    "lint:setup": "echo '🛡️ Setting up Guardian ESLint Enterprise Configuration...' && cp eslint.config.enterprise.mjs eslint.config.mjs",
    "lint:strategy": "node scripts/incremental-lint-strategy.js",
    "lint:auto": "node scripts/incremental-lint-strategy.js",
    "lint:pre-commit": "node scripts/incremental-lint-strategy.js && git add .",
    "typecheck": "NODE_OPTIONS='--max-old-space-size=8192' tsc --project tsconfig.build.json --noEmit --skipLibCheck",
    "typecheck:fast": "NODE_OPTIONS='--max-old-space-size=8192' tsc --noEmit --skipLibCheck --incremental",
    "typecheck:core": "NODE_OPTIONS='--max-old-space-size=2048' tsc --project tsconfig.minimal.json --noEmit --skipLibCheck",
    "typecheck:components": "NODE_OPTIONS='--max-old-space-size=4096' tsc --project tsconfig.core.json --noEmit --skipLibCheck",
    "analyze": "cross-env ANALYZE=true npm run build",
    "bundle:check": "npm run analyze && echo '✅ Bundle analysis complete - check bundle-report.html'",
    "perf:audit": "npm run typecheck:core && npm run bundle:check",
    "typecheck:full": "NODE_OPTIONS='--max-old-space-size=16384' tsc --noEmit --skipLibCheck",
    "test": "vitest",
    "test:unit": "vitest --config vitest.config.ts",
    "test:integration": "vitest --config vitest.integration.config.ts",
    "test:watch": "vitest --watch",
    "test:coverage": "vitest --coverage",
    "test:integration:coverage": "vitest --config vitest.integration.config.ts --coverage",
    "test:ci": "vitest run",
    "test:integration:ci": "vitest run --config vitest.integration.config.ts",
    "test:business-metrics": "jest --testPathPattern=business-metrics --testTimeout=30000",
    "test:business-metrics:all": "jest --testPathPattern=business-metrics --verbose --testTimeout=30000 --maxWorkers=4",
    "test:business-metrics:watch": "jest --testPathPattern=business-metrics --watch --testTimeout=30000",
    "test:business-metrics:coverage": "jest --testPathPattern=business-metrics --coverage --testTimeout=30000",
    "business-metrics:validate": "tsx scripts/business-metrics-qa/validation/run-validation.ts",
    "business-metrics:monitor": "tsx scripts/business-metrics-qa/monitoring/run-monitoring.ts",
    "business-metrics:coordinate": "tsx scripts/business-metrics-qa/automation/run-coordination.ts",
    "test:ws153": "tsx scripts/ws-153-test-execution.ts",
    "test:ws153:unit": "vitest run src/__tests__/unit/photo-groups/",
    "test:ws153:integration": "vitest run src/__tests__/integration/ws-153-photo-groups-integration.test.ts",
    "test:ws153:e2e": "playwright test src/__tests__/playwright/ws-153-photo-groups-e2e.spec.ts",
    "test:performance": "vitest run __tests__/performance/ --reporter=verbose --timeout=60000",
    "test:security": "vitest run src/__tests__/security/ws-153-photo-groups-security.test.ts",
    "test:accessibility": "playwright test --config=playwright.accessibility.config.ts",
    "test:cross-browser": "node scripts/run-cross-browser-tests.js",
    "test:cross-browser:chrome": "BROWSER=chromium npm run test:cross-browser",
    "test:cross-browser:firefox": "BROWSER=firefox npm run test:cross-browser",
    "test:cross-browser:safari": "BROWSER=webkit npm run test:cross-browser",
    "test:cross-browser:ci": "CI=true npm run test:cross-browser",
    "test:cross-browser:report": "playwright show-report playwright-cross-browser-report",
    "test:accuracy": "jest --config jest.accuracy.config.js",
    "test:accuracy:watch": "jest --config jest.accuracy.config.js --watch",
    "test:accuracy:coverage": "jest --config jest.accuracy.config.js --coverage",
    "test:accessibility:desktop": "playwright test --config=playwright.accessibility.config.ts --project=accessibility-desktop",
    "test:accessibility:mobile": "playwright test --config=playwright.accessibility.config.ts --project=accessibility-mobile",
    "test:accessibility:keyboard": "playwright test --config=playwright.accessibility.config.ts --project=accessibility-keyboard-only",
    "test:accessibility:contrast": "playwright test --config=playwright.accessibility.config.ts --project=accessibility-high-contrast",
    "test:accessibility:report": "playwright show-report playwright-accessibility-report",
    "test:conflict-detection": "jest --config jest.accuracy.config.js tests/accuracy/conflict-detection-accuracy.test.ts",
    "test:conflict-detection:runner": "tsx tests/accuracy/conflict-detection-test-runner.ts",
    "test:conflict-detection:watch": "jest --config jest.accuracy.config.js tests/accuracy/conflict-detection-accuracy.test.ts --watch",
    "test:export": "jest tests/integration/timeline-export.test.ts --testTimeout=30000",
    "test:export:watch": "jest tests/integration/timeline-export.test.ts --watch --testTimeout=30000",
    "test:export:coverage": "jest tests/integration/timeline-export.test.ts --coverage --testTimeout=30000",
    "performance:benchmark": "vitest run tests/performance/api-performance-benchmark.test.ts",
    "performance:load-test": "tsx scripts/performance-load-test.ts --scenario=wedding-planning",
    "performance:load-test:vendor": "tsx scripts/performance-load-test.ts --scenario=vendor-management",
    "performance:load-test:mobile": "tsx scripts/performance-load-test.ts --scenario=mobile-usage",
    "performance:load-test:analytics": "tsx scripts/performance-load-test.ts --scenario=analytics-dashboard",
    "performance:monitor": "tsx scripts/performance-monitor.ts --interval=30",
    "performance:monitor:fast": "tsx scripts/performance-monitor.ts --interval=10",
    "performance:validate": "npm run performance:benchmark && npm run performance:load-test",
    "test:performance:integration": "./scripts/load-testing/run-integration-performance-tests.sh",
    "typecheck:memory": "NODE_OPTIONS='--max-old-space-size=32768' tsc --noEmit --skipLibCheck",
    "security:scan": "snyk test --all-projects --severity-threshold=high",
    "security:monitor": "snyk monitor --all-projects",
    "security:code": "snyk code test --severity-threshold=high",
    "validate:performance": "tsx scripts/ws-151-performance-validation.ts",
    "validate:all": "npm run security:scan && npm run validate:performance",
    "analyze:bundle": "npm run analyze && npx webpack-bundle-analyzer .next/static/chunks/*.js",
    "lighthouse": "lhci autorun",
    "lighthouse:desktop": "lhci autorun --collect.settings.emulatedFormFactor=desktop",
    "lighthouse:mobile": "lhci autorun --collect.settings.emulatedFormFactor=mobile",
    "perf:test": "npm run lighthouse && npm run analyze",
    "perf:validate": "tsx scripts/ws-145-performance-validation.ts",
    "perf:ci": "npm run build && npm run lighthouse && npm run perf:validate",
    "db:generate": "supabase gen types typescript --project-id azhgptjkqiiqvvvhapml --schema public > src/types/database.types.ts",
    "db:reset": "supabase db reset --linked",
    "db:migrate": "supabase migration up --linked",
    "db:seed": "supabase seed --linked",
    "demo:setup": "NEXT_PUBLIC_DEMO_MODE=true npm run db:migrate:demo && npm run db:seed:demo",
    "demo:reset": "NEXT_PUBLIC_DEMO_MODE=true npm run db:reset && npm run demo:setup",
    "demo:seed:fresh": "tsx supabase/seed/demo_seed.ts --reset",
    "db:migrate:demo": "NEXT_PUBLIC_DEMO_MODE=true supabase migration up --linked",
    "db:seed:demo": "NEXT_PUBLIC_DEMO_MODE=true tsx supabase/seed/demo_seed.ts",
    "db:seed:demo:reset": "NEXT_PUBLIC_DEMO_MODE=true tsx supabase/seed/demo_seed.ts --reset",
    "demo:dev": "NEXT_PUBLIC_DEMO_MODE=true npm run dev",
    "demo:build": "NEXT_PUBLIC_DEMO_MODE=true npm run build",
    "demo:start": "NEXT_PUBLIC_DEMO_MODE=true npm run start",
    "demo:typecheck": "NEXT_PUBLIC_DEMO_MODE=true npm run typecheck",
    "demo:lint": "NEXT_PUBLIC_DEMO_MODE=true npm run lint",
    "demo:test": "NEXT_PUBLIC_DEMO_MODE=true npm run test -- src/__tests__/demo/",
    "demo:test:watch": "NEXT_PUBLIC_DEMO_MODE=true npm run test:watch -- src/__tests__/demo/",
    "demo:test:coverage": "NEXT_PUBLIC_DEMO_MODE=true npm run test:coverage -- src/__tests__/demo/",
    "demo:validate": "npm run demo:typecheck && npm run demo:lint && npm run demo:test",
    "demo:assets:check": "node -e \"console.log('Checking demo assets...'); const fs = require('fs'); ['logos/supplier-logos.png', 'avatars/couple-sarah-michael.png'].forEach(f => { const path = 'public/demo/' + f; console.log(f + ':', fs.existsSync(path) ? '✅' : '❌ Missing'); });\"",
    "demo:personas:list": "node -e \"const { DEMO_PERSONAS } = require('./src/lib/demo/config.ts'); console.log('Demo Personas:'); DEMO_PERSONAS.forEach(p => console.log('- ' + p.name + ' (' + p.role + ')'));\"",
    "demo:urls:generate": "node -e \"const personas = ['photographer-everlight', 'couple-sarah-michael', 'admin-wedsync']; personas.forEach(p => console.log('http://localhost:3000/demo?persona=' + p)); console.log('Screenshot mode: http://localhost:3000/demo?screenshot=1');\"",
    "demo:setup:full": "./scripts/demo/setup-demo.sh --full",
    "demo:setup:quick": "./scripts/demo/setup-demo.sh --quick",
    "demo:setup:dev": "./scripts/demo/setup-demo.sh --quick --dev",
    "demo:setup:reset": "./scripts/demo/setup-demo.sh --reset --dev",
    "demo:validate:only": "./scripts/demo/setup-demo.sh --validate-only",
    "demo:build:only": "./scripts/demo/setup-demo.sh --build-only",
    "demo:test:system": "node scripts/demo/test-demo.js",
    "demo:docs": "echo '📚 Demo Documentation: docs/demo-mode.md' && echo '🔗 View online: http://localhost:3000/demo'",
    "cap:build": "npm run build && npx cap sync",
    "cap:build:ios": "npm run cap:build && npx cap open ios",
    "cap:build:android": "npm run cap:build && npx cap open android",
    "native:build": "./scripts/build-native-apps.sh",
    "native:build:dev": "CAPACITOR_ENV=development ./scripts/build-native-apps.sh",
    "native:build:staging": "CAPACITOR_ENV=staging ./scripts/build-native-apps.sh",
    "native:build:prod": "CAPACITOR_ENV=production ./scripts/build-native-apps.sh",
    "test:native": "playwright test tests/e2e/ws-146-native-app-features.spec.ts",
    "test:audit:comprehensive": "tsx __tests__/scripts/run-comprehensive-audit-tests.ts",
    "test:audit:unit": "vitest run __tests__/unit/audit/audit-logger.test.ts",
    "test:audit:security": "vitest run __tests__/security/audit-security.test.ts",
    "test:audit:performance": "vitest run __tests__/performance/audit-performance.test.ts",
    "test:deployment": "playwright test --project=deployment-verification --project=security-validation --project=wedding-day-critical --project=mobile-deployment-performance --project=rollback-scenarios",
    "test:crm-integration": "jest --config jest.config.crm.js --testTimeout=30000",
    "test:crm-integration:watch": "jest --config jest.config.crm.js --watch --testTimeout=30000",
    "test:crm-integration:coverage": "jest --config jest.config.crm.js --coverage --testTimeout=30000",
    "test:crm-e2e": "playwright test wedsync/e2e/crm-integration/",
    "test:crm-visual": "playwright test wedsync/e2e/crm-integration/crm-visual-regression.spec.ts",
    "test:crm-security": "jest wedsync/__tests__/security/crm-security.test.js --testTimeout=30000",
    "test:crm-performance": "jest --config jest.config.crm.js --testNamePattern=performance --testTimeout=60000",
    "test:crm-all": "npm run test:crm-integration && npm run test:crm-e2e && npm run test:crm-security",
    "test:deployment:verification": "playwright test --project=deployment-verification",
    "test:deployment:security": "playwright test --project=security-validation",
    "test:deployment:wedding-critical": "playwright test --project=wedding-day-critical",
    "test:deployment:mobile-perf": "playwright test --project=mobile-deployment-performance",
    "test:deployment:rollback": "playwright test --project=rollback-scenarios",
    "test:e2e:production": "DEPLOYMENT_URL=$PRODUCTION_URL npm run test:deployment",
    "test:lighthouse": "lhci autorun --collect.settings.emulatedFormFactor=mobile --assert.assertions.categories.performance=90 --assert.assertions.categories.accessibility=95 --assert.assertions.categories.seo=90",
    "test:audit:compliance:gdpr": "vitest run __tests__/compliance/gdpr/gdpr-audit-compliance.test.ts",
    "test:audit:compliance:hipaa": "vitest run __tests__/compliance/hipaa/hipaa-audit-compliance.test.ts",
    "test:audit:compliance:soc2": "vitest run __tests__/compliance/soc2/soc2-audit-compliance.test.ts",
    "test:audit:e2e": "playwright test __tests__/e2e/audit/audit-integration.spec.ts",
    "test:audit:k6": "k6 run __tests__/performance/k6-audit-load-test.js",
    "test:audit:all": "npm run test:audit:unit && npm run test:audit:security && npm run test:audit:performance && npm run test:audit:compliance:gdpr && npm run test:audit:compliance:hipaa && npm run test:audit:compliance:soc2 && npm run test:audit:e2e",
    "test:unit:dietary": "vitest run src/__tests__/dietary-management/unit/ --coverage --reporter=verbose --reporter=json --outputFile=test-results/unit-results.json",
    "test:integration:dietary": "vitest run src/__tests__/dietary-management/integration/ --reporter=verbose --timeout=30000",
    "test:integration:openai:dietary": "vitest run src/__tests__/dietary-management/integration/openai-dietary-integration.test.ts --timeout=60000",
    "test:integration:database:dietary": "vitest run src/__tests__/dietary-management/integration/database-operations.test.ts --timeout=30000",
    "test:performance:dietary": "vitest run src/__tests__/dietary-management/performance/ --reporter=verbose --timeout=120000",
    "test:load:wedding-season": "vitest run src/__tests__/dietary-management/performance/wedding-season-load-testing.test.ts --timeout=300000",
    "test:memory:dietary": "vitest run src/__tests__/dietary-management/performance/memory-usage.test.ts --timeout=180000",
    "test:api:response-times:dietary": "vitest run src/__tests__/dietary-management/performance/api-response-times.test.ts --timeout=60000",
    "test:performance:regression:dietary": "node scripts/performance-regression-check.js --component=dietary",
    "test:mobile:dietary": "vitest run src/__tests__/dietary-management/mobile/mobile-device-matrix.test.ts --timeout=120000",
    "test:accessibility:touch:dietary": "vitest run src/__tests__/dietary-management/mobile/touch-accessibility-testing.test.ts --timeout=60000",
    "test:offline:dietary": "vitest run src/__tests__/dietary-management/mobile/offline-sync-testing.test.ts --timeout=120000",
    "test:security:gdpr:dietary": "vitest run src/__tests__/dietary-management/security/gdpr-compliance.test.ts --timeout=60000",
    "test:security:xss:dietary": "vitest run src/__tests__/dietary-management/security/input-validation-xss-prevention.test.ts --timeout=60000",
    "test:security:auth:dietary": "vitest run src/__tests__/dietary-management/security/authentication-authorization.test.ts --timeout=60000",
    "test:e2e:dietary": "playwright test src/__tests__/dietary-management/e2e/ --config=playwright.dietary.config.ts",
    "test:e2e:wedding-day:dietary": "playwright test src/__tests__/dietary-management/e2e/wedding-day-dietary-management.spec.ts --config=playwright.dietary.config.ts",
    "test:dietary:all": "npm run test:unit:dietary && npm run test:integration:dietary && npm run test:performance:dietary && npm run test:security:gdpr:dietary && npm run test:security:xss:dietary && npm run test:security:auth:dietary",
    "test:dietary:ci": "npm run test:unit:dietary && npm run test:integration:dietary && npm run test:security:gdpr:dietary",
    "test:dietary:full": "npm run test:dietary:all && npm run test:mobile:dietary && npm run test:e2e:dietary",
    "db:test:reset": "NODE_ENV=test supabase db reset --linked",
    "db:setup:test": "NODE_ENV=test supabase db reset --linked && supabase migration up --linked",
    "db:migrate:test": "NODE_ENV=test supabase migration up --linked",
    "services:test:start": "docker-compose -f docker-compose.test.yml up -d",
    "services:test:stop": "docker-compose -f docker-compose.test.yml down",
    "prepare": "husky",
    "deepsource:analyze": "echo \"🔍 DeepSource analysis running automatically on push\"",
    "deepsource:check": "echo \"📊 Check DeepSource dashboard: https://app.deepsource.com/gh/WedSync/WedSync2/\"",
    "deepsource:quality": "npm run lint && npm run typecheck && npm run test:ci",
    "pre-commit": "npm run deepsource:quality"
  },
  "dependencies": {
    "@azure/msal-browser": "^4.21.1",
    "@bugsnag/js": "^8.4.0",
    "@bugsnag/node": "^8.4.0",
    "@capacitor/android": "^7.4.3",
    "@capacitor/camera": "^7.0.2",
    "@capacitor/cli": "^2.5.0",
    "@capacitor/core": "^7.4.3",
    "@capacitor/geolocation": "^7.1.5",
    "@capacitor/ios": "^7.4.3",
    "@capacitor/local-notifications": "^7.0.2",
    "@capacitor/push-notifications": "^7.0.2",
    "@capacitor/share": "^7.0.2",
    "@capacitor/splash-screen": "^7.0.2",
    "@capacitor/status-bar": "^7.0.2",
    "@datadog/browser-logs": "^6.18.1",
    "@datadog/browser-rum": "^6.18.1",
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@google-cloud/vision": "^4.3.3",
    "@googlemaps/google-maps-services-js": "^3.4.2",
    "@headlessui/react": "^2.2.7",
    "@hello-pangea/dnd": "^18.0.1",
    "@heroicons/react": "^2.2.0",
    "@hookform/resolvers": "^5.2.1",
    "@logtail/pino": "^0.5.5",
    "@microsoft/microsoft-graph-client": "^3.0.7",
    "@next-auth/prisma-adapter": "^1.0.7",
    "@playwright/test": "^1.55.0",
    "@radix-ui/react-collapsible": "^1.1.12",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-popover": "^1.1.15",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-radio-group": "^1.3.8",
    "@radix-ui/react-scroll-area": "^1.2.10",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-separator": "^1.1.7",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-slot": "^1.2.3",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-toast": "^1.2.15",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@react-email/components": "^0.5.1",
    "@react-email/render": "^1.2.1",
    "@sentry/nextjs": "^7.11.1",
    "@sentry/tracing": "^7.120.4",
    "@slack/web-api": "^7.10.0",
    "@stripe/stripe-js": "^7.8.0",
    "@supabase/auth-helpers-nextjs": "^0.10.0",
    "@supabase/auth-helpers-react": "^0.5.0",
    "@supabase/ssr": "^0.7.0",
    "@supabase/supabase-js": "^2.39.0",
    "@tailwindcss/forms": "^0.5.10",
    "@tailwindcss/postcss": "^4.1.12",
    "@tanstack/react-query": "^5.85.5",
    "@types/archiver": "^6.0.3",
    "@types/cheerio": "^0.22.35",
    "@types/ioredis": "^4.28.10",
    "@types/jsonwebtoken": "^9.0.10",
    "@types/jspdf": "^1.3.3",
    "@types/kafkajs": "^1.8.2",
    "@types/lodash": "^4.17.20",
    "@types/node": "^20",
    "@types/opossum": "^8.1.9",
    "@types/papaparse": "^5.3.16",
    "@types/qrcode": "^1.5.5",
    "@types/qrcode.react": "^1.0.5",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/xlsx": "^0.0.35",
    "@upstash/ratelimit": "^2.0.6",
    "@upstash/redis": "^1.35.3",
    "@vercel/analytics": "^1.5.0",
    "@vercel/speed-insights": "^1.2.0",
    "@vis.gl/react-google-maps": "^1.5.5",
    "@vitest/ui": "^0.30.1",
    "@xyflow/react": "^12.8.4",
    "archiver": "^7.0.1",
    "bcryptjs": "^3.0.2",
    "cheerio": "^1.1.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.1",
    "crypto-js": "^4.2.0",
    "date-fns": "^4.1.0",
    "date-fns-tz": "^3.2.0",
    "deep-diff": "^1.0.2",
    "dexie": "^4.0.8",
    "exceljs": "^4.4.0",
    "exifreader": "^4.31.2",
    "express-rate-limit": "^5.5.1",
    "firebase-admin": "^9.7.0",
    "framer-motion": "^12.23.12",
    "fuse.js": "^7.1.0",
    "googleapis": "^36.0.0",
    "i18next": "^25.4.2",
    "i18next-browser-languagedetector": "^8.2.0",
    "i18next-resources-to-backend": "^1.2.1",
    "ioredis": "^5.7.0",
    "isomorphic-dompurify": "^0.13.0",
    "jsonwebtoken": "^9.0.2",
    "jspdf": "^3.0.1",
    "kafkajs": "^2.2.4",
    "libphonenumber-js": "^1.12.15",
    "lodash": "^4.17.21",
    "lucide-react": "^0.541.0",
    "motion": "^12.23.12",
    "next": "^14.2.32",
    "next-auth": "^4.24.11",
    "next-pwa": "^5.0.3",
    "node-cache": "^5.1.2",
    "node-cron": "^4.2.1",
    "openai": "^5.18.1",
    "opossum": "^9.0.0",
    "papaparse": "^5.5.3",
    "pdf-lib": "^1.17.1",
    "pdfjs-dist": "^5.4.149",
    "pino": "^9.9.0",
    "posthog-js": "^1.262.0",
    "posthog-node": "^5.8.3",
    "qrcode": "^1.3.3",
    "qrcode.react": "^4.2.0",
    "react": "^18",
    "react-dnd": "^16.0.1",
    "react-dnd-html5-backend": "^16.0.1",
    "react-dom": "^18",
    "react-dropzone": "^14.3.8",
    "react-hook-form": "^7.62.0",
    "react-hotkeys-hook": "^5.1.0",
    "react-i18next": "^15.7.3",
    "react-icons": "^5.5.0",
    "react-is": "^19.1.1",
    "react-window": "^1.8.11",
    "react-window-infinite-loader": "^1.0.10",
    "recharts": "^3.1.2",
    "redis": "^5.8.2",
    "resend": "^6.0.1",
    "seedrandom": "^3.0.5",
    "sharp": "^0.34.3",
    "shepherd.js": "^14.5.1",
    "sonner": "^2.0.7",
    "stripe": "^18.4.0",
    "swr": "^2.3.6",
    "tailwind-merge": "^3.3.1",
    "tesseract.js": "^6.0.1",
    "twilio": "^3.55.1",
    "typescript": "^5",
    "web-push": "^3.3.0",
    "webpack-bundle-analyzer": "^4.10.2",
    "winston": "^3.3.1",
    "xlsx": "^0.18.5",
    "y-indexeddb": "^9.0.12",
    "y-protocols": "^1.0.6",
    "y-websocket": "^3.0.0",
    "yjs": "^13.6.27",
    "zod": "^3.23.8",
    "zustand": "^5.0.7"
  },
  "lint-staged": {
    "*.{ts,tsx}": [
      "npx tsc --noEmit",
      "next lint --fix"
    ]
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@faker-js/faker": "^10.0.0",
    "@lhci/cli": "^0.6.1",
    "@next/bundle-analyzer": "^15.5.0",
    "@nx/devkit": "^21.5.1",
    "@nx/eslint": "^21.5.1",
    "@nx/jest": "^21.5.1",
    "@nx/js": "^21.5.1",
    "@nx/next": "^21.5.1",
    "@nx/playwright": "^21.5.1",
    "@nx/react": "^21.5.1",
    "@nx/workspace": "^21.5.1",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/crypto-js": "^4.2.2",
    "@types/react-window": "^1.8.8",
    "@types/supertest": "^6.0.2",
    "@types/webpack-bundle-analyzer": "^4.7.0",
    "@typescript-eslint/eslint-plugin": "^8.43.0",
    "@typescript-eslint/parser": "^8.43.0",
    "@vitest/coverage-v8": "^0.34.6",
    "assert": "^2.1.0",
    "browserify-zlib": "^0.2.0",
    "cross-env": "^10.0.0",
    "crypto-browserify": "^3.12.1",
    "csv-writer": "^1.6.0",
    "eslint": "^8.57.0",
    "eslint-config-next": "^11.0.0",
    "eslint-import-resolver-node": "^0.2.2",
    "eslint-import-resolver-typescript": "^1.0.2",
    "eslint-plugin-import": "^2.32.0",
    "eslint-plugin-react": "^7.37.5",
    "eslint-plugin-react-hooks": "^4.6.2",
    "fake-indexeddb": "^6.2.2",
    "https-browserify": "^1.0.0",
    "husky": "^9.1.7",
    "jest-axe": "^3.1.1",
    "jsdom": "^16.5.3",
    "lighthouse": "^2.1.0",
    "lint-staged": "^5.0.0",
    "logrocket": "^10.1.0",
    "logrocket-react": "^6.0.3",
    "msw": "^0.3.1",
    "nx": "21.5.1",
    "os-browserify": "^0.3.0",
    "path-browserify": "^1.0.1",
    "prom-client": "^15.1.3",
    "snyk": "^1.1298.3",
    "sonarqube-scanner": "^4.3.0",
    "stream-browserify": "^3.0.0",
    "stream-http": "^3.2.0",
    "supertest": "^0.7.0",
    "tsx": "^4.20.5",
    "url": "^0.11.4",
    "vitest": "^0.34.6",
    "web-vitals": "^5.1.0"
  },
  "nx": {}
}
